import type { Writer, Reader } from './index.js';
export declare enum CODEC_TYPES {
    VARINT = 0,
    BIT64 = 1,
    LENGTH_DELIMITED = 2,
    START_GROUP = 3,
    END_GROUP = 4,
    BIT32 = 5
}
export interface EncodeOptions {
    lengthDelimited?: boolean;
    writeDefaults?: boolean;
}
export interface EncodeFunction<T> {
    (value: Partial<T>, writer: Writer, opts?: EncodeOptions): void;
}
export interface DecodeFunction<T> {
    (reader: Reader, length?: number): T;
}
export interface Codec<T> {
    name: string;
    type: CODEC_TYPES;
    encode: EncodeFunction<T>;
    decode: DecodeFunction<T>;
}
export declare function createCodec<T>(name: string, type: CODEC_TYPES, encode: EncodeFunction<T>, decode: DecodeFunction<T>): Codec<T>;
//# sourceMappingURL=codec.d.ts.map