(function (root, factory) {(typeof module === 'object' && module.exports) ? module.exports = factory() : root.ItBatchedBytes = factory()}(typeof self !== 'undefined' ? self : this, function () {
"use strict";var ItBatchedBytes=(()=>{var U=Object.defineProperty;var O=Object.getOwnPropertyDescriptor;var T=Object.getOwnPropertyNames;var N=Object.prototype.hasOwnProperty;var F=(i,t)=>{for(var e in t)U(i,e,{get:t[e],enumerable:!0})},I=(i,t,e,r)=>{if(t&&typeof t=="object"||typeof t=="function")for(let n of T(t))!N.call(i,n)&&n!==e&&U(i,n,{get:()=>t[n],enumerable:!(r=O(t,n))||r.enumerable});return i};var z=i=>I(U({},"__esModule",{value:!0}),i);var M={};F(M,{default:()=>j});function L(){let i={};return i.promise=new Promise((t,e)=>{i.resolve=t,i.reject=e}),i}function y(i){return globalThis.Buffer!=null?new Uint8Array(i.buffer,i.byteOffset,i.byteLength):i}function h(i=0){return globalThis.Buffer?.alloc!=null?y(globalThis.Buffer.alloc(i)):new Uint8Array(i)}function c(i=0){return globalThis.Buffer?.allocUnsafe!=null?y(globalThis.Buffer.allocUnsafe(i)):new Uint8Array(i)}function d(i,t){t==null&&(t=i.reduce((n,s)=>n+s.length,0));let e=c(t),r=0;for(let n of i)e.set(n,r),r+=n.length;return y(e)}function D(i,t){if(i===t)return!0;if(i.byteLength!==t.byteLength)return!1;for(let e=0;e<i.byteLength;e++)if(i[e]!==t[e])return!1;return!0}var B=Symbol.for("@achingbrain/uint8arraylist");function v(i,t){if(t==null||t<0)throw new RangeError("index is out of bounds");let e=0;for(let r of i){let n=e+r.byteLength;if(t<n)return{buf:r,index:t-e};e=n}throw new RangeError("index is out of bounds")}function p(i){return!!i?.[B]}var w=class i{constructor(...t){Object.defineProperty(this,B,{value:!0}),this.bufs=[],this.length=0,t.length>0&&this.appendAll(t)}*[Symbol.iterator](){yield*this.bufs}get byteLength(){return this.length}append(...t){this.appendAll(t)}appendAll(t){let e=0;for(let r of t)if(r instanceof Uint8Array)e+=r.byteLength,this.bufs.push(r);else if(p(r))e+=r.byteLength,this.bufs.push(...r.bufs);else throw new Error("Could not append value, must be an Uint8Array or a Uint8ArrayList");this.length+=e}prepend(...t){this.prependAll(t)}prependAll(t){let e=0;for(let r of t.reverse())if(r instanceof Uint8Array)e+=r.byteLength,this.bufs.unshift(r);else if(p(r))e+=r.byteLength,this.bufs.unshift(...r.bufs);else throw new Error("Could not prepend value, must be an Uint8Array or a Uint8ArrayList");this.length+=e}get(t){let e=v(this.bufs,t);return e.buf[e.index]}set(t,e){let r=v(this.bufs,t);r.buf[r.index]=e}write(t,e=0){if(t instanceof Uint8Array)for(let r=0;r<t.length;r++)this.set(e+r,t[r]);else if(p(t))for(let r=0;r<t.length;r++)this.set(e+r,t.get(r));else throw new Error("Could not write value, must be an Uint8Array or a Uint8ArrayList")}consume(t){if(t=Math.trunc(t),!(Number.isNaN(t)||t<=0)){if(t===this.byteLength){this.bufs=[],this.length=0;return}for(;this.bufs.length>0;)if(t>=this.bufs[0].byteLength)t-=this.bufs[0].byteLength,this.length-=this.bufs[0].byteLength,this.bufs.shift();else{this.bufs[0]=this.bufs[0].subarray(t),this.length-=t;break}}}slice(t,e){let{bufs:r,length:n}=this._subList(t,e);return d(r,n)}subarray(t,e){let{bufs:r,length:n}=this._subList(t,e);return r.length===1?r[0]:d(r,n)}sublist(t,e){let{bufs:r,length:n}=this._subList(t,e),s=new i;return s.length=n,s.bufs=r,s}_subList(t,e){if(t=t??0,e=e??this.length,t<0&&(t=this.length+t),e<0&&(e=this.length+e),t<0||e>this.length)throw new RangeError("index is out of bounds");if(t===e)return{bufs:[],length:0};if(t===0&&e===this.length)return{bufs:[...this.bufs],length:this.length};let r=[],n=0;for(let s=0;s<this.bufs.length;s++){let a=this.bufs[s],u=n,f=u+a.byteLength;if(n=f,t>=f)continue;let l=t>=u&&t<f,b=e>u&&e<=f;if(l&&b){if(t===u&&e===f){r.push(a);break}let o=t-u;r.push(a.subarray(o,o+(e-t)));break}if(l){if(t===0){r.push(a);continue}r.push(a.subarray(t-u));continue}if(b){if(e===f){r.push(a);break}r.push(a.subarray(0,e-u));break}r.push(a)}return{bufs:r,length:e-t}}indexOf(t,e=0){if(!p(t)&&!(t instanceof Uint8Array))throw new TypeError('The "value" argument must be a Uint8ArrayList or Uint8Array');let r=t instanceof Uint8Array?t:t.subarray();if(e=Number(e??0),isNaN(e)&&(e=0),e<0&&(e=this.length+e),e<0&&(e=0),t.length===0)return e>this.length?this.length:e;let n=r.byteLength;if(n===0)throw new TypeError("search must be at least 1 byte long");let s=256,a=new Int32Array(s);for(let o=0;o<s;o++)a[o]=-1;for(let o=0;o<n;o++)a[r[o]]=o;let u=a,f=this.byteLength-r.byteLength,l=r.byteLength-1,b;for(let o=e;o<=f;o+=b){b=0;for(let g=l;g>=0;g--){let A=this.get(o+g);if(r[g]!==A){b=Math.max(1,g-u[A]);break}}if(b===0)return o}return-1}getInt8(t){let e=this.subarray(t,t+1);return new DataView(e.buffer,e.byteOffset,e.byteLength).getInt8(0)}setInt8(t,e){let r=c(1);new DataView(r.buffer,r.byteOffset,r.byteLength).setInt8(0,e),this.write(r,t)}getInt16(t,e){let r=this.subarray(t,t+2);return new DataView(r.buffer,r.byteOffset,r.byteLength).getInt16(0,e)}setInt16(t,e,r){let n=h(2);new DataView(n.buffer,n.byteOffset,n.byteLength).setInt16(0,e,r),this.write(n,t)}getInt32(t,e){let r=this.subarray(t,t+4);return new DataView(r.buffer,r.byteOffset,r.byteLength).getInt32(0,e)}setInt32(t,e,r){let n=h(4);new DataView(n.buffer,n.byteOffset,n.byteLength).setInt32(0,e,r),this.write(n,t)}getBigInt64(t,e){let r=this.subarray(t,t+8);return new DataView(r.buffer,r.byteOffset,r.byteLength).getBigInt64(0,e)}setBigInt64(t,e,r){let n=h(8);new DataView(n.buffer,n.byteOffset,n.byteLength).setBigInt64(0,e,r),this.write(n,t)}getUint8(t){let e=this.subarray(t,t+1);return new DataView(e.buffer,e.byteOffset,e.byteLength).getUint8(0)}setUint8(t,e){let r=c(1);new DataView(r.buffer,r.byteOffset,r.byteLength).setUint8(0,e),this.write(r,t)}getUint16(t,e){let r=this.subarray(t,t+2);return new DataView(r.buffer,r.byteOffset,r.byteLength).getUint16(0,e)}setUint16(t,e,r){let n=h(2);new DataView(n.buffer,n.byteOffset,n.byteLength).setUint16(0,e,r),this.write(n,t)}getUint32(t,e){let r=this.subarray(t,t+4);return new DataView(r.buffer,r.byteOffset,r.byteLength).getUint32(0,e)}setUint32(t,e,r){let n=h(4);new DataView(n.buffer,n.byteOffset,n.byteLength).setUint32(0,e,r),this.write(n,t)}getBigUint64(t,e){let r=this.subarray(t,t+8);return new DataView(r.buffer,r.byteOffset,r.byteLength).getBigUint64(0,e)}setBigUint64(t,e,r){let n=h(8);new DataView(n.buffer,n.byteOffset,n.byteLength).setBigUint64(0,e,r),this.write(n,t)}getFloat32(t,e){let r=this.subarray(t,t+4);return new DataView(r.buffer,r.byteOffset,r.byteLength).getFloat32(0,e)}setFloat32(t,e,r){let n=h(4);new DataView(n.buffer,n.byteOffset,n.byteLength).setFloat32(0,e,r),this.write(n,t)}getFloat64(t,e){let r=this.subarray(t,t+8);return new DataView(r.buffer,r.byteOffset,r.byteLength).getFloat64(0,e)}setFloat64(t,e,r){let n=h(8);new DataView(n.buffer,n.byteOffset,n.byteLength).setFloat64(0,e,r),this.write(n,t)}equals(t){if(t==null||!(t instanceof i)||t.bufs.length!==this.bufs.length)return!1;for(let e=0;e<this.bufs.length;e++)if(!D(this.bufs[e],t.bufs[e]))return!1;return!0}static fromUint8Arrays(t,e){let r=new i;return r.bufs=t,e==null&&(e=t.reduce((n,s)=>n+s.byteLength,0)),r.length=e,r}};function k(i){return i[Symbol.asyncIterator]!=null}var m=1024*1024,V=(i,t)=>{t.append(i)};function S(i,t){return k(i)?async function*(){let e=new w,r=!1,n=L(),s=Number(t?.size??m);if((isNaN(s)||s===0||s<0)&&(s=m),s!==Math.round(s))throw new Error("Batch size must be an integer");let a=t?.yieldAfter??0,u=t?.serialize??V;for(Promise.resolve().then(async()=>{try{let f;for await(let l of i){if(u(l,e),e.byteLength>=s){clearTimeout(f),n.resolve();continue}f=setTimeout(()=>{n.resolve()},a)}clearTimeout(f),n.resolve()}catch(f){n.reject(f)}finally{r=!0}});!r;)if(await n.promise,n=L(),e.byteLength>0){let f=e;e=new w,yield f.subarray()}}():function*(){let e=new w,r=Number(t?.size??m);if((isNaN(r)||r===0||r<0)&&(r=m),r!==Math.round(r))throw new Error("Batch size must be an integer");let n=t?.serialize??V;for(let s of i)n(s,e),e.byteLength>=r&&(yield e.subarray(0,r),e.consume(r));e.byteLength>0&&(yield e.subarray())}()}var j=S;return z(M);})();
return ItBatchedBytes}));
