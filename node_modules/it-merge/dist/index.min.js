(function (root, factory) {(typeof module === 'object' && module.exports) ? module.exports = factory() : root.ItMerge = factory()}(typeof self !== 'undefined' ? self : this, function () {
"use strict";var ItMerge=(()=>{var y=Object.defineProperty;var N=Object.getOwnPropertyDescriptor;var P=Object.getOwnPropertyNames;var I=Object.prototype.hasOwnProperty;var M=(r,e)=>{for(var t in e)y(r,t,{get:e[t],enumerable:!0})},_=(r,e,t,n)=>{if(e&&typeof e=="object"||typeof e=="function")for(let u of P(e))!I.call(r,u)&&u!==t&&y(r,u,{get:()=>e[u],enumerable:!(n=N(e,u))||n.enumerable});return r};var A=r=>_(y({},"__esModule",{value:!0}),r);var B={};M(B,{default:()=>q});function c(){let r={};return r.promise=new Promise((e,t)=>{r.resolve=e,r.reject=t}),r}var p=class{buffer;mask;top;btm;next;constructor(e){if(!(e>0)||e-1&e)throw new Error("Max size for a FixedFIFO should be a power of two");this.buffer=new Array(e),this.mask=e-1,this.top=0,this.btm=0,this.next=null}push(e){return this.buffer[this.top]!==void 0?!1:(this.buffer[this.top]=e,this.top=this.top+1&this.mask,!0)}shift(){let e=this.buffer[this.btm];if(e!==void 0)return this.buffer[this.btm]=void 0,this.btm=this.btm+1&this.mask,e}isEmpty(){return this.buffer[this.btm]===void 0}},h=class{size;hwm;head;tail;constructor(e={}){this.hwm=e.splitLimit??16,this.head=new p(this.hwm),this.tail=this.head,this.size=0}calculateSize(e){return e?.byteLength!=null?e.byteLength:1}push(e){if(e?.value!=null&&(this.size+=this.calculateSize(e.value)),!this.head.push(e)){let t=this.head;this.head=t.next=new p(2*this.head.buffer.length),this.head.push(e)}}shift(){let e=this.tail.shift();if(e===void 0&&this.tail.next!=null){let t=this.tail.next;this.tail.next=null,this.tail=t,e=this.tail.shift()}return e?.value!=null&&(this.size-=this.calculateSize(e.value)),e}isEmpty(){return this.head.isEmpty()}};var w=class extends Error{type;code;constructor(e,t){super(e??"The operation was aborted"),this.type="aborted",this.code=t??"ABORT_ERR"}};function v(r={}){return j(t=>{let n=t.shift();if(n==null)return{done:!0};if(n.error!=null)throw n.error;return{done:n.done===!0,value:n.value}},r)}function j(r,e){e=e??{};let t=e.onEnd,n=new h,u,o,f,b=c(),E=async()=>{try{return n.isEmpty()?f?{done:!0}:await new Promise((i,s)=>{o=d=>{o=null,n.push(d);try{i(r(n))}catch(l){s(l)}return u}}):r(n)}finally{n.isEmpty()&&queueMicrotask(()=>{b.resolve(),b=c()})}},x=i=>o!=null?o(i):(n.push(i),u),z=i=>(n=new h,o!=null?o({error:i}):(n.push({error:i}),u)),g=i=>{if(f)return u;if(e?.objectMode!==!0&&i?.byteLength==null)throw new Error("objectMode was not true but tried to push non-Uint8Array value");return x({done:!1,value:i})},m=i=>f?u:(f=!0,i!=null?z(i):x({done:!0})),L=()=>(n=new h,m(),{done:!0}),S=i=>(m(i),{done:!0});if(u={[Symbol.asyncIterator](){return this},next:E,return:L,throw:S,push:g,end:m,get readableLength(){return n.size},onEmpty:async i=>{let s=i?.signal;if(s?.throwIfAborted(),n.isEmpty())return;let d,l;s!=null&&(d=new Promise((D,k)=>{l=()=>{k(new w)},s.addEventListener("abort",l)}));try{await Promise.race([b.promise,d])}finally{l!=null&&s!=null&&s?.removeEventListener("abort",l)}}},t==null)return u;let a=u;return u={[Symbol.asyncIterator](){return this},next(){return a.next()},throw(i){return a.throw(i),t!=null&&(t(i),t=void 0),{done:!0}},return(){return a.return(),t!=null&&(t(),t=void 0),{done:!0}},push:g,end(i){return a.end(i),t!=null&&(t(i),t=void 0),u},get readableLength(){return a.readableLength}},u}function R(r){return r[Symbol.asyncIterator]!=null}function T(...r){let e=[];for(let t of r)R(t)||e.push(t);return e.length===r.length?function*(){for(let t of e)yield*t}():async function*(){let t=v({objectMode:!0});Promise.resolve().then(async()=>{try{await Promise.all(r.map(async n=>{for await(let u of n)t.push(u)})),t.end()}catch(n){t.end(n)}}),yield*t}()}var q=T;return A(B);})();
return ItMerge}));
