import { CustomEvent } from '@libp2p/interface/events';
import { MESSAGE_TYPE_LOOKUP } from '../message/index.js';
export function sendQueryEvent(fields, options = {}) {
    const event = {
        ...fields,
        name: 'SEND_QUERY',
        type: 0,
        messageName: fields.type,
        messageType: MESSAGE_TYPE_LOOKUP.indexOf(fields.type.toString())
    };
    options.onProgress?.(new CustomEvent('kad-dht:query:send-query', { detail: event }));
    return event;
}
export function peerResponseEvent(fields, options = {}) {
    const event = {
        ...fields,
        name: 'PEER_RESPONSE',
        type: 1,
        messageName: fields.messageType,
        closer: (fields.closer != null) ? fields.closer : [],
        providers: (fields.providers != null) ? fields.providers : []
    };
    options.onProgress?.(new CustomEvent('kad-dht:query:peer-response', { detail: event }));
    return event;
}
export function finalPeerEvent(fields, options = {}) {
    const event = {
        ...fields,
        name: 'FINAL_PEER',
        type: 2
    };
    options.onProgress?.(new CustomEvent('kad-dht:query:final-peer', { detail: event }));
    return event;
}
export function queryErrorEvent(fields, options = {}) {
    const event = {
        ...fields,
        name: 'QUERY_ERROR',
        type: 3
    };
    options.onProgress?.(new CustomEvent('kad-dht:query:query-error', { detail: event }));
    return event;
}
export function providerEvent(fields, options = {}) {
    const event = {
        ...fields,
        name: 'PROVIDER',
        type: 4
    };
    options.onProgress?.(new CustomEvent('kad-dht:query:provider', { detail: event }));
    return event;
}
export function valueEvent(fields, options = {}) {
    const event = {
        ...fields,
        name: 'VALUE',
        type: 5
    };
    options.onProgress?.(new CustomEvent('kad-dht:query:value', { detail: event }));
    return event;
}
export function addPeerEvent(fields, options = {}) {
    const event = {
        ...fields,
        name: 'ADD_PEER',
        type: 6
    };
    options.onProgress?.(new CustomEvent('kad-dht:query:add-peer', { detail: event }));
    return event;
}
export function dialPeerEvent(fields, options = {}) {
    const event = {
        ...fields,
        name: 'DIAL_PEER',
        type: 7
    };
    options.onProgress?.(new CustomEvent('kad-dht:query:dial-peer', { detail: event }));
    return event;
}
//# sourceMappingURL=events.js.map