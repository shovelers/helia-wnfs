/**
 * @packageDocumentation
 *
 * A [libp2p transport](https://docs.libp2p.io/concepts/transports/overview/) based on [WebTransport](https://www.w3.org/TR/webtransport/).
 *
 * @example
 *
 * ```js
 * import { createLibp2pNode } from 'libp2p'
 * import { webTransport } from '@libp2p/webtransport'
 * import { noise } from 'libp2p-noise'
 *
 * const node = await createLibp2pNode({
 *   transports: [
 *     webTransport()
 *   ],
 *   connectionEncryption: [
 *     noise()
 *   ]
 * })
 * ```
 */
import { type Transport } from '@libp2p/interface/transport';
import type { CounterGroup, Metrics } from '@libp2p/interface/metrics';
import type { PeerId } from '@libp2p/interface/peer-id';
export interface WebTransportInit {
    maxInboundStreams?: number;
}
export interface WebTransportComponents {
    peerId: PeerId;
    metrics?: Metrics;
}
export interface WebTransportMetrics {
    dialerEvents: CounterGroup;
}
export declare function webTransport(init?: WebTransportInit): (components: WebTransportComponents) => Transport;
//# sourceMappingURL=index.d.ts.map