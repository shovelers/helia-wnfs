import { Message } from './pb/message.js';
import type { Stream } from '@libp2p/interface/connection';
import type { AbortOptions, MessageStream } from 'it-protobuf-stream';
import type { DeferredPromise } from 'p-defer';
export interface ReadCandidatesOptions extends AbortOptions {
    direction: string;
}
export declare const readCandidatesUntilConnected: (connectedPromise: DeferredPromise<void>, pc: RTCPeerConnection, stream: MessageStream<Message, Stream>, options: ReadCandidatesOptions) => Promise<void>;
export declare function resolveOnConnected(pc: RTCPeerConnection, promise: DeferredPromise<void>): void;
//# sourceMappingURL=util.d.ts.map