/**
 * Delay before HOP relay service is advertised on the network
 */
export declare const ADVERTISE_BOOT_DELAY: number;
/**
 * Delay Between HOP relay service advertisements on the network
 */
export declare const ADVERTISE_TTL: number;
/**
 * Multicodec code
 */
export declare const CIRCUIT_PROTO_CODE = 290;
/**
 * Relay HOP relay service namespace for discovery
 */
export declare const RELAY_RENDEZVOUS_NS = "/libp2p/relay";
/**
 * The maximum number of relay reservations the relay server will accept
 */
export declare const DEFAULT_MAX_RESERVATION_STORE_SIZE = 15;
/**
 * How often to check for reservation expiry
 */
export declare const DEFAULT_MAX_RESERVATION_CLEAR_INTERVAL: number;
/**
 * How often to check for reservation expiry
 */
export declare const DEFAULT_MAX_RESERVATION_TTL: number;
export declare const DEFAULT_RESERVATION_CONCURRENCY = 1;
export declare const RELAY_SOURCE_TAG = "circuit-relay-source";
export declare const RELAY_TAG = "circuit-relay-relay";
export declare const DEFAULT_DURATION_LIMIT: number;
export declare const DEFAULT_DATA_LIMIT: bigint;
/**
 * The hop protocol
 */
export declare const RELAY_V2_HOP_CODEC = "/libp2p/circuit/relay/0.2.0/hop";
/**
 * the stop protocol
 */
export declare const RELAY_V2_STOP_CODEC = "/libp2p/circuit/relay/0.2.0/stop";
/**
 * Hop messages must be exchanged inside this timeout
 */
export declare const DEFAULT_HOP_TIMEOUT: number;
/**
 * How long to wait before starting to advertise the relay service
 */
export declare const DEFAULT_ADVERT_BOOT_DELAY: number;
//# sourceMappingURL=constants.d.ts.map