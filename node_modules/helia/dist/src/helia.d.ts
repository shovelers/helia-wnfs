import { BlockStorage } from './storage.js';
import type { HeliaInit } from '.';
import type { GCOptions, Helia } from '@helia/interface';
import type { Pins } from '@helia/interface/pins';
import type { Libp2p } from '@libp2p/interface';
import type { Blockstore } from 'interface-blockstore';
import type { Datastore } from 'interface-datastore';
interface HeliaImplInit<T extends Libp2p = Libp2p> extends HeliaInit<T> {
    libp2p: T;
    blockstore: Blockstore;
    datastore: Datastore;
}
export declare class HeliaImpl implements Helia {
    libp2p: Libp2p;
    blockstore: BlockStorage;
    datastore: Datastore;
    pins: Pins;
    constructor(init: HeliaImplInit);
    start(): Promise<void>;
    stop(): Promise<void>;
    gc(options?: GCOptions): Promise<void>;
}
export {};
//# sourceMappingURL=helia.d.ts.map