export interface MorticeOptions {
    name?: string;
    timeout?: number;
    concurrency?: number;
    singleProcess?: boolean;
}
export interface Mortice {
    readLock: () => Promise<Release>;
    writeLock: () => Promise<Release>;
}
export interface Release {
    (): void;
}
export interface MorticeImplementation {
    isWorker: boolean;
    readLock: (name: string, options: MorticeOptions) => Mortice['readLock'];
    writeLock: (name: string, options: MorticeOptions) => Mortice['writeLock'];
}
export default function createMortice(options?: MorticeOptions): Mortice;
//# sourceMappingURL=index.d.ts.map