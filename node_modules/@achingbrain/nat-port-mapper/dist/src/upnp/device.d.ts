import type { Service } from '@achingbrain/ssdp';
export interface InternetGatewayDevice {
    device: GatewayDevice;
}
interface GatewayDevice {
    serviceList: {
        service: GatewayService[];
    };
    deviceList: {
        device: GatewayDevice[];
    };
}
interface GatewayService {
    serviceType: string;
    serviceId: string;
    SCPDURL: string;
    controlURL: string;
    eventSubURL: string;
}
interface ServiceDescription {
    services: GatewayService[];
    devices: GatewayDevice[];
}
interface ServiceInfo {
    service: string;
    SCPDURL: string;
    controlURL: string;
}
export declare class Device {
    private readonly service;
    private readonly services;
    constructor(service: Service<InternetGatewayDevice>);
    run(action: string, args: Array<[string, string | number]>, signal: AbortSignal): Promise<any>;
    getService(types: string[]): ServiceInfo;
    parseDescription(info: Record<string, any>): ServiceDescription;
    getNamespace(data: any, uri: string): string;
}
export {};
//# sourceMappingURL=device.d.ts.map