var _r=Object.defineProperty;var br=(r,e,t)=>e in r?_r(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t;var _=(r,e,t)=>(br(r,typeof e!="symbol"?e+"":e,t),t),It=(r,e,t)=>{if(!e.has(r))throw TypeError("Cannot "+t)};var F=(r,e,t)=>(It(r,e,"read from private field"),t?t.call(r):e.get(r)),ne=(r,e,t)=>{if(e.has(r))throw TypeError("Cannot add the same private member more than once");e instanceof WeakSet?e.add(r):e.set(r,t)},ye=(r,e,t,n)=>(It(r,e,"write to private field"),n?n.call(r,t):e.set(r,t),t);var Me=(r,e,t,n)=>({set _(i){ye(r,e,i,t)},get _(){return F(r,e,n)}}),se=(r,e,t)=>(It(r,e,"access private method"),t);var commonjsGlobal=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function getDefaultExportFromCjs(r){return r&&r.__esModule&&Object.prototype.hasOwnProperty.call(r,"default")?r.default:r}function getAugmentedNamespace(r){if(r.__esModule)return r;var e=r.default;if(typeof e=="function"){var t=function n(){return this instanceof n?Reflect.construct(e,arguments,this.constructor):e.apply(this,arguments)};t.prototype=e.prototype}else t={};return Object.defineProperty(t,"__esModule",{value:!0}),Object.keys(r).forEach(function(n){var i=Object.getOwnPropertyDescriptor(r,n);Object.defineProperty(t,n,i.get?i:{enumerable:!0,get:function(){return r[n]}})}),t}var browser$5={exports:{}},ms$3,hasRequiredMs$2;function requireMs$2(){if(hasRequiredMs$2)return ms$3;hasRequiredMs$2=1;var r=1e3,e=r*60,t=e*60,n=t*24,i=n*7,o=n*365.25;ms$3=function(f,g){g=g||{};var $=typeof f;if($==="string"&&f.length>0)return a(f);if($==="number"&&isFinite(f))return g.long?l(f):c(f);throw new Error("val is not a non-empty string or a valid number. val="+JSON.stringify(f))};function a(f){if(f=String(f),!(f.length>100)){var g=/^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(f);if(g){var $=parseFloat(g[1]),S=(g[2]||"ms").toLowerCase();switch(S){case"years":case"year":case"yrs":case"yr":case"y":return $*o;case"weeks":case"week":case"w":return $*i;case"days":case"day":case"d":return $*n;case"hours":case"hour":case"hrs":case"hr":case"h":return $*t;case"minutes":case"minute":case"mins":case"min":case"m":return $*e;case"seconds":case"second":case"secs":case"sec":case"s":return $*r;case"milliseconds":case"millisecond":case"msecs":case"msec":case"ms":return $;default:return}}}}function c(f){var g=Math.abs(f);return g>=n?Math.round(f/n)+"d":g>=t?Math.round(f/t)+"h":g>=e?Math.round(f/e)+"m":g>=r?Math.round(f/r)+"s":f+"ms"}function l(f){var g=Math.abs(f);return g>=n?u(f,g,n,"day"):g>=t?u(f,g,t,"hour"):g>=e?u(f,g,e,"minute"):g>=r?u(f,g,r,"second"):f+" ms"}function u(f,g,$,S){var E=g>=$*1.5;return Math.round(f/$)+" "+S+(E?"s":"")}return ms$3}function setup$2(r){t.debug=t,t.default=t,t.coerce=l,t.disable=o,t.enable=i,t.enabled=a,t.humanize=requireMs$2(),t.destroy=u,Object.keys(r).forEach(f=>{t[f]=r[f]}),t.names=[],t.skips=[],t.formatters={};function e(f){let g=0;for(let $=0;$<f.length;$++)g=(g<<5)-g+f.charCodeAt($),g|=0;return t.colors[Math.abs(g)%t.colors.length]}t.selectColor=e;function t(f){let g,$=null,S,E;function v(...T){if(!v.enabled)return;const I=v,A=Number(new Date),P=A-(g||A);I.diff=P,I.prev=g,I.curr=A,g=A,T[0]=t.coerce(T[0]),typeof T[0]!="string"&&T.unshift("%O");let x=0;T[0]=T[0].replace(/%([a-zA-Z%])/g,(C,k)=>{if(C==="%%")return"%";x++;const N=t.formatters[k];if(typeof N=="function"){const L=T[x];C=N.call(I,L),T.splice(x,1),x--}return C}),t.formatArgs.call(I,T),(I.log||t.log).apply(I,T)}return v.namespace=f,v.useColors=t.useColors(),v.color=t.selectColor(f),v.extend=n,v.destroy=t.destroy,Object.defineProperty(v,"enabled",{enumerable:!0,configurable:!1,get:()=>$!==null?$:(S!==t.namespaces&&(S=t.namespaces,E=t.enabled(f)),E),set:T=>{$=T}}),typeof t.init=="function"&&t.init(v),v}function n(f,g){const $=t(this.namespace+(typeof g>"u"?":":g)+f);return $.log=this.log,$}function i(f){t.save(f),t.namespaces=f,t.names=[],t.skips=[];let g;const $=(typeof f=="string"?f:"").split(/[\s,]+/),S=$.length;for(g=0;g<S;g++)$[g]&&(f=$[g].replace(/\*/g,".*?"),f[0]==="-"?t.skips.push(new RegExp("^"+f.slice(1)+"$")):t.names.push(new RegExp("^"+f+"$")))}function o(){const f=[...t.names.map(c),...t.skips.map(c).map(g=>"-"+g)].join(",");return t.enable(""),f}function a(f){if(f[f.length-1]==="*")return!0;let g,$;for(g=0,$=t.skips.length;g<$;g++)if(t.skips[g].test(f))return!1;for(g=0,$=t.names.length;g<$;g++)if(t.names[g].test(f))return!0;return!1}function c(f){return f.toString().substring(2,f.toString().length-2).replace(/\.\*\?$/,"*")}function l(f){return f instanceof Error?f.stack||f.message:f}function u(){console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.")}return t.enable(t.load()),t}var common$2=setup$2;(function(r,e){var t={};e.formatArgs=i,e.save=o,e.load=a,e.useColors=n,e.storage=c(),e.destroy=(()=>{let u=!1;return()=>{u||(u=!0,console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`."))}})(),e.colors=["#0000CC","#0000FF","#0033CC","#0033FF","#0066CC","#0066FF","#0099CC","#0099FF","#00CC00","#00CC33","#00CC66","#00CC99","#00CCCC","#00CCFF","#3300CC","#3300FF","#3333CC","#3333FF","#3366CC","#3366FF","#3399CC","#3399FF","#33CC00","#33CC33","#33CC66","#33CC99","#33CCCC","#33CCFF","#6600CC","#6600FF","#6633CC","#6633FF","#66CC00","#66CC33","#9900CC","#9900FF","#9933CC","#9933FF","#99CC00","#99CC33","#CC0000","#CC0033","#CC0066","#CC0099","#CC00CC","#CC00FF","#CC3300","#CC3333","#CC3366","#CC3399","#CC33CC","#CC33FF","#CC6600","#CC6633","#CC9900","#CC9933","#CCCC00","#CCCC33","#FF0000","#FF0033","#FF0066","#FF0099","#FF00CC","#FF00FF","#FF3300","#FF3333","#FF3366","#FF3399","#FF33CC","#FF33FF","#FF6600","#FF6633","#FF9900","#FF9933","#FFCC00","#FFCC33"];function n(){return typeof window<"u"&&window.process&&(window.process.type==="renderer"||window.process.__nwjs)?!0:typeof navigator<"u"&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/)?!1:typeof document<"u"&&document.documentElement&&document.documentElement.style&&document.documentElement.style.WebkitAppearance||typeof window<"u"&&window.console&&(window.console.firebug||window.console.exception&&window.console.table)||typeof navigator<"u"&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/)&&parseInt(RegExp.$1,10)>=31||typeof navigator<"u"&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/)}function i(u){if(u[0]=(this.useColors?"%c":"")+this.namespace+(this.useColors?" %c":" ")+u[0]+(this.useColors?"%c ":" ")+"+"+r.exports.humanize(this.diff),!this.useColors)return;const f="color: "+this.color;u.splice(1,0,f,"color: inherit");let g=0,$=0;u[0].replace(/%[a-zA-Z%]/g,S=>{S!=="%%"&&(g++,S==="%c"&&($=g))}),u.splice($,0,f)}e.log=console.debug||console.log||(()=>{});function o(u){try{u?e.storage.setItem("debug",u):e.storage.removeItem("debug")}catch{}}function a(){let u;try{u=e.storage.getItem("debug")}catch{}return!u&&typeof process<"u"&&"env"in process&&(u=t.DEBUG),u}function c(){try{return localStorage}catch{}}r.exports=common$2(e);const{formatters:l}=r.exports;l.j=function(u){try{return JSON.stringify(u)}catch(f){return"[UnexpectedJSONParseError]: "+f.message}}})(browser$5,browser$5.exports);var browserExports$2=browser$5.exports;const debug$2=getDefaultExportFromCjs(browserExports$2);function base$5(r,e){if(r.length>=255)throw new TypeError("Alphabet too long");for(var t=new Uint8Array(256),n=0;n<t.length;n++)t[n]=255;for(var i=0;i<r.length;i++){var o=r.charAt(i),a=o.charCodeAt(0);if(t[a]!==255)throw new TypeError(o+" is ambiguous");t[a]=i}var c=r.length,l=r.charAt(0),u=Math.log(c)/Math.log(256),f=Math.log(256)/Math.log(c);function g(E){if(E instanceof Uint8Array||(ArrayBuffer.isView(E)?E=new Uint8Array(E.buffer,E.byteOffset,E.byteLength):Array.isArray(E)&&(E=Uint8Array.from(E))),!(E instanceof Uint8Array))throw new TypeError("Expected Uint8Array");if(E.length===0)return"";for(var v=0,T=0,I=0,A=E.length;I!==A&&E[I]===0;)I++,v++;for(var P=(A-I)*f+1>>>0,x=new Uint8Array(P);I!==A;){for(var D=E[I],C=0,k=P-1;(D!==0||C<T)&&k!==-1;k--,C++)D+=256*x[k]>>>0,x[k]=D%c>>>0,D=D/c>>>0;if(D!==0)throw new Error("Non-zero carry");T=C,I++}for(var N=P-T;N!==P&&x[N]===0;)N++;for(var L=l.repeat(v);N<P;++N)L+=r.charAt(x[N]);return L}function $(E){if(typeof E!="string")throw new TypeError("Expected String");if(E.length===0)return new Uint8Array;var v=0;if(E[v]!==" "){for(var T=0,I=0;E[v]===l;)T++,v++;for(var A=(E.length-v)*u+1>>>0,P=new Uint8Array(A);E[v];){var x=t[E.charCodeAt(v)];if(x===255)return;for(var D=0,C=A-1;(x!==0||D<I)&&C!==-1;C--,D++)x+=c*P[C]>>>0,P[C]=x%256>>>0,x=x/256>>>0;if(x!==0)throw new Error("Non-zero carry");I=D,v++}if(E[v]!==" "){for(var k=A-I;k!==A&&P[k]===0;)k++;for(var N=new Uint8Array(T+(A-k)),L=T;k!==A;)N[L++]=P[k++];return N}}}function S(E){var v=$(E);if(v)return v;throw new Error(`Non-${e} character`)}return{encode:g,decodeUnsafe:$,decode:S}}var src$7=base$5,_brrp__multiformats_scope_baseX$2=src$7;const empty=new Uint8Array(0),fromHex=r=>{const e=r.match(/../g);return e?new Uint8Array(e.map(t=>parseInt(t,16))):empty},equals$6=(r,e)=>{if(r===e)return!0;if(r.byteLength!==e.byteLength)return!1;for(let t=0;t<r.byteLength;t++)if(r[t]!==e[t])return!1;return!0},coerce$2=r=>{if(r instanceof Uint8Array&&r.constructor.name==="Uint8Array")return r;if(r instanceof ArrayBuffer)return new Uint8Array(r);if(ArrayBuffer.isView(r))return new Uint8Array(r.buffer,r.byteOffset,r.byteLength);throw new Error("Unknown type, must be binary type")},fromString$c=r=>new TextEncoder().encode(r),toString$c=r=>new TextDecoder().decode(r);let Encoder$3=class{constructor(e,t,n){this.name=e,this.prefix=t,this.baseEncode=n}encode(e){if(e instanceof Uint8Array)return`${this.prefix}${this.baseEncode(e)}`;throw Error("Unknown type, must be binary type")}},Decoder$5=class{constructor(e,t,n){if(this.name=e,this.prefix=t,t.codePointAt(0)===void 0)throw new Error("Invalid prefix character");this.prefixCodePoint=t.codePointAt(0),this.baseDecode=n}decode(e){if(typeof e=="string"){if(e.codePointAt(0)!==this.prefixCodePoint)throw Error(`Unable to decode multibase string ${JSON.stringify(e)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);return this.baseDecode(e.slice(this.prefix.length))}else throw Error("Can only multibase decode strings")}or(e){return or$4(this,e)}},ComposedDecoder$2=class{constructor(e){this.decoders=e}or(e){return or$4(this,e)}decode(e){const t=e[0],n=this.decoders[t];if(n)return n.decode(e);throw RangeError(`Unable to decode multibase string ${JSON.stringify(e)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`)}};const or$4=(r,e)=>new ComposedDecoder$2({...r.decoders||{[r.prefix]:r},...e.decoders||{[e.prefix]:e}});let Codec$2=class{constructor(e,t,n,i){this.name=e,this.prefix=t,this.baseEncode=n,this.baseDecode=i,this.encoder=new Encoder$3(e,t,n),this.decoder=new Decoder$5(e,t,i)}encode(e){return this.encoder.encode(e)}decode(e){return this.decoder.decode(e)}};const from$3=({name:r,prefix:e,encode:t,decode:n})=>new Codec$2(r,e,t,n),baseX$3=({prefix:r,name:e,alphabet:t})=>{const{encode:n,decode:i}=_brrp__multiformats_scope_baseX$2(t,e);return from$3({prefix:r,name:e,encode:n,decode:o=>coerce$2(i(o))})},decode$q=(r,e,t,n)=>{const i={};for(let f=0;f<e.length;++f)i[e[f]]=f;let o=r.length;for(;r[o-1]==="=";)--o;const a=new Uint8Array(o*t/8|0);let c=0,l=0,u=0;for(let f=0;f<o;++f){const g=i[r[f]];if(g===void 0)throw new SyntaxError(`Non-${n} character`);l=l<<t|g,c+=t,c>=8&&(c-=8,a[u++]=255&l>>c)}if(c>=t||255&l<<8-c)throw new SyntaxError("Unexpected end of data");return a},encode$l=(r,e,t)=>{const n=e[e.length-1]==="=",i=(1<<t)-1;let o="",a=0,c=0;for(let l=0;l<r.length;++l)for(c=c<<8|r[l],a+=8;a>t;)a-=t,o+=e[i&c>>a];if(a&&(o+=e[i&c<<t-a]),n)for(;o.length*t&7;)o+="=";return o},rfc4648$4=({name:r,prefix:e,bitsPerChar:t,alphabet:n})=>from$3({prefix:e,name:r,encode(i){return encode$l(i,n,t)},decode(i){return decode$q(i,n,t,r)}}),base32$5=rfc4648$4({prefix:"b",name:"base32",alphabet:"abcdefghijklmnopqrstuvwxyz234567",bitsPerChar:5}),base32upper$2=rfc4648$4({prefix:"B",name:"base32upper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567",bitsPerChar:5}),base32pad$2=rfc4648$4({prefix:"c",name:"base32pad",alphabet:"abcdefghijklmnopqrstuvwxyz234567=",bitsPerChar:5}),base32padupper$2=rfc4648$4({prefix:"C",name:"base32padupper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=",bitsPerChar:5}),base32hex$2=rfc4648$4({prefix:"v",name:"base32hex",alphabet:"0123456789abcdefghijklmnopqrstuv",bitsPerChar:5}),base32hexupper$2=rfc4648$4({prefix:"V",name:"base32hexupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV",bitsPerChar:5}),base32hexpad$2=rfc4648$4({prefix:"t",name:"base32hexpad",alphabet:"0123456789abcdefghijklmnopqrstuv=",bitsPerChar:5}),base32hexpadupper$2=rfc4648$4({prefix:"T",name:"base32hexpadupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV=",bitsPerChar:5}),base32z$2=rfc4648$4({prefix:"h",name:"base32z",alphabet:"ybndrfg8ejkmcpqxot1uwisza345h769",bitsPerChar:5}),base32$6=Object.freeze(Object.defineProperty({__proto__:null,base32:base32$5,base32hex:base32hex$2,base32hexpad:base32hexpad$2,base32hexpadupper:base32hexpadupper$2,base32hexupper:base32hexupper$2,base32pad:base32pad$2,base32padupper:base32padupper$2,base32upper:base32upper$2,base32z:base32z$2},Symbol.toStringTag,{value:"Module"})),base58btc$4=baseX$3({name:"base58btc",prefix:"z",alphabet:"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"}),base58flickr$2=baseX$3({name:"base58flickr",prefix:"Z",alphabet:"123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"}),base58$2=Object.freeze(Object.defineProperty({__proto__:null,base58btc:base58btc$4,base58flickr:base58flickr$2},Symbol.toStringTag,{value:"Module"})),base64$6=rfc4648$4({prefix:"m",name:"base64",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",bitsPerChar:6}),base64pad$2=rfc4648$4({prefix:"M",name:"base64pad",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",bitsPerChar:6}),base64url$2=rfc4648$4({prefix:"u",name:"base64url",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_",bitsPerChar:6}),base64urlpad$2=rfc4648$4({prefix:"U",name:"base64urlpad",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=",bitsPerChar:6}),base64$7=Object.freeze(Object.defineProperty({__proto__:null,base64:base64$6,base64pad:base64pad$2,base64url:base64url$2,base64urlpad:base64urlpad$2},Symbol.toStringTag,{value:"Module"}));debug$2.formatters.b=r=>r==null?"undefined":base58btc$4.baseEncode(r);debug$2.formatters.t=r=>r==null?"undefined":base32$5.baseEncode(r);debug$2.formatters.m=r=>r==null?"undefined":base64$6.baseEncode(r);debug$2.formatters.p=r=>r==null?"undefined":r.toString();debug$2.formatters.c=r=>r==null?"undefined":r.toString();debug$2.formatters.k=r=>r==null?"undefined":r.toString();debug$2.formatters.a=r=>r==null?"undefined":r.toString();function createDisabledLogger$4(r){const e=()=>{};return e.enabled=!1,e.color="",e.diff=0,e.log=()=>{},e.namespace=r,e.destroy=()=>!0,e.extend=()=>e,e}function defaultLogger$1(){return{forComponent(r){return logger$5(r)}}}function logger$5(r){let e=createDisabledLogger$4(`${r}:trace`);return debug$2.enabled(`${r}:trace`)&&debug$2.names.map(t=>t.toString()).find(t=>t.includes(":trace"))!=null&&(e=debug$2(`${r}:trace`)),Object.assign(debug$2(r),{error:debug$2(`${r}:error`),trace:e})}function assign$6(r,e){for(const t in e)Object.defineProperty(r,t,{value:e[t],enumerable:!0,configurable:!0});return r}function createError$6(r,e,t){if(!r||typeof r=="string")throw new TypeError("Please pass an Error to err-code");t||(t={}),typeof e=="object"&&(t=e,e=""),e&&(t.code=e);try{return assign$6(r,t)}catch{t.message=r.message,t.stack=r.stack;const i=function(){};return i.prototype=Object.create(Object.getPrototypeOf(r)),assign$6(new i,t)}}var errCode$a=createError$6;const errCode$b=getDefaultExportFromCjs(errCode$a);function notFoundError$1(r){return r=r??new Error("Not Found"),errCode$b(r,"ERR_NOT_FOUND")}class BaseBlockstore{has(e,t){return Promise.reject(new Error(".has is not implemented"))}put(e,t,n){return Promise.reject(new Error(".put is not implemented"))}async*putMany(e,t){for await(const{cid:n,block:i}of e)await this.put(n,i,t),yield n}get(e,t){return Promise.reject(new Error(".get is not implemented"))}async*getMany(e,t){for await(const n of e)yield{cid:n,block:await this.get(n,t)}}async delete(e,t){await Promise.reject(new Error(".delete is not implemented"))}async*deleteMany(e,t){for await(const n of e)await this.delete(n,t),yield n}async*getAll(e){throw new Error(".getAll is not implemented")}}var encode_1$4=encode$k,MSB$b=128,REST$b=127,MSBALL$4=~REST$b,INT$4=Math.pow(2,31);function encode$k(r,e,t){e=e||[],t=t||0;for(var n=t;r>=INT$4;)e[t++]=r&255|MSB$b,r/=128;for(;r&MSBALL$4;)e[t++]=r&255|MSB$b,r>>>=7;return e[t]=r|0,encode$k.bytes=t-n+1,e}var decode$p=read$6,MSB$1$1=128,REST$1$1=127;function read$6(r,n){var t=0,n=n||0,i=0,o=n,a,c=r.length;do{if(o>=c)throw read$6.bytes=0,new RangeError("Could not decode varint");a=r[o++],t+=i<28?(a&REST$1$1)<<i:(a&REST$1$1)*Math.pow(2,i),i+=7}while(a>=MSB$1$1);return read$6.bytes=o-n,t}var N1$6=Math.pow(2,7),N2$6=Math.pow(2,14),N3$6=Math.pow(2,21),N4$6=Math.pow(2,28),N5$6=Math.pow(2,35),N6$6=Math.pow(2,42),N7$6=Math.pow(2,49),N8$4=Math.pow(2,56),N9$4=Math.pow(2,63),length$5=function(r){return r<N1$6?1:r<N2$6?2:r<N3$6?3:r<N4$6?4:r<N5$6?5:r<N6$6?6:r<N7$6?7:r<N8$4?8:r<N9$4?9:10},varint$9={encode:encode_1$4,decode:decode$p,encodingLength:length$5},_brrp_varint$1=varint$9;const decode$o=(r,e=0)=>[_brrp_varint$1.decode(r,e),_brrp_varint$1.decode.bytes],encodeTo$1=(r,e,t=0)=>(_brrp_varint$1.encode(r,e,t),e),encodingLength$3=r=>_brrp_varint$1.encodingLength(r),create$c=(r,e)=>{const t=e.byteLength,n=encodingLength$3(r),i=n+encodingLength$3(t),o=new Uint8Array(i+t);return encodeTo$1(r,o,0),encodeTo$1(t,o,n),o.set(e,i),new Digest$2(r,t,e,o)},decode$n=r=>{const e=coerce$2(r),[t,n]=decode$o(e),[i,o]=decode$o(e.subarray(n)),a=e.subarray(n+o);if(a.byteLength!==i)throw new Error("Incorrect length");return new Digest$2(t,i,a,e)},equals$5=(r,e)=>{if(r===e)return!0;{const t=e;return r.code===t.code&&r.size===t.size&&t.bytes instanceof Uint8Array&&equals$6(r.bytes,t.bytes)}};let Digest$2=class{constructor(e,t,n,i){this.code=e,this.size=t,this.digest=n,this.bytes=i}};const format$3=(r,e)=>{const{bytes:t,version:n}=r;switch(n){case 0:return toStringV0$1(t,baseCache(r),e||base58btc$4.encoder);default:return toStringV1$1(t,baseCache(r),e||base32$5.encoder)}},cache$2=new WeakMap,baseCache=r=>{const e=cache$2.get(r);if(e==null){const t=new Map;return cache$2.set(r,t),t}return e};let CID$3=class $e{constructor(e,t,n,i){this.code=t,this.version=e,this.multihash=n,this.bytes=i,this["/"]=i}get asCID(){return this}get byteOffset(){return this.bytes.byteOffset}get byteLength(){return this.bytes.byteLength}toV0(){switch(this.version){case 0:return this;case 1:{const{code:e,multihash:t}=this;if(e!==DAG_PB_CODE$1)throw new Error("Cannot convert a non dag-pb CID to CIDv0");if(t.code!==SHA_256_CODE$1)throw new Error("Cannot convert non sha2-256 multihash CID to CIDv0");return $e.createV0(t)}default:throw Error(`Can not convert CID version ${this.version} to version 0. This is a bug please report`)}}toV1(){switch(this.version){case 0:{const{code:e,digest:t}=this.multihash,n=create$c(e,t);return $e.createV1(this.code,n)}case 1:return this;default:throw Error(`Can not convert CID version ${this.version} to version 1. This is a bug please report`)}}equals(e){return $e.equals(this,e)}static equals(e,t){const n=t;return n&&e.code===n.code&&e.version===n.version&&equals$5(e.multihash,n.multihash)}toString(e){return format$3(this,e)}toJSON(){return{"/":format$3(this)}}link(){return this}get[Symbol.toStringTag](){return"CID"}[Symbol.for("nodejs.util.inspect.custom")](){return`CID(${this.toString()})`}static asCID(e){if(e==null)return null;const t=e;if(t instanceof $e)return t;if(t["/"]!=null&&t["/"]===t.bytes||t.asCID===t){const{version:n,code:i,multihash:o,bytes:a}=t;return new $e(n,i,o,a||encodeCID$1(n,i,o.bytes))}else if(t[cidSymbol$1]===!0){const{version:n,multihash:i,code:o}=t,a=decode$n(i);return $e.create(n,o,a)}else return null}static create(e,t,n){if(typeof t!="number")throw new Error("String codecs are no longer supported");if(!(n.bytes instanceof Uint8Array))throw new Error("Invalid digest");switch(e){case 0:{if(t!==DAG_PB_CODE$1)throw new Error(`Version 0 CID must use dag-pb (code: ${DAG_PB_CODE$1}) block encoding`);return new $e(e,t,n,n.bytes)}case 1:{const i=encodeCID$1(e,t,n.bytes);return new $e(e,t,n,i)}default:throw new Error("Invalid version")}}static createV0(e){return $e.create(0,DAG_PB_CODE$1,e)}static createV1(e,t){return $e.create(1,e,t)}static decode(e){const[t,n]=$e.decodeFirst(e);if(n.length)throw new Error("Incorrect length");return t}static decodeFirst(e){const t=$e.inspectBytes(e),n=t.size-t.multihashSize,i=coerce$2(e.subarray(n,n+t.multihashSize));if(i.byteLength!==t.multihashSize)throw new Error("Incorrect length");const o=i.subarray(t.multihashSize-t.digestSize),a=new Digest$2(t.multihashCode,t.digestSize,o,i);return[t.version===0?$e.createV0(a):$e.createV1(t.codec,a),e.subarray(t.size)]}static inspectBytes(e){let t=0;const n=()=>{const[g,$]=decode$o(e.subarray(t));return t+=$,g};let i=n(),o=DAG_PB_CODE$1;if(i===18?(i=0,t=0):o=n(),i!==0&&i!==1)throw new RangeError(`Invalid CID version ${i}`);const a=t,c=n(),l=n(),u=t+l,f=u-a;return{version:i,codec:o,multihashCode:c,digestSize:l,multihashSize:f,size:u}}static parse(e,t){const[n,i]=parseCIDtoBytes$1(e,t),o=$e.decode(i);if(o.version===0&&e[0]!=="Q")throw Error("Version 0 CID string must not include multibase prefix");return baseCache(o).set(n,e),o}};const parseCIDtoBytes$1=(r,e)=>{switch(r[0]){case"Q":{const t=e||base58btc$4;return[base58btc$4.prefix,t.decode(`${base58btc$4.prefix}${r}`)]}case base58btc$4.prefix:{const t=e||base58btc$4;return[base58btc$4.prefix,t.decode(r)]}case base32$5.prefix:{const t=e||base32$5;return[base32$5.prefix,t.decode(r)]}default:{if(e==null)throw Error("To parse non base32 or base58btc encoded CID multibase decoder must be provided");return[r[0],e.decode(r)]}}},toStringV0$1=(r,e,t)=>{const{prefix:n}=t;if(n!==base58btc$4.prefix)throw Error(`Cannot string encode V0 in ${t.name} encoding`);const i=e.get(n);if(i==null){const o=t.encode(r).slice(1);return e.set(n,o),o}else return i},toStringV1$1=(r,e,t)=>{const{prefix:n}=t,i=e.get(n);if(i==null){const o=t.encode(r);return e.set(n,o),o}else return i},DAG_PB_CODE$1=112,SHA_256_CODE$1=18,encodeCID$1=(r,e,t)=>{const n=encodingLength$3(r),i=n+encodingLength$3(e),o=new Uint8Array(i+t.byteLength);return encodeTo$1(r,o,0),encodeTo$1(e,o,n),o.set(t,i),o},cidSymbol$1=Symbol.for("@ipld/js-cid/CID"),name$4="raw",code$5=85,encode$j=r=>coerce$2(r),decode$m=r=>coerce$2(r),raw=Object.freeze(Object.defineProperty({__proto__:null,code:code$5,decode:decode$m,encode:encode$j,name:name$4},Symbol.toStringTag,{value:"Module"}));class MemoryBlockstore extends BaseBlockstore{constructor(){super();_(this,"data");this.data=new Map}put(t,n){return this.data.set(base32$5.encode(t.multihash.bytes),n),t}get(t){const n=this.data.get(base32$5.encode(t.multihash.bytes));if(n==null)throw notFoundError$1();return n}has(t){return this.data.has(base32$5.encode(t.multihash.bytes))}async delete(t){this.data.delete(base32$5.encode(t.multihash.bytes))}async*getAll(){for(const[t,n]of this.data.entries())yield{cid:CID$3.createV1(code$5,decode$n(base32$5.decode(t))),block:n}}}debug$2.formatters.b=r=>r==null?"undefined":base58btc$4.baseEncode(r);debug$2.formatters.t=r=>r==null?"undefined":base32$5.baseEncode(r);debug$2.formatters.m=r=>r==null?"undefined":base64$6.baseEncode(r);debug$2.formatters.p=r=>r==null?"undefined":r.toString();debug$2.formatters.c=r=>r==null?"undefined":r.toString();debug$2.formatters.k=r=>r==null?"undefined":r.toString();debug$2.formatters.a=r=>r==null?"undefined":r.toString();function createDisabledLogger$3(r){const e=()=>{};return e.enabled=!1,e.color="",e.diff=0,e.log=()=>{},e.namespace=r,e.destroy=()=>!0,e.extend=()=>e,e}function logger$4(r){let e=createDisabledLogger$3(`${r}:trace`);return debug$2.enabled(`${r}:trace`)&&debug$2.names.map(t=>t.toString()).find(t=>t.includes(":trace"))!=null&&(e=debug$2(`${r}:trace`)),Object.assign(debug$2(r),{error:debug$2(`${r}:error`),trace:e})}function isAsyncIterable$f(r){return r[Symbol.asyncIterator]!=null}function drain(r){if(isAsyncIterable$f(r))return(async()=>{for await(const e of r);})();for(const e of r);}function peekable(r){const[e,t]=r[Symbol.asyncIterator]!=null?[r[Symbol.asyncIterator](),Symbol.asyncIterator]:[r[Symbol.iterator](),Symbol.iterator],n=[];return{peek:()=>e.next(),push:i=>{n.push(i)},next:()=>n.length>0?{done:!1,value:n.shift()}:e.next(),[t](){return this}}}function isAsyncIterable$e(r){return r[Symbol.asyncIterator]!=null}function filter(r,e){if(isAsyncIterable$e(r))return async function*(){for await(const c of r)await e(c)&&(yield c)}();const t=peekable(r),{value:n,done:i}=t.next();if(i===!0)return function*(){}();const o=e(n);if(typeof o.then=="function")return async function*(){await o&&(yield n);for await(const c of t)await e(c)&&(yield c)}();const a=e;return function*(){o===!0&&(yield n);for(const c of t)a(c)&&(yield c)}()}function pDefer(){const r={};return r.promise=new Promise((e,t)=>{r.resolve=e,r.reject=t}),r}let FixedFIFO$1=class{constructor(e){_(this,"buffer");_(this,"mask");_(this,"top");_(this,"btm");_(this,"next");if(!(e>0)||e-1&e)throw new Error("Max size for a FixedFIFO should be a power of two");this.buffer=new Array(e),this.mask=e-1,this.top=0,this.btm=0,this.next=null}push(e){return this.buffer[this.top]!==void 0?!1:(this.buffer[this.top]=e,this.top=this.top+1&this.mask,!0)}shift(){const e=this.buffer[this.btm];if(e!==void 0)return this.buffer[this.btm]=void 0,this.btm=this.btm+1&this.mask,e}isEmpty(){return this.buffer[this.btm]===void 0}},FIFO$1=class{constructor(e={}){_(this,"size");_(this,"hwm");_(this,"head");_(this,"tail");this.hwm=e.splitLimit??16,this.head=new FixedFIFO$1(this.hwm),this.tail=this.head,this.size=0}calculateSize(e){return e?.byteLength!=null?e.byteLength:1}push(e){if(e?.value!=null&&(this.size+=this.calculateSize(e.value)),!this.head.push(e)){const t=this.head;this.head=t.next=new FixedFIFO$1(2*this.head.buffer.length),this.head.push(e)}}shift(){let e=this.tail.shift();if(e===void 0&&this.tail.next!=null){const t=this.tail.next;this.tail.next=null,this.tail=t,e=this.tail.shift()}return e?.value!=null&&(this.size-=this.calculateSize(e.value)),e}isEmpty(){return this.head.isEmpty()}},AbortError$i=class extends Error{constructor(t,n){super(t??"The operation was aborted");_(this,"type");_(this,"code");this.type="aborted",this.code=n??"ABORT_ERR"}};function pushable$1(r={}){return _pushable$1(t=>{const n=t.shift();if(n==null)return{done:!0};if(n.error!=null)throw n.error;return{done:n.done===!0,value:n.value}},r)}function _pushable$1(r,e){e=e??{};let t=e.onEnd,n=new FIFO$1,i,o,a,c=pDefer();const l=async()=>{try{return n.isEmpty()?a?{done:!0}:await new Promise((T,I)=>{o=A=>{o=null,n.push(A);try{T(r(n))}catch(P){I(P)}return i}}):r(n)}finally{n.isEmpty()&&queueMicrotask(()=>{c.resolve(),c=pDefer()})}},u=T=>o!=null?o(T):(n.push(T),i),f=T=>(n=new FIFO$1,o!=null?o({error:T}):(n.push({error:T}),i)),g=T=>{if(a)return i;if(e?.objectMode!==!0&&T?.byteLength==null)throw new Error("objectMode was not true but tried to push non-Uint8Array value");return u({done:!1,value:T})},$=T=>a?i:(a=!0,T!=null?f(T):u({done:!0})),S=()=>(n=new FIFO$1,$(),{done:!0}),E=T=>($(T),{done:!0});if(i={[Symbol.asyncIterator](){return this},next:l,return:S,throw:E,push:g,end:$,get readableLength(){return n.size},onEmpty:async T=>{const I=T?.signal;if(I?.throwIfAborted(),n.isEmpty())return;let A,P;I!=null&&(A=new Promise((x,D)=>{P=()=>{D(new AbortError$i)},I.addEventListener("abort",P)}));try{await Promise.race([c.promise,A])}finally{P!=null&&I!=null&&I?.removeEventListener("abort",P)}}},t==null)return i;const v=i;return i={[Symbol.asyncIterator](){return this},next(){return v.next()},throw(T){return v.throw(T),t!=null&&(t(T),t=void 0),{done:!0}},return(){return v.return(),t!=null&&(t(),t=void 0),{done:!0}},push:g,end(T){return v.end(T),t!=null&&(t(T),t=void 0),i},get readableLength(){return v.readableLength}},i}function isAsyncIterable$d(r){return r[Symbol.asyncIterator]!=null}function merge$1(...r){const e=[];for(const t of r)isAsyncIterable$d(t)||e.push(t);return e.length===r.length?function*(){for(const t of e)yield*t}():async function*(){const t=pushable$1({objectMode:!0});Promise.resolve().then(async()=>{try{await Promise.all(r.map(async n=>{for await(const i of n)t.push(i)})),t.end()}catch(n){t.end(n)}}),yield*t}()}class FixedFIFO{constructor(e){_(this,"buffer");_(this,"mask");_(this,"top");_(this,"btm");_(this,"next");if(!(e>0)||e-1&e)throw new Error("Max size for a FixedFIFO should be a power of two");this.buffer=new Array(e),this.mask=e-1,this.top=0,this.btm=0,this.next=null}push(e){return this.buffer[this.top]!==void 0?!1:(this.buffer[this.top]=e,this.top=this.top+1&this.mask,!0)}shift(){const e=this.buffer[this.btm];if(e!==void 0)return this.buffer[this.btm]=void 0,this.btm=this.btm+1&this.mask,e}isEmpty(){return this.buffer[this.btm]===void 0}}class FIFO{constructor(e={}){_(this,"size");_(this,"hwm");_(this,"head");_(this,"tail");this.hwm=e.splitLimit??16,this.head=new FixedFIFO(this.hwm),this.tail=this.head,this.size=0}calculateSize(e){return e?.byteLength!=null?e.byteLength:1}push(e){if(e?.value!=null&&(this.size+=this.calculateSize(e.value)),!this.head.push(e)){const t=this.head;this.head=t.next=new FixedFIFO(2*this.head.buffer.length),this.head.push(e)}}shift(){let e=this.tail.shift();if(e===void 0&&this.tail.next!=null){const t=this.tail.next;this.tail.next=null,this.tail=t,e=this.tail.shift()}return e?.value!=null&&(this.size-=this.calculateSize(e.value)),e}isEmpty(){return this.head.isEmpty()}}let AbortError$h=class extends Error{constructor(t,n){super(t??"The operation was aborted");_(this,"type");_(this,"code");this.type="aborted",this.code=n??"ABORT_ERR"}};function pushable(r={}){return _pushable(t=>{const n=t.shift();if(n==null)return{done:!0};if(n.error!=null)throw n.error;return{done:n.done===!0,value:n.value}},r)}function pushableV(r={}){return _pushable(t=>{let n;const i=[];for(;!t.isEmpty()&&(n=t.shift(),n!=null);){if(n.error!=null)throw n.error;n.done===!1&&i.push(n.value)}return n==null?{done:!0}:{done:n.done===!0,value:i}},r)}function _pushable(r,e){e=e??{};let t=e.onEnd,n=new FIFO,i,o,a,c=pDefer();const l=async()=>{try{return n.isEmpty()?a?{done:!0}:await new Promise((T,I)=>{o=A=>{o=null,n.push(A);try{T(r(n))}catch(P){I(P)}return i}}):r(n)}finally{n.isEmpty()&&queueMicrotask(()=>{c.resolve(),c=pDefer()})}},u=T=>o!=null?o(T):(n.push(T),i),f=T=>(n=new FIFO,o!=null?o({error:T}):(n.push({error:T}),i)),g=T=>{if(a)return i;if(e?.objectMode!==!0&&T?.byteLength==null)throw new Error("objectMode was not true but tried to push non-Uint8Array value");return u({done:!1,value:T})},$=T=>a?i:(a=!0,T!=null?f(T):u({done:!0})),S=()=>(n=new FIFO,$(),{done:!0}),E=T=>($(T),{done:!0});if(i={[Symbol.asyncIterator](){return this},next:l,return:S,throw:E,push:g,end:$,get readableLength(){return n.size},onEmpty:async T=>{const I=T?.signal;if(I?.throwIfAborted(),n.isEmpty())return;let A,P;I!=null&&(A=new Promise((x,D)=>{P=()=>{D(new AbortError$h)},I.addEventListener("abort",P)}));try{await Promise.race([c.promise,A])}finally{P!=null&&I!=null&&I?.removeEventListener("abort",P)}}},t==null)return i;const v=i;return i={[Symbol.asyncIterator](){return this},next(){return v.next()},throw(T){return v.throw(T),t!=null&&(t(T),t=void 0),{done:!0}},return(){return v.return(),t!=null&&(t(),t=void 0),{done:!0}},push:g,end(T){return v.end(T),t!=null&&(t(T),t=void 0),i},get readableLength(){return v.readableLength},onEmpty:T=>v.onEmpty(T)},i}logger$4("blockstore:core:tiered");function notFoundError(r){return r=r??new Error("Not Found"),errCode$b(r,"ERR_NOT_FOUND")}let nanoid$1=(r=21)=>crypto.getRandomValues(new Uint8Array(r)).reduce((e,t)=>(t&=63,t<36?e+=t.toString(36):t<62?e+=(t-26).toString(36).toUpperCase():t>62?e+="-":e+="_",e),"");function asUint8Array$2(r){return globalThis.Buffer!=null?new Uint8Array(r.buffer,r.byteOffset,r.byteLength):r}const base10$4=baseX$3({prefix:"9",name:"base10",alphabet:"0123456789"}),base10$5=Object.freeze(Object.defineProperty({__proto__:null,base10:base10$4},Symbol.toStringTag,{value:"Module"})),base16$4=rfc4648$4({prefix:"f",name:"base16",alphabet:"0123456789abcdef",bitsPerChar:4}),base16upper$2=rfc4648$4({prefix:"F",name:"base16upper",alphabet:"0123456789ABCDEF",bitsPerChar:4}),base16$5=Object.freeze(Object.defineProperty({__proto__:null,base16:base16$4,base16upper:base16upper$2},Symbol.toStringTag,{value:"Module"})),base2$4=rfc4648$4({prefix:"0",name:"base2",alphabet:"01",bitsPerChar:1}),base2$5=Object.freeze(Object.defineProperty({__proto__:null,base2:base2$4},Symbol.toStringTag,{value:"Module"})),alphabet$2=Array.from("🚀🪐☄🛰🌌🌑🌒🌓🌔🌕🌖🌗🌘🌍🌏🌎🐉☀💻🖥💾💿😂❤😍🤣😊🙏💕😭😘👍😅👏😁🔥🥰💔💖💙😢🤔😆🙄💪😉☺👌🤗💜😔😎😇🌹🤦🎉💞✌✨🤷😱😌🌸🙌😋💗💚😏💛🙂💓🤩😄😀🖤😃💯🙈👇🎶😒🤭❣😜💋👀😪😑💥🙋😞😩😡🤪👊🥳😥🤤👉💃😳✋😚😝😴🌟😬🙃🍀🌷😻😓⭐✅🥺🌈😈🤘💦✔😣🏃💐☹🎊💘😠☝😕🌺🎂🌻😐🖕💝🙊😹🗣💫💀👑🎵🤞😛🔴😤🌼😫⚽🤙☕🏆🤫👈😮🙆🍻🍃🐶💁😲🌿🧡🎁⚡🌞🎈❌✊👋😰🤨😶🤝🚶💰🍓💢🤟🙁🚨💨🤬✈🎀🍺🤓😙💟🌱😖👶🥴▶➡❓💎💸⬇😨🌚🦋😷🕺⚠🙅😟😵👎🤲🤠🤧📌🔵💅🧐🐾🍒😗🤑🌊🤯🐷☎💧😯💆👆🎤🙇🍑❄🌴💣🐸💌📍🥀🤢👅💡💩👐📸👻🤐🤮🎼🥵🚩🍎🍊👼💍📣🥂"),alphabetBytesToChars$2=alphabet$2.reduce((r,e,t)=>(r[t]=e,r),[]),alphabetCharsToBytes$2=alphabet$2.reduce((r,e,t)=>(r[e.codePointAt(0)]=t,r),[]);function encode$i(r){return r.reduce((e,t)=>(e+=alphabetBytesToChars$2[t],e),"")}function decode$l(r){const e=[];for(const t of r){const n=alphabetCharsToBytes$2[t.codePointAt(0)];if(n===void 0)throw new Error(`Non-base256emoji character: ${t}`);e.push(n)}return new Uint8Array(e)}const base256emoji$4=from$3({prefix:"🚀",name:"base256emoji",encode:encode$i,decode:decode$l}),base256emoji$5=Object.freeze(Object.defineProperty({__proto__:null,base256emoji:base256emoji$4},Symbol.toStringTag,{value:"Module"})),base36$4=baseX$3({prefix:"k",name:"base36",alphabet:"0123456789abcdefghijklmnopqrstuvwxyz"}),base36upper$2=baseX$3({prefix:"K",name:"base36upper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"}),base36$5=Object.freeze(Object.defineProperty({__proto__:null,base36:base36$4,base36upper:base36upper$2},Symbol.toStringTag,{value:"Module"})),base8$4=rfc4648$4({prefix:"7",name:"base8",alphabet:"01234567",bitsPerChar:3}),base8$5=Object.freeze(Object.defineProperty({__proto__:null,base8:base8$4},Symbol.toStringTag,{value:"Module"})),identity$4=from$3({prefix:"\0",name:"identity",encode:r=>toString$c(r),decode:r=>fromString$c(r)}),identityBase$2=Object.freeze(Object.defineProperty({__proto__:null,identity:identity$4},Symbol.toStringTag,{value:"Module"}));new TextEncoder;new TextDecoder;const code$4=512,code$3=0,name$3="identity",encode$h=coerce$2,digest$1=r=>create$c(code$3,encode$h(r)),identity$3={code:code$3,name:name$3,encode:encode$h,digest:digest$1},from$2=({name:r,code:e,encode:t})=>new Hasher(r,e,t);class Hasher{constructor(e,t,n){this.name=e,this.code=t,this.encode=n}digest(e){if(e instanceof Uint8Array){const t=this.encode(e);return t instanceof Uint8Array?create$c(this.code,t):t.then(n=>create$c(this.code,n))}else throw Error("Unknown type, must be binary type")}}const sha=r=>async e=>new Uint8Array(await crypto.subtle.digest(r,e)),sha256$2=from$2({name:"sha2-256",code:18,encode:sha("SHA-256")}),sha512$2=from$2({name:"sha2-512",code:19,encode:sha("SHA-512")}),bases$2={...identityBase$2,...base2$5,...base8$5,...base10$5,...base16$5,...base32$6,...base36$5,...base58$2,...base64$7,...base256emoji$5};function alloc$1(r=0){return globalThis.Buffer?.alloc!=null?asUint8Array$2(globalThis.Buffer.alloc(r)):new Uint8Array(r)}function allocUnsafe$3(r=0){return globalThis.Buffer?.allocUnsafe!=null?asUint8Array$2(globalThis.Buffer.allocUnsafe(r)):new Uint8Array(r)}function createCodec$3(r,e,t,n){return{name:r,prefix:e,encoder:{name:r,prefix:e,encode:t},decoder:{decode:n}}}const string$3=createCodec$3("utf8","u",r=>"u"+new TextDecoder("utf8").decode(r),r=>new TextEncoder().encode(r.substring(1))),ascii$2=createCodec$3("ascii","a",r=>{let e="a";for(let t=0;t<r.length;t++)e+=String.fromCharCode(r[t]);return e},r=>{r=r.substring(1);const e=allocUnsafe$3(r.length);for(let t=0;t<r.length;t++)e[t]=r.charCodeAt(t);return e}),BASES$2={utf8:string$3,"utf-8":string$3,hex:bases$2.base16,latin1:ascii$2,ascii:ascii$2,binary:ascii$2,...bases$2};function fromString$b(r,e="utf8"){const t=BASES$2[e];if(t==null)throw new Error(`Unsupported encoding "${e}"`);return(e==="utf8"||e==="utf-8")&&globalThis.Buffer!=null&&globalThis.Buffer.from!=null?asUint8Array$2(globalThis.Buffer.from(r,"utf-8")):t.decoder.decode(`${t.prefix}${r}`)}function toString$b(r,e="utf8"){const t=BASES$2[e];if(t==null)throw new Error(`Unsupported encoding "${e}"`);return(e==="utf8"||e==="utf-8")&&globalThis.Buffer!=null&&globalThis.Buffer.from!=null?globalThis.Buffer.from(r.buffer,r.byteOffset,r.byteLength).toString("utf8"):t.encoder.encode(r).substring(1)}const pathSepS="/",pathSepB=new TextEncoder().encode(pathSepS),pathSep=pathSepB[0];class Key{constructor(e,t){_(this,"_buf");if(typeof e=="string")this._buf=fromString$b(e);else if(e instanceof Uint8Array)this._buf=e;else throw new Error("Invalid key, should be String of Uint8Array");if(t==null&&(t=!0),t&&this.clean(),this._buf.byteLength===0||this._buf[0]!==pathSep)throw new Error("Invalid key")}toString(e="utf8"){return toString$b(this._buf,e)}uint8Array(){return this._buf}get[Symbol.toStringTag](){return`Key(${this.toString()})`}static withNamespaces(e){return new Key(e.join(pathSepS))}static random(){return new Key(nanoid$1().replace(/-/g,""))}static asKey(e){return e instanceof Uint8Array||typeof e=="string"?new Key(e):typeof e.uint8Array=="function"?new Key(e.uint8Array()):null}clean(){if((this._buf==null||this._buf.byteLength===0)&&(this._buf=pathSepB),this._buf[0]!==pathSep){const e=new Uint8Array(this._buf.byteLength+1);e.fill(pathSep,0,1),e.set(this._buf,1),this._buf=e}for(;this._buf.byteLength>1&&this._buf[this._buf.byteLength-1]===pathSep;)this._buf=this._buf.subarray(0,-1)}less(e){const t=this.list(),n=e.list();for(let i=0;i<t.length;i++){if(n.length<i+1)return!1;const o=t[i],a=n[i];if(o<a)return!0;if(o>a)return!1}return t.length<n.length}reverse(){return Key.withNamespaces(this.list().slice().reverse())}namespaces(){return this.list()}baseNamespace(){const e=this.namespaces();return e[e.length-1]}list(){return this.toString().split(pathSepS).slice(1)}type(){return namespaceType(this.baseNamespace())}name(){return namespaceValue(this.baseNamespace())}instance(e){return new Key(this.toString()+":"+e)}path(){let e=this.parent().toString();return e.endsWith(pathSepS)||(e+=pathSepS),e+=this.type(),new Key(e)}parent(){const e=this.list();return e.length===1?new Key(pathSepS):new Key(e.slice(0,-1).join(pathSepS))}child(e){return this.toString()===pathSepS?e:e.toString()===pathSepS?this:new Key(this.toString()+e.toString(),!1)}isAncestorOf(e){return e.toString()===this.toString()?!1:e.toString().startsWith(this.toString())}isDecendantOf(e){return e.toString()===this.toString()?!1:this.toString().startsWith(e.toString())}isTopLevel(){return this.list().length===1}concat(...e){return Key.withNamespaces([...this.namespaces(),...flatten(e.map(t=>t.namespaces()))])}}function namespaceType(r){const e=r.split(":");return e.length<2?"":e.slice(0,-1).join(":")}function namespaceValue(r){const e=r.split(":");return e[e.length-1]}function flatten(r){return[].concat(...r)}const SHARDING_FN="SHARDING";function isAsyncIterable$c(r){return r[Symbol.asyncIterator]!=null}function all$2(r){if(isAsyncIterable$c(r))return(async()=>{const t=[];for await(const n of r)t.push(n);return t})();const e=[];for(const t of r)e.push(t);return e}function isAsyncIterable$b(r){return r[Symbol.asyncIterator]!=null}function sort(r,e){return isAsyncIterable$b(r)?async function*(){yield*(await all$2(r)).sort(e)}():function*(){yield*all$2(r).sort(e)}()}function isAsyncIterable$a(r){return r[Symbol.asyncIterator]!=null}function take(r,e){return isAsyncIterable$a(r)?async function*(){let t=0;if(!(e<1)){for await(const n of r)if(yield n,t++,t===e)return}}():function*(){let t=0;if(!(e<1)){for(const n of r)if(yield n,t++,t===e)return}}()}class BaseDatastore{put(e,t,n){return Promise.reject(new Error(".put is not implemented"))}get(e,t){return Promise.reject(new Error(".get is not implemented"))}has(e,t){return Promise.reject(new Error(".has is not implemented"))}delete(e,t){return Promise.reject(new Error(".delete is not implemented"))}async*putMany(e,t={}){for await(const{key:n,value:i}of e)await this.put(n,i,t),yield n}async*getMany(e,t={}){for await(const n of e)yield{key:n,value:await this.get(n,t)}}async*deleteMany(e,t={}){for await(const n of e)await this.delete(n,t),yield n}batch(){let e=[],t=[];return{put(n,i){e.push({key:n,value:i})},delete(n){t.push(n)},commit:async n=>{await drain(this.putMany(e,n)),e=[],await drain(this.deleteMany(t,n)),t=[]}}}async*_all(e,t){throw new Error("._all is not implemented")}async*_allKeys(e,t){throw new Error("._allKeys is not implemented")}query(e,t){let n=this._all(e,t);if(e.prefix!=null){const i=e.prefix;n=filter(n,o=>o.key.toString().startsWith(i))}if(Array.isArray(e.filters)&&(n=e.filters.reduce((i,o)=>filter(i,o),n)),Array.isArray(e.orders)&&(n=e.orders.reduce((i,o)=>sort(i,o),n)),e.offset!=null){let i=0;const o=e.offset;n=filter(n,()=>i++>=o)}return e.limit!=null&&(n=take(n,e.limit)),n}queryKeys(e,t){let n=this._allKeys(e,t);if(e.prefix!=null){const i=e.prefix;n=filter(n,o=>o.toString().startsWith(i))}if(Array.isArray(e.filters)&&(n=e.filters.reduce((i,o)=>filter(i,o),n)),Array.isArray(e.orders)&&(n=e.orders.reduce((i,o)=>sort(i,o),n)),e.offset!=null){const i=e.offset;let o=0;n=filter(n,()=>o++>=i)}return e.limit!=null&&(n=take(n,e.limit)),n}}class MemoryDatastore extends BaseDatastore{constructor(){super();_(this,"data");this.data=new Map}put(t,n){return this.data.set(t.toString(),n),t}get(t){const n=this.data.get(t.toString());if(n==null)throw notFoundError();return n}has(t){return this.data.has(t.toString())}delete(t){this.data.delete(t.toString())}*_all(){for(const[t,n]of this.data.entries())yield{key:new Key(t),value:n}}*_allKeys(){for(const t of this.data.keys())yield new Key(t)}}function isAsyncIterable$9(r){return r[Symbol.asyncIterator]!=null}function map$1(r,e){if(isAsyncIterable$9(r))return async function*(){for await(const c of r)yield e(c)}();const t=peekable(r),{value:n,done:i}=t.next();if(i===!0)return function*(){}();const o=e(n);if(typeof o.then=="function")return async function*(){yield await o;for await(const c of t)yield e(c)}();const a=e;return function*(){yield o;for(const c of t)yield a(c)}()}function pipe(r,...e){if(r==null)throw new Error("Empty pipeline");if(isDuplex(r)){const n=r;r=()=>n.source}else if(isIterable$1(r)||isAsyncIterable$8(r)){const n=r;r=()=>n}const t=[r,...e];if(t.length>1&&isDuplex(t[t.length-1])&&(t[t.length-1]=t[t.length-1].sink),t.length>2)for(let n=1;n<t.length-1;n++)isDuplex(t[n])&&(t[n]=duplexPipelineFn(t[n]));return rawPipe(...t)}const rawPipe=(...r)=>{let e;for(;r.length>0;)e=r.shift()(e);return e},isAsyncIterable$8=r=>r?.[Symbol.asyncIterator]!=null,isIterable$1=r=>r?.[Symbol.iterator]!=null,isDuplex=r=>r==null?!1:r.sink!=null&&r.source!=null,duplexPipelineFn=r=>e=>{const t=r.sink(e);if(t?.then!=null){const n=pushable$1({objectMode:!0});t.then(()=>{n.end()},a=>{n.end(a)});let i;const o=r.source;if(isAsyncIterable$8(o))i=async function*(){yield*o,n.end()};else if(isIterable$1(o))i=function*(){yield*o,n.end()};else throw new Error("Unknown duplex source type - must be Iterable or AsyncIterable");return merge$1(n,i())}return r.source};new Key(SHARDING_FN);debug$2.formatters.b=r=>r==null?"undefined":base58btc$4.baseEncode(r);debug$2.formatters.t=r=>r==null?"undefined":base32$5.baseEncode(r);debug$2.formatters.m=r=>r==null?"undefined":base64$6.baseEncode(r);debug$2.formatters.p=r=>r==null?"undefined":r.toString();debug$2.formatters.c=r=>r==null?"undefined":r.toString();debug$2.formatters.k=r=>r==null?"undefined":r.toString();debug$2.formatters.a=r=>r==null?"undefined":r.toString();function createDisabledLogger$2(r){const e=()=>{};return e.enabled=!1,e.color="",e.diff=0,e.log=()=>{},e.namespace=r,e.destroy=()=>!0,e.extend=()=>e,e}function logger$3(r){let e=createDisabledLogger$2(`${r}:trace`);return debug$2.enabled(`${r}:trace`)&&debug$2.names.map(t=>t.toString()).find(t=>t.includes(":trace"))!=null&&(e=debug$2(`${r}:trace`)),Object.assign(debug$2(r),{error:debug$2(`${r}:error`),trace:e})}logger$3("datastore:core:tiered");function isStartable$1(r){return r!=null&&typeof r.start=="function"&&typeof r.stop=="function"}async function start(...r){const e=[];for(const t of r)isStartable$1(t)&&e.push(t);await Promise.all(e.map(async t=>{t.beforeStart!=null&&await t.beforeStart()})),await Promise.all(e.map(async t=>{await t.start()})),await Promise.all(e.map(async t=>{t.afterStart!=null&&await t.afterStart()}))}async function stop(...r){const e=[];for(const t of r)isStartable$1(t)&&e.push(t);await Promise.all(e.map(async t=>{t.beforeStop!=null&&await t.beforeStop()})),await Promise.all(e.map(async t=>{await t.stop()})),await Promise.all(e.map(async t=>{t.afterStop!=null&&await t.afterStop()}))}class CustomProgressEvent extends Event{constructor(e,t){super(e),this.detail=t}}function anySignal(r){const e=new globalThis.AbortController;function t(){e.abort();for(const o of r)o?.removeEventListener!=null&&o.removeEventListener("abort",t)}for(const o of r){if(o?.aborted===!0){t();break}o?.addEventListener!=null&&o.addEventListener("abort",t)}function n(){for(const o of r)o?.removeEventListener!=null&&o.removeEventListener("abort",t)}const i=e.signal;return i.clear=n,i}function isAsyncIterable$7(r){return r[Symbol.asyncIterator]!=null}function forEach(r,e){if(isAsyncIterable$7(r))return async function*(){for await(const c of r)await e(c),yield c}();const t=peekable(r),{value:n,done:i}=t.next();if(i===!0)return function*(){}();if(typeof e(n)?.then=="function")return async function*(){yield n;for await(const c of t)await e(c),yield c}();const a=e;return function*(){yield n;for(const c of t)a(c),yield c}()}let TrackedMap$1=class extends Map{constructor(t){super();_(this,"metric");const{name:n,metrics:i}=t;this.metric=i.registerMetric(n),this.updateComponentMetric()}set(t,n){return super.set(t,n),this.updateComponentMetric(),this}delete(t){const n=super.delete(t);return this.updateComponentMetric(),n}clear(){super.clear(),this.updateComponentMetric()}updateComponentMetric(){this.metric.update(this.size)}};function trackedMap$1(r){const{name:e,metrics:t}=r;let n;return t!=null?n=new TrackedMap$1({name:e,metrics:t}):n=new Map,n}var Le;let AbortError$g=(Le=class extends Error{constructor(t="The operation was aborted"){super(t);_(this,"code");_(this,"type");this.code=Le.code,this.type=Le.type}},_(Le,"code","ABORT_ERR"),_(Le,"type","aborted"),Le),CodeError$e=class extends Error{constructor(t,n,i){super(t);_(this,"code");_(this,"props");this.code=n,this.name=i?.name??"CodeError",this.props=i??{}}};var Fe;let UnexpectedPeerError$1=(Fe=class extends Error{constructor(t="Unexpected Peer"){super(t);_(this,"code");this.code=Fe.code}},_(Fe,"code","ERR_UNEXPECTED_PEER"),Fe);var Ue;let InvalidCryptoExchangeError$1=(Ue=class extends Error{constructor(t="Invalid crypto exchange"){super(t);_(this,"code");this.code=Ue.code}},_(Ue,"code","ERR_INVALID_CRYPTO_EXCHANGE"),Ue);var encode_1$3=encode$g,MSB$a=128,REST$a=127,MSBALL$3=~REST$a,INT$3=Math.pow(2,31);function encode$g(r,e,t){e=e||[],t=t||0;for(var n=t;r>=INT$3;)e[t++]=r&255|MSB$a,r/=128;for(;r&MSBALL$3;)e[t++]=r&255|MSB$a,r>>>=7;return e[t]=r|0,encode$g.bytes=t-n+1,e}var decode$k=read$5,MSB$9=128,REST$9=127;function read$5(r,n){var t=0,n=n||0,i=0,o=n,a,c=r.length;do{if(o>=c)throw read$5.bytes=0,new RangeError("Could not decode varint");a=r[o++],t+=i<28?(a&REST$9)<<i:(a&REST$9)*Math.pow(2,i),i+=7}while(a>=MSB$9);return read$5.bytes=o-n,t}var N1$5=Math.pow(2,7),N2$5=Math.pow(2,14),N3$5=Math.pow(2,21),N4$5=Math.pow(2,28),N5$5=Math.pow(2,35),N6$5=Math.pow(2,42),N7$5=Math.pow(2,49),N8$3=Math.pow(2,56),N9$3=Math.pow(2,63),length$4=function(r){return r<N1$5?1:r<N2$5?2:r<N3$5?3:r<N4$5?4:r<N5$5?5:r<N6$5?6:r<N7$5?7:r<N8$3?8:r<N9$3?9:10},varint$8={encode:encode_1$3,decode:decode$k,encodingLength:length$4};const varint$7=varint$8;var src$6=r=>{if(!(r instanceof Uint8Array))throw new Error("arg needs to be a Uint8Array");const e=[];for(;r.length>0;){const t=varint$7.decode(r);e.push(t),r=r.slice(varint$7.decode.bytes)}return e};const vd=getDefaultExportFromCjs(src$6);var browser$4={exports:{}},ms$2,hasRequiredMs$1;function requireMs$1(){if(hasRequiredMs$1)return ms$2;hasRequiredMs$1=1;var r=1e3,e=r*60,t=e*60,n=t*24,i=n*7,o=n*365.25;ms$2=function(f,g){g=g||{};var $=typeof f;if($==="string"&&f.length>0)return a(f);if($==="number"&&isFinite(f))return g.long?l(f):c(f);throw new Error("val is not a non-empty string or a valid number. val="+JSON.stringify(f))};function a(f){if(f=String(f),!(f.length>100)){var g=/^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(f);if(g){var $=parseFloat(g[1]),S=(g[2]||"ms").toLowerCase();switch(S){case"years":case"year":case"yrs":case"yr":case"y":return $*o;case"weeks":case"week":case"w":return $*i;case"days":case"day":case"d":return $*n;case"hours":case"hour":case"hrs":case"hr":case"h":return $*t;case"minutes":case"minute":case"mins":case"min":case"m":return $*e;case"seconds":case"second":case"secs":case"sec":case"s":return $*r;case"milliseconds":case"millisecond":case"msecs":case"msec":case"ms":return $;default:return}}}}function c(f){var g=Math.abs(f);return g>=n?Math.round(f/n)+"d":g>=t?Math.round(f/t)+"h":g>=e?Math.round(f/e)+"m":g>=r?Math.round(f/r)+"s":f+"ms"}function l(f){var g=Math.abs(f);return g>=n?u(f,g,n,"day"):g>=t?u(f,g,t,"hour"):g>=e?u(f,g,e,"minute"):g>=r?u(f,g,r,"second"):f+" ms"}function u(f,g,$,S){var E=g>=$*1.5;return Math.round(f/$)+" "+S+(E?"s":"")}return ms$2}function setup$1(r){t.debug=t,t.default=t,t.coerce=l,t.disable=o,t.enable=i,t.enabled=a,t.humanize=requireMs$1(),t.destroy=u,Object.keys(r).forEach(f=>{t[f]=r[f]}),t.names=[],t.skips=[],t.formatters={};function e(f){let g=0;for(let $=0;$<f.length;$++)g=(g<<5)-g+f.charCodeAt($),g|=0;return t.colors[Math.abs(g)%t.colors.length]}t.selectColor=e;function t(f){let g,$=null,S,E;function v(...T){if(!v.enabled)return;const I=v,A=Number(new Date),P=A-(g||A);I.diff=P,I.prev=g,I.curr=A,g=A,T[0]=t.coerce(T[0]),typeof T[0]!="string"&&T.unshift("%O");let x=0;T[0]=T[0].replace(/%([a-zA-Z%])/g,(C,k)=>{if(C==="%%")return"%";x++;const N=t.formatters[k];if(typeof N=="function"){const L=T[x];C=N.call(I,L),T.splice(x,1),x--}return C}),t.formatArgs.call(I,T),(I.log||t.log).apply(I,T)}return v.namespace=f,v.useColors=t.useColors(),v.color=t.selectColor(f),v.extend=n,v.destroy=t.destroy,Object.defineProperty(v,"enabled",{enumerable:!0,configurable:!1,get:()=>$!==null?$:(S!==t.namespaces&&(S=t.namespaces,E=t.enabled(f)),E),set:T=>{$=T}}),typeof t.init=="function"&&t.init(v),v}function n(f,g){const $=t(this.namespace+(typeof g>"u"?":":g)+f);return $.log=this.log,$}function i(f){t.save(f),t.namespaces=f,t.names=[],t.skips=[];let g;const $=(typeof f=="string"?f:"").split(/[\s,]+/),S=$.length;for(g=0;g<S;g++)$[g]&&(f=$[g].replace(/\*/g,".*?"),f[0]==="-"?t.skips.push(new RegExp("^"+f.slice(1)+"$")):t.names.push(new RegExp("^"+f+"$")))}function o(){const f=[...t.names.map(c),...t.skips.map(c).map(g=>"-"+g)].join(",");return t.enable(""),f}function a(f){if(f[f.length-1]==="*")return!0;let g,$;for(g=0,$=t.skips.length;g<$;g++)if(t.skips[g].test(f))return!1;for(g=0,$=t.names.length;g<$;g++)if(t.names[g].test(f))return!0;return!1}function c(f){return f.toString().substring(2,f.toString().length-2).replace(/\.\*\?$/,"*")}function l(f){return f instanceof Error?f.stack||f.message:f}function u(){console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.")}return t.enable(t.load()),t}var common$1=setup$1;(function(r,e){var t={};e.formatArgs=i,e.save=o,e.load=a,e.useColors=n,e.storage=c(),e.destroy=(()=>{let u=!1;return()=>{u||(u=!0,console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`."))}})(),e.colors=["#0000CC","#0000FF","#0033CC","#0033FF","#0066CC","#0066FF","#0099CC","#0099FF","#00CC00","#00CC33","#00CC66","#00CC99","#00CCCC","#00CCFF","#3300CC","#3300FF","#3333CC","#3333FF","#3366CC","#3366FF","#3399CC","#3399FF","#33CC00","#33CC33","#33CC66","#33CC99","#33CCCC","#33CCFF","#6600CC","#6600FF","#6633CC","#6633FF","#66CC00","#66CC33","#9900CC","#9900FF","#9933CC","#9933FF","#99CC00","#99CC33","#CC0000","#CC0033","#CC0066","#CC0099","#CC00CC","#CC00FF","#CC3300","#CC3333","#CC3366","#CC3399","#CC33CC","#CC33FF","#CC6600","#CC6633","#CC9900","#CC9933","#CCCC00","#CCCC33","#FF0000","#FF0033","#FF0066","#FF0099","#FF00CC","#FF00FF","#FF3300","#FF3333","#FF3366","#FF3399","#FF33CC","#FF33FF","#FF6600","#FF6633","#FF9900","#FF9933","#FFCC00","#FFCC33"];function n(){return typeof window<"u"&&window.process&&(window.process.type==="renderer"||window.process.__nwjs)?!0:typeof navigator<"u"&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/)?!1:typeof document<"u"&&document.documentElement&&document.documentElement.style&&document.documentElement.style.WebkitAppearance||typeof window<"u"&&window.console&&(window.console.firebug||window.console.exception&&window.console.table)||typeof navigator<"u"&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/)&&parseInt(RegExp.$1,10)>=31||typeof navigator<"u"&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/)}function i(u){if(u[0]=(this.useColors?"%c":"")+this.namespace+(this.useColors?" %c":" ")+u[0]+(this.useColors?"%c ":" ")+"+"+r.exports.humanize(this.diff),!this.useColors)return;const f="color: "+this.color;u.splice(1,0,f,"color: inherit");let g=0,$=0;u[0].replace(/%[a-zA-Z%]/g,S=>{S!=="%%"&&(g++,S==="%c"&&($=g))}),u.splice($,0,f)}e.log=console.debug||console.log||(()=>{});function o(u){try{u?e.storage.setItem("debug",u):e.storage.removeItem("debug")}catch{}}function a(){let u;try{u=e.storage.getItem("debug")}catch{}return!u&&typeof process<"u"&&"env"in process&&(u=t.DEBUG),u}function c(){try{return localStorage}catch{}}r.exports=common$1(e);const{formatters:l}=r.exports;l.j=function(u){try{return JSON.stringify(u)}catch(f){return"[UnexpectedJSONParseError]: "+f.message}}})(browser$4,browser$4.exports);var browserExports$1=browser$4.exports;const debug$1=getDefaultExportFromCjs(browserExports$1);debug$1.formatters.b=r=>r==null?"undefined":base58btc$4.baseEncode(r);debug$1.formatters.t=r=>r==null?"undefined":base32$5.baseEncode(r);debug$1.formatters.m=r=>r==null?"undefined":base64$6.baseEncode(r);debug$1.formatters.p=r=>r==null?"undefined":r.toString();debug$1.formatters.c=r=>r==null?"undefined":r.toString();debug$1.formatters.k=r=>r==null?"undefined":r.toString();debug$1.formatters.a=r=>r==null?"undefined":r.toString();function createDisabledLogger$1(r){const e=()=>{};return e.enabled=!1,e.color="",e.diff=0,e.log=()=>{},e.namespace=r,e.destroy=()=>!0,e.extend=()=>e,e}function logger$2(r){let e=createDisabledLogger$1(`${r}:trace`);return debug$1.enabled(`${r}:trace`)&&debug$1.names.map(t=>t.toString()).find(t=>t.includes(":trace"))!=null&&(e=debug$1(`${r}:trace`)),Object.assign(debug$1(r),{error:debug$1(`${r}:error`),trace:e})}function equals$4(r,e){if(r===e)return!0;if(r.byteLength!==e.byteLength)return!1;for(let t=0;t<r.byteLength;t++)if(r[t]!==e[t])return!1;return!0}class WantListEntry{constructor(e,t,n){_(this,"_refCounter");_(this,"cid");_(this,"priority");_(this,"wantType");this._refCounter=1,this.cid=e,this.priority=t??1,this.wantType=n}inc(){this._refCounter+=1}dec(){this._refCounter=Math.max(0,this._refCounter-1)}hasRefs(){return this._refCounter>0}get[Symbol.toStringTag](){return`WantlistEntry <key: ${this.cid.toString(base58btc$4)}, priority: ${this.priority}, refs: ${this._refCounter}>`}equals(e){return this._refCounter===e._refCounter&&this.cid.equals(e.cid)&&this.priority===e.priority&&this.wantType===e.wantType}}class BitswapMessageEntry{constructor(e,t,n,i,o){_(this,"entry");_(this,"cancel");_(this,"sendDontHave");this.entry=new WantListEntry(e,t,n),this.cancel=!!i,this.sendDontHave=!!o}get cid(){return this.entry.cid}set cid(e){this.entry.cid=e}get priority(){return this.entry.priority}set priority(e){this.entry.priority=e}get wantType(){return this.entry.wantType}set wantType(e){this.entry.wantType=e}get[Symbol.toStringTag](){return`BitswapMessageEntry ${this.cid.toString(base58btc$4)} <cancel: ${this.cancel}, priority: ${this.priority}>`}equals(e){return this.cancel===e.cancel&&this.sendDontHave===e.sendDontHave&&this.wantType===e.wantType&&this.entry.equals(e.entry)}}const logger$1=(r,e)=>{const t=["bitswap"];return e!=null&&t.push(e),r!=null&&t.push(`${r.toString().slice(0,8)}`),logger$2(t.join(":"))},isMapEqual=(r,e)=>{if(r.size!==e.size)return!1;for(const[t,n]of r){const i=e.get(t);if(i===void 0||n instanceof Uint8Array&&i instanceof Uint8Array&&!equals$4(n,i)||n instanceof BitswapMessageEntry&&i instanceof BitswapMessageEntry&&!n.equals(i))return!1}return!0};var encode_1$2=encode$f,MSB$8=128,REST$8=127,MSBALL$2=~REST$8,INT$2=Math.pow(2,31);function encode$f(r,e,t){if(Number.MAX_SAFE_INTEGER&&r>Number.MAX_SAFE_INTEGER)throw encode$f.bytes=0,new RangeError("Could not encode varint");e=e||[],t=t||0;for(var n=t;r>=INT$2;)e[t++]=r&255|MSB$8,r/=128;for(;r&MSBALL$2;)e[t++]=r&255|MSB$8,r>>>=7;return e[t]=r|0,encode$f.bytes=t-n+1,e}var decode$j=read$4,MSB$7=128,REST$7=127;function read$4(r,n){var t=0,n=n||0,i=0,o=n,a,c=r.length;do{if(o>=c||i>49)throw read$4.bytes=0,new RangeError("Could not decode varint");a=r[o++],t+=i<28?(a&REST$7)<<i:(a&REST$7)*Math.pow(2,i),i+=7}while(a>=MSB$7);return read$4.bytes=o-n,t}var N1$4=Math.pow(2,7),N2$4=Math.pow(2,14),N3$4=Math.pow(2,21),N4$4=Math.pow(2,28),N5$4=Math.pow(2,35),N6$4=Math.pow(2,42),N7$4=Math.pow(2,49),N8$2=Math.pow(2,56),N9$2=Math.pow(2,63),length$3=function(r){return r<N1$4?1:r<N2$4?2:r<N3$4?3:r<N4$4?4:r<N5$4?5:r<N6$4?6:r<N7$4?7:r<N8$2?8:r<N9$2?9:10},varint$6={encode:encode_1$2,decode:decode$j,encodingLength:length$3};const index=getDefaultExportFromCjs(varint$6);function varintEncoder(r){let e=new Uint8Array(r.reduce((n,i)=>n+index.encodingLength(i),0)),t=0;for(const n of r)e=varint$6.encode(n,e,t),t+=index.encodingLength(n);return e}var minimal$1={},aspromise=asPromise;function asPromise(r,e){for(var t=new Array(arguments.length-1),n=0,i=2,o=!0;i<arguments.length;)t[n++]=arguments[i++];return new Promise(function(c,l){t[n]=function(f){if(o)if(o=!1,f)l(f);else{for(var g=new Array(arguments.length-1),$=0;$<g.length;)g[$++]=arguments[$];c.apply(null,g)}};try{r.apply(e||null,t)}catch(u){o&&(o=!1,l(u))}})}var base64$5={};(function(r){var e=r;e.length=function(c){var l=c.length;if(!l)return 0;for(var u=0;--l%4>1&&c.charAt(l)==="=";)++u;return Math.ceil(c.length*3)/4-u};for(var t=new Array(64),n=new Array(123),i=0;i<64;)n[t[i]=i<26?i+65:i<52?i+71:i<62?i-4:i-59|43]=i++;e.encode=function(c,l,u){for(var f=null,g=[],$=0,S=0,E;l<u;){var v=c[l++];switch(S){case 0:g[$++]=t[v>>2],E=(v&3)<<4,S=1;break;case 1:g[$++]=t[E|v>>4],E=(v&15)<<2,S=2;break;case 2:g[$++]=t[E|v>>6],g[$++]=t[v&63],S=0;break}$>8191&&((f||(f=[])).push(String.fromCharCode.apply(String,g)),$=0)}return S&&(g[$++]=t[E],g[$++]=61,S===1&&(g[$++]=61)),f?($&&f.push(String.fromCharCode.apply(String,g.slice(0,$))),f.join("")):String.fromCharCode.apply(String,g.slice(0,$))};var o="invalid encoding";e.decode=function(c,l,u){for(var f=u,g=0,$,S=0;S<c.length;){var E=c.charCodeAt(S++);if(E===61&&g>1)break;if((E=n[E])===void 0)throw Error(o);switch(g){case 0:$=E,g=1;break;case 1:l[u++]=$<<2|(E&48)>>4,$=E,g=2;break;case 2:l[u++]=($&15)<<4|(E&60)>>2,$=E,g=3;break;case 3:l[u++]=($&3)<<6|E,g=0;break}}if(g===1)throw Error(o);return u-f},e.test=function(c){return/^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(c)}})(base64$5);var eventemitter=EventEmitter$5;function EventEmitter$5(){this._listeners={}}EventEmitter$5.prototype.on=function(e,t,n){return(this._listeners[e]||(this._listeners[e]=[])).push({fn:t,ctx:n||this}),this};EventEmitter$5.prototype.off=function(e,t){if(e===void 0)this._listeners={};else if(t===void 0)this._listeners[e]=[];else for(var n=this._listeners[e],i=0;i<n.length;)n[i].fn===t?n.splice(i,1):++i;return this};EventEmitter$5.prototype.emit=function(e){var t=this._listeners[e];if(t){for(var n=[],i=1;i<arguments.length;)n.push(arguments[i++]);for(i=0;i<t.length;)t[i].fn.apply(t[i++].ctx,n)}return this};var float=factory(factory);function factory(r){return typeof Float32Array<"u"?function(){var e=new Float32Array([-0]),t=new Uint8Array(e.buffer),n=t[3]===128;function i(l,u,f){e[0]=l,u[f]=t[0],u[f+1]=t[1],u[f+2]=t[2],u[f+3]=t[3]}function o(l,u,f){e[0]=l,u[f]=t[3],u[f+1]=t[2],u[f+2]=t[1],u[f+3]=t[0]}r.writeFloatLE=n?i:o,r.writeFloatBE=n?o:i;function a(l,u){return t[0]=l[u],t[1]=l[u+1],t[2]=l[u+2],t[3]=l[u+3],e[0]}function c(l,u){return t[3]=l[u],t[2]=l[u+1],t[1]=l[u+2],t[0]=l[u+3],e[0]}r.readFloatLE=n?a:c,r.readFloatBE=n?c:a}():function(){function e(n,i,o,a){var c=i<0?1:0;if(c&&(i=-i),i===0)n(1/i>0?0:2147483648,o,a);else if(isNaN(i))n(2143289344,o,a);else if(i>34028234663852886e22)n((c<<31|2139095040)>>>0,o,a);else if(i<11754943508222875e-54)n((c<<31|Math.round(i/1401298464324817e-60))>>>0,o,a);else{var l=Math.floor(Math.log(i)/Math.LN2),u=Math.round(i*Math.pow(2,-l)*8388608)&8388607;n((c<<31|l+127<<23|u)>>>0,o,a)}}r.writeFloatLE=e.bind(null,writeUintLE),r.writeFloatBE=e.bind(null,writeUintBE);function t(n,i,o){var a=n(i,o),c=(a>>31)*2+1,l=a>>>23&255,u=a&8388607;return l===255?u?NaN:c*(1/0):l===0?c*1401298464324817e-60*u:c*Math.pow(2,l-150)*(u+8388608)}r.readFloatLE=t.bind(null,readUintLE),r.readFloatBE=t.bind(null,readUintBE)}(),typeof Float64Array<"u"?function(){var e=new Float64Array([-0]),t=new Uint8Array(e.buffer),n=t[7]===128;function i(l,u,f){e[0]=l,u[f]=t[0],u[f+1]=t[1],u[f+2]=t[2],u[f+3]=t[3],u[f+4]=t[4],u[f+5]=t[5],u[f+6]=t[6],u[f+7]=t[7]}function o(l,u,f){e[0]=l,u[f]=t[7],u[f+1]=t[6],u[f+2]=t[5],u[f+3]=t[4],u[f+4]=t[3],u[f+5]=t[2],u[f+6]=t[1],u[f+7]=t[0]}r.writeDoubleLE=n?i:o,r.writeDoubleBE=n?o:i;function a(l,u){return t[0]=l[u],t[1]=l[u+1],t[2]=l[u+2],t[3]=l[u+3],t[4]=l[u+4],t[5]=l[u+5],t[6]=l[u+6],t[7]=l[u+7],e[0]}function c(l,u){return t[7]=l[u],t[6]=l[u+1],t[5]=l[u+2],t[4]=l[u+3],t[3]=l[u+4],t[2]=l[u+5],t[1]=l[u+6],t[0]=l[u+7],e[0]}r.readDoubleLE=n?a:c,r.readDoubleBE=n?c:a}():function(){function e(n,i,o,a,c,l){var u=a<0?1:0;if(u&&(a=-a),a===0)n(0,c,l+i),n(1/a>0?0:2147483648,c,l+o);else if(isNaN(a))n(0,c,l+i),n(2146959360,c,l+o);else if(a>17976931348623157e292)n(0,c,l+i),n((u<<31|2146435072)>>>0,c,l+o);else{var f;if(a<22250738585072014e-324)f=a/5e-324,n(f>>>0,c,l+i),n((u<<31|f/4294967296)>>>0,c,l+o);else{var g=Math.floor(Math.log(a)/Math.LN2);g===1024&&(g=1023),f=a*Math.pow(2,-g),n(f*4503599627370496>>>0,c,l+i),n((u<<31|g+1023<<20|f*1048576&1048575)>>>0,c,l+o)}}}r.writeDoubleLE=e.bind(null,writeUintLE,0,4),r.writeDoubleBE=e.bind(null,writeUintBE,4,0);function t(n,i,o,a,c){var l=n(a,c+i),u=n(a,c+o),f=(u>>31)*2+1,g=u>>>20&2047,$=4294967296*(u&1048575)+l;return g===2047?$?NaN:f*(1/0):g===0?f*5e-324*$:f*Math.pow(2,g-1075)*($+4503599627370496)}r.readDoubleLE=t.bind(null,readUintLE,0,4),r.readDoubleBE=t.bind(null,readUintBE,4,0)}(),r}function writeUintLE(r,e,t){e[t]=r&255,e[t+1]=r>>>8&255,e[t+2]=r>>>16&255,e[t+3]=r>>>24}function writeUintBE(r,e,t){e[t]=r>>>24,e[t+1]=r>>>16&255,e[t+2]=r>>>8&255,e[t+3]=r&255}function readUintLE(r,e){return(r[e]|r[e+1]<<8|r[e+2]<<16|r[e+3]<<24)>>>0}function readUintBE(r,e){return(r[e]<<24|r[e+1]<<16|r[e+2]<<8|r[e+3])>>>0}var inquire_1=inquire;function inquire(moduleName){try{var mod=eval("quire".replace(/^/,"re"))(moduleName);if(mod&&(mod.length||Object.keys(mod).length))return mod}catch(r){}return null}var utf8$2={};(function(r){var e=r;e.length=function(n){for(var i=0,o=0,a=0;a<n.length;++a)o=n.charCodeAt(a),o<128?i+=1:o<2048?i+=2:(o&64512)===55296&&(n.charCodeAt(a+1)&64512)===56320?(++a,i+=4):i+=3;return i},e.read=function(n,i,o){var a=o-i;if(a<1)return"";for(var c=null,l=[],u=0,f;i<o;)f=n[i++],f<128?l[u++]=f:f>191&&f<224?l[u++]=(f&31)<<6|n[i++]&63:f>239&&f<365?(f=((f&7)<<18|(n[i++]&63)<<12|(n[i++]&63)<<6|n[i++]&63)-65536,l[u++]=55296+(f>>10),l[u++]=56320+(f&1023)):l[u++]=(f&15)<<12|(n[i++]&63)<<6|n[i++]&63,u>8191&&((c||(c=[])).push(String.fromCharCode.apply(String,l)),u=0);return c?(u&&c.push(String.fromCharCode.apply(String,l.slice(0,u))),c.join("")):String.fromCharCode.apply(String,l.slice(0,u))},e.write=function(n,i,o){for(var a=o,c,l,u=0;u<n.length;++u)c=n.charCodeAt(u),c<128?i[o++]=c:c<2048?(i[o++]=c>>6|192,i[o++]=c&63|128):(c&64512)===55296&&((l=n.charCodeAt(u+1))&64512)===56320?(c=65536+((c&1023)<<10)+(l&1023),++u,i[o++]=c>>18|240,i[o++]=c>>12&63|128,i[o++]=c>>6&63|128,i[o++]=c&63|128):(i[o++]=c>>12|224,i[o++]=c>>6&63|128,i[o++]=c&63|128);return o-a}})(utf8$2);var pool_1=pool;function pool(r,e,t){var n=t||8192,i=n>>>1,o=null,a=n;return function(l){if(l<1||l>i)return r(l);a+l>n&&(o=r(n),a=0);var u=e.call(o,a,a+=l);return a&7&&(a=(a|7)+1),u}}var longbits,hasRequiredLongbits;function requireLongbits(){if(hasRequiredLongbits)return longbits;hasRequiredLongbits=1,longbits=e;var r=requireMinimal();function e(o,a){this.lo=o>>>0,this.hi=a>>>0}var t=e.zero=new e(0,0);t.toNumber=function(){return 0},t.zzEncode=t.zzDecode=function(){return this},t.length=function(){return 1};var n=e.zeroHash="\0\0\0\0\0\0\0\0";e.fromNumber=function(a){if(a===0)return t;var c=a<0;c&&(a=-a);var l=a>>>0,u=(a-l)/4294967296>>>0;return c&&(u=~u>>>0,l=~l>>>0,++l>4294967295&&(l=0,++u>4294967295&&(u=0))),new e(l,u)},e.from=function(a){if(typeof a=="number")return e.fromNumber(a);if(r.isString(a))if(r.Long)a=r.Long.fromString(a);else return e.fromNumber(parseInt(a,10));return a.low||a.high?new e(a.low>>>0,a.high>>>0):t},e.prototype.toNumber=function(a){if(!a&&this.hi>>>31){var c=~this.lo+1>>>0,l=~this.hi>>>0;return c||(l=l+1>>>0),-(c+l*4294967296)}return this.lo+this.hi*4294967296},e.prototype.toLong=function(a){return r.Long?new r.Long(this.lo|0,this.hi|0,!!a):{low:this.lo|0,high:this.hi|0,unsigned:!!a}};var i=String.prototype.charCodeAt;return e.fromHash=function(a){return a===n?t:new e((i.call(a,0)|i.call(a,1)<<8|i.call(a,2)<<16|i.call(a,3)<<24)>>>0,(i.call(a,4)|i.call(a,5)<<8|i.call(a,6)<<16|i.call(a,7)<<24)>>>0)},e.prototype.toHash=function(){return String.fromCharCode(this.lo&255,this.lo>>>8&255,this.lo>>>16&255,this.lo>>>24,this.hi&255,this.hi>>>8&255,this.hi>>>16&255,this.hi>>>24)},e.prototype.zzEncode=function(){var a=this.hi>>31;return this.hi=((this.hi<<1|this.lo>>>31)^a)>>>0,this.lo=(this.lo<<1^a)>>>0,this},e.prototype.zzDecode=function(){var a=-(this.lo&1);return this.lo=((this.lo>>>1|this.hi<<31)^a)>>>0,this.hi=(this.hi>>>1^a)>>>0,this},e.prototype.length=function(){var a=this.lo,c=(this.lo>>>28|this.hi<<4)>>>0,l=this.hi>>>24;return l===0?c===0?a<16384?a<128?1:2:a<2097152?3:4:c<16384?c<128?5:6:c<2097152?7:8:l<128?9:10},longbits}var hasRequiredMinimal;function requireMinimal(){return hasRequiredMinimal||(hasRequiredMinimal=1,function(r){var e=r;e.asPromise=aspromise,e.base64=base64$5,e.EventEmitter=eventemitter,e.float=float,e.inquire=inquire_1,e.utf8=utf8$2,e.pool=pool_1,e.LongBits=requireLongbits(),e.isNode=!!(typeof commonjsGlobal<"u"&&commonjsGlobal&&commonjsGlobal.process&&commonjsGlobal.process.versions&&commonjsGlobal.process.versions.node),e.global=e.isNode&&commonjsGlobal||typeof window<"u"&&window||typeof self<"u"&&self||commonjsGlobal,e.emptyArray=Object.freeze?Object.freeze([]):[],e.emptyObject=Object.freeze?Object.freeze({}):{},e.isInteger=Number.isInteger||function(o){return typeof o=="number"&&isFinite(o)&&Math.floor(o)===o},e.isString=function(o){return typeof o=="string"||o instanceof String},e.isObject=function(o){return o&&typeof o=="object"},e.isset=e.isSet=function(o,a){var c=o[a];return c!=null&&o.hasOwnProperty(a)?typeof c!="object"||(Array.isArray(c)?c.length:Object.keys(c).length)>0:!1},e.Buffer=function(){try{var i=e.inquire("buffer").Buffer;return i.prototype.utf8Write?i:null}catch{return null}}(),e._Buffer_from=null,e._Buffer_allocUnsafe=null,e.newBuffer=function(o){return typeof o=="number"?e.Buffer?e._Buffer_allocUnsafe(o):new e.Array(o):e.Buffer?e._Buffer_from(o):typeof Uint8Array>"u"?o:new Uint8Array(o)},e.Array=typeof Uint8Array<"u"?Uint8Array:Array,e.Long=e.global.dcodeIO&&e.global.dcodeIO.Long||e.global.Long||e.inquire("long"),e.key2Re=/^true|false|0|1$/,e.key32Re=/^-?(?:0|[1-9][0-9]*)$/,e.key64Re=/^(?:[\\x00-\\xff]{8}|-?(?:0|[1-9][0-9]*))$/,e.longToHash=function(o){return o?e.LongBits.from(o).toHash():e.LongBits.zeroHash},e.longFromHash=function(o,a){var c=e.LongBits.fromHash(o);return e.Long?e.Long.fromBits(c.lo,c.hi,a):c.toNumber(!!a)};function t(i,o,a){for(var c=Object.keys(o),l=0;l<c.length;++l)(i[c[l]]===void 0||!a)&&(i[c[l]]=o[c[l]]);return i}e.merge=t,e.lcFirst=function(o){return o.charAt(0).toLowerCase()+o.substring(1)};function n(i){function o(a,c){if(!(this instanceof o))return new o(a,c);Object.defineProperty(this,"message",{get:function(){return a}}),Error.captureStackTrace?Error.captureStackTrace(this,o):Object.defineProperty(this,"stack",{value:new Error().stack||""}),c&&t(this,c)}return o.prototype=Object.create(Error.prototype,{constructor:{value:o,writable:!0,enumerable:!1,configurable:!0},name:{get:function(){return i},set:void 0,enumerable:!1,configurable:!0},toString:{value:function(){return this.name+": "+this.message},writable:!0,enumerable:!1,configurable:!0}}),o}e.newError=n,e.ProtocolError=n("ProtocolError"),e.oneOfGetter=function(o){for(var a={},c=0;c<o.length;++c)a[o[c]]=1;return function(){for(var l=Object.keys(this),u=l.length-1;u>-1;--u)if(a[l[u]]===1&&this[l[u]]!==void 0&&this[l[u]]!==null)return l[u]}},e.oneOfSetter=function(o){return function(a){for(var c=0;c<o.length;++c)o[c]!==a&&delete this[o[c]]}},e.toJSONOptions={longs:String,enums:String,bytes:String,json:!0},e._configure=function(){var i=e.Buffer;if(!i){e._Buffer_from=e._Buffer_allocUnsafe=null;return}e._Buffer_from=i.from!==Uint8Array.from&&i.from||function(a,c){return new i(a,c)},e._Buffer_allocUnsafe=i.allocUnsafe||function(a){return new i(a)}}}(minimal$1)),minimal$1}var reader$2=Reader$1,util$9=requireMinimal(),BufferReader$1,LongBits$1=util$9.LongBits,utf8$1=util$9.utf8;function indexOutOfRange(r,e){return RangeError("index out of range: "+r.pos+" + "+(e||1)+" > "+r.len)}function Reader$1(r){this.buf=r,this.pos=0,this.len=r.length}var create_array=typeof Uint8Array<"u"?function r(e){if(e instanceof Uint8Array||Array.isArray(e))return new Reader$1(e);throw Error("illegal buffer")}:function r(e){if(Array.isArray(e))return new Reader$1(e);throw Error("illegal buffer")},create$b=function r(){return util$9.Buffer?function(t){return(Reader$1.create=function(i){return util$9.Buffer.isBuffer(i)?new BufferReader$1(i):create_array(i)})(t)}:create_array};Reader$1.create=create$b();Reader$1.prototype._slice=util$9.Array.prototype.subarray||util$9.Array.prototype.slice;Reader$1.prototype.uint32=function r(){var e=4294967295;return function(){if(e=(this.buf[this.pos]&127)>>>0,this.buf[this.pos++]<128||(e=(e|(this.buf[this.pos]&127)<<7)>>>0,this.buf[this.pos++]<128)||(e=(e|(this.buf[this.pos]&127)<<14)>>>0,this.buf[this.pos++]<128)||(e=(e|(this.buf[this.pos]&127)<<21)>>>0,this.buf[this.pos++]<128)||(e=(e|(this.buf[this.pos]&15)<<28)>>>0,this.buf[this.pos++]<128))return e;if((this.pos+=5)>this.len)throw this.pos=this.len,indexOutOfRange(this,10);return e}}();Reader$1.prototype.int32=function r(){return this.uint32()|0};Reader$1.prototype.sint32=function r(){var e=this.uint32();return e>>>1^-(e&1)|0};function readLongVarint(){var r=new LongBits$1(0,0),e=0;if(this.len-this.pos>4){for(;e<4;++e)if(r.lo=(r.lo|(this.buf[this.pos]&127)<<e*7)>>>0,this.buf[this.pos++]<128)return r;if(r.lo=(r.lo|(this.buf[this.pos]&127)<<28)>>>0,r.hi=(r.hi|(this.buf[this.pos]&127)>>4)>>>0,this.buf[this.pos++]<128)return r;e=0}else{for(;e<3;++e){if(this.pos>=this.len)throw indexOutOfRange(this);if(r.lo=(r.lo|(this.buf[this.pos]&127)<<e*7)>>>0,this.buf[this.pos++]<128)return r}return r.lo=(r.lo|(this.buf[this.pos++]&127)<<e*7)>>>0,r}if(this.len-this.pos>4){for(;e<5;++e)if(r.hi=(r.hi|(this.buf[this.pos]&127)<<e*7+3)>>>0,this.buf[this.pos++]<128)return r}else for(;e<5;++e){if(this.pos>=this.len)throw indexOutOfRange(this);if(r.hi=(r.hi|(this.buf[this.pos]&127)<<e*7+3)>>>0,this.buf[this.pos++]<128)return r}throw Error("invalid varint encoding")}Reader$1.prototype.bool=function r(){return this.uint32()!==0};function readFixed32_end(r,e){return(r[e-4]|r[e-3]<<8|r[e-2]<<16|r[e-1]<<24)>>>0}Reader$1.prototype.fixed32=function r(){if(this.pos+4>this.len)throw indexOutOfRange(this,4);return readFixed32_end(this.buf,this.pos+=4)};Reader$1.prototype.sfixed32=function r(){if(this.pos+4>this.len)throw indexOutOfRange(this,4);return readFixed32_end(this.buf,this.pos+=4)|0};function readFixed64(){if(this.pos+8>this.len)throw indexOutOfRange(this,8);return new LongBits$1(readFixed32_end(this.buf,this.pos+=4),readFixed32_end(this.buf,this.pos+=4))}Reader$1.prototype.float=function r(){if(this.pos+4>this.len)throw indexOutOfRange(this,4);var e=util$9.float.readFloatLE(this.buf,this.pos);return this.pos+=4,e};Reader$1.prototype.double=function r(){if(this.pos+8>this.len)throw indexOutOfRange(this,4);var e=util$9.float.readDoubleLE(this.buf,this.pos);return this.pos+=8,e};Reader$1.prototype.bytes=function r(){var e=this.uint32(),t=this.pos,n=this.pos+e;if(n>this.len)throw indexOutOfRange(this,e);if(this.pos+=e,Array.isArray(this.buf))return this.buf.slice(t,n);if(t===n){var i=util$9.Buffer;return i?i.alloc(0):new this.buf.constructor(0)}return this._slice.call(this.buf,t,n)};Reader$1.prototype.string=function r(){var e=this.bytes();return utf8$1.read(e,0,e.length)};Reader$1.prototype.skip=function r(e){if(typeof e=="number"){if(this.pos+e>this.len)throw indexOutOfRange(this,e);this.pos+=e}else do if(this.pos>=this.len)throw indexOutOfRange(this);while(this.buf[this.pos++]&128);return this};Reader$1.prototype.skipType=function(r){switch(r){case 0:this.skip();break;case 1:this.skip(8);break;case 2:this.skip(this.uint32());break;case 3:for(;(r=this.uint32()&7)!==4;)this.skipType(r);break;case 5:this.skip(4);break;default:throw Error("invalid wire type "+r+" at offset "+this.pos)}return this};Reader$1._configure=function(r){BufferReader$1=r,Reader$1.create=create$b(),BufferReader$1._configure();var e=util$9.Long?"toLong":"toNumber";util$9.merge(Reader$1.prototype,{int64:function(){return readLongVarint.call(this)[e](!1)},uint64:function(){return readLongVarint.call(this)[e](!0)},sint64:function(){return readLongVarint.call(this).zzDecode()[e](!1)},fixed64:function(){return readFixed64.call(this)[e](!0)},sfixed64:function(){return readFixed64.call(this)[e](!1)}})};const ReaderClass=getDefaultExportFromCjs(reader$2);var reader_buffer=BufferReader,Reader=reader$2;(BufferReader.prototype=Object.create(Reader.prototype)).constructor=BufferReader;var util$8=requireMinimal();function BufferReader(r){Reader.call(this,r)}BufferReader._configure=function(){util$8.Buffer&&(BufferReader.prototype._slice=util$8.Buffer.prototype.slice)};BufferReader.prototype.string=function r(){var e=this.uint32();return this.buf.utf8Slice?this.buf.utf8Slice(this.pos,this.pos=Math.min(this.pos+e,this.len)):this.buf.toString("utf-8",this.pos,this.pos=Math.min(this.pos+e,this.len))};BufferReader._configure();const ReaderBufferClass=getDefaultExportFromCjs(reader_buffer);var minimalExports=requireMinimal();const util$7=getDefaultExportFromCjs(minimalExports);var writer$1=Writer$1,util$6=requireMinimal(),BufferWriter$1,LongBits=util$6.LongBits,base64$4=util$6.base64,utf8=util$6.utf8;function Op(r,e,t){this.fn=r,this.len=e,this.next=void 0,this.val=t}function noop(){}function State(r){this.head=r.head,this.tail=r.tail,this.len=r.len,this.next=r.states}function Writer$1(){this.len=0,this.head=new Op(noop,0,0),this.tail=this.head,this.states=null}var create$a=function r(){return util$6.Buffer?function(){return(Writer$1.create=function(){return new BufferWriter$1})()}:function(){return new Writer$1}};Writer$1.create=create$a();Writer$1.alloc=function r(e){return new util$6.Array(e)};util$6.Array!==Array&&(Writer$1.alloc=util$6.pool(Writer$1.alloc,util$6.Array.prototype.subarray));Writer$1.prototype._push=function r(e,t,n){return this.tail=this.tail.next=new Op(e,t,n),this.len+=t,this};function writeByte(r,e,t){e[t]=r&255}function writeVarint32(r,e,t){for(;r>127;)e[t++]=r&127|128,r>>>=7;e[t]=r}function VarintOp(r,e){this.len=r,this.next=void 0,this.val=e}VarintOp.prototype=Object.create(Op.prototype);VarintOp.prototype.fn=writeVarint32;Writer$1.prototype.uint32=function r(e){return this.len+=(this.tail=this.tail.next=new VarintOp((e=e>>>0)<128?1:e<16384?2:e<2097152?3:e<268435456?4:5,e)).len,this};Writer$1.prototype.int32=function r(e){return e<0?this._push(writeVarint64,10,LongBits.fromNumber(e)):this.uint32(e)};Writer$1.prototype.sint32=function r(e){return this.uint32((e<<1^e>>31)>>>0)};function writeVarint64(r,e,t){for(;r.hi;)e[t++]=r.lo&127|128,r.lo=(r.lo>>>7|r.hi<<25)>>>0,r.hi>>>=7;for(;r.lo>127;)e[t++]=r.lo&127|128,r.lo=r.lo>>>7;e[t++]=r.lo}Writer$1.prototype.uint64=function r(e){var t=LongBits.from(e);return this._push(writeVarint64,t.length(),t)};Writer$1.prototype.int64=Writer$1.prototype.uint64;Writer$1.prototype.sint64=function r(e){var t=LongBits.from(e).zzEncode();return this._push(writeVarint64,t.length(),t)};Writer$1.prototype.bool=function r(e){return this._push(writeByte,1,e?1:0)};function writeFixed32(r,e,t){e[t]=r&255,e[t+1]=r>>>8&255,e[t+2]=r>>>16&255,e[t+3]=r>>>24}Writer$1.prototype.fixed32=function r(e){return this._push(writeFixed32,4,e>>>0)};Writer$1.prototype.sfixed32=Writer$1.prototype.fixed32;Writer$1.prototype.fixed64=function r(e){var t=LongBits.from(e);return this._push(writeFixed32,4,t.lo)._push(writeFixed32,4,t.hi)};Writer$1.prototype.sfixed64=Writer$1.prototype.fixed64;Writer$1.prototype.float=function r(e){return this._push(util$6.float.writeFloatLE,4,e)};Writer$1.prototype.double=function r(e){return this._push(util$6.float.writeDoubleLE,8,e)};var writeBytes=util$6.Array.prototype.set?function r(e,t,n){t.set(e,n)}:function r(e,t,n){for(var i=0;i<e.length;++i)t[n+i]=e[i]};Writer$1.prototype.bytes=function r(e){var t=e.length>>>0;if(!t)return this._push(writeByte,1,0);if(util$6.isString(e)){var n=Writer$1.alloc(t=base64$4.length(e));base64$4.decode(e,n,0),e=n}return this.uint32(t)._push(writeBytes,t,e)};Writer$1.prototype.string=function r(e){var t=utf8.length(e);return t?this.uint32(t)._push(utf8.write,t,e):this._push(writeByte,1,0)};Writer$1.prototype.fork=function r(){return this.states=new State(this),this.head=this.tail=new Op(noop,0,0),this.len=0,this};Writer$1.prototype.reset=function r(){return this.states?(this.head=this.states.head,this.tail=this.states.tail,this.len=this.states.len,this.states=this.states.next):(this.head=this.tail=new Op(noop,0,0),this.len=0),this};Writer$1.prototype.ldelim=function r(){var e=this.head,t=this.tail,n=this.len;return this.reset().uint32(n),n&&(this.tail.next=e.next,this.tail=t,this.len+=n),this};Writer$1.prototype.finish=function r(){for(var e=this.head.next,t=this.constructor.alloc(this.len),n=0;e;)e.fn(e.val,t,n),n+=e.len,e=e.next;return t};Writer$1._configure=function(r){BufferWriter$1=r,Writer$1.create=create$a(),BufferWriter$1._configure()};const WriterClass=getDefaultExportFromCjs(writer$1);var writer_buffer=BufferWriter,Writer=writer$1;(BufferWriter.prototype=Object.create(Writer.prototype)).constructor=BufferWriter;var util$5=requireMinimal();function BufferWriter(){Writer.call(this)}BufferWriter._configure=function(){BufferWriter.alloc=util$5._Buffer_allocUnsafe,BufferWriter.writeBytesBuffer=util$5.Buffer&&util$5.Buffer.prototype instanceof Uint8Array&&util$5.Buffer.prototype.set.name==="set"?function(e,t,n){t.set(e,n)}:function(e,t,n){if(e.copy)e.copy(t,n,0,e.length);else for(var i=0;i<e.length;)t[n++]=e[i++]}};BufferWriter.prototype.bytes=function r(e){util$5.isString(e)&&(e=util$5._Buffer_from(e,"base64"));var t=e.length>>>0;return this.uint32(t),t&&this._push(BufferWriter.writeBytesBuffer,t,e),this};function writeStringBuffer(r,e,t){r.length<40?util$5.utf8.write(r,e,t):e.utf8Write?e.utf8Write(r,t):e.write(r,t)}BufferWriter.prototype.string=function r(e){var t=util$5.Buffer.byteLength(e);return this.uint32(t),t&&this._push(writeStringBuffer,t,e),this};BufferWriter._configure();const WriterBufferClass=getDefaultExportFromCjs(writer_buffer);function configure(){util$7._configure(),ReaderClass._configure(ReaderBufferClass),WriterClass._configure(WriterBufferClass)}configure();const methods=["uint64","int64","sint64","fixed64","sfixed64"];function patchReader(r){for(const e of methods){if(r[e]==null)continue;const t=r[e];r[e]=function(){return BigInt(t.call(this).toString())}}return r}function reader$1(r){return patchReader(new ReaderClass(r))}function patchWriter(r){for(const e of methods){if(r[e]==null)continue;const t=r[e];r[e]=function(n){return t.call(this,n.toString())}}return r}function writer(){return patchWriter(WriterClass.create())}function decodeMessage$1(r,e){const t=reader$1(r instanceof Uint8Array?r:r.subarray());return e.decode(t)}function encodeMessage(r,e){const t=writer();return e.encode(r,t,{lengthDelimited:!1}),t.finish()}var CODEC_TYPES;(function(r){r[r.VARINT=0]="VARINT",r[r.BIT64=1]="BIT64",r[r.LENGTH_DELIMITED=2]="LENGTH_DELIMITED",r[r.START_GROUP=3]="START_GROUP",r[r.END_GROUP=4]="END_GROUP",r[r.BIT32=5]="BIT32"})(CODEC_TYPES||(CODEC_TYPES={}));function createCodec$2(r,e,t,n){return{name:r,type:e,encode:t,decode:n}}function enumeration(r){function e(i){if(r[i.toString()]==null)throw new Error("Invalid enum value");return r[i]}const t=function(o,a){const c=e(o);a.int32(c)},n=function(o){const a=o.int32();return e(a)};return createCodec$2("enum",CODEC_TYPES.VARINT,t,n)}function message(r,e){return createCodec$2("message",CODEC_TYPES.LENGTH_DELIMITED,r,e)}var Message$5;(function(r){(function(i){let o;(function(l){l.Block="Block",l.Have="Have"})(o=i.WantType||(i.WantType={}));let a;(function(l){l[l.Block=0]="Block",l[l.Have=1]="Have"})(a||(a={})),function(l){l.codec=()=>enumeration(a)}(o=i.WantType||(i.WantType={})),function(l){let u;l.codec=()=>(u==null&&(u=message((f,g,$={})=>{$.lengthDelimited!==!1&&g.fork(),f.block!=null&&f.block.byteLength>0&&(g.uint32(10),g.bytes(f.block)),f.priority!=null&&f.priority!==0&&(g.uint32(16),g.int32(f.priority)),f.cancel!=null&&f.cancel!==!1&&(g.uint32(24),g.bool(f.cancel)),f.wantType!=null&&a[f.wantType]!==0&&(g.uint32(32),r.Wantlist.WantType.codec().encode(f.wantType,g)),f.sendDontHave!=null&&f.sendDontHave!==!1&&(g.uint32(40),g.bool(f.sendDontHave)),$.lengthDelimited!==!1&&g.ldelim()},(f,g)=>{const $={block:new Uint8Array(0),priority:0,cancel:!1,wantType:o.Block,sendDontHave:!1},S=g==null?f.len:f.pos+g;for(;f.pos<S;){const E=f.uint32();switch(E>>>3){case 1:$.block=f.bytes();break;case 2:$.priority=f.int32();break;case 3:$.cancel=f.bool();break;case 4:$.wantType=r.Wantlist.WantType.codec().decode(f);break;case 5:$.sendDontHave=f.bool();break;default:f.skipType(E&7);break}}return $})),u),l.encode=f=>encodeMessage(f,l.codec()),l.decode=f=>decodeMessage$1(f,l.codec())}(i.Entry||(i.Entry={}));let c;i.codec=()=>(c==null&&(c=message((l,u,f={})=>{if(f.lengthDelimited!==!1&&u.fork(),l.entries!=null)for(const g of l.entries)u.uint32(10),r.Wantlist.Entry.codec().encode(g,u);l.full!=null&&l.full!==!1&&(u.uint32(16),u.bool(l.full)),f.lengthDelimited!==!1&&u.ldelim()},(l,u)=>{const f={entries:[],full:!1},g=u==null?l.len:l.pos+u;for(;l.pos<g;){const $=l.uint32();switch($>>>3){case 1:f.entries.push(r.Wantlist.Entry.codec().decode(l,l.uint32()));break;case 2:f.full=l.bool();break;default:l.skipType($&7);break}}return f})),c),i.encode=l=>encodeMessage(l,i.codec()),i.decode=l=>decodeMessage$1(l,i.codec())})(r.Wantlist||(r.Wantlist={})),function(i){let o;i.codec=()=>(o==null&&(o=message((a,c,l={})=>{l.lengthDelimited!==!1&&c.fork(),a.prefix!=null&&a.prefix.byteLength>0&&(c.uint32(10),c.bytes(a.prefix)),a.data!=null&&a.data.byteLength>0&&(c.uint32(18),c.bytes(a.data)),l.lengthDelimited!==!1&&c.ldelim()},(a,c)=>{const l={prefix:new Uint8Array(0),data:new Uint8Array(0)},u=c==null?a.len:a.pos+c;for(;a.pos<u;){const f=a.uint32();switch(f>>>3){case 1:l.prefix=a.bytes();break;case 2:l.data=a.bytes();break;default:a.skipType(f&7);break}}return l})),o),i.encode=a=>encodeMessage(a,i.codec()),i.decode=a=>decodeMessage$1(a,i.codec())}(r.Block||(r.Block={}));let e;(function(i){i.Have="Have",i.DontHave="DontHave"})(e=r.BlockPresenceType||(r.BlockPresenceType={}));let t;(function(i){i[i.Have=0]="Have",i[i.DontHave=1]="DontHave"})(t||(t={})),function(i){i.codec=()=>enumeration(t)}(e=r.BlockPresenceType||(r.BlockPresenceType={})),function(i){let o;i.codec=()=>(o==null&&(o=message((a,c,l={})=>{l.lengthDelimited!==!1&&c.fork(),a.cid!=null&&a.cid.byteLength>0&&(c.uint32(10),c.bytes(a.cid)),a.type!=null&&t[a.type]!==0&&(c.uint32(16),r.BlockPresenceType.codec().encode(a.type,c)),l.lengthDelimited!==!1&&c.ldelim()},(a,c)=>{const l={cid:new Uint8Array(0),type:e.Have},u=c==null?a.len:a.pos+c;for(;a.pos<u;){const f=a.uint32();switch(f>>>3){case 1:l.cid=a.bytes();break;case 2:l.type=r.BlockPresenceType.codec().decode(a);break;default:a.skipType(f&7);break}}return l})),o),i.encode=a=>encodeMessage(a,i.codec()),i.decode=a=>decodeMessage$1(a,i.codec())}(r.BlockPresence||(r.BlockPresence={}));let n;r.codec=()=>(n==null&&(n=message((i,o,a={})=>{if(a.lengthDelimited!==!1&&o.fork(),i.wantlist!=null&&(o.uint32(10),r.Wantlist.codec().encode(i.wantlist,o)),i.blocks!=null)for(const c of i.blocks)o.uint32(18),o.bytes(c);if(i.payload!=null)for(const c of i.payload)o.uint32(26),r.Block.codec().encode(c,o);if(i.blockPresences!=null)for(const c of i.blockPresences)o.uint32(34),r.BlockPresence.codec().encode(c,o);i.pendingBytes!=null&&i.pendingBytes!==0&&(o.uint32(40),o.int32(i.pendingBytes)),a.lengthDelimited!==!1&&o.ldelim()},(i,o)=>{const a={blocks:[],payload:[],blockPresences:[],pendingBytes:0},c=o==null?i.len:i.pos+o;for(;i.pos<c;){const l=i.uint32();switch(l>>>3){case 1:a.wantlist=r.Wantlist.codec().decode(i,i.uint32());break;case 2:a.blocks.push(i.bytes());break;case 3:a.payload.push(r.Block.codec().decode(i,i.uint32()));break;case 4:a.blockPresences.push(r.BlockPresence.codec().decode(i,i.uint32()));break;case 5:a.pendingBytes=i.int32();break;default:i.skipType(l&7);break}}return a})),n),r.encode=i=>encodeMessage(i,r.codec()),r.decode=i=>decodeMessage$1(i,r.codec())})(Message$5||(Message$5={}));const be=class be{constructor(e){_(this,"full");_(this,"wantlist");_(this,"blocks");_(this,"blockPresences");_(this,"pendingBytes");this.full=e,this.wantlist=new Map,this.blocks=new Map,this.blockPresences=new Map,this.pendingBytes=0}get empty(){return this.blocks.size===0&&this.wantlist.size===0&&this.blockPresences.size===0}addEntry(e,t,n,i,o){n==null&&(n=be.WantType.Block);const a=e.toString(base58btc$4),c=this.wantlist.get(a);c!=null?(c.wantType===n&&(c.priority=t),i===!0&&(c.cancel=!!i),o===!0&&(c.sendDontHave=!!o),n===be.WantType.Block&&c.wantType===be.WantType.Have&&(c.wantType=n)):this.wantlist.set(a,new BitswapMessageEntry(e,t,n,i,o))}addBlock(e,t){const n=e.toString(base58btc$4);this.blocks.set(n,t)}addHave(e){const t=e.toString(base58btc$4);this.blockPresences.has(t)||this.blockPresences.set(t,be.BlockPresenceType.Have)}addDontHave(e){const t=e.toString(base58btc$4);this.blockPresences.has(t)||this.blockPresences.set(t,be.BlockPresenceType.DontHave)}cancel(e){const t=e.toString(base58btc$4);this.wantlist.delete(t),this.addEntry(e,0,be.WantType.Block,!0,!1)}setPendingBytes(e){this.pendingBytes=e}serializeToBitswap100(){return Message$5.encode({wantlist:{entries:Array.from(this.wantlist.values()).map(e=>({block:e.cid.bytes,priority:Number(e.priority),cancel:!!e.cancel,wantType:Message$5.Wantlist.WantType.Block,sendDontHave:!1})),full:!!this.full},blocks:Array.from(this.blocks.values())})}serializeToBitswap110(){const e={wantlist:{entries:Array.from(this.wantlist.values()).map(t=>({block:t.cid.bytes,priority:Number(t.priority),wantType:t.wantType,cancel:!!t.cancel,sendDontHave:!!t.sendDontHave})),full:!!this.full},blockPresences:[],payload:[],pendingBytes:this.pendingBytes,blocks:[]};for(const[t,n]of this.blocks.entries()){const i=CID$3.parse(t),o=i.version,a=i.code,c=i.multihash.code,l=i.multihash.digest.length,u=varintEncoder([o,a,c,l]);e.payload.push({prefix:u,data:n})}for(const[t,n]of this.blockPresences)e.blockPresences.push({cid:CID$3.parse(t).bytes,type:n});return this.pendingBytes>0&&(e.pendingBytes=this.pendingBytes),Message$5.encode(e)}equals(e){return!(this.full!==e.full||this.pendingBytes!==e.pendingBytes||!isMapEqual(this.wantlist,e.wantlist)||!isMapEqual(this.blocks,e.blocks)||!isMapEqual(this.blockPresences,e.blockPresences))}get[Symbol.toStringTag](){const e=Array.from(this.wantlist.keys()),t=Array.from(this.blocks.keys());return`BitswapMessage <full: ${this.full}, list: ${e}, blocks: ${t}>`}};_(be,"Entry",BitswapMessageEntry),_(be,"WantType",{Block:Message$5.Wantlist.WantType.Block,Have:Message$5.Wantlist.WantType.Have}),_(be,"BlockPresenceType",{Have:Message$5.BlockPresenceType.Have,DontHave:Message$5.BlockPresenceType.DontHave}),_(be,"deserialize",async(e,t)=>{const n=Message$5.decode(e),i=n.wantlist?.full===!0,o=new be(i);return n.wantlist?.entries.forEach(a=>{if(a.block==null)return;const c=CID$3.decode(a.block);o.addEntry(c,a.priority??0,a.wantType,!!a.cancel,!!a.sendDontHave)}),n.blockPresences.forEach(a=>{if(a.cid==null)return;const c=CID$3.decode(a.cid);a.type===be.BlockPresenceType.Have?o.addHave(c):o.addDontHave(c)}),n.blocks.length>0?(await Promise.all(n.blocks.map(async a=>{const c=await sha256$2.digest(a),l=CID$3.createV0(c);o.addBlock(l,a)})),o):(n.payload.length>0&&(await Promise.all(n.payload.map(async a=>{if(a.prefix==null||a.data==null)return;const c=vd(a.prefix),l=c[0],u=c[1],f=c[2],g=f===sha256$2.code?sha256$2:await t?.getHasher(f);if(g==null)throw new CodeError$e("Unknown hash algorithm","ERR_UNKNOWN_HASH_ALG");const $=await g.digest(a.data),S=CID$3.create(l,u,$);o.addBlock(S,a.data)})),o.setPendingBytes(n.pendingBytes)),o)}),_(be,"blockPresenceSize",e=>e.bytes.length+1);let BitswapMessage=be;const WantType$1={Block:Message$5.Wantlist.WantType.Block,Have:Message$5.Wantlist.WantType.Have},sortBy=(r,e)=>Array.prototype.slice.call(e,0).sort((t,n)=>{const i=r(t),o=r(n);return i<o?-1:i>o?1:0});class Wantlist{constructor(e,t){_(this,"set");_(this,"_stats");this.set=t!=null?trackedMap$1({name:"ipfs_bitswap_wantlist",metrics:t.metrics}):new Map,this._stats=e}get length(){return this.set.size}add(e,t,n){const i=e.toString(base58btc$4),o=this.set.get(i);o!=null?(o.inc(),o.priority=t,o.wantType===WantType$1.Have&&n===WantType$1.Block&&(o.wantType=n)):(this.set.set(i,new WantListEntry(e,t,n)),this._stats!=null&&this._stats.push(void 0,"wantListSize",1))}remove(e){const t=e.toString(base58btc$4),n=this.set.get(t);n!=null&&(n.dec(),!n.hasRefs()&&(this.set.delete(t),this._stats!=null&&this._stats.push(void 0,"wantListSize",-1)))}removeForce(e){this.set.has(e)&&this.set.delete(e)}forEach(e){this.set.forEach(e)}entries(){return this.set.entries()}sortedEntries(){return new Map(sortBy(e=>e[1].key,Array.from(this.set.entries())))}contains(e){const t=e.toString(base58btc$4);return this.set.has(t)}get(e){const t=e.toString(base58btc$4);return this.set.get(t)}}_(Wantlist,"Entry",WantListEntry);class Ledger{constructor(e){_(this,"partner");_(this,"wantlist");_(this,"exchangeCount");_(this,"accounting");_(this,"lastExchange");this.partner=e,this.wantlist=new Wantlist,this.exchangeCount=0,this.accounting={bytesSent:0,bytesRecv:0}}sentBytes(e){this.exchangeCount++,this.lastExchange=new Date().getTime(),this.accounting.bytesSent+=e}receivedBytes(e){this.exchangeCount++,this.lastExchange=new Date().getTime(),this.accounting.bytesRecv+=e}wants(e,t,n){this.wantlist.add(e,t,n)}cancelWant(e){this.wantlist.remove(e)}wantlistContains(e){return this.wantlist.get(e)}debtRatio(){return this.accounting.bytesSent/(this.accounting.bytesRecv+1)}}class SortedMap extends Map{constructor(t,n){super();_(this,"_cmp");_(this,"_keys");this._cmp=n??this._defaultSort,this._keys=[];for(const[i,o]of t??[])this.set(i,o)}update(t){if(t<0||t>=this._keys.length)return;const n=this._keys[t];this._keys.splice(t,1);const i=this._find(n);this._keys.splice(i,0,n)}set(t,n){if(this.has(t)){const o=this.indexOf(t);this._keys.splice(o,1)}super.set(t,n);const i=this._find(t);return this._keys.splice(i,0,t),this}clear(){super.clear(),this._keys=[]}delete(t){if(!this.has(t))return!1;const n=this.indexOf(t);return this._keys.splice(n,1),super.delete(t)}indexOf(t){if(!this.has(t))return-1;const n=this._find(t);if(this._keys[n]===t)return n;for(let i=1;i<this._keys.length;i++){if(this._keys[n+i]===t)return n+i;if(this._keys[n-i]===t)return n-i}return-1}_find(t){let n=0,i=this._keys.length;for(;n<i;){const o=n+i>>>1,a=this._kCmp(this._keys[o],t);if(a<0)n=o+1;else if(a>0)i=o;else return o}return n}*keys(){for(const t of this._keys)yield t}*values(){for(const t of this._keys)yield this.get(t)}*entries(){for(const t of this._keys)yield[t,this.get(t)]}*[Symbol.iterator](){yield*this.entries()}forEach(t,n=this){if(t!=null)for(const i of this._keys){const o=this.get(i);if(o==null)throw new Error("Value cannot be undefined");t.apply(n,[[i,o]])}}_defaultSort(t,n){return t[0]<n[0]?-1:n[0]<t[0]?1:0}_kCmp(t,n){return this._cmp([t,this.get(t)],[n,this.get(n)])}}const DefaultTaskMerger$1={hasNewInfo(){return!1},merge(){}};class RequestQueue{constructor(e=DefaultTaskMerger$1){_(this,"_taskMerger");_(this,"_byPeer");this._taskMerger=e,this._byPeer=new SortedMap([],PeerTasks.compare)}pushTasks(e,t){let n=this._byPeer.get(e.toString());n==null&&(n=new PeerTasks(e,this._taskMerger)),n.pushTasks(t),this._byPeer.set(e.toString(),n)}popTasks(e){const t=this._head();if(t===void 0)return{tasks:[],pendingSize:0};const{tasks:n,pendingSize:i}=t.popTasks(e);if(n.length===0)return{tasks:n,pendingSize:i};const o=t.peerId;return t.isIdle()?this._byPeer.delete(o.toString()):this._byPeer.update(0),{peerId:o,tasks:n,pendingSize:i}}_head(){if(this._byPeer.size!==0)for(const[,e]of this._byPeer)return e}remove(e,t){this._byPeer.get(t.toString())?.remove(e)}tasksDone(e,t){const n=this._byPeer.get(e.toString());if(n==null)return;const i=this._byPeer.indexOf(e.toString());for(const o of t)n.taskDone(o);this._byPeer.update(i)}}class PeerTasks{constructor(e,t){_(this,"peerId");_(this,"_taskMerger");_(this,"_activeTotalSize");_(this,"_pending");_(this,"_active");this.peerId=e,this._taskMerger=t,this._activeTotalSize=0,this._pending=new PendingTasks,this._active=new Set}pushTasks(e){for(const t of e)this._pushTask(t)}_pushTask(e){if(!this._taskHasMoreInfoThanActiveTasks(e))return;const t=this._pending.get(e.topic);if(t!=null){e.priority>t.priority&&this._pending.updatePriority(e.topic,e.priority),this._taskMerger.merge(e,t);return}this._pending.add(e)}_taskHasMoreInfoThanActiveTasks(e){const t=[];for(const n of this._active)n.topic===e.topic&&t.push(n);return t.length===0?!0:this._taskMerger.hasNewInfo(e,t)}popTasks(e){let t=0;const n=[],i=this._pending.tasks();for(let o=0;o<i.length&&t<e;o++){const a=i[o];n.push(a),t+=a.size,this._pending.delete(a.topic),this._activeTotalSize+=a.size,this._active.add(a)}return{tasks:n,pendingSize:this._pending.totalSize}}taskDone(e){this._active.has(e)&&(this._activeTotalSize-=e.size,this._active.delete(e))}remove(e){this._pending.delete(e)}isIdle(){return this._pending.length===0&&this._active.size===0}static compare(e,t){return e[1]._pending.length===0?1:t[1]._pending.length===0?-1:e[1]._activeTotalSize===t[1]._activeTotalSize?t[1]._pending.length-e[1]._pending.length:e[1]._activeTotalSize-t[1]._activeTotalSize}}class PendingTasks{constructor(){_(this,"_tasks");this._tasks=new SortedMap([],this._compare)}get length(){return this._tasks.size}get totalSize(){return[...this._tasks.values()].reduce((e,t)=>e+t.task.size,0)}get(e){return this._tasks?.get(e)?.task}add(e){this._tasks.set(e.topic,{created:Date.now(),task:e})}delete(e){this._tasks.delete(e)}tasks(){return[...this._tasks.values()].map(e=>e.task)}updatePriority(e,t){const n=this._tasks.get(e);if(n==null)return;const i=this._tasks.indexOf(e);n.task.priority=t,this._tasks.update(i)}_compare(e,t){return e[1].task.priority===t[1].task.priority?e[1].created-t[1].created:t[1].task.priority-e[1].task.priority}}const DefaultTaskMerger={hasNewInfo(r,e){let t=!1,n=!1;for(const i of e)i.data.haveBlock&&(t=!0),i.data.isWantBlock&&(n=!0);return!!(!n&&r.data.isWantBlock||!t&&r.data.haveBlock)},merge(r,e){const t=r.data,n=e.data;!n.haveBlock&&t.haveBlock&&(n.haveBlock=t.haveBlock,n.blockSize=t.blockSize),!n.isWantBlock&&t.isWantBlock&&(n.isWantBlock=!0,(!n.haveBlock||t.haveBlock)&&(n.haveBlock=t.haveBlock,e.size=r.size)),n.isWantBlock&&n.haveBlock&&(e.size=n.blockSize)}},WantType=BitswapMessage.WantType,TARGET_MESSAGE_SIZE=16*1024,MAX_SIZE_REPLACE_HAS_WITH_BLOCK=1024;class DecisionEngine{constructor(e,t,n,i,o,a={}){_(this,"_log");_(this,"blockstore");_(this,"network");_(this,"_stats");_(this,"_opts");_(this,"ledgerMap");_(this,"_running");_(this,"_requestQueue");this._log=logger$1(e,"engine"),this.blockstore=t,this.network=n,this._stats=i,this._opts=this._processOpts(a),this.ledgerMap=trackedMap$1({name:"ipfs_bitswap_ledger_map",metrics:o.metrics}),this._running=!1,this._requestQueue=new RequestQueue(DefaultTaskMerger)}_processOpts(e){return{maxSizeReplaceHasWithBlock:MAX_SIZE_REPLACE_HAS_WITH_BLOCK,targetMessageSize:TARGET_MESSAGE_SIZE,...e}}_scheduleProcessTasks(){setTimeout(()=>{this._processTasks().catch(e=>{this._log.error("error processing stats",e)})})}async _processTasks(){if(!this._running)return;const{peerId:e,tasks:t,pendingSize:n}=this._requestQueue.popTasks(this._opts.targetMessageSize);if(t.length===0)return;const i=new BitswapMessage(!1);i.setPendingBytes(n);const o=[],a=new Map;for(const l of t){const u=CID$3.parse(l.topic);l.data.haveBlock?l.data.isWantBlock?(o.push(u),a.set(l.topic,l.data)):i.addHave(u):i.addDontHave(u)}const c=await this._getBlocks(o);for(const[l,u]of a){const f=CID$3.parse(l),g=c.get(l);g!=null?i.addBlock(f,g):u.sendDontHave&&i.addDontHave(f)}if(i.empty){e!=null&&this._requestQueue.tasksDone(e,t),this._scheduleProcessTasks();return}try{e!=null&&await this.network.sendMessage(e,i);for(const[l,u]of c.entries())e!=null&&this.messageSent(e,CID$3.parse(l),u)}catch(l){this._log.error(l)}e!=null&&this._requestQueue.tasksDone(e,t),this._scheduleProcessTasks()}wantlistForPeer(e){const t=e.toString(),n=this.ledgerMap.get(t);return n!=null?n.wantlist.sortedEntries():new Map}ledgerForPeer(e){const t=e.toString(),n=this.ledgerMap.get(t);if(n!=null)return{peer:n.partner,value:n.debtRatio(),sent:n.accounting.bytesSent,recv:n.accounting.bytesRecv,exchanged:n.exchangeCount}}peers(){return Array.from(this.ledgerMap.values()).map(e=>e.partner)}receivedBlocks(e){if(e.length!==0){for(const t of this.ledgerMap.values())for(const{cid:n,block:i}of e){const o=t.wantlistContains(n);if(o==null)continue;const a=i.length,c=this._sendAsBlock(o.wantType,a);let l=a;c||(l=BitswapMessage.blockPresenceSize(o.cid)),this._requestQueue.pushTasks(t.partner,[{topic:o.cid.toString(base58btc$4),priority:o.priority,size:l,data:{blockSize:a,isWantBlock:c,haveBlock:!0,sendDontHave:!1}}])}this._scheduleProcessTasks()}}async messageReceived(e,t){const n=this._findOrCreate(e);if(t.empty)return;if(t.full&&(n.wantlist=new Wantlist),this._updateBlockAccounting(t.blocks,n),t.wantlist.size===0){this._scheduleProcessTasks();return}const i=[],o=[];t.wantlist.forEach(a=>{a.cancel?(n.cancelWant(a.cid),i.push(a.cid)):(n.wants(a.cid,a.priority,a.wantType),o.push(a))}),this._cancelWants(e,i),await this._addWants(e,o),this._scheduleProcessTasks()}_cancelWants(e,t){for(const n of t)this._requestQueue.remove(n.toString(base58btc$4),e)}async _addWants(e,t){const n=await this._getBlockSizes(t.map(o=>o.cid)),i=[];for(const o of t){const a=o.cid.toString(base58btc$4),c=n.get(a);if(c==null)o.sendDontHave&&i.push({topic:a,priority:o.priority,size:BitswapMessage.blockPresenceSize(o.cid),data:{isWantBlock:o.wantType===WantType.Block,blockSize:0,haveBlock:!1,sendDontHave:o.sendDontHave}});else{const l=this._sendAsBlock(o.wantType,c);let u=c;l||(u=BitswapMessage.blockPresenceSize(o.cid)),i.push({topic:a,priority:o.priority,size:u,data:{isWantBlock:l,blockSize:c,haveBlock:!0,sendDontHave:o.sendDontHave}})}this._requestQueue.pushTasks(e,i)}}_sendAsBlock(e,t){return e===WantType.Block||t<=this._opts.maxSizeReplaceHasWithBlock}async _getBlockSizes(e){const t=await this._getBlocks(e);return new Map([...t].map(([n,i])=>[n,i.length]))}async _getBlocks(e){const t=new Map;return await Promise.all(e.map(async n=>{try{const i=await this.blockstore.get(n);t.set(n.toString(base58btc$4),i)}catch(i){i.code!=="ERR_NOT_FOUND"&&this._log.error("failed to query blockstore for %s: %s",n,i)}})),t}_updateBlockAccounting(e,t){for(const n of e.values())this._log("got block (%s bytes)",n.length),t.receivedBytes(n.length)}messageSent(e,t,n){const i=this._findOrCreate(e);i.sentBytes(n.length),i.wantlist.remove(t)}numBytesSentTo(e){return this._findOrCreate(e).accounting.bytesSent}numBytesReceivedFrom(e){return this._findOrCreate(e).accounting.bytesRecv}peerDisconnected(e){this.ledgerMap.delete(e.toString())}_findOrCreate(e){const t=e.toString(),n=this.ledgerMap.get(t);if(n!=null)return n;const i=new Ledger(e);return this.ledgerMap.set(t,i),this._stats!=null&&this._stats.push(t,"peerCount",1),i}start(){this._running=!0}stop(){this._running=!1}}const N1$3=Math.pow(2,7),N2$3=Math.pow(2,14),N3$3=Math.pow(2,21),N4$3=Math.pow(2,28),N5$3=Math.pow(2,35),N6$3=Math.pow(2,42),N7$3=Math.pow(2,49),MSB$6=128,REST$6=127;function encodingLength$2(r){if(r<N1$3)return 1;if(r<N2$3)return 2;if(r<N3$3)return 3;if(r<N4$3)return 4;if(r<N5$3)return 5;if(r<N6$3)return 6;if(r<N7$3)return 7;if(Number.MAX_SAFE_INTEGER!=null&&r>Number.MAX_SAFE_INTEGER)throw new RangeError("Could not encode varint");return 8}function encodeUint8Array$1(r,e,t=0){switch(encodingLength$2(r)){case 8:e[t++]=r&255|MSB$6,r/=128;case 7:e[t++]=r&255|MSB$6,r/=128;case 6:e[t++]=r&255|MSB$6,r/=128;case 5:e[t++]=r&255|MSB$6,r/=128;case 4:e[t++]=r&255|MSB$6,r>>>=7;case 3:e[t++]=r&255|MSB$6,r>>>=7;case 2:e[t++]=r&255|MSB$6,r>>>=7;case 1:{e[t++]=r&255,r>>>=7;break}default:throw new Error("unreachable")}return e}function encodeUint8ArrayList$1(r,e,t=0){switch(encodingLength$2(r)){case 8:e.set(t++,r&255|MSB$6),r/=128;case 7:e.set(t++,r&255|MSB$6),r/=128;case 6:e.set(t++,r&255|MSB$6),r/=128;case 5:e.set(t++,r&255|MSB$6),r/=128;case 4:e.set(t++,r&255|MSB$6),r>>>=7;case 3:e.set(t++,r&255|MSB$6),r>>>=7;case 2:e.set(t++,r&255|MSB$6),r>>>=7;case 1:{e.set(t++,r&255),r>>>=7;break}default:throw new Error("unreachable")}return e}function decodeUint8Array$1(r,e){let t=r[e],n=0;if(n+=t&REST$6,t<MSB$6||(t=r[e+1],n+=(t&REST$6)<<7,t<MSB$6)||(t=r[e+2],n+=(t&REST$6)<<14,t<MSB$6)||(t=r[e+3],n+=(t&REST$6)<<21,t<MSB$6)||(t=r[e+4],n+=(t&REST$6)*N4$3,t<MSB$6)||(t=r[e+5],n+=(t&REST$6)*N5$3,t<MSB$6)||(t=r[e+6],n+=(t&REST$6)*N6$3,t<MSB$6)||(t=r[e+7],n+=(t&REST$6)*N7$3,t<MSB$6))return n;throw new RangeError("Could not decode varint")}function decodeUint8ArrayList$1(r,e){let t=r.get(e),n=0;if(n+=t&REST$6,t<MSB$6||(t=r.get(e+1),n+=(t&REST$6)<<7,t<MSB$6)||(t=r.get(e+2),n+=(t&REST$6)<<14,t<MSB$6)||(t=r.get(e+3),n+=(t&REST$6)<<21,t<MSB$6)||(t=r.get(e+4),n+=(t&REST$6)*N4$3,t<MSB$6)||(t=r.get(e+5),n+=(t&REST$6)*N5$3,t<MSB$6)||(t=r.get(e+6),n+=(t&REST$6)*N6$3,t<MSB$6)||(t=r.get(e+7),n+=(t&REST$6)*N7$3,t<MSB$6))return n;throw new RangeError("Could not decode varint")}function encode$e(r,e,t=0){return e==null&&(e=allocUnsafe$3(encodingLength$2(r))),e instanceof Uint8Array?encodeUint8Array$1(r,e,t):encodeUint8ArrayList$1(r,e,t)}function decode$i(r,e=0){return r instanceof Uint8Array?decodeUint8Array$1(r,e):decodeUint8ArrayList$1(r,e)}function concat$6(r,e){e==null&&(e=r.reduce((i,o)=>i+o.length,0));const t=allocUnsafe$3(e);let n=0;for(const i of r)t.set(i,n),n+=i.length;return asUint8Array$2(t)}const symbol$5=Symbol.for("@achingbrain/uint8arraylist");function findBufAndOffset(r,e){if(e==null||e<0)throw new RangeError("index is out of bounds");let t=0;for(const n of r){const i=t+n.byteLength;if(e<i)return{buf:n,index:e-t};t=i}throw new RangeError("index is out of bounds")}function isUint8ArrayList(r){return!!r?.[symbol$5]}class Uint8ArrayList{constructor(...e){Object.defineProperty(this,symbol$5,{value:!0}),this.bufs=[],this.length=0,e.length>0&&this.appendAll(e)}*[Symbol.iterator](){yield*this.bufs}get byteLength(){return this.length}append(...e){this.appendAll(e)}appendAll(e){let t=0;for(const n of e)if(n instanceof Uint8Array)t+=n.byteLength,this.bufs.push(n);else if(isUint8ArrayList(n))t+=n.byteLength,this.bufs.push(...n.bufs);else throw new Error("Could not append value, must be an Uint8Array or a Uint8ArrayList");this.length+=t}prepend(...e){this.prependAll(e)}prependAll(e){let t=0;for(const n of e.reverse())if(n instanceof Uint8Array)t+=n.byteLength,this.bufs.unshift(n);else if(isUint8ArrayList(n))t+=n.byteLength,this.bufs.unshift(...n.bufs);else throw new Error("Could not prepend value, must be an Uint8Array or a Uint8ArrayList");this.length+=t}get(e){const t=findBufAndOffset(this.bufs,e);return t.buf[t.index]}set(e,t){const n=findBufAndOffset(this.bufs,e);n.buf[n.index]=t}write(e,t=0){if(e instanceof Uint8Array)for(let n=0;n<e.length;n++)this.set(t+n,e[n]);else if(isUint8ArrayList(e))for(let n=0;n<e.length;n++)this.set(t+n,e.get(n));else throw new Error("Could not write value, must be an Uint8Array or a Uint8ArrayList")}consume(e){if(e=Math.trunc(e),!(Number.isNaN(e)||e<=0)){if(e===this.byteLength){this.bufs=[],this.length=0;return}for(;this.bufs.length>0;)if(e>=this.bufs[0].byteLength)e-=this.bufs[0].byteLength,this.length-=this.bufs[0].byteLength,this.bufs.shift();else{this.bufs[0]=this.bufs[0].subarray(e),this.length-=e;break}}}slice(e,t){const{bufs:n,length:i}=this._subList(e,t);return concat$6(n,i)}subarray(e,t){const{bufs:n,length:i}=this._subList(e,t);return n.length===1?n[0]:concat$6(n,i)}sublist(e,t){const{bufs:n,length:i}=this._subList(e,t),o=new Uint8ArrayList;return o.length=i,o.bufs=n,o}_subList(e,t){if(e=e??0,t=t??this.length,e<0&&(e=this.length+e),t<0&&(t=this.length+t),e<0||t>this.length)throw new RangeError("index is out of bounds");if(e===t)return{bufs:[],length:0};if(e===0&&t===this.length)return{bufs:[...this.bufs],length:this.length};const n=[];let i=0;for(let o=0;o<this.bufs.length;o++){const a=this.bufs[o],c=i,l=c+a.byteLength;if(i=l,e>=l)continue;const u=e>=c&&e<l,f=t>c&&t<=l;if(u&&f){if(e===c&&t===l){n.push(a);break}const g=e-c;n.push(a.subarray(g,g+(t-e)));break}if(u){if(e===0){n.push(a);continue}n.push(a.subarray(e-c));continue}if(f){if(t===l){n.push(a);break}n.push(a.subarray(0,t-c));break}n.push(a)}return{bufs:n,length:t-e}}indexOf(e,t=0){if(!isUint8ArrayList(e)&&!(e instanceof Uint8Array))throw new TypeError('The "value" argument must be a Uint8ArrayList or Uint8Array');const n=e instanceof Uint8Array?e:e.subarray();if(t=Number(t??0),isNaN(t)&&(t=0),t<0&&(t=this.length+t),t<0&&(t=0),e.length===0)return t>this.length?this.length:t;const i=n.byteLength;if(i===0)throw new TypeError("search must be at least 1 byte long");const o=256,a=new Int32Array(o);for(let g=0;g<o;g++)a[g]=-1;for(let g=0;g<i;g++)a[n[g]]=g;const c=a,l=this.byteLength-n.byteLength,u=n.byteLength-1;let f;for(let g=t;g<=l;g+=f){f=0;for(let $=u;$>=0;$--){const S=this.get(g+$);if(n[$]!==S){f=Math.max(1,$-c[S]);break}}if(f===0)return g}return-1}getInt8(e){const t=this.subarray(e,e+1);return new DataView(t.buffer,t.byteOffset,t.byteLength).getInt8(0)}setInt8(e,t){const n=allocUnsafe$3(1);new DataView(n.buffer,n.byteOffset,n.byteLength).setInt8(0,t),this.write(n,e)}getInt16(e,t){const n=this.subarray(e,e+2);return new DataView(n.buffer,n.byteOffset,n.byteLength).getInt16(0,t)}setInt16(e,t,n){const i=alloc$1(2);new DataView(i.buffer,i.byteOffset,i.byteLength).setInt16(0,t,n),this.write(i,e)}getInt32(e,t){const n=this.subarray(e,e+4);return new DataView(n.buffer,n.byteOffset,n.byteLength).getInt32(0,t)}setInt32(e,t,n){const i=alloc$1(4);new DataView(i.buffer,i.byteOffset,i.byteLength).setInt32(0,t,n),this.write(i,e)}getBigInt64(e,t){const n=this.subarray(e,e+8);return new DataView(n.buffer,n.byteOffset,n.byteLength).getBigInt64(0,t)}setBigInt64(e,t,n){const i=alloc$1(8);new DataView(i.buffer,i.byteOffset,i.byteLength).setBigInt64(0,t,n),this.write(i,e)}getUint8(e){const t=this.subarray(e,e+1);return new DataView(t.buffer,t.byteOffset,t.byteLength).getUint8(0)}setUint8(e,t){const n=allocUnsafe$3(1);new DataView(n.buffer,n.byteOffset,n.byteLength).setUint8(0,t),this.write(n,e)}getUint16(e,t){const n=this.subarray(e,e+2);return new DataView(n.buffer,n.byteOffset,n.byteLength).getUint16(0,t)}setUint16(e,t,n){const i=alloc$1(2);new DataView(i.buffer,i.byteOffset,i.byteLength).setUint16(0,t,n),this.write(i,e)}getUint32(e,t){const n=this.subarray(e,e+4);return new DataView(n.buffer,n.byteOffset,n.byteLength).getUint32(0,t)}setUint32(e,t,n){const i=alloc$1(4);new DataView(i.buffer,i.byteOffset,i.byteLength).setUint32(0,t,n),this.write(i,e)}getBigUint64(e,t){const n=this.subarray(e,e+8);return new DataView(n.buffer,n.byteOffset,n.byteLength).getBigUint64(0,t)}setBigUint64(e,t,n){const i=alloc$1(8);new DataView(i.buffer,i.byteOffset,i.byteLength).setBigUint64(0,t,n),this.write(i,e)}getFloat32(e,t){const n=this.subarray(e,e+4);return new DataView(n.buffer,n.byteOffset,n.byteLength).getFloat32(0,t)}setFloat32(e,t,n){const i=alloc$1(4);new DataView(i.buffer,i.byteOffset,i.byteLength).setFloat32(0,t,n),this.write(i,e)}getFloat64(e,t){const n=this.subarray(e,e+8);return new DataView(n.buffer,n.byteOffset,n.byteLength).getFloat64(0,t)}setFloat64(e,t,n){const i=alloc$1(8);new DataView(i.buffer,i.byteOffset,i.byteLength).setFloat64(0,t,n),this.write(i,e)}equals(e){if(e==null||!(e instanceof Uint8ArrayList)||e.bufs.length!==this.bufs.length)return!1;for(let t=0;t<this.bufs.length;t++)if(!equals$4(this.bufs[t],e.bufs[t]))return!1;return!0}static fromUint8Arrays(e,t){const n=new Uint8ArrayList;return n.bufs=e,t==null&&(t=e.reduce((i,o)=>i+o.byteLength,0)),n.length=t,n}}function isAsyncIterable$6(r){return r[Symbol.asyncIterator]!=null}const defaultEncoder=r=>{const e=encodingLength$2(r),t=allocUnsafe$3(e);return encode$e(r,t),defaultEncoder.bytes=e,t};defaultEncoder.bytes=0;function encode$d(r,e){e=e??{};const t=e.lengthEncoder??defaultEncoder;function*n(i){const o=t(i.byteLength);o instanceof Uint8Array?yield o:yield*o,i instanceof Uint8Array?yield i:yield*i}return isAsyncIterable$6(r)?async function*(){for await(const i of r)yield*n(i)}():function*(){for(const i of r)yield*n(i)}()}encode$d.single=(r,e)=>{e=e??{};const t=e.lengthEncoder??defaultEncoder;return new Uint8ArrayList(t(r.byteLength),r)};function assign$5(r,e){for(const t in e)Object.defineProperty(r,t,{value:e[t],enumerable:!0,configurable:!0});return r}function createError$5(r,e,t){if(!r||typeof r=="string")throw new TypeError("Please pass an Error to err-code");t||(t={}),typeof e=="object"&&(t=e,e=""),e&&(t.code=e);try{return assign$5(r,t)}catch{t.message=r.message,t.stack=r.stack;const i=function(){};return i.prototype=Object.create(Object.getPrototypeOf(r)),assign$5(new i,t)}}var errCode$8=createError$5;const errCode$9=getDefaultExportFromCjs(errCode$8),MAX_LENGTH_LENGTH=8,MAX_DATA_LENGTH=1024*1024*4;var ReadMode;(function(r){r[r.LENGTH=0]="LENGTH",r[r.DATA=1]="DATA"})(ReadMode||(ReadMode={}));const defaultDecoder=r=>{const e=decode$i(r);return defaultDecoder.bytes=encodingLength$2(e),e};defaultDecoder.bytes=0;function decode$h(r,e){const t=new Uint8ArrayList;let n=ReadMode.LENGTH,i=-1;const o=e?.lengthDecoder??defaultDecoder,a=e?.maxLengthLength??MAX_LENGTH_LENGTH,c=e?.maxDataLength??MAX_DATA_LENGTH;function*l(){for(;t.byteLength>0;){if(n===ReadMode.LENGTH)try{if(i=o(t),i<0)throw errCode$9(new Error("invalid message length"),"ERR_INVALID_MSG_LENGTH");if(i>c)throw errCode$9(new Error("message length too long"),"ERR_MSG_DATA_TOO_LONG");const u=o.bytes;t.consume(u),e?.onLength!=null&&e.onLength(i),n=ReadMode.DATA}catch(u){if(u instanceof RangeError){if(t.byteLength>a)throw errCode$9(new Error("message length length too long"),"ERR_MSG_LENGTH_TOO_LONG");break}throw u}if(n===ReadMode.DATA){if(t.byteLength<i)break;const u=t.sublist(0,i);t.consume(i),e?.onData!=null&&e.onData(u),yield u,n=ReadMode.LENGTH}}}return isAsyncIterable$6(r)?async function*(){for await(const u of r)t.append(u),yield*l();if(t.byteLength>0)throw errCode$9(new Error("unexpected end of input"),"ERR_UNEXPECTED_EOF")}():function*(){for(const u of r)t.append(u),yield*l();if(t.byteLength>0)throw errCode$9(new Error("unexpected end of input"),"ERR_UNEXPECTED_EOF")}()}decode$h.fromReader=(r,e)=>{let t=1;const n=async function*(){for(;;)try{const{done:o,value:a}=await r.next(t);if(o===!0)return;a!=null&&(yield a)}catch(o){if(o.code==="ERR_UNDER_READ")return{done:!0,value:null};throw o}finally{t=1}}();return decode$h(n,{...e??{},onLength:o=>{t=o}})};var timeBrowser=function r(){return Date.now()};const getTime=timeBrowser;class Retimer{constructor(e,t,n){const i=this;this._started=getTime(),this._rescheduled=0,this._scheduled=t,this._args=n,this._triggered=!1,this._timerWrapper=()=>{i._rescheduled>0?(i._scheduled=i._rescheduled-(getTime()-i._started),i._schedule(i._scheduled)):(i._triggered=!0,e.apply(null,i._args))},this._timer=setTimeout(this._timerWrapper,t)}reschedule(e){e||(e=this._scheduled);const t=getTime();t+e-(this._started+this._scheduled)<0?(clearTimeout(this._timer),this._schedule(e)):this._triggered?this._schedule(e):(this._started=t,this._rescheduled=e)}_schedule(e){this._triggered=!1,this._started=getTime(),this._rescheduled=0,this._scheduled=e,this._timer=setTimeout(this._timerWrapper,e)}clear(){clearTimeout(this._timer)}}function retimer$1(){if(typeof arguments[0]!="function")throw new Error("callback needed");if(typeof arguments[1]!="number")throw new Error("timeout needed");let r;if(arguments.length>0){r=new Array(arguments.length-2);for(var e=0;e<r.length;e++)r[e]=arguments[e+2]}return new Retimer(arguments[0],arguments[1],r)}var retimer_1=retimer$1;const{AbortController:AbortController$1}=globalThis,retimer=retimer_1;class TimeoutController extends AbortController$1{constructor(e){super(),this._ms=e,this._timer=retimer(()=>this.abort(),e),Object.setPrototypeOf(this,TimeoutController.prototype)}abort(){return this._timer.clear(),super.abort()}clear(){this._timer.clear()}reset(){this._timer.clear(),this._timer=retimer(()=>this.abort(),this._ms)}}var timeoutAbortController={TimeoutController};const maxProvidersPerRequest=3,kMaxPriority=Math.pow(2,31)-1,maxListeners=1e3,wantlistSendDebounceMs=1,BITSWAP100="/ipfs/bitswap/1.0.0",BITSWAP110="/ipfs/bitswap/1.1.0",BITSWAP120="/ipfs/bitswap/1.2.0",DEFAULT_MAX_INBOUND_STREAMS$3=1024,DEFAULT_MAX_OUTBOUND_STREAMS$3=1024,DEFAULT_INCOMING_STREAM_TIMEOUT=3e4;let Network$1=class{constructor(e,t,n,i={}){_(this,"_log");_(this,"_libp2p");_(this,"_bitswap");_(this,"_protocols");_(this,"_stats");_(this,"_running");_(this,"_hashLoader");_(this,"_maxInboundStreams");_(this,"_maxOutboundStreams");_(this,"_incomingStreamTimeout");_(this,"_registrarIds");this._log=logger$1(e.peerId,"network"),this._libp2p=e,this._bitswap=t,this._protocols=[BITSWAP100],i.b100Only!==!0&&(this._protocols.unshift(BITSWAP110),this._protocols.unshift(BITSWAP120)),this._stats=n,this._running=!1,this._onPeerConnect=this._onPeerConnect.bind(this),this._onPeerDisconnect=this._onPeerDisconnect.bind(this),this._onConnection=this._onConnection.bind(this),this._hashLoader=i.hashLoader??{async getHasher(){throw new Error("Not implemented")}},this._maxInboundStreams=i.maxInboundStreams??DEFAULT_MAX_INBOUND_STREAMS$3,this._maxOutboundStreams=i.maxOutboundStreams??DEFAULT_MAX_OUTBOUND_STREAMS$3,this._incomingStreamTimeout=i.incomingStreamTimeout??DEFAULT_INCOMING_STREAM_TIMEOUT}async start(){this._running=!0,await this._libp2p.handle(this._protocols,this._onConnection,{maxInboundStreams:this._maxInboundStreams,maxOutboundStreams:this._maxOutboundStreams});const e={onConnect:this._onPeerConnect,onDisconnect:this._onPeerDisconnect};this._registrarIds=[];for(const t of this._protocols)this._registrarIds.push(await this._libp2p.register(t,e));this._libp2p.getConnections().forEach(t=>{this._onPeerConnect(t.remotePeer)})}async stop(){if(this._running=!1,await this._libp2p.unhandle(this._protocols),this._registrarIds!=null){for(const e of this._registrarIds)this._libp2p.unregister(e);this._registrarIds=[]}}_onConnection(e){if(!this._running)return;const{stream:t,connection:n}=e,i=new timeoutAbortController.TimeoutController(this._incomingStreamTimeout);Promise.resolve().then(async()=>{this._log("incoming new bitswap %s connection from %p",t.protocol,n.remotePeer);const o=()=>{t.abort(new CodeError$e("Incoming Bitswap stream timed out","ERR_TIMEOUT"))};let a=AbortSignal.timeout(this._incomingStreamTimeout);a.addEventListener("abort",o),await pipe(t,c=>decode$h(c),async c=>{for await(const l of c){try{const u=await BitswapMessage.deserialize(l.subarray(),this._hashLoader);await this._bitswap._receiveMessage(n.remotePeer,u)}catch(u){this._bitswap._receiveError(u);break}a.removeEventListener("abort",o),a=AbortSignal.timeout(this._incomingStreamTimeout),a.addEventListener("abort",o)}}),await t.close({signal:a})}).catch(o=>{this._log(o),t.abort(o)}).finally(()=>{i.clear()})}_onPeerConnect(e){this._bitswap._onPeerConnected(e)}_onPeerDisconnect(e){this._bitswap._onPeerDisconnected(e)}findProviders(e,t={}){return t.onProgress?.(new CustomProgressEvent("bitswap:network:find-providers",e)),this._libp2p.contentRouting.findProviders(e,t)}async findAndConnect(e,t){await drain(take(map$1(this.findProviders(e,t),async n=>this.connectTo(n.id,t).catch(i=>{this._log.error(i)})),maxProvidersPerRequest)).catch(n=>{this._log.error(n)})}async provide(e,t={}){t.onProgress?.(new CustomProgressEvent("bitswap:network:provide",e)),await this._libp2p.contentRouting.provide(e,t)}async sendMessage(e,t,n={}){if(!this._running)throw new Error("network isn't running");const i=e.toString();this._log("sendMessage to %s",i,t),n.onProgress?.(new CustomProgressEvent("bitswap:network:send-wantlist",e)),await this._writeMessage(e,t,n),this._updateSentStats(e,t.blocks)}async connectTo(e,t={}){if(!this._running)throw new Error("network isn't running");return t.onProgress?.(new CustomProgressEvent("bitswap:network:dial",e)),this._libp2p.dial(e,t)}_updateSentStats(e,t){const n=e.toString();if(this._stats!=null){for(const i of t.values())this._stats.push(n,"dataSent",i.length);this._stats.push(n,"blocksSent",t.size)}}async _writeMessage(e,t,n={}){const i=await this._libp2p.dialProtocol(e,[BITSWAP120,BITSWAP110,BITSWAP100]);try{let o;switch(i.protocol){case BITSWAP100:o=t.serializeToBitswap100();break;case BITSWAP110:case BITSWAP120:o=t.serializeToBitswap110();break;default:throw new Error(`Unknown protocol: ${i.protocol}`)}await pipe([o],a=>encode$d(a),i),await i.close()}catch(o){n.onProgress?.(new CustomProgressEvent("bitswap:network:send-wantlist:error",{peer:e,error:o})),this._log(o),i.abort(o)}}};var events$1={exports:{}},R=typeof Reflect=="object"?Reflect:null,ReflectApply=R&&typeof R.apply=="function"?R.apply:function r(e,t,n){return Function.prototype.apply.call(e,t,n)},ReflectOwnKeys;R&&typeof R.ownKeys=="function"?ReflectOwnKeys=R.ownKeys:Object.getOwnPropertySymbols?ReflectOwnKeys=function(e){return Object.getOwnPropertyNames(e).concat(Object.getOwnPropertySymbols(e))}:ReflectOwnKeys=function(e){return Object.getOwnPropertyNames(e)};function ProcessEmitWarning(r){console&&console.warn&&console.warn(r)}var NumberIsNaN=Number.isNaN||function r(e){return e!==e};function EventEmitter$4(){EventEmitter$4.init.call(this)}events$1.exports=EventEmitter$4;events$1.exports.once=once;EventEmitter$4.EventEmitter=EventEmitter$4;EventEmitter$4.prototype._events=void 0;EventEmitter$4.prototype._eventsCount=0;EventEmitter$4.prototype._maxListeners=void 0;var defaultMaxListeners=10;function checkListener(r){if(typeof r!="function")throw new TypeError('The "listener" argument must be of type Function. Received type '+typeof r)}Object.defineProperty(EventEmitter$4,"defaultMaxListeners",{enumerable:!0,get:function(){return defaultMaxListeners},set:function(r){if(typeof r!="number"||r<0||NumberIsNaN(r))throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received '+r+".");defaultMaxListeners=r}});EventEmitter$4.init=function(){(this._events===void 0||this._events===Object.getPrototypeOf(this)._events)&&(this._events=Object.create(null),this._eventsCount=0),this._maxListeners=this._maxListeners||void 0};EventEmitter$4.prototype.setMaxListeners=function r(e){if(typeof e!="number"||e<0||NumberIsNaN(e))throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received '+e+".");return this._maxListeners=e,this};function _getMaxListeners(r){return r._maxListeners===void 0?EventEmitter$4.defaultMaxListeners:r._maxListeners}EventEmitter$4.prototype.getMaxListeners=function r(){return _getMaxListeners(this)};EventEmitter$4.prototype.emit=function r(e){for(var t=[],n=1;n<arguments.length;n++)t.push(arguments[n]);var i=e==="error",o=this._events;if(o!==void 0)i=i&&o.error===void 0;else if(!i)return!1;if(i){var a;if(t.length>0&&(a=t[0]),a instanceof Error)throw a;var c=new Error("Unhandled error."+(a?" ("+a.message+")":""));throw c.context=a,c}var l=o[e];if(l===void 0)return!1;if(typeof l=="function")ReflectApply(l,this,t);else for(var u=l.length,f=arrayClone(l,u),n=0;n<u;++n)ReflectApply(f[n],this,t);return!0};function _addListener(r,e,t,n){var i,o,a;if(checkListener(t),o=r._events,o===void 0?(o=r._events=Object.create(null),r._eventsCount=0):(o.newListener!==void 0&&(r.emit("newListener",e,t.listener?t.listener:t),o=r._events),a=o[e]),a===void 0)a=o[e]=t,++r._eventsCount;else if(typeof a=="function"?a=o[e]=n?[t,a]:[a,t]:n?a.unshift(t):a.push(t),i=_getMaxListeners(r),i>0&&a.length>i&&!a.warned){a.warned=!0;var c=new Error("Possible EventEmitter memory leak detected. "+a.length+" "+String(e)+" listeners added. Use emitter.setMaxListeners() to increase limit");c.name="MaxListenersExceededWarning",c.emitter=r,c.type=e,c.count=a.length,ProcessEmitWarning(c)}return r}EventEmitter$4.prototype.addListener=function r(e,t){return _addListener(this,e,t,!1)};EventEmitter$4.prototype.on=EventEmitter$4.prototype.addListener;EventEmitter$4.prototype.prependListener=function r(e,t){return _addListener(this,e,t,!0)};function onceWrapper(){if(!this.fired)return this.target.removeListener(this.type,this.wrapFn),this.fired=!0,arguments.length===0?this.listener.call(this.target):this.listener.apply(this.target,arguments)}function _onceWrap(r,e,t){var n={fired:!1,wrapFn:void 0,target:r,type:e,listener:t},i=onceWrapper.bind(n);return i.listener=t,n.wrapFn=i,i}EventEmitter$4.prototype.once=function r(e,t){return checkListener(t),this.on(e,_onceWrap(this,e,t)),this};EventEmitter$4.prototype.prependOnceListener=function r(e,t){return checkListener(t),this.prependListener(e,_onceWrap(this,e,t)),this};EventEmitter$4.prototype.removeListener=function r(e,t){var n,i,o,a,c;if(checkListener(t),i=this._events,i===void 0)return this;if(n=i[e],n===void 0)return this;if(n===t||n.listener===t)--this._eventsCount===0?this._events=Object.create(null):(delete i[e],i.removeListener&&this.emit("removeListener",e,n.listener||t));else if(typeof n!="function"){for(o=-1,a=n.length-1;a>=0;a--)if(n[a]===t||n[a].listener===t){c=n[a].listener,o=a;break}if(o<0)return this;o===0?n.shift():spliceOne(n,o),n.length===1&&(i[e]=n[0]),i.removeListener!==void 0&&this.emit("removeListener",e,c||t)}return this};EventEmitter$4.prototype.off=EventEmitter$4.prototype.removeListener;EventEmitter$4.prototype.removeAllListeners=function r(e){var t,n,i;if(n=this._events,n===void 0)return this;if(n.removeListener===void 0)return arguments.length===0?(this._events=Object.create(null),this._eventsCount=0):n[e]!==void 0&&(--this._eventsCount===0?this._events=Object.create(null):delete n[e]),this;if(arguments.length===0){var o=Object.keys(n),a;for(i=0;i<o.length;++i)a=o[i],a!=="removeListener"&&this.removeAllListeners(a);return this.removeAllListeners("removeListener"),this._events=Object.create(null),this._eventsCount=0,this}if(t=n[e],typeof t=="function")this.removeListener(e,t);else if(t!==void 0)for(i=t.length-1;i>=0;i--)this.removeListener(e,t[i]);return this};function _listeners(r,e,t){var n=r._events;if(n===void 0)return[];var i=n[e];return i===void 0?[]:typeof i=="function"?t?[i.listener||i]:[i]:t?unwrapListeners(i):arrayClone(i,i.length)}EventEmitter$4.prototype.listeners=function r(e){return _listeners(this,e,!0)};EventEmitter$4.prototype.rawListeners=function r(e){return _listeners(this,e,!1)};EventEmitter$4.listenerCount=function(r,e){return typeof r.listenerCount=="function"?r.listenerCount(e):listenerCount.call(r,e)};EventEmitter$4.prototype.listenerCount=listenerCount;function listenerCount(r){var e=this._events;if(e!==void 0){var t=e[r];if(typeof t=="function")return 1;if(t!==void 0)return t.length}return 0}EventEmitter$4.prototype.eventNames=function r(){return this._eventsCount>0?ReflectOwnKeys(this._events):[]};function arrayClone(r,e){for(var t=new Array(e),n=0;n<e;++n)t[n]=r[n];return t}function spliceOne(r,e){for(;e+1<r.length;e++)r[e]=r[e+1];r.pop()}function unwrapListeners(r){for(var e=new Array(r.length),t=0;t<e.length;++t)e[t]=r[t].listener||r[t];return e}function once(r,e){return new Promise(function(t,n){function i(a){r.removeListener(e,o),n(a)}function o(){typeof r.removeListener=="function"&&r.removeListener("error",i),t([].slice.call(arguments))}eventTargetAgnosticAddListener(r,e,o,{once:!0}),e!=="error"&&addErrorHandlerIfEventEmitter(r,i,{once:!0})})}function addErrorHandlerIfEventEmitter(r,e,t){typeof r.on=="function"&&eventTargetAgnosticAddListener(r,"error",e,t)}function eventTargetAgnosticAddListener(r,e,t,n){if(typeof r.on=="function")n.once?r.once(e,t):r.on(e,t);else if(typeof r.addEventListener=="function")r.addEventListener(e,function i(o){n.once&&r.removeEventListener(e,i),t(o)});else throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type '+typeof r)}var eventsExports=events$1.exports;const unwantEvent=r=>`unwant:${toString$b(r.multihash.bytes,"base64")}`,blockEvent=r=>`block:${toString$b(r.multihash.bytes,"base64")}`;class Notifications extends eventsExports.EventEmitter{constructor(t){super();_(this,"_log");this.setMaxListeners(maxListeners),this._log=logger$1(t,"notif")}hasBlock(t,n){const i=blockEvent(t);this._log(i),this.emit(i,n)}async wantBlock(t,n={}){if(t==null)throw new Error("Not a valid cid");const i=blockEvent(t),o=unwantEvent(t);return this._log(`wantBlock:${t}`),new Promise((a,c)=>{const l=()=>{this.removeListener(i,u),n.onProgress?.(new CustomProgressEvent("bitswap:want-block:unwant",t)),c(new Error(`Block for ${t} unwanted`))},u=f=>{this.removeListener(o,l),n.onProgress?.(new CustomProgressEvent("bitswap:want-block:block",t)),a(f)};this.once(o,l),this.once(i,u),n.signal?.addEventListener("abort",()=>{this.removeListener(i,u),this.removeListener(o,l),c(new Error(`Want for ${t} aborted`))})})}unwantBlock(t){const n=unwantEvent(t);this._log(n),this.emit(n)}}var movingAverage={exports:{}};(function(r,e){const t=Math.exp;r.exports=function(i){if(typeof i!="number")throw new Error("must provide a timespan to the moving average constructor");if(i<=0)throw new Error("must provide a timespan > 0 to the moving average constructor");let o,a=0,c=0,l=0,u,f={};function g($,S){return 1-t(-($-S)/i)}return f.push=function(S,E){if(u){const v=g(S,u),T=E-o,I=v*T;o=v*E+(1-v)*o,a=(1-v)*(a+T*I),c=Math.sqrt(a),l=o+v*T}else o=E;u=S},f.movingAverage=function(){return o},f.variance=function(){return a},f.deviation=function(){return c},f.forecast=function(){return l},f}})(movingAverage);var movingAverageExports=movingAverage.exports;const MovingAverage=getDefaultExportFromCjs(movingAverageExports);class Stat extends eventsExports.EventEmitter{constructor(t,n){super();_(this,"_options");_(this,"_queue");_(this,"_stats");_(this,"_frequencyLastTime");_(this,"_frequencyAccumulators");_(this,"_movingAverages");_(this,"_enabled");_(this,"_timeout");this._options=n,this._queue=[],this._stats={},this._frequencyLastTime=Date.now(),this._frequencyAccumulators={},this._movingAverages={},this._update=this._update.bind(this),t.forEach(i=>{this._stats[i]=BigInt(0),this._movingAverages[i]={},this._options.movingAverageIntervals.forEach(o=>{(this._movingAverages[i][o]=MovingAverage(o)).push(this._frequencyLastTime,0)})}),this._enabled=this._options.enabled}enable(){this._enabled=!0}disable(){this._enabled=!1}stop(){this._timeout!=null&&clearTimeout(this._timeout)}get snapshot(){return Object.assign({},this._stats)}get movingAverages(){return Object.assign({},this._movingAverages)}push(t,n){this._enabled&&(this._queue.push([t,n,Date.now()]),this._resetComputeTimeout())}_resetComputeTimeout(){this._timeout!=null&&clearTimeout(this._timeout),this._timeout=setTimeout(this._update,this._nextTimeout())}_nextTimeout(){const t=this._queue.length/this._options.computeThrottleMaxQueueSize;return Math.max(this._options.computeThrottleTimeout*(1-t),0)}_update(){if(this._timeout=void 0,this._queue.length>0){let t;for(;this._queue.length>0;){const n=t=this._queue.shift();n!=null&&this._applyOp(n)}t!=null&&this._updateFrequency(t[2]),this.emit("update",this._stats)}}_updateFrequency(t){const n=t-this._frequencyLastTime;n>0&&Object.keys(this._stats).forEach(i=>{this._updateFrequencyFor(i,n,t)}),this._frequencyLastTime=t}_updateFrequencyFor(t,n,i){const o=this._frequencyAccumulators[t]??0;this._frequencyAccumulators[t]=0;const a=o/n*1e3;let c=this._movingAverages[t];c==null&&(c=this._movingAverages[t]={}),this._options.movingAverageIntervals.forEach(l=>{let u=c[l];u==null&&(u=c[l]=MovingAverage(l)),u.push(i,a)})}_applyOp(t){const n=t[0],i=t[1];if(typeof i!="number")throw new Error(`invalid increment number: ${i}`);Object.prototype.hasOwnProperty.call(this._stats,n)||(this._stats[n]=BigInt(0)),this._stats[n]=BigInt(this._stats[n])+BigInt(i),this._frequencyAccumulators[n]==null&&(this._frequencyAccumulators[n]=0),this._frequencyAccumulators[n]+=i}}const defaultOptions$k={enabled:!1,computeThrottleTimeout:1e3,computeThrottleMaxQueueSize:1e3,movingAverageIntervals:[60*1e3,5*60*1e3,15*60*1e3]};class Stats extends eventsExports.EventEmitter{constructor(t,n=[],i=defaultOptions$k){super();_(this,"_initialCounters");_(this,"_options");_(this,"_enabled");_(this,"_global");_(this,"_peers");const o=Object.assign({},defaultOptions$k,i);if(typeof o.computeThrottleTimeout!="number")throw new Error("need computeThrottleTimeout");if(typeof o.computeThrottleMaxQueueSize!="number")throw new Error("need computeThrottleMaxQueueSize");this._initialCounters=n,this._options=o,this._enabled=this._options.enabled,this._global=new Stat(n,o),this._global.on("update",a=>this.emit("update",a)),this._peers=trackedMap$1({name:"ipfs_bitswap_stats_peers",metrics:t.metrics})}enable(){this._enabled=!0,this._options.enabled=!0,this._global.enable()}disable(){this._enabled=!1,this._options.enabled=!1,this._global.disable()}stop(){this._enabled=!1,this._global.stop();for(const t of this._peers)t[1].stop()}get snapshot(){return this._global.snapshot}get movingAverages(){return this._global.movingAverages}forPeer(t){const n=t.toString();return this._peers.get(n)}push(t,n,i){if(this._enabled&&(this._global.push(n,i),t!=null)){let o=this._peers.get(t);o==null&&(o=new Stat(this._initialCounters,this._options),this._peers.set(t,o)),o.push(n,i)}}disconnected(t){const n=t.toString(),i=this._peers.get(n);i!=null&&(i.stop(),this._peers.delete(n))}}var functionDebounce=debounce$3;function debounce$3(r,e,t){var n=null,i=null,o=function(){n&&(clearTimeout(n),i=null,n=null)},a=function(){var l=i;o(),l&&l()},c=function(){if(!e)return r.apply(this,arguments);var l=this,u=arguments,f=t&&!n;if(o(),i=function(){r.apply(l,u)},n=setTimeout(function(){if(n=null,!f){var g=i;return i=null,g()}},e),f)return i()};return c.cancel=o,c.flush=a,c}class MsgQueue{constructor(e,t,n){_(this,"peerId");_(this,"refcnt");_(this,"network");_(this,"_entries");_(this,"_log");this.peerId=t,this.network=n,this.refcnt=1,this._entries=[],this._log=logger$1(e,"msgqueue"),this.sendEntries=functionDebounce(this.sendEntries.bind(this),wantlistSendDebounceMs)}addMessage(e,t={}){e.empty||this.send(e,t)}addEntries(e,t={}){this._entries=this._entries.concat(e),this.sendEntries(t)}sendEntries(e={}){if(this._entries.length===0)return;const t=new BitswapMessage(!1);this._entries.forEach(n=>{n.cancel===!0?t.cancel(n.cid):t.addEntry(n.cid,n.priority)}),this._entries=[],this.addMessage(t,e)}async send(e,t={}){try{await this.network.connectTo(this.peerId,t)}catch(n){this._log.error("cant connect to peer %p: %s",this.peerId,n.message);return}this._log("sending message to peer %p",this.peerId),this.network.sendMessage(this.peerId,e,t).catch(n=>{this._log.error("send error",n)})}}class WantManager{constructor(e,t,n,i){_(this,"peers");_(this,"wantlist");_(this,"network");_(this,"_peerId");_(this,"_log");this.peers=trackedMap$1({name:"ipfs_bitswap_want_manager_peers",metrics:i.metrics}),this.wantlist=new Wantlist(n,i),this.network=t,this._peerId=e,this._log=logger$1(e,"want")}_addEntries(e,t,n,i={}){const o=e.map((a,c)=>new BitswapMessage.Entry(a,kMaxPriority-c,BitswapMessage.WantType.Block,t));o.forEach(a=>{a.cancel?n===!0?this.wantlist.removeForce(a.cid.toString(base58btc$4)):this.wantlist.remove(a.cid):(this._log("adding to wantlist"),this.wantlist.add(a.cid,a.priority))});for(const a of this.peers.values())a.addEntries(o,i)}_startPeerHandler(e){let t=this.peers.get(e.toString());if(t!=null){t.refcnt++;return}t=new MsgQueue(this._peerId,e,this.network);const n=new BitswapMessage(!0);for(const i of this.wantlist.entries())n.addEntry(i[1].cid,i[1].priority);return t.addMessage(n),this.peers.set(e.toString(),t),t}_stopPeerHandler(e){const t=this.peers.get(e.toString());t!=null&&(t.refcnt--,!(t.refcnt>0)&&this.peers.delete(e.toString()))}wantBlocks(e,t={}){this._addEntries(e,!1,!1,t),t.signal?.addEventListener("abort",()=>{this.cancelWants(e)})}unwantBlocks(e){this._log("unwant blocks: %s",e.length),this._addEntries(e,!0,!0)}cancelWants(e){this._log("cancel wants: %s",e.length),this._addEntries(e,!0)}connectedPeers(){return Array.from(this.peers.keys())}connected(e){this._startPeerHandler(e)}disconnected(e){this._stopPeerHandler(e)}start(){}stop(){this.peers.forEach(e=>{this.disconnected(e.peerId)})}}const hashLoader={async getHasher(){throw new Error("Not implemented")}},defaultOptions$j={maxInboundStreams:1024,maxOutboundStreams:1024,incomingStreamTimeout:3e4,hashLoader,statsEnabled:!1,statsComputeThrottleTimeout:1e3,statsComputeThrottleMaxQueueSize:1e3},statsKeys=["blocksReceived","dataReceived","dupBlksReceived","dupDataReceived","blocksSent","dataSent","providesBufferLength","wantListLength","peerCount"];class DefaultBitswap{constructor(e,t,n={}){_(this,"_libp2p");_(this,"_log");_(this,"stats");_(this,"network");_(this,"blockstore");_(this,"engine");_(this,"wm");_(this,"notifications");_(this,"started");this._libp2p=e,this._log=logger$1(this.peerId),n=Object.assign({},defaultOptions$j,n),this.stats=new Stats(e,statsKeys,{enabled:n.statsEnabled,computeThrottleTimeout:n.statsComputeThrottleTimeout,computeThrottleMaxQueueSize:n.statsComputeThrottleMaxQueueSize}),this.network=new Network$1(e,this,this.stats,{hashLoader:n.hashLoader,maxInboundStreams:n.maxInboundStreams,maxOutboundStreams:n.maxOutboundStreams,incomingStreamTimeout:n.incomingStreamTimeout}),this.blockstore=t,this.engine=new DecisionEngine(this.peerId,t,this.network,this.stats,e),this.wm=new WantManager(this.peerId,this.network,this.stats,e),this.notifications=new Notifications(this.peerId),this.started=!1}isStarted(){return this.started}get peerId(){return this._libp2p.peerId}async _receiveMessage(e,t){try{await this.engine.messageReceived(e,t)}catch{this._log("failed to receive message",t)}if(t.blocks.size===0)return;const n=[];for(const[i,o]of t.blocks.entries()){const a=CID$3.parse(i);n.push({wasWanted:this.wm.wantlist.contains(a),cid:a,data:o})}this.wm.cancelWants(n.filter(({wasWanted:i})=>i).map(({cid:i})=>i)),await Promise.all(n.map(async({cid:i,wasWanted:o,data:a})=>{await this._handleReceivedBlock(e,i,a,o)}))}async _handleReceivedBlock(e,t,n,i){this._log("received block");const o=await this.blockstore.has(t);this._updateReceiveCounters(e.toString(),t,n,o),i&&await this.put(t,n)}_updateReceiveCounters(e,t,n,i){this.stats.push(e,"blocksReceived",1),this.stats.push(e,"dataReceived",n.length),i&&(this.stats.push(e,"dupBlksReceived",1),this.stats.push(e,"dupDataReceived",n.length))}_receiveError(e){this._log.error("ReceiveError",e)}_onPeerConnected(e){this.wm.connected(e)}_onPeerDisconnected(e){this.wm.disconnected(e),this.engine.peerDisconnected(e),this.stats.disconnected(e)}enableStats(){this.stats.enable()}disableStats(){this.stats.disable()}wantlistForPeer(e,t){return this.engine.wantlistForPeer(e)}ledgerForPeer(e){return this.engine.ledgerForPeer(e)}async want(e,t={}){const n=async(l,u)=>(this.wm.wantBlocks([l],u),this.notifications.wantBlock(l,u));let i=!1;const o=async(l,u)=>{try{return await this.blockstore.get(l,u)}catch(f){if(f.code!=="ERR_NOT_FOUND")throw f;return i||(i=!0,this.network.findAndConnect(l,u).catch(g=>{this._log.error(g)})),await n(l,u)}},a=new AbortController,c=anySignal([a.signal,t.signal]);try{return await Promise.race([this.notifications.wantBlock(e,{...t,signal:c}),o(e,{...t,signal:c})])}finally{a.abort(),c.clear()}}unwant(e){const t=Array.isArray(e)?e:[e];this.wm.unwantBlocks(t),t.forEach(n=>{this.notifications.unwantBlock(n)})}cancelWants(e){this.wm.cancelWants(Array.isArray(e)?e:[e])}async put(e,t,n){await this.blockstore.put(e,t),this.notify(e,t)}async*putMany(e,t){yield*this.blockstore.putMany(forEach(e,({cid:n,block:i})=>{this.notify(n,i)}),t)}notify(e,t,n={}){this.notifications.hasBlock(e,t),this.engine.receivedBlocks([{cid:e,block:t}]),this.network.provide(e,n).catch(i=>{this._log.error("Failed to provide: %s",i.message)})}getWantlist(){return this.wm.wantlist.entries()}get peers(){return this.engine.peers()}async start(){this.wm.start(),await this.network.start(),this.engine.start(),this.started=!0}async stop(){this.stats.stop(),this.wm.stop(),await this.network.stop(),this.engine.stop(),this.started=!1}}const createBitswap=(r,e,t={})=>new DefaultBitswap(r,e,t);class BitswapBlockBroker{constructor(e,t={}){_(this,"bitswap");_(this,"started");const{libp2p:n,blockstore:i,hashers:o}=e;this.bitswap=createBitswap(n,i,{hashLoader:{getHasher:async a=>{const c=o.find(l=>l.code===a||l.name===a);if(c!=null)return c;throw new Error(`Could not load hasher for code/name "${a}"`)}},...t}),this.started=!1}isStarted(){return this.started}async start(){await this.bitswap.start(),this.started=!0}async stop(){await this.bitswap.stop(),this.started=!1}announce(e,t,n){this.bitswap.notify(e,t,n)}async retrieve(e,{validateFn:t,...n}={}){return this.bitswap.want(e,n)}}function bitswap(r={}){return e=>new BitswapBlockBroker(e,r)}var Ve,Ge,et,tt;class TrustlessGateway{constructor(e){_(this,"url");ne(this,Ve,0);ne(this,Ge,0);ne(this,et,0);ne(this,tt,0);this.url=e instanceof URL?e:new URL(e)}async getRawBlock(e,t){const n=this.url;if(n.pathname=`/ipfs/${e.toString()}`,n.search="?format=raw",t?.aborted===!0)throw new Error(`Signal to fetch raw block for CID ${e} from gateway ${this.url} was aborted prior to fetch`);try{Me(this,Ve)._++;const i=await fetch(n.toString(),{signal:t,headers:{Accept:"application/vnd.ipld.raw"},cache:"force-cache"});if(!i.ok)throw Me(this,Ge)._++,new Error(`unable to fetch raw block for CID ${e} from gateway ${this.url}`);return Me(this,tt)._++,new Uint8Array(await i.arrayBuffer())}catch{throw t?.aborted===!0?new Error(`fetching raw block for CID ${e} from gateway ${this.url} was aborted`):(Me(this,Ge)._++,new Error(`unable to fetch raw block for CID ${e}`))}}reliability(){return F(this,Ve)===0?1:F(this,et)>0?-1/0:F(this,tt)/(F(this,Ve)+F(this,Ge)*3)}incrementInvalidBlocks(){Me(this,et)._++}}Ve=new WeakMap,Ge=new WeakMap,et=new WeakMap,tt=new WeakMap;const log$$=logger$5("helia:trustless-gateway-block-broker");class TrustlessGatewayBlockBroker{constructor(e={}){_(this,"gateways");this.gateways=(e.gateways??DEFAULT_TRUSTLESS_GATEWAYS).map(t=>new TrustlessGateway(t))}async retrieve(e,t={}){const n=this.gateways.sort((o,a)=>a.reliability()-o.reliability()),i=[];for(const o of n){log$$("getting block for %c from %s",e,o.url);try{const a=await o.getRawBlock(e,t.signal);log$$.trace("got block for %c from %s",e,o.url);try{await t.validateFn?.(a)}catch(c){throw log$$.error("failed to validate block for %c from %s",e,o.url,c),o.incrementInvalidBlocks(),new Error(`unable to validate block for CID ${e} from gateway ${o.url}`)}return a}catch(a){if(log$$.error("failed to get block for %c from %s",e,o.url,a),a instanceof Error?i.push(a):i.push(new Error(`unable to fetch raw block for CID ${e} from gateway ${o.url}`)),t.signal?.aborted===!0){log$$.trace("request aborted while fetching raw block for CID %c from gateway %s",e,o.url);break}}}throw new AggregateError(i,`unable to fetch raw block for CID ${e} from any gateway`)}}const DEFAULT_TRUSTLESS_GATEWAYS=["https://dweb.link","https://cf-ipfs.com","https://4everland.io","https://w3s.link"];function trustlessGateway(r={}){return()=>new TrustlessGatewayBlockBroker(r)}const typeofs$3=["string","number","bigint","symbol"],objectTypeNames$3=["Function","Generator","AsyncGenerator","GeneratorFunction","AsyncGeneratorFunction","AsyncFunction","Observable","Array","Buffer","Object","RegExp","Date","Error","Map","Set","WeakMap","WeakSet","ArrayBuffer","SharedArrayBuffer","DataView","Promise","URL","HTMLElement","Int8Array","Uint8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","BigInt64Array","BigUint64Array"];function is$3(r){if(r===null)return"null";if(r===void 0)return"undefined";if(r===!0||r===!1)return"boolean";const e=typeof r;if(typeofs$3.includes(e))return e;if(e==="function")return"Function";if(Array.isArray(r))return"Array";if(isBuffer$7(r))return"Buffer";const t=getObjectType$3(r);return t||"Object"}function isBuffer$7(r){return r&&r.constructor&&r.constructor.isBuffer&&r.constructor.isBuffer.call(null,r)}function getObjectType$3(r){const e=Object.prototype.toString.call(r).slice(8,-1);if(objectTypeNames$3.includes(e))return e}let Type$3=class{constructor(e,t,n){this.major=e,this.majorEncoded=e<<5,this.name=t,this.terminal=n}toString(){return`Type[${this.major}].${this.name}`}compare(e){return this.major<e.major?-1:this.major>e.major?1:0}};Type$3.uint=new Type$3(0,"uint",!0);Type$3.negint=new Type$3(1,"negint",!0);Type$3.bytes=new Type$3(2,"bytes",!0);Type$3.string=new Type$3(3,"string",!0);Type$3.array=new Type$3(4,"array",!1);Type$3.map=new Type$3(5,"map",!1);Type$3.tag=new Type$3(6,"tag",!1);Type$3.float=new Type$3(7,"float",!0);Type$3.false=new Type$3(7,"false",!0);Type$3.true=new Type$3(7,"true",!0);Type$3.null=new Type$3(7,"null",!0);Type$3.undefined=new Type$3(7,"undefined",!0);Type$3.break=new Type$3(7,"break",!0);let Token$3=class{constructor(e,t,n){this.type=e,this.value=t,this.encodedLength=n,this.encodedBytes=void 0,this.byteValue=void 0}toString(){return`Token[${this.type}].${this.value}`}};const useBuffer$3=globalThis.process&&!globalThis.process.browser&&globalThis.Buffer&&typeof globalThis.Buffer.isBuffer=="function",textDecoder$4=new TextDecoder,textEncoder$6=new TextEncoder;function isBuffer$6(r){return useBuffer$3&&globalThis.Buffer.isBuffer(r)}function asU8A$1(r){return r instanceof Uint8Array?isBuffer$6(r)?new Uint8Array(r.buffer,r.byteOffset,r.byteLength):r:Uint8Array.from(r)}const toString$a=useBuffer$3?(r,e,t)=>t-e>64?globalThis.Buffer.from(r.subarray(e,t)).toString("utf8"):utf8Slice$2(r,e,t):(r,e,t)=>t-e>64?textDecoder$4.decode(r.subarray(e,t)):utf8Slice$2(r,e,t),fromString$a=useBuffer$3?r=>r.length>64?globalThis.Buffer.from(r):utf8ToBytes$6(r):r=>r.length>64?textEncoder$6.encode(r):utf8ToBytes$6(r),fromArray=r=>Uint8Array.from(r),slice$2=useBuffer$3?(r,e,t)=>isBuffer$6(r)?new Uint8Array(r.subarray(e,t)):r.slice(e,t):(r,e,t)=>r.slice(e,t),concat$5=useBuffer$3?(r,e)=>(r=r.map(t=>t instanceof Uint8Array?t:globalThis.Buffer.from(t)),asU8A$1(globalThis.Buffer.concat(r,e))):(r,e)=>{const t=new Uint8Array(e);let n=0;for(let i of r)n+i.length>t.length&&(i=i.subarray(0,t.length-n)),t.set(i,n),n+=i.length;return t},alloc=useBuffer$3?r=>globalThis.Buffer.allocUnsafe(r):r=>new Uint8Array(r);function compare$4(r,e){if(isBuffer$6(r)&&isBuffer$6(e))return r.compare(e);for(let t=0;t<r.length;t++)if(r[t]!==e[t])return r[t]<e[t]?-1:1;return 0}function utf8ToBytes$6(r){const e=[];let t=0;for(let n=0;n<r.length;n++){let i=r.charCodeAt(n);i<128?e[t++]=i:i<2048?(e[t++]=i>>6|192,e[t++]=i&63|128):(i&64512)===55296&&n+1<r.length&&(r.charCodeAt(n+1)&64512)===56320?(i=65536+((i&1023)<<10)+(r.charCodeAt(++n)&1023),e[t++]=i>>18|240,e[t++]=i>>12&63|128,e[t++]=i>>6&63|128,e[t++]=i&63|128):(e[t++]=i>>12|224,e[t++]=i>>6&63|128,e[t++]=i&63|128)}return e}function utf8Slice$2(r,e,t){const n=[];for(;e<t;){const i=r[e];let o=null,a=i>239?4:i>223?3:i>191?2:1;if(e+a<=t){let c,l,u,f;switch(a){case 1:i<128&&(o=i);break;case 2:c=r[e+1],(c&192)===128&&(f=(i&31)<<6|c&63,f>127&&(o=f));break;case 3:c=r[e+1],l=r[e+2],(c&192)===128&&(l&192)===128&&(f=(i&15)<<12|(c&63)<<6|l&63,f>2047&&(f<55296||f>57343)&&(o=f));break;case 4:c=r[e+1],l=r[e+2],u=r[e+3],(c&192)===128&&(l&192)===128&&(u&192)===128&&(f=(i&15)<<18|(c&63)<<12|(l&63)<<6|u&63,f>65535&&f<1114112&&(o=f))}}o===null?(o=65533,a=1):o>65535&&(o-=65536,n.push(o>>>10&1023|55296),o=56320|o&1023),n.push(o),e+=a}return decodeCodePointsArray$2(n)}const MAX_ARGUMENTS_LENGTH$2=4096;function decodeCodePointsArray$2(r){const e=r.length;if(e<=MAX_ARGUMENTS_LENGTH$2)return String.fromCharCode.apply(String,r);let t="",n=0;for(;n<e;)t+=String.fromCharCode.apply(String,r.slice(n,n+=MAX_ARGUMENTS_LENGTH$2));return t}const defaultChunkSize=256;class Bl{constructor(e=defaultChunkSize){this.chunkSize=e,this.cursor=0,this.maxCursor=-1,this.chunks=[],this._initReuseChunk=null}reset(){this.cursor=0,this.maxCursor=-1,this.chunks.length&&(this.chunks=[]),this._initReuseChunk!==null&&(this.chunks.push(this._initReuseChunk),this.maxCursor=this._initReuseChunk.length-1)}push(e){let t=this.chunks[this.chunks.length-1];if(this.cursor+e.length<=this.maxCursor+1){const i=t.length-(this.maxCursor-this.cursor)-1;t.set(e,i)}else{if(t){const i=t.length-(this.maxCursor-this.cursor)-1;i<t.length&&(this.chunks[this.chunks.length-1]=t.subarray(0,i),this.maxCursor=this.cursor-1)}e.length<64&&e.length<this.chunkSize?(t=alloc(this.chunkSize),this.chunks.push(t),this.maxCursor+=t.length,this._initReuseChunk===null&&(this._initReuseChunk=t),t.set(e,0)):(this.chunks.push(e),this.maxCursor+=e.length)}this.cursor+=e.length}toBytes(e=!1){let t;if(this.chunks.length===1){const n=this.chunks[0];e&&this.cursor>n.length/2?(t=this.cursor===n.length?n:n.subarray(0,this.cursor),this._initReuseChunk=null,this.chunks=[]):t=slice$2(n,0,this.cursor)}else t=concat$5(this.chunks,this.cursor);return e&&this.reset(),t}}const decodeErrPrefix$3="CBOR decode error:",encodeErrPrefix$3="CBOR encode error:";function assertEnoughData$2(r,e,t){if(r.length-e<t)throw new Error(`${decodeErrPrefix$3} not enough data for type`)}const uintBoundaries$3=[24,256,65536,4294967296,BigInt("18446744073709551616")];function readUint8$2(r,e,t){assertEnoughData$2(r,e,1);const n=r[e];if(t.strict===!0&&n<uintBoundaries$3[0])throw new Error(`${decodeErrPrefix$3} integer encoded in more bytes than necessary (strict decode)`);return n}function readUint16$2(r,e,t){assertEnoughData$2(r,e,2);const n=r[e]<<8|r[e+1];if(t.strict===!0&&n<uintBoundaries$3[1])throw new Error(`${decodeErrPrefix$3} integer encoded in more bytes than necessary (strict decode)`);return n}function readUint32$2(r,e,t){assertEnoughData$2(r,e,4);const n=r[e]*16777216+(r[e+1]<<16)+(r[e+2]<<8)+r[e+3];if(t.strict===!0&&n<uintBoundaries$3[2])throw new Error(`${decodeErrPrefix$3} integer encoded in more bytes than necessary (strict decode)`);return n}function readUint64$2(r,e,t){assertEnoughData$2(r,e,8);const n=r[e]*16777216+(r[e+1]<<16)+(r[e+2]<<8)+r[e+3],i=r[e+4]*16777216+(r[e+5]<<16)+(r[e+6]<<8)+r[e+7],o=(BigInt(n)<<BigInt(32))+BigInt(i);if(t.strict===!0&&o<uintBoundaries$3[3])throw new Error(`${decodeErrPrefix$3} integer encoded in more bytes than necessary (strict decode)`);if(o<=Number.MAX_SAFE_INTEGER)return Number(o);if(t.allowBigInt===!0)return o;throw new Error(`${decodeErrPrefix$3} integers outside of the safe integer range are not supported`)}function decodeUint8$2(r,e,t,n){return new Token$3(Type$3.uint,readUint8$2(r,e+1,n),2)}function decodeUint16$2(r,e,t,n){return new Token$3(Type$3.uint,readUint16$2(r,e+1,n),3)}function decodeUint32$2(r,e,t,n){return new Token$3(Type$3.uint,readUint32$2(r,e+1,n),5)}function decodeUint64$2(r,e,t,n){return new Token$3(Type$3.uint,readUint64$2(r,e+1,n),9)}function encodeUint$3(r,e){return encodeUintValue$3(r,0,e.value)}function encodeUintValue$3(r,e,t){if(t<uintBoundaries$3[0]){const n=Number(t);r.push([e|n])}else if(t<uintBoundaries$3[1]){const n=Number(t);r.push([e|24,n])}else if(t<uintBoundaries$3[2]){const n=Number(t);r.push([e|25,n>>>8,n&255])}else if(t<uintBoundaries$3[3]){const n=Number(t);r.push([e|26,n>>>24&255,n>>>16&255,n>>>8&255,n&255])}else{const n=BigInt(t);if(n<uintBoundaries$3[4]){const i=[e|27,0,0,0,0,0,0,0];let o=Number(n&BigInt(4294967295)),a=Number(n>>BigInt(32)&BigInt(4294967295));i[8]=o&255,o=o>>8,i[7]=o&255,o=o>>8,i[6]=o&255,o=o>>8,i[5]=o&255,i[4]=a&255,a=a>>8,i[3]=a&255,a=a>>8,i[2]=a&255,a=a>>8,i[1]=a&255,r.push(i)}else throw new Error(`${decodeErrPrefix$3} encountered BigInt larger than allowable range`)}}encodeUint$3.encodedSize=function r(e){return encodeUintValue$3.encodedSize(e.value)};encodeUintValue$3.encodedSize=function r(e){return e<uintBoundaries$3[0]?1:e<uintBoundaries$3[1]?2:e<uintBoundaries$3[2]?3:e<uintBoundaries$3[3]?5:9};encodeUint$3.compareTokens=function r(e,t){return e.value<t.value?-1:e.value>t.value?1:0};function decodeNegint8$2(r,e,t,n){return new Token$3(Type$3.negint,-1-readUint8$2(r,e+1,n),2)}function decodeNegint16$2(r,e,t,n){return new Token$3(Type$3.negint,-1-readUint16$2(r,e+1,n),3)}function decodeNegint32$2(r,e,t,n){return new Token$3(Type$3.negint,-1-readUint32$2(r,e+1,n),5)}const neg1b$3=BigInt(-1),pos1b$3=BigInt(1);function decodeNegint64$2(r,e,t,n){const i=readUint64$2(r,e+1,n);if(typeof i!="bigint"){const o=-1-i;if(o>=Number.MIN_SAFE_INTEGER)return new Token$3(Type$3.negint,o,9)}if(n.allowBigInt!==!0)throw new Error(`${decodeErrPrefix$3} integers outside of the safe integer range are not supported`);return new Token$3(Type$3.negint,neg1b$3-BigInt(i),9)}function encodeNegint$3(r,e){const t=e.value,n=typeof t=="bigint"?t*neg1b$3-pos1b$3:t*-1-1;encodeUintValue$3(r,e.type.majorEncoded,n)}encodeNegint$3.encodedSize=function r(e){const t=e.value,n=typeof t=="bigint"?t*neg1b$3-pos1b$3:t*-1-1;return n<uintBoundaries$3[0]?1:n<uintBoundaries$3[1]?2:n<uintBoundaries$3[2]?3:n<uintBoundaries$3[3]?5:9};encodeNegint$3.compareTokens=function r(e,t){return e.value<t.value?1:e.value>t.value?-1:0};function toToken$b(r,e,t,n){assertEnoughData$2(r,e,t+n);const i=slice$2(r,e+t,e+t+n);return new Token$3(Type$3.bytes,i,t+n)}function decodeBytesCompact$2(r,e,t,n){return toToken$b(r,e,1,t)}function decodeBytes8$2(r,e,t,n){return toToken$b(r,e,2,readUint8$2(r,e+1,n))}function decodeBytes16$2(r,e,t,n){return toToken$b(r,e,3,readUint16$2(r,e+1,n))}function decodeBytes32$2(r,e,t,n){return toToken$b(r,e,5,readUint32$2(r,e+1,n))}function decodeBytes64$2(r,e,t,n){const i=readUint64$2(r,e+1,n);if(typeof i=="bigint")throw new Error(`${decodeErrPrefix$3} 64-bit integer bytes lengths not supported`);return toToken$b(r,e,9,i)}function tokenBytes$3(r){return r.encodedBytes===void 0&&(r.encodedBytes=r.type===Type$3.string?fromString$a(r.value):r.value),r.encodedBytes}function encodeBytes$3(r,e){const t=tokenBytes$3(e);encodeUintValue$3(r,e.type.majorEncoded,t.length),r.push(t)}encodeBytes$3.encodedSize=function r(e){const t=tokenBytes$3(e);return encodeUintValue$3.encodedSize(t.length)+t.length};encodeBytes$3.compareTokens=function r(e,t){return compareBytes$3(tokenBytes$3(e),tokenBytes$3(t))};function compareBytes$3(r,e){return r.length<e.length?-1:r.length>e.length?1:compare$4(r,e)}function toToken$a(r,e,t,n,i){const o=t+n;assertEnoughData$2(r,e,o);const a=new Token$3(Type$3.string,toString$a(r,e+t,e+o),o);return i.retainStringBytes===!0&&(a.byteValue=slice$2(r,e+t,e+o)),a}function decodeStringCompact$2(r,e,t,n){return toToken$a(r,e,1,t,n)}function decodeString8$2(r,e,t,n){return toToken$a(r,e,2,readUint8$2(r,e+1,n),n)}function decodeString16$2(r,e,t,n){return toToken$a(r,e,3,readUint16$2(r,e+1,n),n)}function decodeString32$2(r,e,t,n){return toToken$a(r,e,5,readUint32$2(r,e+1,n),n)}function decodeString64$2(r,e,t,n){const i=readUint64$2(r,e+1,n);if(typeof i=="bigint")throw new Error(`${decodeErrPrefix$3} 64-bit integer string lengths not supported`);return toToken$a(r,e,9,i,n)}const encodeString$3=encodeBytes$3;function toToken$9(r,e,t,n){return new Token$3(Type$3.array,n,t)}function decodeArrayCompact$2(r,e,t,n){return toToken$9(r,e,1,t)}function decodeArray8$2(r,e,t,n){return toToken$9(r,e,2,readUint8$2(r,e+1,n))}function decodeArray16$2(r,e,t,n){return toToken$9(r,e,3,readUint16$2(r,e+1,n))}function decodeArray32$2(r,e,t,n){return toToken$9(r,e,5,readUint32$2(r,e+1,n))}function decodeArray64$2(r,e,t,n){const i=readUint64$2(r,e+1,n);if(typeof i=="bigint")throw new Error(`${decodeErrPrefix$3} 64-bit integer array lengths not supported`);return toToken$9(r,e,9,i)}function decodeArrayIndefinite$2(r,e,t,n){if(n.allowIndefinite===!1)throw new Error(`${decodeErrPrefix$3} indefinite length items not allowed`);return toToken$9(r,e,1,1/0)}function encodeArray$3(r,e){encodeUintValue$3(r,Type$3.array.majorEncoded,e.value)}encodeArray$3.compareTokens=encodeUint$3.compareTokens;encodeArray$3.encodedSize=function r(e){return encodeUintValue$3.encodedSize(e.value)};function toToken$8(r,e,t,n){return new Token$3(Type$3.map,n,t)}function decodeMapCompact$2(r,e,t,n){return toToken$8(r,e,1,t)}function decodeMap8$2(r,e,t,n){return toToken$8(r,e,2,readUint8$2(r,e+1,n))}function decodeMap16$2(r,e,t,n){return toToken$8(r,e,3,readUint16$2(r,e+1,n))}function decodeMap32$2(r,e,t,n){return toToken$8(r,e,5,readUint32$2(r,e+1,n))}function decodeMap64$2(r,e,t,n){const i=readUint64$2(r,e+1,n);if(typeof i=="bigint")throw new Error(`${decodeErrPrefix$3} 64-bit integer map lengths not supported`);return toToken$8(r,e,9,i)}function decodeMapIndefinite$2(r,e,t,n){if(n.allowIndefinite===!1)throw new Error(`${decodeErrPrefix$3} indefinite length items not allowed`);return toToken$8(r,e,1,1/0)}function encodeMap$3(r,e){encodeUintValue$3(r,Type$3.map.majorEncoded,e.value)}encodeMap$3.compareTokens=encodeUint$3.compareTokens;encodeMap$3.encodedSize=function r(e){return encodeUintValue$3.encodedSize(e.value)};function decodeTagCompact$2(r,e,t,n){return new Token$3(Type$3.tag,t,1)}function decodeTag8$2(r,e,t,n){return new Token$3(Type$3.tag,readUint8$2(r,e+1,n),2)}function decodeTag16$2(r,e,t,n){return new Token$3(Type$3.tag,readUint16$2(r,e+1,n),3)}function decodeTag32$2(r,e,t,n){return new Token$3(Type$3.tag,readUint32$2(r,e+1,n),5)}function decodeTag64$2(r,e,t,n){return new Token$3(Type$3.tag,readUint64$2(r,e+1,n),9)}function encodeTag$3(r,e){encodeUintValue$3(r,Type$3.tag.majorEncoded,e.value)}encodeTag$3.compareTokens=encodeUint$3.compareTokens;encodeTag$3.encodedSize=function r(e){return encodeUintValue$3.encodedSize(e.value)};const MINOR_FALSE$3=20,MINOR_TRUE$3=21,MINOR_NULL$3=22,MINOR_UNDEFINED$3=23;function decodeUndefined$2(r,e,t,n){if(n.allowUndefined===!1)throw new Error(`${decodeErrPrefix$3} undefined values are not supported`);return n.coerceUndefinedToNull===!0?new Token$3(Type$3.null,null,1):new Token$3(Type$3.undefined,void 0,1)}function decodeBreak$2(r,e,t,n){if(n.allowIndefinite===!1)throw new Error(`${decodeErrPrefix$3} indefinite length items not allowed`);return new Token$3(Type$3.break,void 0,1)}function createToken$2(r,e,t){if(t){if(t.allowNaN===!1&&Number.isNaN(r))throw new Error(`${decodeErrPrefix$3} NaN values are not supported`);if(t.allowInfinity===!1&&(r===1/0||r===-1/0))throw new Error(`${decodeErrPrefix$3} Infinity values are not supported`)}return new Token$3(Type$3.float,r,e)}function decodeFloat16$2(r,e,t,n){return createToken$2(readFloat16$3(r,e+1),3,n)}function decodeFloat32$2(r,e,t,n){return createToken$2(readFloat32$3(r,e+1),5,n)}function decodeFloat64$2(r,e,t,n){return createToken$2(readFloat64$3(r,e+1),9,n)}function encodeFloat$3(r,e,t){const n=e.value;if(n===!1)r.push([Type$3.float.majorEncoded|MINOR_FALSE$3]);else if(n===!0)r.push([Type$3.float.majorEncoded|MINOR_TRUE$3]);else if(n===null)r.push([Type$3.float.majorEncoded|MINOR_NULL$3]);else if(n===void 0)r.push([Type$3.float.majorEncoded|MINOR_UNDEFINED$3]);else{let i,o=!1;(!t||t.float64!==!0)&&(encodeFloat16$3(n),i=readFloat16$3(ui8a$3,1),n===i||Number.isNaN(n)?(ui8a$3[0]=249,r.push(ui8a$3.slice(0,3)),o=!0):(encodeFloat32$3(n),i=readFloat32$3(ui8a$3,1),n===i&&(ui8a$3[0]=250,r.push(ui8a$3.slice(0,5)),o=!0))),o||(encodeFloat64$3(n),i=readFloat64$3(ui8a$3,1),ui8a$3[0]=251,r.push(ui8a$3.slice(0,9)))}}encodeFloat$3.encodedSize=function r(e,t){const n=e.value;if(n===!1||n===!0||n===null||n===void 0)return 1;if(!t||t.float64!==!0){encodeFloat16$3(n);let i=readFloat16$3(ui8a$3,1);if(n===i||Number.isNaN(n))return 3;if(encodeFloat32$3(n),i=readFloat32$3(ui8a$3,1),n===i)return 5}return 9};const buffer$3=new ArrayBuffer(9),dataView$3=new DataView(buffer$3,1),ui8a$3=new Uint8Array(buffer$3,0);function encodeFloat16$3(r){if(r===1/0)dataView$3.setUint16(0,31744,!1);else if(r===-1/0)dataView$3.setUint16(0,64512,!1);else if(Number.isNaN(r))dataView$3.setUint16(0,32256,!1);else{dataView$3.setFloat32(0,r);const e=dataView$3.getUint32(0),t=(e&2139095040)>>23,n=e&8388607;if(t===255)dataView$3.setUint16(0,31744,!1);else if(t===0)dataView$3.setUint16(0,(r&2147483648)>>16|n>>13,!1);else{const i=t-127;i<-24?dataView$3.setUint16(0,0):i<-14?dataView$3.setUint16(0,(e&2147483648)>>16|1<<24+i,!1):dataView$3.setUint16(0,(e&2147483648)>>16|i+15<<10|n>>13,!1)}}}function readFloat16$3(r,e){if(r.length-e<2)throw new Error(`${decodeErrPrefix$3} not enough data for float16`);const t=(r[e]<<8)+r[e+1];if(t===31744)return 1/0;if(t===64512)return-1/0;if(t===32256)return NaN;const n=t>>10&31,i=t&1023;let o;return n===0?o=i*2**-24:n!==31?o=(i+1024)*2**(n-25):o=i===0?1/0:NaN,t&32768?-o:o}function encodeFloat32$3(r){dataView$3.setFloat32(0,r,!1)}function readFloat32$3(r,e){if(r.length-e<4)throw new Error(`${decodeErrPrefix$3} not enough data for float32`);const t=(r.byteOffset||0)+e;return new DataView(r.buffer,t,4).getFloat32(0,!1)}function encodeFloat64$3(r){dataView$3.setFloat64(0,r,!1)}function readFloat64$3(r,e){if(r.length-e<8)throw new Error(`${decodeErrPrefix$3} not enough data for float64`);const t=(r.byteOffset||0)+e;return new DataView(r.buffer,t,8).getFloat64(0,!1)}encodeFloat$3.compareTokens=encodeUint$3.compareTokens;function invalidMinor$2(r,e,t){throw new Error(`${decodeErrPrefix$3} encountered invalid minor (${t}) for major ${r[e]>>>5}`)}function errorer$2(r){return()=>{throw new Error(`${decodeErrPrefix$3} ${r}`)}}const jump$2=[];for(let r=0;r<=23;r++)jump$2[r]=invalidMinor$2;jump$2[24]=decodeUint8$2;jump$2[25]=decodeUint16$2;jump$2[26]=decodeUint32$2;jump$2[27]=decodeUint64$2;jump$2[28]=invalidMinor$2;jump$2[29]=invalidMinor$2;jump$2[30]=invalidMinor$2;jump$2[31]=invalidMinor$2;for(let r=32;r<=55;r++)jump$2[r]=invalidMinor$2;jump$2[56]=decodeNegint8$2;jump$2[57]=decodeNegint16$2;jump$2[58]=decodeNegint32$2;jump$2[59]=decodeNegint64$2;jump$2[60]=invalidMinor$2;jump$2[61]=invalidMinor$2;jump$2[62]=invalidMinor$2;jump$2[63]=invalidMinor$2;for(let r=64;r<=87;r++)jump$2[r]=decodeBytesCompact$2;jump$2[88]=decodeBytes8$2;jump$2[89]=decodeBytes16$2;jump$2[90]=decodeBytes32$2;jump$2[91]=decodeBytes64$2;jump$2[92]=invalidMinor$2;jump$2[93]=invalidMinor$2;jump$2[94]=invalidMinor$2;jump$2[95]=errorer$2("indefinite length bytes/strings are not supported");for(let r=96;r<=119;r++)jump$2[r]=decodeStringCompact$2;jump$2[120]=decodeString8$2;jump$2[121]=decodeString16$2;jump$2[122]=decodeString32$2;jump$2[123]=decodeString64$2;jump$2[124]=invalidMinor$2;jump$2[125]=invalidMinor$2;jump$2[126]=invalidMinor$2;jump$2[127]=errorer$2("indefinite length bytes/strings are not supported");for(let r=128;r<=151;r++)jump$2[r]=decodeArrayCompact$2;jump$2[152]=decodeArray8$2;jump$2[153]=decodeArray16$2;jump$2[154]=decodeArray32$2;jump$2[155]=decodeArray64$2;jump$2[156]=invalidMinor$2;jump$2[157]=invalidMinor$2;jump$2[158]=invalidMinor$2;jump$2[159]=decodeArrayIndefinite$2;for(let r=160;r<=183;r++)jump$2[r]=decodeMapCompact$2;jump$2[184]=decodeMap8$2;jump$2[185]=decodeMap16$2;jump$2[186]=decodeMap32$2;jump$2[187]=decodeMap64$2;jump$2[188]=invalidMinor$2;jump$2[189]=invalidMinor$2;jump$2[190]=invalidMinor$2;jump$2[191]=decodeMapIndefinite$2;for(let r=192;r<=215;r++)jump$2[r]=decodeTagCompact$2;jump$2[216]=decodeTag8$2;jump$2[217]=decodeTag16$2;jump$2[218]=decodeTag32$2;jump$2[219]=decodeTag64$2;jump$2[220]=invalidMinor$2;jump$2[221]=invalidMinor$2;jump$2[222]=invalidMinor$2;jump$2[223]=invalidMinor$2;for(let r=224;r<=243;r++)jump$2[r]=errorer$2("simple values are not supported");jump$2[244]=invalidMinor$2;jump$2[245]=invalidMinor$2;jump$2[246]=invalidMinor$2;jump$2[247]=decodeUndefined$2;jump$2[248]=errorer$2("simple values are not supported");jump$2[249]=decodeFloat16$2;jump$2[250]=decodeFloat32$2;jump$2[251]=decodeFloat64$2;jump$2[252]=invalidMinor$2;jump$2[253]=invalidMinor$2;jump$2[254]=invalidMinor$2;jump$2[255]=decodeBreak$2;const quick$2=[];for(let r=0;r<24;r++)quick$2[r]=new Token$3(Type$3.uint,r,1);for(let r=-1;r>=-24;r--)quick$2[31-r]=new Token$3(Type$3.negint,r,1);quick$2[64]=new Token$3(Type$3.bytes,new Uint8Array(0),1);quick$2[96]=new Token$3(Type$3.string,"",1);quick$2[128]=new Token$3(Type$3.array,0,1);quick$2[160]=new Token$3(Type$3.map,0,1);quick$2[244]=new Token$3(Type$3.false,!1,1);quick$2[245]=new Token$3(Type$3.true,!0,1);quick$2[246]=new Token$3(Type$3.null,null,1);function quickEncodeToken(r){switch(r.type){case Type$3.false:return fromArray([244]);case Type$3.true:return fromArray([245]);case Type$3.null:return fromArray([246]);case Type$3.bytes:return r.value.length?void 0:fromArray([64]);case Type$3.string:return r.value===""?fromArray([96]):void 0;case Type$3.array:return r.value===0?fromArray([128]):void 0;case Type$3.map:return r.value===0?fromArray([160]):void 0;case Type$3.uint:return r.value<24?fromArray([Number(r.value)]):void 0;case Type$3.negint:if(r.value>=-24)return fromArray([31-Number(r.value)])}}const defaultEncodeOptions={float64:!1,mapSorter,quickEncodeToken};function makeCborEncoders$3(){const r=[];return r[Type$3.uint.major]=encodeUint$3,r[Type$3.negint.major]=encodeNegint$3,r[Type$3.bytes.major]=encodeBytes$3,r[Type$3.string.major]=encodeString$3,r[Type$3.array.major]=encodeArray$3,r[Type$3.map.major]=encodeMap$3,r[Type$3.tag.major]=encodeTag$3,r[Type$3.float.major]=encodeFloat$3,r}const cborEncoders=makeCborEncoders$3(),buf=new Bl;let Ref$3=class Zt{constructor(e,t){this.obj=e,this.parent=t}includes(e){let t=this;do if(t.obj===e)return!0;while(t=t.parent);return!1}static createCheck(e,t){if(e&&e.includes(t))throw new Error(`${encodeErrPrefix$3} object contains circular references`);return new Zt(t,e)}};const simpleTokens$3={null:new Token$3(Type$3.null,null),undefined:new Token$3(Type$3.undefined,void 0),true:new Token$3(Type$3.true,!0),false:new Token$3(Type$3.false,!1),emptyArray:new Token$3(Type$3.array,0),emptyMap:new Token$3(Type$3.map,0)},typeEncoders$3={number(r,e,t,n){return!Number.isInteger(r)||!Number.isSafeInteger(r)?new Token$3(Type$3.float,r):r>=0?new Token$3(Type$3.uint,r):new Token$3(Type$3.negint,r)},bigint(r,e,t,n){return r>=BigInt(0)?new Token$3(Type$3.uint,r):new Token$3(Type$3.negint,r)},Uint8Array(r,e,t,n){return new Token$3(Type$3.bytes,r)},string(r,e,t,n){return new Token$3(Type$3.string,r)},boolean(r,e,t,n){return r?simpleTokens$3.true:simpleTokens$3.false},null(r,e,t,n){return simpleTokens$3.null},undefined(r,e,t,n){return simpleTokens$3.undefined},ArrayBuffer(r,e,t,n){return new Token$3(Type$3.bytes,new Uint8Array(r))},DataView(r,e,t,n){return new Token$3(Type$3.bytes,new Uint8Array(r.buffer,r.byteOffset,r.byteLength))},Array(r,e,t,n){if(!r.length)return t.addBreakTokens===!0?[simpleTokens$3.emptyArray,new Token$3(Type$3.break)]:simpleTokens$3.emptyArray;n=Ref$3.createCheck(n,r);const i=[];let o=0;for(const a of r)i[o++]=objectToTokens$3(a,t,n);return t.addBreakTokens?[new Token$3(Type$3.array,r.length),i,new Token$3(Type$3.break)]:[new Token$3(Type$3.array,r.length),i]},Object(r,e,t,n){const i=e!=="Object",o=i?r.keys():Object.keys(r),a=i?r.size:o.length;if(!a)return t.addBreakTokens===!0?[simpleTokens$3.emptyMap,new Token$3(Type$3.break)]:simpleTokens$3.emptyMap;n=Ref$3.createCheck(n,r);const c=[];let l=0;for(const u of o)c[l++]=[objectToTokens$3(u,t,n),objectToTokens$3(i?r.get(u):r[u],t,n)];return sortMapEntries$3(c,t),t.addBreakTokens?[new Token$3(Type$3.map,a),c,new Token$3(Type$3.break)]:[new Token$3(Type$3.map,a),c]}};typeEncoders$3.Map=typeEncoders$3.Object;typeEncoders$3.Buffer=typeEncoders$3.Uint8Array;for(const r of"Uint8Clamped Uint16 Uint32 Int8 Int16 Int32 BigUint64 BigInt64 Float32 Float64".split(" "))typeEncoders$3[`${r}Array`]=typeEncoders$3.DataView;function objectToTokens$3(r,e={},t){const n=is$3(r),i=e&&e.typeEncoders&&e.typeEncoders[n]||typeEncoders$3[n];if(typeof i=="function"){const a=i(r,n,e,t);if(a!=null)return a}const o=typeEncoders$3[n];if(!o)throw new Error(`${encodeErrPrefix$3} unsupported type: ${n}`);return o(r,n,e,t)}function sortMapEntries$3(r,e){e.mapSorter&&r.sort(e.mapSorter)}function mapSorter(r,e){const t=Array.isArray(r[0])?r[0][0]:r[0],n=Array.isArray(e[0])?e[0][0]:e[0];if(t.type!==n.type)return t.type.compare(n.type);const i=t.type.major,o=cborEncoders[i].compareTokens(t,n);return o===0&&console.warn("WARNING: complex key types used, CBOR key sorting guarantees are gone"),o}function tokensToEncoded(r,e,t,n){if(Array.isArray(e))for(const i of e)tokensToEncoded(r,i,t,n);else t[e.type.major](r,e,n)}function encodeCustom(r,e,t){const n=objectToTokens$3(r,t);if(!Array.isArray(n)&&t.quickEncodeToken){const i=t.quickEncodeToken(n);if(i)return i;const o=e[n.type.major];if(o.encodedSize){const a=o.encodedSize(n,t),c=new Bl(a);if(o(c,n,t),c.chunks.length!==1)throw new Error(`Unexpected error: pre-calculated length for ${n} was wrong`);return asU8A$1(c.chunks[0])}}return buf.reset(),tokensToEncoded(buf,n,e,t),buf.toBytes(!0)}function encode$c(r,e){return e=Object.assign({},defaultEncodeOptions,e),encodeCustom(r,cborEncoders,e)}const defaultDecodeOptions$2={strict:!1,allowIndefinite:!0,allowUndefined:!0,allowBigInt:!0};let Tokeniser$2=class{constructor(e,t={}){this._pos=0,this.data=e,this.options=t}pos(){return this._pos}done(){return this._pos>=this.data.length}next(){const e=this.data[this._pos];let t=quick$2[e];if(t===void 0){const n=jump$2[e];if(!n)throw new Error(`${decodeErrPrefix$3} no decoder for major type ${e>>>5} (byte 0x${e.toString(16).padStart(2,"0")})`);const i=e&31;t=n(this.data,this._pos,i,this.options)}return this._pos+=t.encodedLength,t}};const DONE$2=Symbol.for("DONE"),BREAK$2=Symbol.for("BREAK");function tokenToArray$2(r,e,t){const n=[];for(let i=0;i<r.value;i++){const o=tokensToObject$2(e,t);if(o===BREAK$2){if(r.value===1/0)break;throw new Error(`${decodeErrPrefix$3} got unexpected break to lengthed array`)}if(o===DONE$2)throw new Error(`${decodeErrPrefix$3} found array but not enough entries (got ${i}, expected ${r.value})`);n[i]=o}return n}function tokenToMap$2(r,e,t){const n=t.useMaps===!0,i=n?void 0:{},o=n?new Map:void 0;for(let a=0;a<r.value;a++){const c=tokensToObject$2(e,t);if(c===BREAK$2){if(r.value===1/0)break;throw new Error(`${decodeErrPrefix$3} got unexpected break to lengthed map`)}if(c===DONE$2)throw new Error(`${decodeErrPrefix$3} found map but not enough entries (got ${a} [no key], expected ${r.value})`);if(n!==!0&&typeof c!="string")throw new Error(`${decodeErrPrefix$3} non-string keys not supported (got ${typeof c})`);if(t.rejectDuplicateMapKeys===!0&&(n&&o.has(c)||!n&&c in i))throw new Error(`${decodeErrPrefix$3} found repeat map key "${c}"`);const l=tokensToObject$2(e,t);if(l===DONE$2)throw new Error(`${decodeErrPrefix$3} found map but not enough entries (got ${a} [no value], expected ${r.value})`);n?o.set(c,l):i[c]=l}return n?o:i}function tokensToObject$2(r,e){if(r.done())return DONE$2;const t=r.next();if(t.type===Type$3.break)return BREAK$2;if(t.type.terminal)return t.value;if(t.type===Type$3.array)return tokenToArray$2(t,r,e);if(t.type===Type$3.map)return tokenToMap$2(t,r,e);if(t.type===Type$3.tag){if(e.tags&&typeof e.tags[t.value]=="function"){const n=tokensToObject$2(r,e);return e.tags[t.value](n)}throw new Error(`${decodeErrPrefix$3} tag not supported (${t.value})`)}throw new Error("unsupported")}function decodeFirst$1(r,e){if(!(r instanceof Uint8Array))throw new Error(`${decodeErrPrefix$3} data to decode must be a Uint8Array`);e=Object.assign({},defaultDecodeOptions$2,e);const t=e.tokenizer||new Tokeniser$2(r,e),n=tokensToObject$2(t,e);if(n===DONE$2)throw new Error(`${decodeErrPrefix$3} did not find any content to decode`);if(n===BREAK$2)throw new Error(`${decodeErrPrefix$3} got unexpected break`);return[n,r.subarray(t.pos())]}function decode$g(r,e){const[t,n]=decodeFirst$1(r,e);if(n.length>0)throw new Error(`${decodeErrPrefix$3} too many terminals, data makes no sense`);return t}var eventemitter3$3={exports:{}};(function(r){var e=Object.prototype.hasOwnProperty,t="~";function n(){}Object.create&&(n.prototype=Object.create(null),new n().__proto__||(t=!1));function i(l,u,f){this.fn=l,this.context=u,this.once=f||!1}function o(l,u,f,g,$){if(typeof f!="function")throw new TypeError("The listener must be a function");var S=new i(f,g||l,$),E=t?t+u:u;return l._events[E]?l._events[E].fn?l._events[E]=[l._events[E],S]:l._events[E].push(S):(l._events[E]=S,l._eventsCount++),l}function a(l,u){--l._eventsCount===0?l._events=new n:delete l._events[u]}function c(){this._events=new n,this._eventsCount=0}c.prototype.eventNames=function(){var u=[],f,g;if(this._eventsCount===0)return u;for(g in f=this._events)e.call(f,g)&&u.push(t?g.slice(1):g);return Object.getOwnPropertySymbols?u.concat(Object.getOwnPropertySymbols(f)):u},c.prototype.listeners=function(u){var f=t?t+u:u,g=this._events[f];if(!g)return[];if(g.fn)return[g.fn];for(var $=0,S=g.length,E=new Array(S);$<S;$++)E[$]=g[$].fn;return E},c.prototype.listenerCount=function(u){var f=t?t+u:u,g=this._events[f];return g?g.fn?1:g.length:0},c.prototype.emit=function(u,f,g,$,S,E){var v=t?t+u:u;if(!this._events[v])return!1;var T=this._events[v],I=arguments.length,A,P;if(T.fn){switch(T.once&&this.removeListener(u,T.fn,void 0,!0),I){case 1:return T.fn.call(T.context),!0;case 2:return T.fn.call(T.context,f),!0;case 3:return T.fn.call(T.context,f,g),!0;case 4:return T.fn.call(T.context,f,g,$),!0;case 5:return T.fn.call(T.context,f,g,$,S),!0;case 6:return T.fn.call(T.context,f,g,$,S,E),!0}for(P=1,A=new Array(I-1);P<I;P++)A[P-1]=arguments[P];T.fn.apply(T.context,A)}else{var x=T.length,D;for(P=0;P<x;P++)switch(T[P].once&&this.removeListener(u,T[P].fn,void 0,!0),I){case 1:T[P].fn.call(T[P].context);break;case 2:T[P].fn.call(T[P].context,f);break;case 3:T[P].fn.call(T[P].context,f,g);break;case 4:T[P].fn.call(T[P].context,f,g,$);break;default:if(!A)for(D=1,A=new Array(I-1);D<I;D++)A[D-1]=arguments[D];T[P].fn.apply(T[P].context,A)}}return!0},c.prototype.on=function(u,f,g){return o(this,u,f,g,!1)},c.prototype.once=function(u,f,g){return o(this,u,f,g,!0)},c.prototype.removeListener=function(u,f,g,$){var S=t?t+u:u;if(!this._events[S])return this;if(!f)return a(this,S),this;var E=this._events[S];if(E.fn)E.fn===f&&(!$||E.once)&&(!g||E.context===g)&&a(this,S);else{for(var v=0,T=[],I=E.length;v<I;v++)(E[v].fn!==f||$&&!E[v].once||g&&E[v].context!==g)&&T.push(E[v]);T.length?this._events[S]=T.length===1?T[0]:T:a(this,S)}return this},c.prototype.removeAllListeners=function(u){var f;return u?(f=t?t+u:u,this._events[f]&&a(this,f)):(this._events=new n,this._eventsCount=0),this},c.prototype.off=c.prototype.removeListener,c.prototype.addListener=c.prototype.on,c.prefixed=t,c.EventEmitter=c,r.exports=c})(eventemitter3$3);var eventemitter3Exports$3=eventemitter3$3.exports;const EventEmitter$3=getDefaultExportFromCjs(eventemitter3Exports$3);let TimeoutError$6=class extends Error{constructor(e){super(e),this.name="TimeoutError"}},AbortError$f=class extends Error{constructor(e){super(),this.name="AbortError",this.message=e}};const getDOMException$6=r=>globalThis.DOMException===void 0?new AbortError$f(r):new DOMException(r),getAbortedReason$6=r=>{const e=r.reason===void 0?getDOMException$6("This operation was aborted."):r.reason;return e instanceof Error?e:getDOMException$6(e)};function pTimeout$6(r,e,t,n){let i;const o=new Promise((a,c)=>{if(typeof e!="number"||Math.sign(e)!==1)throw new TypeError(`Expected \`milliseconds\` to be a positive number, got \`${e}\``);if(e===Number.POSITIVE_INFINITY){a(r);return}if(n={customTimers:{setTimeout,clearTimeout},...n},n.signal){const{signal:l}=n;l.aborted&&c(getAbortedReason$6(l)),l.addEventListener("abort",()=>{c(getAbortedReason$6(l))})}i=n.customTimers.setTimeout.call(void 0,()=>{if(typeof t=="function"){try{a(t())}catch(f){c(f)}return}const l=typeof t=="string"?t:`Promise timed out after ${e} milliseconds`,u=t instanceof Error?t:new TimeoutError$6(l);typeof r.cancel=="function"&&r.cancel(),c(u)},e),(async()=>{try{a(await r)}catch(l){c(l)}finally{n.customTimers.clearTimeout.call(void 0,i)}})()});return o.clear=()=>{clearTimeout(i),i=void 0},o}function lowerBound$5(r,e,t){let n=0,i=r.length;for(;i>0;){const o=Math.trunc(i/2);let a=n+o;t(r[a],e)<=0?(n=++a,i-=o+1):i=o}return n}var __classPrivateFieldGet$7=function(r,e,t,n){if(t==="a"&&!n)throw new TypeError("Private accessor was defined without a getter");if(typeof e=="function"?r!==e||!n:!e.has(r))throw new TypeError("Cannot read private member from an object whose class did not declare it");return t==="m"?n:t==="a"?n.call(r):n?n.value:e.get(r)},_PriorityQueue_queue$3;let PriorityQueue$3=class{constructor(){_PriorityQueue_queue$3.set(this,[])}enqueue(e,t){t={priority:0,...t};const n={priority:t.priority,run:e};if(this.size&&__classPrivateFieldGet$7(this,_PriorityQueue_queue$3,"f")[this.size-1].priority>=t.priority){__classPrivateFieldGet$7(this,_PriorityQueue_queue$3,"f").push(n);return}const i=lowerBound$5(__classPrivateFieldGet$7(this,_PriorityQueue_queue$3,"f"),n,(o,a)=>a.priority-o.priority);__classPrivateFieldGet$7(this,_PriorityQueue_queue$3,"f").splice(i,0,n)}dequeue(){const e=__classPrivateFieldGet$7(this,_PriorityQueue_queue$3,"f").shift();return e?.run}filter(e){return __classPrivateFieldGet$7(this,_PriorityQueue_queue$3,"f").filter(t=>t.priority===e.priority).map(t=>t.run)}get size(){return __classPrivateFieldGet$7(this,_PriorityQueue_queue$3,"f").length}};_PriorityQueue_queue$3=new WeakMap;var __classPrivateFieldSet$3=function(r,e,t,n,i){if(n==="m")throw new TypeError("Private method is not writable");if(n==="a"&&!i)throw new TypeError("Private accessor was defined without a setter");if(typeof e=="function"?r!==e||!i:!e.has(r))throw new TypeError("Cannot write private member to an object whose class did not declare it");return n==="a"?i.call(r,t):i?i.value=t:e.set(r,t),t},__classPrivateFieldGet$6=function(r,e,t,n){if(t==="a"&&!n)throw new TypeError("Private accessor was defined without a getter");if(typeof e=="function"?r!==e||!n:!e.has(r))throw new TypeError("Cannot read private member from an object whose class did not declare it");return t==="m"?n:t==="a"?n.call(r):n?n.value:e.get(r)},_PQueue_instances$3,_PQueue_carryoverConcurrencyCount$3,_PQueue_isIntervalIgnored$3,_PQueue_intervalCount$3,_PQueue_intervalCap$3,_PQueue_interval$3,_PQueue_intervalEnd$3,_PQueue_intervalId$3,_PQueue_timeoutId$3,_PQueue_queue$3,_PQueue_queueClass$3,_PQueue_pending$3,_PQueue_concurrency$3,_PQueue_isPaused$3,_PQueue_throwOnTimeout$3,_PQueue_doesIntervalAllowAnother_get$3,_PQueue_doesConcurrentAllowAnother_get$3,_PQueue_next$3,_PQueue_onResumeInterval$3,_PQueue_isIntervalPaused_get$3,_PQueue_tryToStartAnother$3,_PQueue_initializeIntervalIfNeeded$3,_PQueue_onInterval$3,_PQueue_processQueue$3,_PQueue_throwOnAbort$3,_PQueue_onEvent$3;let AbortError$e=class extends Error{},PQueue$3=class extends EventEmitter$3{constructor(e){var t,n,i,o;if(super(),_PQueue_instances$3.add(this),_PQueue_carryoverConcurrencyCount$3.set(this,void 0),_PQueue_isIntervalIgnored$3.set(this,void 0),_PQueue_intervalCount$3.set(this,0),_PQueue_intervalCap$3.set(this,void 0),_PQueue_interval$3.set(this,void 0),_PQueue_intervalEnd$3.set(this,0),_PQueue_intervalId$3.set(this,void 0),_PQueue_timeoutId$3.set(this,void 0),_PQueue_queue$3.set(this,void 0),_PQueue_queueClass$3.set(this,void 0),_PQueue_pending$3.set(this,0),_PQueue_concurrency$3.set(this,void 0),_PQueue_isPaused$3.set(this,void 0),_PQueue_throwOnTimeout$3.set(this,void 0),Object.defineProperty(this,"timeout",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),e={carryoverConcurrencyCount:!1,intervalCap:Number.POSITIVE_INFINITY,interval:0,concurrency:Number.POSITIVE_INFINITY,autoStart:!0,queueClass:PriorityQueue$3,...e},!(typeof e.intervalCap=="number"&&e.intervalCap>=1))throw new TypeError(`Expected \`intervalCap\` to be a number from 1 and up, got \`${(n=(t=e.intervalCap)===null||t===void 0?void 0:t.toString())!==null&&n!==void 0?n:""}\` (${typeof e.intervalCap})`);if(e.interval===void 0||!(Number.isFinite(e.interval)&&e.interval>=0))throw new TypeError(`Expected \`interval\` to be a finite number >= 0, got \`${(o=(i=e.interval)===null||i===void 0?void 0:i.toString())!==null&&o!==void 0?o:""}\` (${typeof e.interval})`);__classPrivateFieldSet$3(this,_PQueue_carryoverConcurrencyCount$3,e.carryoverConcurrencyCount,"f"),__classPrivateFieldSet$3(this,_PQueue_isIntervalIgnored$3,e.intervalCap===Number.POSITIVE_INFINITY||e.interval===0,"f"),__classPrivateFieldSet$3(this,_PQueue_intervalCap$3,e.intervalCap,"f"),__classPrivateFieldSet$3(this,_PQueue_interval$3,e.interval,"f"),__classPrivateFieldSet$3(this,_PQueue_queue$3,new e.queueClass,"f"),__classPrivateFieldSet$3(this,_PQueue_queueClass$3,e.queueClass,"f"),this.concurrency=e.concurrency,this.timeout=e.timeout,__classPrivateFieldSet$3(this,_PQueue_throwOnTimeout$3,e.throwOnTimeout===!0,"f"),__classPrivateFieldSet$3(this,_PQueue_isPaused$3,e.autoStart===!1,"f")}get concurrency(){return __classPrivateFieldGet$6(this,_PQueue_concurrency$3,"f")}set concurrency(e){if(!(typeof e=="number"&&e>=1))throw new TypeError(`Expected \`concurrency\` to be a number from 1 and up, got \`${e}\` (${typeof e})`);__classPrivateFieldSet$3(this,_PQueue_concurrency$3,e,"f"),__classPrivateFieldGet$6(this,_PQueue_instances$3,"m",_PQueue_processQueue$3).call(this)}async add(e,t={}){return t={timeout:this.timeout,throwOnTimeout:__classPrivateFieldGet$6(this,_PQueue_throwOnTimeout$3,"f"),...t},new Promise((n,i)=>{__classPrivateFieldGet$6(this,_PQueue_queue$3,"f").enqueue(async()=>{var o,a,c;__classPrivateFieldSet$3(this,_PQueue_pending$3,(a=__classPrivateFieldGet$6(this,_PQueue_pending$3,"f"),a++,a),"f"),__classPrivateFieldSet$3(this,_PQueue_intervalCount$3,(c=__classPrivateFieldGet$6(this,_PQueue_intervalCount$3,"f"),c++,c),"f");try{if(!((o=t.signal)===null||o===void 0)&&o.aborted)throw new AbortError$e("The task was aborted.");let l=e({signal:t.signal});t.timeout&&(l=pTimeout$6(Promise.resolve(l),t.timeout)),t.signal&&(l=Promise.race([l,__classPrivateFieldGet$6(this,_PQueue_instances$3,"m",_PQueue_throwOnAbort$3).call(this,t.signal)]));const u=await l;n(u),this.emit("completed",u)}catch(l){if(l instanceof TimeoutError$6&&!t.throwOnTimeout){n();return}i(l),this.emit("error",l)}finally{__classPrivateFieldGet$6(this,_PQueue_instances$3,"m",_PQueue_next$3).call(this)}},t),this.emit("add"),__classPrivateFieldGet$6(this,_PQueue_instances$3,"m",_PQueue_tryToStartAnother$3).call(this)})}async addAll(e,t){return Promise.all(e.map(async n=>this.add(n,t)))}start(){return __classPrivateFieldGet$6(this,_PQueue_isPaused$3,"f")?(__classPrivateFieldSet$3(this,_PQueue_isPaused$3,!1,"f"),__classPrivateFieldGet$6(this,_PQueue_instances$3,"m",_PQueue_processQueue$3).call(this),this):this}pause(){__classPrivateFieldSet$3(this,_PQueue_isPaused$3,!0,"f")}clear(){__classPrivateFieldSet$3(this,_PQueue_queue$3,new(__classPrivateFieldGet$6(this,_PQueue_queueClass$3,"f")),"f")}async onEmpty(){__classPrivateFieldGet$6(this,_PQueue_queue$3,"f").size!==0&&await __classPrivateFieldGet$6(this,_PQueue_instances$3,"m",_PQueue_onEvent$3).call(this,"empty")}async onSizeLessThan(e){__classPrivateFieldGet$6(this,_PQueue_queue$3,"f").size<e||await __classPrivateFieldGet$6(this,_PQueue_instances$3,"m",_PQueue_onEvent$3).call(this,"next",()=>__classPrivateFieldGet$6(this,_PQueue_queue$3,"f").size<e)}async onIdle(){__classPrivateFieldGet$6(this,_PQueue_pending$3,"f")===0&&__classPrivateFieldGet$6(this,_PQueue_queue$3,"f").size===0||await __classPrivateFieldGet$6(this,_PQueue_instances$3,"m",_PQueue_onEvent$3).call(this,"idle")}get size(){return __classPrivateFieldGet$6(this,_PQueue_queue$3,"f").size}sizeBy(e){return __classPrivateFieldGet$6(this,_PQueue_queue$3,"f").filter(e).length}get pending(){return __classPrivateFieldGet$6(this,_PQueue_pending$3,"f")}get isPaused(){return __classPrivateFieldGet$6(this,_PQueue_isPaused$3,"f")}};_PQueue_carryoverConcurrencyCount$3=new WeakMap,_PQueue_isIntervalIgnored$3=new WeakMap,_PQueue_intervalCount$3=new WeakMap,_PQueue_intervalCap$3=new WeakMap,_PQueue_interval$3=new WeakMap,_PQueue_intervalEnd$3=new WeakMap,_PQueue_intervalId$3=new WeakMap,_PQueue_timeoutId$3=new WeakMap,_PQueue_queue$3=new WeakMap,_PQueue_queueClass$3=new WeakMap,_PQueue_pending$3=new WeakMap,_PQueue_concurrency$3=new WeakMap,_PQueue_isPaused$3=new WeakMap,_PQueue_throwOnTimeout$3=new WeakMap,_PQueue_instances$3=new WeakSet,_PQueue_doesIntervalAllowAnother_get$3=function r(){return __classPrivateFieldGet$6(this,_PQueue_isIntervalIgnored$3,"f")||__classPrivateFieldGet$6(this,_PQueue_intervalCount$3,"f")<__classPrivateFieldGet$6(this,_PQueue_intervalCap$3,"f")},_PQueue_doesConcurrentAllowAnother_get$3=function r(){return __classPrivateFieldGet$6(this,_PQueue_pending$3,"f")<__classPrivateFieldGet$6(this,_PQueue_concurrency$3,"f")},_PQueue_next$3=function r(){var e;__classPrivateFieldSet$3(this,_PQueue_pending$3,(e=__classPrivateFieldGet$6(this,_PQueue_pending$3,"f"),e--,e),"f"),__classPrivateFieldGet$6(this,_PQueue_instances$3,"m",_PQueue_tryToStartAnother$3).call(this),this.emit("next")},_PQueue_onResumeInterval$3=function r(){__classPrivateFieldGet$6(this,_PQueue_instances$3,"m",_PQueue_onInterval$3).call(this),__classPrivateFieldGet$6(this,_PQueue_instances$3,"m",_PQueue_initializeIntervalIfNeeded$3).call(this),__classPrivateFieldSet$3(this,_PQueue_timeoutId$3,void 0,"f")},_PQueue_isIntervalPaused_get$3=function r(){const e=Date.now();if(__classPrivateFieldGet$6(this,_PQueue_intervalId$3,"f")===void 0){const t=__classPrivateFieldGet$6(this,_PQueue_intervalEnd$3,"f")-e;if(t<0)__classPrivateFieldSet$3(this,_PQueue_intervalCount$3,__classPrivateFieldGet$6(this,_PQueue_carryoverConcurrencyCount$3,"f")?__classPrivateFieldGet$6(this,_PQueue_pending$3,"f"):0,"f");else return __classPrivateFieldGet$6(this,_PQueue_timeoutId$3,"f")===void 0&&__classPrivateFieldSet$3(this,_PQueue_timeoutId$3,setTimeout(()=>{__classPrivateFieldGet$6(this,_PQueue_instances$3,"m",_PQueue_onResumeInterval$3).call(this)},t),"f"),!0}return!1},_PQueue_tryToStartAnother$3=function r(){if(__classPrivateFieldGet$6(this,_PQueue_queue$3,"f").size===0)return __classPrivateFieldGet$6(this,_PQueue_intervalId$3,"f")&&clearInterval(__classPrivateFieldGet$6(this,_PQueue_intervalId$3,"f")),__classPrivateFieldSet$3(this,_PQueue_intervalId$3,void 0,"f"),this.emit("empty"),__classPrivateFieldGet$6(this,_PQueue_pending$3,"f")===0&&this.emit("idle"),!1;if(!__classPrivateFieldGet$6(this,_PQueue_isPaused$3,"f")){const e=!__classPrivateFieldGet$6(this,_PQueue_instances$3,"a",_PQueue_isIntervalPaused_get$3);if(__classPrivateFieldGet$6(this,_PQueue_instances$3,"a",_PQueue_doesIntervalAllowAnother_get$3)&&__classPrivateFieldGet$6(this,_PQueue_instances$3,"a",_PQueue_doesConcurrentAllowAnother_get$3)){const t=__classPrivateFieldGet$6(this,_PQueue_queue$3,"f").dequeue();return t?(this.emit("active"),t(),e&&__classPrivateFieldGet$6(this,_PQueue_instances$3,"m",_PQueue_initializeIntervalIfNeeded$3).call(this),!0):!1}}return!1},_PQueue_initializeIntervalIfNeeded$3=function r(){__classPrivateFieldGet$6(this,_PQueue_isIntervalIgnored$3,"f")||__classPrivateFieldGet$6(this,_PQueue_intervalId$3,"f")!==void 0||(__classPrivateFieldSet$3(this,_PQueue_intervalId$3,setInterval(()=>{__classPrivateFieldGet$6(this,_PQueue_instances$3,"m",_PQueue_onInterval$3).call(this)},__classPrivateFieldGet$6(this,_PQueue_interval$3,"f")),"f"),__classPrivateFieldSet$3(this,_PQueue_intervalEnd$3,Date.now()+__classPrivateFieldGet$6(this,_PQueue_interval$3,"f"),"f"))},_PQueue_onInterval$3=function r(){__classPrivateFieldGet$6(this,_PQueue_intervalCount$3,"f")===0&&__classPrivateFieldGet$6(this,_PQueue_pending$3,"f")===0&&__classPrivateFieldGet$6(this,_PQueue_intervalId$3,"f")&&(clearInterval(__classPrivateFieldGet$6(this,_PQueue_intervalId$3,"f")),__classPrivateFieldSet$3(this,_PQueue_intervalId$3,void 0,"f")),__classPrivateFieldSet$3(this,_PQueue_intervalCount$3,__classPrivateFieldGet$6(this,_PQueue_carryoverConcurrencyCount$3,"f")?__classPrivateFieldGet$6(this,_PQueue_pending$3,"f"):0,"f"),__classPrivateFieldGet$6(this,_PQueue_instances$3,"m",_PQueue_processQueue$3).call(this)},_PQueue_processQueue$3=function r(){for(;__classPrivateFieldGet$6(this,_PQueue_instances$3,"m",_PQueue_tryToStartAnother$3).call(this););},_PQueue_throwOnAbort$3=async function r(e){return new Promise((t,n)=>{e.addEventListener("abort",()=>{n(new AbortError$e("The task was aborted."))},{once:!0})})},_PQueue_onEvent$3=async function r(e,t){return new Promise(n=>{const i=()=>{t&&!t()||(this.off(e,i),n())};this.on(e,i)})};const typeofs$2=["string","number","bigint","symbol"],objectTypeNames$2=["Function","Generator","AsyncGenerator","GeneratorFunction","AsyncGeneratorFunction","AsyncFunction","Observable","Array","Buffer","Object","RegExp","Date","Error","Map","Set","WeakMap","WeakSet","ArrayBuffer","SharedArrayBuffer","DataView","Promise","URL","HTMLElement","Int8Array","Uint8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","BigInt64Array","BigUint64Array"];function is$2(r){if(r===null)return"null";if(r===void 0)return"undefined";if(r===!0||r===!1)return"boolean";const e=typeof r;if(typeofs$2.includes(e))return e;if(e==="function")return"Function";if(Array.isArray(r))return"Array";if(isBuffer$5(r))return"Buffer";const t=getObjectType$2(r);return t||"Object"}function isBuffer$5(r){return r&&r.constructor&&r.constructor.isBuffer&&r.constructor.isBuffer.call(null,r)}function getObjectType$2(r){const e=Object.prototype.toString.call(r).slice(8,-1);if(objectTypeNames$2.includes(e))return e}let Type$2=class{constructor(e,t,n){this.major=e,this.majorEncoded=e<<5,this.name=t,this.terminal=n}toString(){return`Type[${this.major}].${this.name}`}compare(e){return this.major<e.major?-1:this.major>e.major?1:0}};Type$2.uint=new Type$2(0,"uint",!0);Type$2.negint=new Type$2(1,"negint",!0);Type$2.bytes=new Type$2(2,"bytes",!0);Type$2.string=new Type$2(3,"string",!0);Type$2.array=new Type$2(4,"array",!1);Type$2.map=new Type$2(5,"map",!1);Type$2.tag=new Type$2(6,"tag",!1);Type$2.float=new Type$2(7,"float",!0);Type$2.false=new Type$2(7,"false",!0);Type$2.true=new Type$2(7,"true",!0);Type$2.null=new Type$2(7,"null",!0);Type$2.undefined=new Type$2(7,"undefined",!0);Type$2.break=new Type$2(7,"break",!0);let Token$2=class{constructor(e,t,n){this.type=e,this.value=t,this.encodedLength=n,this.encodedBytes=void 0,this.byteValue=void 0}toString(){return`Token[${this.type}].${this.value}`}};const useBuffer$2=globalThis.process&&!globalThis.process.browser&&globalThis.Buffer&&typeof globalThis.Buffer.isBuffer=="function",textDecoder$3=new TextDecoder,textEncoder$5=new TextEncoder;function isBuffer$4(r){return useBuffer$2&&globalThis.Buffer.isBuffer(r)}const toString$9=useBuffer$2?(r,e,t)=>t-e>64?globalThis.Buffer.from(r.subarray(e,t)).toString("utf8"):utf8Slice$1(r,e,t):(r,e,t)=>t-e>64?textDecoder$3.decode(r.subarray(e,t)):utf8Slice$1(r,e,t),fromString$9=useBuffer$2?r=>r.length>64?globalThis.Buffer.from(r):utf8ToBytes$5(r):r=>r.length>64?textEncoder$5.encode(r):utf8ToBytes$5(r),slice$1=useBuffer$2?(r,e,t)=>isBuffer$4(r)?new Uint8Array(r.subarray(e,t)):r.slice(e,t):(r,e,t)=>r.slice(e,t);function compare$3(r,e){if(isBuffer$4(r)&&isBuffer$4(e))return r.compare(e);for(let t=0;t<r.length;t++)if(r[t]!==e[t])return r[t]<e[t]?-1:1;return 0}function utf8ToBytes$5(r,e=1/0){let t;const n=r.length;let i=null;const o=[];for(let a=0;a<n;++a){if(t=r.charCodeAt(a),t>55295&&t<57344){if(!i){if(t>56319){(e-=3)>-1&&o.push(239,191,189);continue}else if(a+1===n){(e-=3)>-1&&o.push(239,191,189);continue}i=t;continue}if(t<56320){(e-=3)>-1&&o.push(239,191,189),i=t;continue}t=(i-55296<<10|t-56320)+65536}else i&&(e-=3)>-1&&o.push(239,191,189);if(i=null,t<128){if((e-=1)<0)break;o.push(t)}else if(t<2048){if((e-=2)<0)break;o.push(t>>6|192,t&63|128)}else if(t<65536){if((e-=3)<0)break;o.push(t>>12|224,t>>6&63|128,t&63|128)}else if(t<1114112){if((e-=4)<0)break;o.push(t>>18|240,t>>12&63|128,t>>6&63|128,t&63|128)}else throw new Error("Invalid code point")}return o}function utf8Slice$1(r,e,t){const n=[];for(;e<t;){const i=r[e];let o=null,a=i>239?4:i>223?3:i>191?2:1;if(e+a<=t){let c,l,u,f;switch(a){case 1:i<128&&(o=i);break;case 2:c=r[e+1],(c&192)===128&&(f=(i&31)<<6|c&63,f>127&&(o=f));break;case 3:c=r[e+1],l=r[e+2],(c&192)===128&&(l&192)===128&&(f=(i&15)<<12|(c&63)<<6|l&63,f>2047&&(f<55296||f>57343)&&(o=f));break;case 4:c=r[e+1],l=r[e+2],u=r[e+3],(c&192)===128&&(l&192)===128&&(u&192)===128&&(f=(i&15)<<18|(c&63)<<12|(l&63)<<6|u&63,f>65535&&f<1114112&&(o=f))}}o===null?(o=65533,a=1):o>65535&&(o-=65536,n.push(o>>>10&1023|55296),o=56320|o&1023),n.push(o),e+=a}return decodeCodePointsArray$1(n)}const MAX_ARGUMENTS_LENGTH$1=4096;function decodeCodePointsArray$1(r){const e=r.length;if(e<=MAX_ARGUMENTS_LENGTH$1)return String.fromCharCode.apply(String,r);let t="",n=0;for(;n<e;)t+=String.fromCharCode.apply(String,r.slice(n,n+=MAX_ARGUMENTS_LENGTH$1));return t}const decodeErrPrefix$2="CBOR decode error:",encodeErrPrefix$2="CBOR encode error:";function assertEnoughData$1(r,e,t){if(r.length-e<t)throw new Error(`${decodeErrPrefix$2} not enough data for type`)}const uintBoundaries$2=[24,256,65536,4294967296,BigInt("18446744073709551616")];function readUint8$1(r,e,t){assertEnoughData$1(r,e,1);const n=r[e];if(t.strict===!0&&n<uintBoundaries$2[0])throw new Error(`${decodeErrPrefix$2} integer encoded in more bytes than necessary (strict decode)`);return n}function readUint16$1(r,e,t){assertEnoughData$1(r,e,2);const n=r[e]<<8|r[e+1];if(t.strict===!0&&n<uintBoundaries$2[1])throw new Error(`${decodeErrPrefix$2} integer encoded in more bytes than necessary (strict decode)`);return n}function readUint32$1(r,e,t){assertEnoughData$1(r,e,4);const n=r[e]*16777216+(r[e+1]<<16)+(r[e+2]<<8)+r[e+3];if(t.strict===!0&&n<uintBoundaries$2[2])throw new Error(`${decodeErrPrefix$2} integer encoded in more bytes than necessary (strict decode)`);return n}function readUint64$1(r,e,t){assertEnoughData$1(r,e,8);const n=r[e]*16777216+(r[e+1]<<16)+(r[e+2]<<8)+r[e+3],i=r[e+4]*16777216+(r[e+5]<<16)+(r[e+6]<<8)+r[e+7],o=(BigInt(n)<<BigInt(32))+BigInt(i);if(t.strict===!0&&o<uintBoundaries$2[3])throw new Error(`${decodeErrPrefix$2} integer encoded in more bytes than necessary (strict decode)`);if(o<=Number.MAX_SAFE_INTEGER)return Number(o);if(t.allowBigInt===!0)return o;throw new Error(`${decodeErrPrefix$2} integers outside of the safe integer range are not supported`)}function decodeUint8$1(r,e,t,n){return new Token$2(Type$2.uint,readUint8$1(r,e+1,n),2)}function decodeUint16$1(r,e,t,n){return new Token$2(Type$2.uint,readUint16$1(r,e+1,n),3)}function decodeUint32$1(r,e,t,n){return new Token$2(Type$2.uint,readUint32$1(r,e+1,n),5)}function decodeUint64$1(r,e,t,n){return new Token$2(Type$2.uint,readUint64$1(r,e+1,n),9)}function encodeUint$2(r,e){return encodeUintValue$2(r,0,e.value)}function encodeUintValue$2(r,e,t){if(t<uintBoundaries$2[0]){const n=Number(t);r.push([e|n])}else if(t<uintBoundaries$2[1]){const n=Number(t);r.push([e|24,n])}else if(t<uintBoundaries$2[2]){const n=Number(t);r.push([e|25,n>>>8,n&255])}else if(t<uintBoundaries$2[3]){const n=Number(t);r.push([e|26,n>>>24&255,n>>>16&255,n>>>8&255,n&255])}else{const n=BigInt(t);if(n<uintBoundaries$2[4]){const i=[e|27,0,0,0,0,0,0,0];let o=Number(n&BigInt(4294967295)),a=Number(n>>BigInt(32)&BigInt(4294967295));i[8]=o&255,o=o>>8,i[7]=o&255,o=o>>8,i[6]=o&255,o=o>>8,i[5]=o&255,i[4]=a&255,a=a>>8,i[3]=a&255,a=a>>8,i[2]=a&255,a=a>>8,i[1]=a&255,r.push(i)}else throw new Error(`${decodeErrPrefix$2} encountered BigInt larger than allowable range`)}}encodeUint$2.encodedSize=function r(e){return encodeUintValue$2.encodedSize(e.value)};encodeUintValue$2.encodedSize=function r(e){return e<uintBoundaries$2[0]?1:e<uintBoundaries$2[1]?2:e<uintBoundaries$2[2]?3:e<uintBoundaries$2[3]?5:9};encodeUint$2.compareTokens=function r(e,t){return e.value<t.value?-1:e.value>t.value?1:0};function decodeNegint8$1(r,e,t,n){return new Token$2(Type$2.negint,-1-readUint8$1(r,e+1,n),2)}function decodeNegint16$1(r,e,t,n){return new Token$2(Type$2.negint,-1-readUint16$1(r,e+1,n),3)}function decodeNegint32$1(r,e,t,n){return new Token$2(Type$2.negint,-1-readUint32$1(r,e+1,n),5)}const neg1b$2=BigInt(-1),pos1b$2=BigInt(1);function decodeNegint64$1(r,e,t,n){const i=readUint64$1(r,e+1,n);if(typeof i!="bigint"){const o=-1-i;if(o>=Number.MIN_SAFE_INTEGER)return new Token$2(Type$2.negint,o,9)}if(n.allowBigInt!==!0)throw new Error(`${decodeErrPrefix$2} integers outside of the safe integer range are not supported`);return new Token$2(Type$2.negint,neg1b$2-BigInt(i),9)}function encodeNegint$2(r,e){const t=e.value,n=typeof t=="bigint"?t*neg1b$2-pos1b$2:t*-1-1;encodeUintValue$2(r,e.type.majorEncoded,n)}encodeNegint$2.encodedSize=function r(e){const t=e.value,n=typeof t=="bigint"?t*neg1b$2-pos1b$2:t*-1-1;return n<uintBoundaries$2[0]?1:n<uintBoundaries$2[1]?2:n<uintBoundaries$2[2]?3:n<uintBoundaries$2[3]?5:9};encodeNegint$2.compareTokens=function r(e,t){return e.value<t.value?1:e.value>t.value?-1:0};function toToken$7(r,e,t,n){assertEnoughData$1(r,e,t+n);const i=slice$1(r,e+t,e+t+n);return new Token$2(Type$2.bytes,i,t+n)}function decodeBytesCompact$1(r,e,t,n){return toToken$7(r,e,1,t)}function decodeBytes8$1(r,e,t,n){return toToken$7(r,e,2,readUint8$1(r,e+1,n))}function decodeBytes16$1(r,e,t,n){return toToken$7(r,e,3,readUint16$1(r,e+1,n))}function decodeBytes32$1(r,e,t,n){return toToken$7(r,e,5,readUint32$1(r,e+1,n))}function decodeBytes64$1(r,e,t,n){const i=readUint64$1(r,e+1,n);if(typeof i=="bigint")throw new Error(`${decodeErrPrefix$2} 64-bit integer bytes lengths not supported`);return toToken$7(r,e,9,i)}function tokenBytes$2(r){return r.encodedBytes===void 0&&(r.encodedBytes=r.type===Type$2.string?fromString$9(r.value):r.value),r.encodedBytes}function encodeBytes$2(r,e){const t=tokenBytes$2(e);encodeUintValue$2(r,e.type.majorEncoded,t.length),r.push(t)}encodeBytes$2.encodedSize=function r(e){const t=tokenBytes$2(e);return encodeUintValue$2.encodedSize(t.length)+t.length};encodeBytes$2.compareTokens=function r(e,t){return compareBytes$2(tokenBytes$2(e),tokenBytes$2(t))};function compareBytes$2(r,e){return r.length<e.length?-1:r.length>e.length?1:compare$3(r,e)}function toToken$6(r,e,t,n,i){const o=t+n;assertEnoughData$1(r,e,o);const a=new Token$2(Type$2.string,toString$9(r,e+t,e+o),o);return i.retainStringBytes===!0&&(a.byteValue=slice$1(r,e+t,e+o)),a}function decodeStringCompact$1(r,e,t,n){return toToken$6(r,e,1,t,n)}function decodeString8$1(r,e,t,n){return toToken$6(r,e,2,readUint8$1(r,e+1,n),n)}function decodeString16$1(r,e,t,n){return toToken$6(r,e,3,readUint16$1(r,e+1,n),n)}function decodeString32$1(r,e,t,n){return toToken$6(r,e,5,readUint32$1(r,e+1,n),n)}function decodeString64$1(r,e,t,n){const i=readUint64$1(r,e+1,n);if(typeof i=="bigint")throw new Error(`${decodeErrPrefix$2} 64-bit integer string lengths not supported`);return toToken$6(r,e,9,i,n)}const encodeString$2=encodeBytes$2;function toToken$5(r,e,t,n){return new Token$2(Type$2.array,n,t)}function decodeArrayCompact$1(r,e,t,n){return toToken$5(r,e,1,t)}function decodeArray8$1(r,e,t,n){return toToken$5(r,e,2,readUint8$1(r,e+1,n))}function decodeArray16$1(r,e,t,n){return toToken$5(r,e,3,readUint16$1(r,e+1,n))}function decodeArray32$1(r,e,t,n){return toToken$5(r,e,5,readUint32$1(r,e+1,n))}function decodeArray64$1(r,e,t,n){const i=readUint64$1(r,e+1,n);if(typeof i=="bigint")throw new Error(`${decodeErrPrefix$2} 64-bit integer array lengths not supported`);return toToken$5(r,e,9,i)}function decodeArrayIndefinite$1(r,e,t,n){if(n.allowIndefinite===!1)throw new Error(`${decodeErrPrefix$2} indefinite length items not allowed`);return toToken$5(r,e,1,1/0)}function encodeArray$2(r,e){encodeUintValue$2(r,Type$2.array.majorEncoded,e.value)}encodeArray$2.compareTokens=encodeUint$2.compareTokens;encodeArray$2.encodedSize=function r(e){return encodeUintValue$2.encodedSize(e.value)};function toToken$4(r,e,t,n){return new Token$2(Type$2.map,n,t)}function decodeMapCompact$1(r,e,t,n){return toToken$4(r,e,1,t)}function decodeMap8$1(r,e,t,n){return toToken$4(r,e,2,readUint8$1(r,e+1,n))}function decodeMap16$1(r,e,t,n){return toToken$4(r,e,3,readUint16$1(r,e+1,n))}function decodeMap32$1(r,e,t,n){return toToken$4(r,e,5,readUint32$1(r,e+1,n))}function decodeMap64$1(r,e,t,n){const i=readUint64$1(r,e+1,n);if(typeof i=="bigint")throw new Error(`${decodeErrPrefix$2} 64-bit integer map lengths not supported`);return toToken$4(r,e,9,i)}function decodeMapIndefinite$1(r,e,t,n){if(n.allowIndefinite===!1)throw new Error(`${decodeErrPrefix$2} indefinite length items not allowed`);return toToken$4(r,e,1,1/0)}function encodeMap$2(r,e){encodeUintValue$2(r,Type$2.map.majorEncoded,e.value)}encodeMap$2.compareTokens=encodeUint$2.compareTokens;encodeMap$2.encodedSize=function r(e){return encodeUintValue$2.encodedSize(e.value)};function decodeTagCompact$1(r,e,t,n){return new Token$2(Type$2.tag,t,1)}function decodeTag8$1(r,e,t,n){return new Token$2(Type$2.tag,readUint8$1(r,e+1,n),2)}function decodeTag16$1(r,e,t,n){return new Token$2(Type$2.tag,readUint16$1(r,e+1,n),3)}function decodeTag32$1(r,e,t,n){return new Token$2(Type$2.tag,readUint32$1(r,e+1,n),5)}function decodeTag64$1(r,e,t,n){return new Token$2(Type$2.tag,readUint64$1(r,e+1,n),9)}function encodeTag$2(r,e){encodeUintValue$2(r,Type$2.tag.majorEncoded,e.value)}encodeTag$2.compareTokens=encodeUint$2.compareTokens;encodeTag$2.encodedSize=function r(e){return encodeUintValue$2.encodedSize(e.value)};const MINOR_FALSE$2=20,MINOR_TRUE$2=21,MINOR_NULL$2=22,MINOR_UNDEFINED$2=23;function decodeUndefined$1(r,e,t,n){if(n.allowUndefined===!1)throw new Error(`${decodeErrPrefix$2} undefined values are not supported`);return n.coerceUndefinedToNull===!0?new Token$2(Type$2.null,null,1):new Token$2(Type$2.undefined,void 0,1)}function decodeBreak$1(r,e,t,n){if(n.allowIndefinite===!1)throw new Error(`${decodeErrPrefix$2} indefinite length items not allowed`);return new Token$2(Type$2.break,void 0,1)}function createToken$1(r,e,t){if(t){if(t.allowNaN===!1&&Number.isNaN(r))throw new Error(`${decodeErrPrefix$2} NaN values are not supported`);if(t.allowInfinity===!1&&(r===1/0||r===-1/0))throw new Error(`${decodeErrPrefix$2} Infinity values are not supported`)}return new Token$2(Type$2.float,r,e)}function decodeFloat16$1(r,e,t,n){return createToken$1(readFloat16$2(r,e+1),3,n)}function decodeFloat32$1(r,e,t,n){return createToken$1(readFloat32$2(r,e+1),5,n)}function decodeFloat64$1(r,e,t,n){return createToken$1(readFloat64$2(r,e+1),9,n)}function encodeFloat$2(r,e,t){const n=e.value;if(n===!1)r.push([Type$2.float.majorEncoded|MINOR_FALSE$2]);else if(n===!0)r.push([Type$2.float.majorEncoded|MINOR_TRUE$2]);else if(n===null)r.push([Type$2.float.majorEncoded|MINOR_NULL$2]);else if(n===void 0)r.push([Type$2.float.majorEncoded|MINOR_UNDEFINED$2]);else{let i,o=!1;(!t||t.float64!==!0)&&(encodeFloat16$2(n),i=readFloat16$2(ui8a$2,1),n===i||Number.isNaN(n)?(ui8a$2[0]=249,r.push(ui8a$2.slice(0,3)),o=!0):(encodeFloat32$2(n),i=readFloat32$2(ui8a$2,1),n===i&&(ui8a$2[0]=250,r.push(ui8a$2.slice(0,5)),o=!0))),o||(encodeFloat64$2(n),i=readFloat64$2(ui8a$2,1),ui8a$2[0]=251,r.push(ui8a$2.slice(0,9)))}}encodeFloat$2.encodedSize=function r(e,t){const n=e.value;if(n===!1||n===!0||n===null||n===void 0)return 1;if(!t||t.float64!==!0){encodeFloat16$2(n);let i=readFloat16$2(ui8a$2,1);if(n===i||Number.isNaN(n))return 3;if(encodeFloat32$2(n),i=readFloat32$2(ui8a$2,1),n===i)return 5}return 9};const buffer$2=new ArrayBuffer(9),dataView$2=new DataView(buffer$2,1),ui8a$2=new Uint8Array(buffer$2,0);function encodeFloat16$2(r){if(r===1/0)dataView$2.setUint16(0,31744,!1);else if(r===-1/0)dataView$2.setUint16(0,64512,!1);else if(Number.isNaN(r))dataView$2.setUint16(0,32256,!1);else{dataView$2.setFloat32(0,r);const e=dataView$2.getUint32(0),t=(e&2139095040)>>23,n=e&8388607;if(t===255)dataView$2.setUint16(0,31744,!1);else if(t===0)dataView$2.setUint16(0,(r&2147483648)>>16|n>>13,!1);else{const i=t-127;i<-24?dataView$2.setUint16(0,0):i<-14?dataView$2.setUint16(0,(e&2147483648)>>16|1<<24+i,!1):dataView$2.setUint16(0,(e&2147483648)>>16|i+15<<10|n>>13,!1)}}}function readFloat16$2(r,e){if(r.length-e<2)throw new Error(`${decodeErrPrefix$2} not enough data for float16`);const t=(r[e]<<8)+r[e+1];if(t===31744)return 1/0;if(t===64512)return-1/0;if(t===32256)return NaN;const n=t>>10&31,i=t&1023;let o;return n===0?o=i*2**-24:n!==31?o=(i+1024)*2**(n-25):o=i===0?1/0:NaN,t&32768?-o:o}function encodeFloat32$2(r){dataView$2.setFloat32(0,r,!1)}function readFloat32$2(r,e){if(r.length-e<4)throw new Error(`${decodeErrPrefix$2} not enough data for float32`);const t=(r.byteOffset||0)+e;return new DataView(r.buffer,t,4).getFloat32(0,!1)}function encodeFloat64$2(r){dataView$2.setFloat64(0,r,!1)}function readFloat64$2(r,e){if(r.length-e<8)throw new Error(`${decodeErrPrefix$2} not enough data for float64`);const t=(r.byteOffset||0)+e;return new DataView(r.buffer,t,8).getFloat64(0,!1)}encodeFloat$2.compareTokens=encodeUint$2.compareTokens;function invalidMinor$1(r,e,t){throw new Error(`${decodeErrPrefix$2} encountered invalid minor (${t}) for major ${r[e]>>>5}`)}function errorer$1(r){return()=>{throw new Error(`${decodeErrPrefix$2} ${r}`)}}const jump$1=[];for(let r=0;r<=23;r++)jump$1[r]=invalidMinor$1;jump$1[24]=decodeUint8$1;jump$1[25]=decodeUint16$1;jump$1[26]=decodeUint32$1;jump$1[27]=decodeUint64$1;jump$1[28]=invalidMinor$1;jump$1[29]=invalidMinor$1;jump$1[30]=invalidMinor$1;jump$1[31]=invalidMinor$1;for(let r=32;r<=55;r++)jump$1[r]=invalidMinor$1;jump$1[56]=decodeNegint8$1;jump$1[57]=decodeNegint16$1;jump$1[58]=decodeNegint32$1;jump$1[59]=decodeNegint64$1;jump$1[60]=invalidMinor$1;jump$1[61]=invalidMinor$1;jump$1[62]=invalidMinor$1;jump$1[63]=invalidMinor$1;for(let r=64;r<=87;r++)jump$1[r]=decodeBytesCompact$1;jump$1[88]=decodeBytes8$1;jump$1[89]=decodeBytes16$1;jump$1[90]=decodeBytes32$1;jump$1[91]=decodeBytes64$1;jump$1[92]=invalidMinor$1;jump$1[93]=invalidMinor$1;jump$1[94]=invalidMinor$1;jump$1[95]=errorer$1("indefinite length bytes/strings are not supported");for(let r=96;r<=119;r++)jump$1[r]=decodeStringCompact$1;jump$1[120]=decodeString8$1;jump$1[121]=decodeString16$1;jump$1[122]=decodeString32$1;jump$1[123]=decodeString64$1;jump$1[124]=invalidMinor$1;jump$1[125]=invalidMinor$1;jump$1[126]=invalidMinor$1;jump$1[127]=errorer$1("indefinite length bytes/strings are not supported");for(let r=128;r<=151;r++)jump$1[r]=decodeArrayCompact$1;jump$1[152]=decodeArray8$1;jump$1[153]=decodeArray16$1;jump$1[154]=decodeArray32$1;jump$1[155]=decodeArray64$1;jump$1[156]=invalidMinor$1;jump$1[157]=invalidMinor$1;jump$1[158]=invalidMinor$1;jump$1[159]=decodeArrayIndefinite$1;for(let r=160;r<=183;r++)jump$1[r]=decodeMapCompact$1;jump$1[184]=decodeMap8$1;jump$1[185]=decodeMap16$1;jump$1[186]=decodeMap32$1;jump$1[187]=decodeMap64$1;jump$1[188]=invalidMinor$1;jump$1[189]=invalidMinor$1;jump$1[190]=invalidMinor$1;jump$1[191]=decodeMapIndefinite$1;for(let r=192;r<=215;r++)jump$1[r]=decodeTagCompact$1;jump$1[216]=decodeTag8$1;jump$1[217]=decodeTag16$1;jump$1[218]=decodeTag32$1;jump$1[219]=decodeTag64$1;jump$1[220]=invalidMinor$1;jump$1[221]=invalidMinor$1;jump$1[222]=invalidMinor$1;jump$1[223]=invalidMinor$1;for(let r=224;r<=243;r++)jump$1[r]=errorer$1("simple values are not supported");jump$1[244]=invalidMinor$1;jump$1[245]=invalidMinor$1;jump$1[246]=invalidMinor$1;jump$1[247]=decodeUndefined$1;jump$1[248]=errorer$1("simple values are not supported");jump$1[249]=decodeFloat16$1;jump$1[250]=decodeFloat32$1;jump$1[251]=decodeFloat64$1;jump$1[252]=invalidMinor$1;jump$1[253]=invalidMinor$1;jump$1[254]=invalidMinor$1;jump$1[255]=decodeBreak$1;const quick$1=[];for(let r=0;r<24;r++)quick$1[r]=new Token$2(Type$2.uint,r,1);for(let r=-1;r>=-24;r--)quick$1[31-r]=new Token$2(Type$2.negint,r,1);quick$1[64]=new Token$2(Type$2.bytes,new Uint8Array(0),1);quick$1[96]=new Token$2(Type$2.string,"",1);quick$1[128]=new Token$2(Type$2.array,0,1);quick$1[160]=new Token$2(Type$2.map,0,1);quick$1[244]=new Token$2(Type$2.false,!1,1);quick$1[245]=new Token$2(Type$2.true,!0,1);quick$1[246]=new Token$2(Type$2.null,null,1);function makeCborEncoders$2(){const r=[];return r[Type$2.uint.major]=encodeUint$2,r[Type$2.negint.major]=encodeNegint$2,r[Type$2.bytes.major]=encodeBytes$2,r[Type$2.string.major]=encodeString$2,r[Type$2.array.major]=encodeArray$2,r[Type$2.map.major]=encodeMap$2,r[Type$2.tag.major]=encodeTag$2,r[Type$2.float.major]=encodeFloat$2,r}makeCborEncoders$2();let Ref$2=class Jt{constructor(e,t){this.obj=e,this.parent=t}includes(e){let t=this;do if(t.obj===e)return!0;while(t=t.parent);return!1}static createCheck(e,t){if(e&&e.includes(t))throw new Error(`${encodeErrPrefix$2} object contains circular references`);return new Jt(t,e)}};const simpleTokens$2={null:new Token$2(Type$2.null,null),undefined:new Token$2(Type$2.undefined,void 0),true:new Token$2(Type$2.true,!0),false:new Token$2(Type$2.false,!1),emptyArray:new Token$2(Type$2.array,0),emptyMap:new Token$2(Type$2.map,0)},typeEncoders$2={number(r,e,t,n){return!Number.isInteger(r)||!Number.isSafeInteger(r)?new Token$2(Type$2.float,r):r>=0?new Token$2(Type$2.uint,r):new Token$2(Type$2.negint,r)},bigint(r,e,t,n){return r>=BigInt(0)?new Token$2(Type$2.uint,r):new Token$2(Type$2.negint,r)},Uint8Array(r,e,t,n){return new Token$2(Type$2.bytes,r)},string(r,e,t,n){return new Token$2(Type$2.string,r)},boolean(r,e,t,n){return r?simpleTokens$2.true:simpleTokens$2.false},null(r,e,t,n){return simpleTokens$2.null},undefined(r,e,t,n){return simpleTokens$2.undefined},ArrayBuffer(r,e,t,n){return new Token$2(Type$2.bytes,new Uint8Array(r))},DataView(r,e,t,n){return new Token$2(Type$2.bytes,new Uint8Array(r.buffer,r.byteOffset,r.byteLength))},Array(r,e,t,n){if(!r.length)return t.addBreakTokens===!0?[simpleTokens$2.emptyArray,new Token$2(Type$2.break)]:simpleTokens$2.emptyArray;n=Ref$2.createCheck(n,r);const i=[];let o=0;for(const a of r)i[o++]=objectToTokens$2(a,t,n);return t.addBreakTokens?[new Token$2(Type$2.array,r.length),i,new Token$2(Type$2.break)]:[new Token$2(Type$2.array,r.length),i]},Object(r,e,t,n){const i=e!=="Object",o=i?r.keys():Object.keys(r),a=i?r.size:o.length;if(!a)return t.addBreakTokens===!0?[simpleTokens$2.emptyMap,new Token$2(Type$2.break)]:simpleTokens$2.emptyMap;n=Ref$2.createCheck(n,r);const c=[];let l=0;for(const u of o)c[l++]=[objectToTokens$2(u,t,n),objectToTokens$2(i?r.get(u):r[u],t,n)];return sortMapEntries$2(c,t),t.addBreakTokens?[new Token$2(Type$2.map,a),c,new Token$2(Type$2.break)]:[new Token$2(Type$2.map,a),c]}};typeEncoders$2.Map=typeEncoders$2.Object;typeEncoders$2.Buffer=typeEncoders$2.Uint8Array;for(const r of"Uint8Clamped Uint16 Uint32 Int8 Int16 Int32 BigUint64 BigInt64 Float32 Float64".split(" "))typeEncoders$2[`${r}Array`]=typeEncoders$2.DataView;function objectToTokens$2(r,e={},t){const n=is$2(r),i=e&&e.typeEncoders&&e.typeEncoders[n]||typeEncoders$2[n];if(typeof i=="function"){const a=i(r,n,e,t);if(a!=null)return a}const o=typeEncoders$2[n];if(!o)throw new Error(`${encodeErrPrefix$2} unsupported type: ${n}`);return o(r,n,e,t)}function sortMapEntries$2(r,e){e.mapSorter&&r.sort(e.mapSorter)}const defaultDecodeOptions$1={strict:!1,allowIndefinite:!0,allowUndefined:!0,allowBigInt:!0};let Tokeniser$1=class{constructor(e,t={}){this.pos=0,this.data=e,this.options=t}done(){return this.pos>=this.data.length}next(){const e=this.data[this.pos];let t=quick$1[e];if(t===void 0){const n=jump$1[e];if(!n)throw new Error(`${decodeErrPrefix$2} no decoder for major type ${e>>>5} (byte 0x${e.toString(16).padStart(2,"0")})`);const i=e&31;t=n(this.data,this.pos,i,this.options)}return this.pos+=t.encodedLength,t}};const DONE$1=Symbol.for("DONE"),BREAK$1=Symbol.for("BREAK");function tokenToArray$1(r,e,t){const n=[];for(let i=0;i<r.value;i++){const o=tokensToObject$1(e,t);if(o===BREAK$1){if(r.value===1/0)break;throw new Error(`${decodeErrPrefix$2} got unexpected break to lengthed array`)}if(o===DONE$1)throw new Error(`${decodeErrPrefix$2} found array but not enough entries (got ${i}, expected ${r.value})`);n[i]=o}return n}function tokenToMap$1(r,e,t){const n=t.useMaps===!0,i=n?void 0:{},o=n?new Map:void 0;for(let a=0;a<r.value;a++){const c=tokensToObject$1(e,t);if(c===BREAK$1){if(r.value===1/0)break;throw new Error(`${decodeErrPrefix$2} got unexpected break to lengthed map`)}if(c===DONE$1)throw new Error(`${decodeErrPrefix$2} found map but not enough entries (got ${a} [no key], expected ${r.value})`);if(n!==!0&&typeof c!="string")throw new Error(`${decodeErrPrefix$2} non-string keys not supported (got ${typeof c})`);if(t.rejectDuplicateMapKeys===!0&&(n&&o.has(c)||!n&&c in i))throw new Error(`${decodeErrPrefix$2} found repeat map key "${c}"`);const l=tokensToObject$1(e,t);if(l===DONE$1)throw new Error(`${decodeErrPrefix$2} found map but not enough entries (got ${a} [no value], expected ${r.value})`);n?o.set(c,l):i[c]=l}return n?o:i}function tokensToObject$1(r,e){if(r.done())return DONE$1;const t=r.next();if(t.type===Type$2.break)return BREAK$1;if(t.type.terminal)return t.value;if(t.type===Type$2.array)return tokenToArray$1(t,r,e);if(t.type===Type$2.map)return tokenToMap$1(t,r,e);if(t.type===Type$2.tag){if(e.tags&&typeof e.tags[t.value]=="function"){const n=tokensToObject$1(r,e);return e.tags[t.value](n)}throw new Error(`${decodeErrPrefix$2} tag not supported (${t.value})`)}throw new Error("unsupported")}function decode$f(r,e){if(!(r instanceof Uint8Array))throw new Error(`${decodeErrPrefix$2} data to decode must be a Uint8Array`);e=Object.assign({},defaultDecodeOptions$1,e);const t=e.tokenizer||new Tokeniser$1(r,e),n=tokensToObject$1(t,e);if(n===DONE$1)throw new Error(`${decodeErrPrefix$2} did not find any content to decode`);if(n===BREAK$1)throw new Error(`${decodeErrPrefix$2} got unexpected break`);if(!t.done())throw new Error(`${decodeErrPrefix$2} too many terminals, data makes no sense`);return n}const CID_CBOR_TAG=42;function cidDecoder(r){if(r[0]!==0)throw new Error("Invalid CID for CBOR tag 42; expected leading 0x00");return CID$3.decode(r.subarray(1))}const decodeOptions={allowIndefinite:!1,coerceUndefinedToNull:!0,allowNaN:!1,allowInfinity:!1,allowBigInt:!0,strict:!0,useMaps:!1,rejectDuplicateMapKeys:!0,tags:[]};decodeOptions.tags[CID_CBOR_TAG]=cidDecoder;const code$2=113,decode$e=r=>decode$f(r,decodeOptions),typeofs$1=["string","number","bigint","symbol"],objectTypeNames$1=["Function","Generator","AsyncGenerator","GeneratorFunction","AsyncGeneratorFunction","AsyncFunction","Observable","Array","Buffer","Object","RegExp","Date","Error","Map","Set","WeakMap","WeakSet","ArrayBuffer","SharedArrayBuffer","DataView","Promise","URL","HTMLElement","Int8Array","Uint8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","BigInt64Array","BigUint64Array"];function is$1(r){if(r===null)return"null";if(r===void 0)return"undefined";if(r===!0||r===!1)return"boolean";const e=typeof r;if(typeofs$1.includes(e))return e;if(e==="function")return"Function";if(Array.isArray(r))return"Array";if(isBuffer$3(r))return"Buffer";const t=getObjectType$1(r);return t||"Object"}function isBuffer$3(r){return r&&r.constructor&&r.constructor.isBuffer&&r.constructor.isBuffer.call(null,r)}function getObjectType$1(r){const e=Object.prototype.toString.call(r).slice(8,-1);if(objectTypeNames$1.includes(e))return e}let Type$1=class{constructor(e,t,n){this.major=e,this.majorEncoded=e<<5,this.name=t,this.terminal=n}toString(){return`Type[${this.major}].${this.name}`}compare(e){return this.major<e.major?-1:this.major>e.major?1:0}};Type$1.uint=new Type$1(0,"uint",!0);Type$1.negint=new Type$1(1,"negint",!0);Type$1.bytes=new Type$1(2,"bytes",!0);Type$1.string=new Type$1(3,"string",!0);Type$1.array=new Type$1(4,"array",!1);Type$1.map=new Type$1(5,"map",!1);Type$1.tag=new Type$1(6,"tag",!1);Type$1.float=new Type$1(7,"float",!0);Type$1.false=new Type$1(7,"false",!0);Type$1.true=new Type$1(7,"true",!0);Type$1.null=new Type$1(7,"null",!0);Type$1.undefined=new Type$1(7,"undefined",!0);Type$1.break=new Type$1(7,"break",!0);let Token$1=class{constructor(e,t,n){this.type=e,this.value=t,this.encodedLength=n,this.encodedBytes=void 0,this.byteValue=void 0}toString(){return`Token[${this.type}].${this.value}`}};const useBuffer$1=globalThis.process&&!globalThis.process.browser&&globalThis.Buffer&&typeof globalThis.Buffer.isBuffer=="function";new TextDecoder;const textEncoder$4=new TextEncoder;function isBuffer$2(r){return useBuffer$1&&globalThis.Buffer.isBuffer(r)}function asU8A(r){return r instanceof Uint8Array?isBuffer$2(r)?new Uint8Array(r.buffer,r.byteOffset,r.byteLength):r:Uint8Array.from(r)}const fromString$8=useBuffer$1?r=>r.length>64?globalThis.Buffer.from(r):utf8ToBytes$4(r):r=>r.length>64?textEncoder$4.encode(r):utf8ToBytes$4(r);function compare$2(r,e){if(isBuffer$2(r)&&isBuffer$2(e))return r.compare(e);for(let t=0;t<r.length;t++)if(r[t]!==e[t])return r[t]<e[t]?-1:1;return 0}function utf8ToBytes$4(r){const e=[];let t=0;for(let n=0;n<r.length;n++){let i=r.charCodeAt(n);i<128?e[t++]=i:i<2048?(e[t++]=i>>6|192,e[t++]=i&63|128):(i&64512)===55296&&n+1<r.length&&(r.charCodeAt(n+1)&64512)===56320?(i=65536+((i&1023)<<10)+(r.charCodeAt(++n)&1023),e[t++]=i>>18|240,e[t++]=i>>12&63|128,e[t++]=i>>6&63|128,e[t++]=i&63|128):(e[t++]=i>>12|224,e[t++]=i>>6&63|128,e[t++]=i&63|128)}return e}const decodeErrPrefix$1="CBOR decode error:",encodeErrPrefix$1="CBOR encode error:",uintBoundaries$1=[24,256,65536,4294967296,BigInt("18446744073709551616")];function encodeUint$1(r,e){return encodeUintValue$1(r,0,e.value)}function encodeUintValue$1(r,e,t){if(t<uintBoundaries$1[0]){const n=Number(t);r.push([e|n])}else if(t<uintBoundaries$1[1]){const n=Number(t);r.push([e|24,n])}else if(t<uintBoundaries$1[2]){const n=Number(t);r.push([e|25,n>>>8,n&255])}else if(t<uintBoundaries$1[3]){const n=Number(t);r.push([e|26,n>>>24&255,n>>>16&255,n>>>8&255,n&255])}else{const n=BigInt(t);if(n<uintBoundaries$1[4]){const i=[e|27,0,0,0,0,0,0,0];let o=Number(n&BigInt(4294967295)),a=Number(n>>BigInt(32)&BigInt(4294967295));i[8]=o&255,o=o>>8,i[7]=o&255,o=o>>8,i[6]=o&255,o=o>>8,i[5]=o&255,i[4]=a&255,a=a>>8,i[3]=a&255,a=a>>8,i[2]=a&255,a=a>>8,i[1]=a&255,r.push(i)}else throw new Error(`${decodeErrPrefix$1} encountered BigInt larger than allowable range`)}}encodeUint$1.encodedSize=function r(e){return encodeUintValue$1.encodedSize(e.value)};encodeUintValue$1.encodedSize=function r(e){return e<uintBoundaries$1[0]?1:e<uintBoundaries$1[1]?2:e<uintBoundaries$1[2]?3:e<uintBoundaries$1[3]?5:9};encodeUint$1.compareTokens=function r(e,t){return e.value<t.value?-1:e.value>t.value?1:0};const neg1b$1=BigInt(-1),pos1b$1=BigInt(1);function encodeNegint$1(r,e){const t=e.value,n=typeof t=="bigint"?t*neg1b$1-pos1b$1:t*-1-1;encodeUintValue$1(r,e.type.majorEncoded,n)}encodeNegint$1.encodedSize=function r(e){const t=e.value,n=typeof t=="bigint"?t*neg1b$1-pos1b$1:t*-1-1;return n<uintBoundaries$1[0]?1:n<uintBoundaries$1[1]?2:n<uintBoundaries$1[2]?3:n<uintBoundaries$1[3]?5:9};encodeNegint$1.compareTokens=function r(e,t){return e.value<t.value?1:e.value>t.value?-1:0};function tokenBytes$1(r){return r.encodedBytes===void 0&&(r.encodedBytes=r.type===Type$1.string?fromString$8(r.value):r.value),r.encodedBytes}function encodeBytes$1(r,e){const t=tokenBytes$1(e);encodeUintValue$1(r,e.type.majorEncoded,t.length),r.push(t)}encodeBytes$1.encodedSize=function r(e){const t=tokenBytes$1(e);return encodeUintValue$1.encodedSize(t.length)+t.length};encodeBytes$1.compareTokens=function r(e,t){return compareBytes$1(tokenBytes$1(e),tokenBytes$1(t))};function compareBytes$1(r,e){return r.length<e.length?-1:r.length>e.length?1:compare$2(r,e)}const encodeString$1=encodeBytes$1;function encodeArray$1(r,e){encodeUintValue$1(r,Type$1.array.majorEncoded,e.value)}encodeArray$1.compareTokens=encodeUint$1.compareTokens;encodeArray$1.encodedSize=function r(e){return encodeUintValue$1.encodedSize(e.value)};function encodeMap$1(r,e){encodeUintValue$1(r,Type$1.map.majorEncoded,e.value)}encodeMap$1.compareTokens=encodeUint$1.compareTokens;encodeMap$1.encodedSize=function r(e){return encodeUintValue$1.encodedSize(e.value)};function encodeTag$1(r,e){encodeUintValue$1(r,Type$1.tag.majorEncoded,e.value)}encodeTag$1.compareTokens=encodeUint$1.compareTokens;encodeTag$1.encodedSize=function r(e){return encodeUintValue$1.encodedSize(e.value)};const MINOR_FALSE$1=20,MINOR_TRUE$1=21,MINOR_NULL$1=22,MINOR_UNDEFINED$1=23;function encodeFloat$1(r,e,t){const n=e.value;if(n===!1)r.push([Type$1.float.majorEncoded|MINOR_FALSE$1]);else if(n===!0)r.push([Type$1.float.majorEncoded|MINOR_TRUE$1]);else if(n===null)r.push([Type$1.float.majorEncoded|MINOR_NULL$1]);else if(n===void 0)r.push([Type$1.float.majorEncoded|MINOR_UNDEFINED$1]);else{let i,o=!1;(!t||t.float64!==!0)&&(encodeFloat16$1(n),i=readFloat16$1(ui8a$1,1),n===i||Number.isNaN(n)?(ui8a$1[0]=249,r.push(ui8a$1.slice(0,3)),o=!0):(encodeFloat32$1(n),i=readFloat32$1(ui8a$1,1),n===i&&(ui8a$1[0]=250,r.push(ui8a$1.slice(0,5)),o=!0))),o||(encodeFloat64$1(n),i=readFloat64$1(ui8a$1,1),ui8a$1[0]=251,r.push(ui8a$1.slice(0,9)))}}encodeFloat$1.encodedSize=function r(e,t){const n=e.value;if(n===!1||n===!0||n===null||n===void 0)return 1;if(!t||t.float64!==!0){encodeFloat16$1(n);let i=readFloat16$1(ui8a$1,1);if(n===i||Number.isNaN(n))return 3;if(encodeFloat32$1(n),i=readFloat32$1(ui8a$1,1),n===i)return 5}return 9};const buffer$1=new ArrayBuffer(9),dataView$1=new DataView(buffer$1,1),ui8a$1=new Uint8Array(buffer$1,0);function encodeFloat16$1(r){if(r===1/0)dataView$1.setUint16(0,31744,!1);else if(r===-1/0)dataView$1.setUint16(0,64512,!1);else if(Number.isNaN(r))dataView$1.setUint16(0,32256,!1);else{dataView$1.setFloat32(0,r);const e=dataView$1.getUint32(0),t=(e&2139095040)>>23,n=e&8388607;if(t===255)dataView$1.setUint16(0,31744,!1);else if(t===0)dataView$1.setUint16(0,(r&2147483648)>>16|n>>13,!1);else{const i=t-127;i<-24?dataView$1.setUint16(0,0):i<-14?dataView$1.setUint16(0,(e&2147483648)>>16|1<<24+i,!1):dataView$1.setUint16(0,(e&2147483648)>>16|i+15<<10|n>>13,!1)}}}function readFloat16$1(r,e){if(r.length-e<2)throw new Error(`${decodeErrPrefix$1} not enough data for float16`);const t=(r[e]<<8)+r[e+1];if(t===31744)return 1/0;if(t===64512)return-1/0;if(t===32256)return NaN;const n=t>>10&31,i=t&1023;let o;return n===0?o=i*2**-24:n!==31?o=(i+1024)*2**(n-25):o=i===0?1/0:NaN,t&32768?-o:o}function encodeFloat32$1(r){dataView$1.setFloat32(0,r,!1)}function readFloat32$1(r,e){if(r.length-e<4)throw new Error(`${decodeErrPrefix$1} not enough data for float32`);const t=(r.byteOffset||0)+e;return new DataView(r.buffer,t,4).getFloat32(0,!1)}function encodeFloat64$1(r){dataView$1.setFloat64(0,r,!1)}function readFloat64$1(r,e){if(r.length-e<8)throw new Error(`${decodeErrPrefix$1} not enough data for float64`);const t=(r.byteOffset||0)+e;return new DataView(r.buffer,t,8).getFloat64(0,!1)}encodeFloat$1.compareTokens=encodeUint$1.compareTokens;function makeCborEncoders$1(){const r=[];return r[Type$1.uint.major]=encodeUint$1,r[Type$1.negint.major]=encodeNegint$1,r[Type$1.bytes.major]=encodeBytes$1,r[Type$1.string.major]=encodeString$1,r[Type$1.array.major]=encodeArray$1,r[Type$1.map.major]=encodeMap$1,r[Type$1.tag.major]=encodeTag$1,r[Type$1.float.major]=encodeFloat$1,r}makeCborEncoders$1();let Ref$1=class er{constructor(e,t){this.obj=e,this.parent=t}includes(e){let t=this;do if(t.obj===e)return!0;while(t=t.parent);return!1}static createCheck(e,t){if(e&&e.includes(t))throw new Error(`${encodeErrPrefix$1} object contains circular references`);return new er(t,e)}};const simpleTokens$1={null:new Token$1(Type$1.null,null),undefined:new Token$1(Type$1.undefined,void 0),true:new Token$1(Type$1.true,!0),false:new Token$1(Type$1.false,!1),emptyArray:new Token$1(Type$1.array,0),emptyMap:new Token$1(Type$1.map,0)},typeEncoders$1={number(r,e,t,n){return!Number.isInteger(r)||!Number.isSafeInteger(r)?new Token$1(Type$1.float,r):r>=0?new Token$1(Type$1.uint,r):new Token$1(Type$1.negint,r)},bigint(r,e,t,n){return r>=BigInt(0)?new Token$1(Type$1.uint,r):new Token$1(Type$1.negint,r)},Uint8Array(r,e,t,n){return new Token$1(Type$1.bytes,r)},string(r,e,t,n){return new Token$1(Type$1.string,r)},boolean(r,e,t,n){return r?simpleTokens$1.true:simpleTokens$1.false},null(r,e,t,n){return simpleTokens$1.null},undefined(r,e,t,n){return simpleTokens$1.undefined},ArrayBuffer(r,e,t,n){return new Token$1(Type$1.bytes,new Uint8Array(r))},DataView(r,e,t,n){return new Token$1(Type$1.bytes,new Uint8Array(r.buffer,r.byteOffset,r.byteLength))},Array(r,e,t,n){if(!r.length)return t.addBreakTokens===!0?[simpleTokens$1.emptyArray,new Token$1(Type$1.break)]:simpleTokens$1.emptyArray;n=Ref$1.createCheck(n,r);const i=[];let o=0;for(const a of r)i[o++]=objectToTokens$1(a,t,n);return t.addBreakTokens?[new Token$1(Type$1.array,r.length),i,new Token$1(Type$1.break)]:[new Token$1(Type$1.array,r.length),i]},Object(r,e,t,n){const i=e!=="Object",o=i?r.keys():Object.keys(r),a=i?r.size:o.length;if(!a)return t.addBreakTokens===!0?[simpleTokens$1.emptyMap,new Token$1(Type$1.break)]:simpleTokens$1.emptyMap;n=Ref$1.createCheck(n,r);const c=[];let l=0;for(const u of o)c[l++]=[objectToTokens$1(u,t,n),objectToTokens$1(i?r.get(u):r[u],t,n)];return sortMapEntries$1(c,t),t.addBreakTokens?[new Token$1(Type$1.map,a),c,new Token$1(Type$1.break)]:[new Token$1(Type$1.map,a),c]}};typeEncoders$1.Map=typeEncoders$1.Object;typeEncoders$1.Buffer=typeEncoders$1.Uint8Array;for(const r of"Uint8Clamped Uint16 Uint32 Int8 Int16 Int32 BigUint64 BigInt64 Float32 Float64".split(" "))typeEncoders$1[`${r}Array`]=typeEncoders$1.DataView;function objectToTokens$1(r,e={},t){const n=is$1(r),i=e&&e.typeEncoders&&e.typeEncoders[n]||typeEncoders$1[n];if(typeof i=="function"){const a=i(r,n,e,t);if(a!=null)return a}const o=typeEncoders$1[n];if(!o)throw new Error(`${encodeErrPrefix$1} unsupported type: ${n}`);return o(r,n,e,t)}function sortMapEntries$1(r,e){e.mapSorter&&r.sort(e.mapSorter)}let JSONEncoder$1=class extends Array{constructor(){super(),this.inRecursive=[]}prefix(e){const t=this.inRecursive[this.inRecursive.length-1];t&&(t.type===Type$1.array&&(t.elements++,t.elements!==1&&e.push([44])),t.type===Type$1.map&&(t.elements++,t.elements!==1&&(t.elements%2===1?e.push([44]):e.push([58]))))}[Type$1.uint.major](e,t){this.prefix(e);const n=String(t.value),i=[];for(let o=0;o<n.length;o++)i[o]=n.charCodeAt(o);e.push(i)}[Type$1.negint.major](e,t){this[Type$1.uint.major](e,t)}[Type$1.bytes.major](e,t){throw new Error(`${encodeErrPrefix$1} unsupported type: Uint8Array`)}[Type$1.string.major](e,t){this.prefix(e);const n=fromString$8(JSON.stringify(t.value));e.push(n.length>32?asU8A(n):n)}[Type$1.array.major](e,t){this.prefix(e),this.inRecursive.push({type:Type$1.array,elements:0}),e.push([91])}[Type$1.map.major](e,t){this.prefix(e),this.inRecursive.push({type:Type$1.map,elements:0}),e.push([123])}[Type$1.tag.major](e,t){}[Type$1.float.major](e,t){if(t.type.name==="break"){const a=this.inRecursive.pop();if(a){if(a.type===Type$1.array)e.push([93]);else if(a.type===Type$1.map)e.push([125]);else throw new Error("Unexpected recursive type; this should not happen!");return}throw new Error("Unexpected break; this should not happen!")}if(t.value===void 0)throw new Error(`${encodeErrPrefix$1} unsupported type: undefined`);if(this.prefix(e),t.type.name==="true"){e.push([116,114,117,101]);return}else if(t.type.name==="false"){e.push([102,97,108,115,101]);return}else if(t.type.name==="null"){e.push([110,117,108,108]);return}const n=String(t.value),i=[];let o=!1;for(let a=0;a<n.length;a++)i[a]=n.charCodeAt(a),!o&&(i[a]===46||i[a]===101||i[a]===69)&&(o=!0);o||(i.push(46),i.push(48)),e.push(i)}};CID$3.parse;const code$1=297;new TextDecoder;new TextEncoder;const textDecoder$2=new TextDecoder;function decodeVarint(r,e){let t=0;for(let n=0;;n+=7){if(n>=64)throw new Error("protobuf: varint overflow");if(e>=r.length)throw new Error("protobuf: unexpected end of data");const i=r[e++];if(t+=n<28?(i&127)<<n:(i&127)*2**n,i<128)break}return[t,e]}function decodeBytes(r,e){let t;[t,e]=decodeVarint(r,e);const n=e+t;if(t<0||n<0)throw new Error("protobuf: invalid length");if(n>r.length)throw new Error("protobuf: unexpected end of data");return[r.subarray(e,n),n]}function decodeKey(r,e){let t;return[t,e]=decodeVarint(r,e),[t&7,t>>3,e]}function decodeLink(r){const e={},t=r.length;let n=0;for(;n<t;){let i,o;if([i,o,n]=decodeKey(r,n),o===1){if(e.Hash)throw new Error("protobuf: (PBLink) duplicate Hash section");if(i!==2)throw new Error(`protobuf: (PBLink) wrong wireType (${i}) for Hash`);if(e.Name!==void 0)throw new Error("protobuf: (PBLink) invalid order, found Name before Hash");if(e.Tsize!==void 0)throw new Error("protobuf: (PBLink) invalid order, found Tsize before Hash");[e.Hash,n]=decodeBytes(r,n)}else if(o===2){if(e.Name!==void 0)throw new Error("protobuf: (PBLink) duplicate Name section");if(i!==2)throw new Error(`protobuf: (PBLink) wrong wireType (${i}) for Name`);if(e.Tsize!==void 0)throw new Error("protobuf: (PBLink) invalid order, found Tsize before Name");let a;[a,n]=decodeBytes(r,n),e.Name=textDecoder$2.decode(a)}else if(o===3){if(e.Tsize!==void 0)throw new Error("protobuf: (PBLink) duplicate Tsize section");if(i!==0)throw new Error(`protobuf: (PBLink) wrong wireType (${i}) for Tsize`);[e.Tsize,n]=decodeVarint(r,n)}else throw new Error(`protobuf: (PBLink) invalid fieldNumber, expected 1, 2 or 3, got ${o}`)}if(n>t)throw new Error("protobuf: (PBLink) unexpected end of data");return e}function decodeNode(r){const e=r.length;let t=0,n,i=!1,o;for(;t<e;){let c,l;if([c,l,t]=decodeKey(r,t),c!==2)throw new Error(`protobuf: (PBNode) invalid wireType, expected 2, got ${c}`);if(l===1){if(o)throw new Error("protobuf: (PBNode) duplicate Data section");[o,t]=decodeBytes(r,t),n&&(i=!0)}else if(l===2){if(i)throw new Error("protobuf: (PBNode) duplicate Links section");n||(n=[]);let u;[u,t]=decodeBytes(r,t),n.push(decodeLink(u))}else throw new Error(`protobuf: (PBNode) invalid fieldNumber, expected 1 or 2, got ${l}`)}if(t>e)throw new Error("protobuf: (PBNode) unexpected end of data");const a={};return o&&(a.Data=o),a.Links=n||[],a}const textEncoder$3=new TextEncoder,maxInt32=2**32,maxUInt32=2**31;function encodeLink(r,e){let t=e.length;if(typeof r.Tsize=="number"){if(r.Tsize<0)throw new Error("Tsize cannot be negative");if(!Number.isSafeInteger(r.Tsize))throw new Error("Tsize too large for encoding");t=encodeVarint(e,t,r.Tsize)-1,e[t]=24}if(typeof r.Name=="string"){const n=textEncoder$3.encode(r.Name);t-=n.length,e.set(n,t),t=encodeVarint(e,t,n.length)-1,e[t]=18}return r.Hash&&(t-=r.Hash.length,e.set(r.Hash,t),t=encodeVarint(e,t,r.Hash.length)-1,e[t]=10),e.length-t}function encodeNode(r){const e=sizeNode(r),t=new Uint8Array(e);let n=e;if(r.Data&&(n-=r.Data.length,t.set(r.Data,n),n=encodeVarint(t,n,r.Data.length)-1,t[n]=10),r.Links)for(let i=r.Links.length-1;i>=0;i--){const o=encodeLink(r.Links[i],t.subarray(0,n));n-=o,n=encodeVarint(t,n,o)-1,t[n]=18}return t}function sizeLink(r){let e=0;if(r.Hash){const t=r.Hash.length;e+=1+t+sov(t)}if(typeof r.Name=="string"){const t=textEncoder$3.encode(r.Name).length;e+=1+t+sov(t)}return typeof r.Tsize=="number"&&(e+=1+sov(r.Tsize)),e}function sizeNode(r){let e=0;if(r.Data){const t=r.Data.length;e+=1+t+sov(t)}if(r.Links)for(const t of r.Links){const n=sizeLink(t);e+=1+n+sov(n)}return e}function encodeVarint(r,e,t){e-=sov(t);const n=e;for(;t>=maxUInt32;)r[e++]=t&127|128,t/=128;for(;t>=128;)r[e++]=t&127|128,t>>>=7;return r[e]=t,n}function sov(r){return r%2===0&&r++,Math.floor((len64(r)+6)/7)}function len64(r){let e=0;return r>=maxInt32&&(r=Math.floor(r/maxInt32),e=32),r>=65536&&(r>>>=16,e+=16),r>=256&&(r>>>=8,e+=8),e+len8tab[r]}const len8tab=[0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8],pbNodeProperties=["Data","Links"],pbLinkProperties=["Hash","Name","Tsize"],textEncoder$2=new TextEncoder;function linkComparator(r,e){if(r===e)return 0;const t=r.Name?textEncoder$2.encode(r.Name):[],n=e.Name?textEncoder$2.encode(e.Name):[];let i=t.length,o=n.length;for(let a=0,c=Math.min(i,o);a<c;++a)if(t[a]!==n[a]){i=t[a],o=n[a];break}return i<o?-1:o<i?1:0}function hasOnlyProperties(r,e){return!Object.keys(r).some(t=>!e.includes(t))}function asLink(r){if(typeof r.asCID=="object"){const t=CID$3.asCID(r);if(!t)throw new TypeError("Invalid DAG-PB form");return{Hash:t}}if(typeof r!="object"||Array.isArray(r))throw new TypeError("Invalid DAG-PB form");const e={};if(r.Hash){let t=CID$3.asCID(r.Hash);try{t||(typeof r.Hash=="string"?t=CID$3.parse(r.Hash):r.Hash instanceof Uint8Array&&(t=CID$3.decode(r.Hash)))}catch(n){throw new TypeError(`Invalid DAG-PB form: ${n.message}`)}t&&(e.Hash=t)}if(!e.Hash)throw new TypeError("Invalid DAG-PB form");return typeof r.Name=="string"&&(e.Name=r.Name),typeof r.Tsize=="number"&&(e.Tsize=r.Tsize),e}function prepare(r){if((r instanceof Uint8Array||typeof r=="string")&&(r={Data:r}),typeof r!="object"||Array.isArray(r))throw new TypeError("Invalid DAG-PB form");const e={};if(r.Data!==void 0)if(typeof r.Data=="string")e.Data=textEncoder$2.encode(r.Data);else if(r.Data instanceof Uint8Array)e.Data=r.Data;else throw new TypeError("Invalid DAG-PB form");if(r.Links!==void 0)if(Array.isArray(r.Links))e.Links=r.Links.map(asLink),e.Links.sort(linkComparator);else throw new TypeError("Invalid DAG-PB form");else e.Links=[];return e}function validate$3(r){if(!r||typeof r!="object"||Array.isArray(r)||r instanceof Uint8Array||r["/"]&&r["/"]===r.bytes)throw new TypeError("Invalid DAG-PB form");if(!hasOnlyProperties(r,pbNodeProperties))throw new TypeError("Invalid DAG-PB form (extraneous properties)");if(r.Data!==void 0&&!(r.Data instanceof Uint8Array))throw new TypeError("Invalid DAG-PB form (Data must be bytes)");if(!Array.isArray(r.Links))throw new TypeError("Invalid DAG-PB form (Links must be a list)");for(let e=0;e<r.Links.length;e++){const t=r.Links[e];if(!t||typeof t!="object"||Array.isArray(t)||t instanceof Uint8Array||t["/"]&&t["/"]===t.bytes)throw new TypeError("Invalid DAG-PB form (bad link)");if(!hasOnlyProperties(t,pbLinkProperties))throw new TypeError("Invalid DAG-PB form (extraneous properties on link)");if(t.Hash===void 0)throw new TypeError("Invalid DAG-PB form (link must have a Hash)");if(t.Hash==null||!t.Hash["/"]||t.Hash["/"]!==t.Hash.bytes)throw new TypeError("Invalid DAG-PB form (link Hash must be a CID)");if(t.Name!==void 0&&typeof t.Name!="string")throw new TypeError("Invalid DAG-PB form (link Name must be a string)");if(t.Tsize!==void 0){if(typeof t.Tsize!="number"||t.Tsize%1!==0)throw new TypeError("Invalid DAG-PB form (link Tsize must be an integer)");if(t.Tsize<0)throw new TypeError("Invalid DAG-PB form (link Tsize cannot be negative)")}if(e>0&&linkComparator(t,r.Links[e-1])===-1)throw new TypeError("Invalid DAG-PB form (links must be sorted by Name bytes)")}}function createNode$2(r,e=[]){return prepare({Data:r,Links:e})}function createLink(r,e,t){return asLink({Hash:t,Name:r,Tsize:e})}const name$2="dag-pb",code=112;function encode$b(r){validate$3(r);const e={};return r.Links&&(e.Links=r.Links.map(t=>{const n={};return t.Hash&&(n.Hash=t.Hash.bytes),t.Name!==void 0&&(n.Name=t.Name),t.Tsize!==void 0&&(n.Tsize=t.Tsize),n})),r.Data&&(e.Data=r.Data),encodeNode(e)}function decode$d(r){const e=decodeNode(r),t={};return e.Data&&(t.Data=e.Data),e.Links&&(t.Links=e.Links.map(n=>{const i={};try{i.Hash=CID$3.decode(n.Hash)}catch{}if(!i.Hash)throw new Error("Invalid Hash field found in link, expected CID");return n.Name!==void 0&&(i.Name=n.Name),n.Tsize!==void 0&&(i.Tsize=n.Tsize),i})),t}const dagPB=Object.freeze(Object.defineProperty({__proto__:null,code,createLink,createNode:createNode$2,decode:decode$d,encode:encode$b,name:name$2,prepare,validate:validate$3},Symbol.toStringTag,{value:"Module"}));class JSONEncoder extends Array{constructor(){super(),this.inRecursive=[]}prefix(e){const t=this.inRecursive[this.inRecursive.length-1];t&&(t.type===Type$3.array&&(t.elements++,t.elements!==1&&e.push([44])),t.type===Type$3.map&&(t.elements++,t.elements!==1&&(t.elements%2===1?e.push([44]):e.push([58]))))}[Type$3.uint.major](e,t){this.prefix(e);const n=String(t.value),i=[];for(let o=0;o<n.length;o++)i[o]=n.charCodeAt(o);e.push(i)}[Type$3.negint.major](e,t){this[Type$3.uint.major](e,t)}[Type$3.bytes.major](e,t){throw new Error(`${encodeErrPrefix$3} unsupported type: Uint8Array`)}[Type$3.string.major](e,t){this.prefix(e);const n=fromString$a(JSON.stringify(t.value));e.push(n.length>32?asU8A$1(n):n)}[Type$3.array.major](e,t){this.prefix(e),this.inRecursive.push({type:Type$3.array,elements:0}),e.push([91])}[Type$3.map.major](e,t){this.prefix(e),this.inRecursive.push({type:Type$3.map,elements:0}),e.push([123])}[Type$3.tag.major](e,t){}[Type$3.float.major](e,t){if(t.type.name==="break"){const a=this.inRecursive.pop();if(a){if(a.type===Type$3.array)e.push([93]);else if(a.type===Type$3.map)e.push([125]);else throw new Error("Unexpected recursive type; this should not happen!");return}throw new Error("Unexpected break; this should not happen!")}if(t.value===void 0)throw new Error(`${encodeErrPrefix$3} unsupported type: undefined`);if(this.prefix(e),t.type.name==="true"){e.push([116,114,117,101]);return}else if(t.type.name==="false"){e.push([102,97,108,115,101]);return}else if(t.type.name==="null"){e.push([110,117,108,108]);return}const n=String(t.value),i=[];let o=!1;for(let a=0;a<n.length;a++)i[a]=n.charCodeAt(a),!o&&(i[a]===46||i[a]===101||i[a]===69)&&(o=!0);o||(i.push(46),i.push(48)),e.push(i)}}class Tokenizer{constructor(e,t={}){this._pos=0,this.data=e,this.options=t,this.modeStack=["value"],this.lastToken=""}pos(){return this._pos}done(){return this._pos>=this.data.length}ch(){return this.data[this._pos]}currentMode(){return this.modeStack[this.modeStack.length-1]}skipWhitespace(){let e=this.ch();for(;e===32||e===9||e===13||e===10;)e=this.data[++this._pos]}expect(e){if(this.data.length-this._pos<e.length)throw new Error(`${decodeErrPrefix$3} unexpected end of input at position ${this._pos}`);for(let t=0;t<e.length;t++)if(this.data[this._pos++]!==e[t])throw new Error(`${decodeErrPrefix$3} unexpected token at position ${this._pos}, expected to find '${String.fromCharCode(...e)}'`)}parseNumber(){const e=this._pos;let t=!1,n=!1;const i=c=>{for(;!this.done();){const l=this.ch();if(c.includes(l))this._pos++;else break}};if(this.ch()===45&&(t=!0,this._pos++),this.ch()===48)if(this._pos++,this.ch()===46)this._pos++,n=!0;else return new Token$3(Type$3.uint,0,this._pos-e);if(i([48,49,50,51,52,53,54,55,56,57]),t&&this._pos===e+1)throw new Error(`${decodeErrPrefix$3} unexpected token at position ${this._pos}`);if(!this.done()&&this.ch()===46){if(n)throw new Error(`${decodeErrPrefix$3} unexpected token at position ${this._pos}`);n=!0,this._pos++,i([48,49,50,51,52,53,54,55,56,57])}!this.done()&&(this.ch()===101||this.ch()===69)&&(n=!0,this._pos++,!this.done()&&(this.ch()===43||this.ch()===45)&&this._pos++,i([48,49,50,51,52,53,54,55,56,57]));const o=String.fromCharCode.apply(null,this.data.subarray(e,this._pos)),a=parseFloat(o);return n?new Token$3(Type$3.float,a,this._pos-e):this.options.allowBigInt!==!0||Number.isSafeInteger(a)?new Token$3(a>=0?Type$3.uint:Type$3.negint,a,this._pos-e):new Token$3(a>=0?Type$3.uint:Type$3.negint,BigInt(o),this._pos-e)}parseString(){if(this.ch()!==34)throw new Error(`${decodeErrPrefix$3} unexpected character at position ${this._pos}; this shouldn't happen`);this._pos++;for(let o=this._pos,a=0;o<this.data.length&&a<65536;o++,a++){const c=this.data[o];if(c===92||c<32||c>=128)break;if(c===34){const l=String.fromCharCode.apply(null,this.data.subarray(this._pos,o));return this._pos=o+1,new Token$3(Type$3.string,l,a)}}const e=this._pos,t=[],n=()=>{if(this._pos+4>=this.data.length)throw new Error(`${decodeErrPrefix$3} unexpected end of unicode escape sequence at position ${this._pos}`);let o=0;for(let a=0;a<4;a++){let c=this.ch();if(c>=48&&c<=57)c-=48;else if(c>=97&&c<=102)c=c-97+10;else if(c>=65&&c<=70)c=c-65+10;else throw new Error(`${decodeErrPrefix$3} unexpected unicode escape character at position ${this._pos}`);o=o*16+c,this._pos++}return o},i=()=>{const o=this.ch();let a=null,c=o>239?4:o>223?3:o>191?2:1;if(this._pos+c>this.data.length)throw new Error(`${decodeErrPrefix$3} unexpected unicode sequence at position ${this._pos}`);let l,u,f,g;switch(c){case 1:o<128&&(a=o);break;case 2:l=this.data[this._pos+1],(l&192)===128&&(g=(o&31)<<6|l&63,g>127&&(a=g));break;case 3:l=this.data[this._pos+1],u=this.data[this._pos+2],(l&192)===128&&(u&192)===128&&(g=(o&15)<<12|(l&63)<<6|u&63,g>2047&&(g<55296||g>57343)&&(a=g));break;case 4:l=this.data[this._pos+1],u=this.data[this._pos+2],f=this.data[this._pos+3],(l&192)===128&&(u&192)===128&&(f&192)===128&&(g=(o&15)<<18|(l&63)<<12|(u&63)<<6|f&63,g>65535&&g<1114112&&(a=g))}a===null?(a=65533,c=1):a>65535&&(a-=65536,t.push(a>>>10&1023|55296),a=56320|a&1023),t.push(a),this._pos+=c};for(;!this.done();){const o=this.ch();let a;switch(o){case 92:if(this._pos++,this.done())throw new Error(`${decodeErrPrefix$3} unexpected string termination at position ${this._pos}`);switch(a=this.ch(),this._pos++,a){case 34:case 39:case 92:case 47:t.push(a);break;case 98:t.push(8);break;case 116:t.push(9);break;case 110:t.push(10);break;case 102:t.push(12);break;case 114:t.push(13);break;case 117:t.push(n());break;default:throw new Error(`${decodeErrPrefix$3} unexpected string escape character at position ${this._pos}`)}break;case 34:return this._pos++,new Token$3(Type$3.string,decodeCodePointsArray$2(t),this._pos-e);default:if(o<32)throw new Error(`${decodeErrPrefix$3} invalid control character at position ${this._pos}`);o<128?(t.push(o),this._pos++):i()}}throw new Error(`${decodeErrPrefix$3} unexpected end of string at position ${this._pos}`)}parseValue(){switch(this.ch()){case 123:return this.modeStack.push("obj-start"),this._pos++,new Token$3(Type$3.map,1/0,1);case 91:return this.modeStack.push("array-start"),this._pos++,new Token$3(Type$3.array,1/0,1);case 34:return this.parseString();case 110:return this.expect([110,117,108,108]),new Token$3(Type$3.null,null,4);case 102:return this.expect([102,97,108,115,101]),new Token$3(Type$3.false,!1,5);case 116:return this.expect([116,114,117,101]),new Token$3(Type$3.true,!0,4);case 45:case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:return this.parseNumber();default:throw new Error(`${decodeErrPrefix$3} unexpected character at position ${this._pos}`)}}next(){switch(this.skipWhitespace(),this.currentMode()){case"value":return this.modeStack.pop(),this.parseValue();case"array-value":{if(this.modeStack.pop(),this.ch()===93)return this._pos++,this.skipWhitespace(),new Token$3(Type$3.break,void 0,1);if(this.ch()!==44)throw new Error(`${decodeErrPrefix$3} unexpected character at position ${this._pos}, was expecting array delimiter but found '${String.fromCharCode(this.ch())}'`);return this._pos++,this.modeStack.push("array-value"),this.skipWhitespace(),this.parseValue()}case"array-start":return this.modeStack.pop(),this.ch()===93?(this._pos++,this.skipWhitespace(),new Token$3(Type$3.break,void 0,1)):(this.modeStack.push("array-value"),this.skipWhitespace(),this.parseValue());case"obj-key":if(this.ch()===125)return this.modeStack.pop(),this._pos++,this.skipWhitespace(),new Token$3(Type$3.break,void 0,1);if(this.ch()!==44)throw new Error(`${decodeErrPrefix$3} unexpected character at position ${this._pos}, was expecting object delimiter but found '${String.fromCharCode(this.ch())}'`);this._pos++,this.skipWhitespace();case"obj-start":{if(this.modeStack.pop(),this.ch()===125)return this._pos++,this.skipWhitespace(),new Token$3(Type$3.break,void 0,1);const e=this.parseString();if(this.skipWhitespace(),this.ch()!==58)throw new Error(`${decodeErrPrefix$3} unexpected character at position ${this._pos}, was expecting key/value delimiter ':' but found '${String.fromCharCode(this.ch())}'`);return this._pos++,this.modeStack.push("obj-value"),e}case"obj-value":return this.modeStack.pop(),this.modeStack.push("obj-key"),this.skipWhitespace(),this.parseValue();default:throw new Error(`${decodeErrPrefix$3} unexpected parse state at position ${this._pos}; this shouldn't happen`)}}}function decode$c(r,e){return e=Object.assign({tokenizer:new Tokenizer(r,e)},e),decode$g(r,e)}const dagPbWalker={codec:code,async*walk(r){yield*decode$d(r).Links.map(t=>t.Hash)}},rawWalker={codec:code$5,async*walk(){}},CID_TAG=42,dagCborWalker={codec:code$2,async*walk(r){const e=[],t=[];t[CID_TAG]=n=>{if(n[0]!==0)throw new Error("Invalid CID for CBOR tag 42; expected leading 0x00");const i=CID$3.decode(n.subarray(1));return e.push(i),i},decode$g(r,{tags:t}),yield*e}};class DagJsonTokenizer extends Tokenizer{constructor(t,n){super(t,n);_(this,"tokenBuffer");this.tokenBuffer=[]}done(){return this.tokenBuffer.length===0&&super.done()}_next(){return this.tokenBuffer.length>0?this.tokenBuffer.pop():super.next()}next(){const t=this._next();if(t.type===Type$3.map){const n=this._next();if(n.type===Type$3.string&&n.value==="/"){const i=this._next();if(i.type===Type$3.string){if(this._next().type!==Type$3.break)throw new Error("Invalid encoded CID form");return this.tokenBuffer.push(i),new Token$3(Type$3.tag,42,0)}if(i.type===Type$3.map){const o=this._next();if(o.type===Type$3.string&&o.value==="bytes"){const a=this._next();if(a.type===Type$3.string){for(let l=0;l<2;l++)if(this._next().type!==Type$3.break)throw new Error("Invalid encoded Bytes form");const c=base64$6.decode(`m${a.value}`);return new Token$3(Type$3.bytes,c,a.value.length)}this.tokenBuffer.push(a)}this.tokenBuffer.push(o)}this.tokenBuffer.push(i)}this.tokenBuffer.push(n)}return t}}const dagJsonWalker={codec:code$1,async*walk(r){const e=[],t=[];t[CID_TAG]=n=>{const i=CID$3.parse(n);return e.push(i),i},decode$c(r,{tags:t,tokenizer:new DagJsonTokenizer(r,{tags:t,allowIndefinite:!0,allowUndefined:!0,allowNaN:!0,allowInfinity:!0,allowBigInt:!0,strict:!1,rejectDuplicateMapKeys:!1})}),yield*e}},jsonWalker={codec:code$4,async*walk(){}},DEFAULT_DAG_WALKERS=[rawWalker,dagPbWalker,dagCborWalker,dagJsonWalker,jsonWalker],DATASTORE_PIN_PREFIX="/pin/",DATASTORE_BLOCK_PREFIX="/pinned-block/",DATASTORE_ENCODING=base36$4,DAG_WALK_QUEUE_CONCURRENCY=1;function toDSKey(r){return r.version===0&&(r=r.toV1()),new Key(`${DATASTORE_PIN_PREFIX}${r.toString(DATASTORE_ENCODING)}`)}var He,lt,_t,tr;class PinsImpl{constructor(e,t,n){ne(this,He);ne(this,_t);_(this,"datastore");_(this,"blockstore");_(this,"dagWalkers");this.datastore=e,this.blockstore=t,this.dagWalkers={},[...DEFAULT_DAG_WALKERS,...n].forEach(i=>{this.dagWalkers[i.codec]=i})}async add(e,t={}){const n=toDSKey(e);if(await this.datastore.has(n))throw new Error("Already pinned");const i=Math.round(t.depth??1/0);if(i<0)throw new Error("Depth must be greater than or equal to 0");const o=new PQueue$3({concurrency:DAG_WALK_QUEUE_CONCURRENCY});o.add(async()=>{await se(this,He,lt).call(this,e,o,l=>{l.pinnedBy.find(u=>equals$4(u,e.bytes))==null&&(l.pinCount++,l.pinnedBy.push(e.bytes))},{...t,depth:i})});const a=pDefer();o.on("error",l=>{o.clear(),a.reject(l)}),await Promise.race([o.onIdle(),a.promise]);const c={depth:i,metadata:t.metadata??{}};return await this.datastore.put(n,encode$c(c),t),{cid:e,...c}}async rm(e,t={}){const n=toDSKey(e),i=await this.datastore.get(n,t),o=decode$g(i);await this.datastore.delete(n,t);const a=new PQueue$3({concurrency:DAG_WALK_QUEUE_CONCURRENCY});return a.add(async()=>{await se(this,He,lt).call(this,e,a,c=>{c.pinCount--,c.pinnedBy=c.pinnedBy.filter(l=>equals$4(l,e.bytes))},{...t,depth:o.depth})}),await a.onIdle(),{cid:e,...o}}async*ls(e={}){for await(const{key:t,value:n}of this.datastore.query({prefix:DATASTORE_PIN_PREFIX+(e.cid!=null?`${e.cid.toString(base36$4)}`:"")},e)){const i=CID$3.parse(t.toString().substring(5),base36$4),o=decode$g(n);yield{cid:i,...o}}}async isPinned(e,t={}){const n=new Key(`${DATASTORE_BLOCK_PREFIX}${DATASTORE_ENCODING.encode(e.multihash.bytes)}`);return this.datastore.has(n,t)}}He=new WeakSet,lt=async function(e,t,n,i){if(i.depth===-1)return;const o=this.dagWalkers[e.code];if(o==null)throw new Error(`No dag walker found for cid codec ${e.code}`);const a=await this.blockstore.get(e,i);await se(this,_t,tr).call(this,e,n,i);for await(const c of o.walk(a))t.add(async()=>{await se(this,He,lt).call(this,c,t,n,{...i,depth:i.depth-1})})},_t=new WeakSet,tr=async function(e,t,n){const i=new Key(`${DATASTORE_BLOCK_PREFIX}${DATASTORE_ENCODING.encode(e.multihash.bytes)}`);let o={pinCount:0,pinnedBy:[]};try{o=decode$g(await this.datastore.get(i,n))}catch(a){if(a.code!=="ERR_NOT_FOUND")throw a}if(t(o),o.pinCount===0&&await this.datastore.has(i)){await this.datastore.delete(i);return}await this.datastore.put(i,encode$c(o),n),n.onProgress?.(new CustomProgressEvent("helia:pin:add",{detail:e}))};var eventemitter3$2={exports:{}};(function(r){var e=Object.prototype.hasOwnProperty,t="~";function n(){}Object.create&&(n.prototype=Object.create(null),new n().__proto__||(t=!1));function i(l,u,f){this.fn=l,this.context=u,this.once=f||!1}function o(l,u,f,g,$){if(typeof f!="function")throw new TypeError("The listener must be a function");var S=new i(f,g||l,$),E=t?t+u:u;return l._events[E]?l._events[E].fn?l._events[E]=[l._events[E],S]:l._events[E].push(S):(l._events[E]=S,l._eventsCount++),l}function a(l,u){--l._eventsCount===0?l._events=new n:delete l._events[u]}function c(){this._events=new n,this._eventsCount=0}c.prototype.eventNames=function(){var u=[],f,g;if(this._eventsCount===0)return u;for(g in f=this._events)e.call(f,g)&&u.push(t?g.slice(1):g);return Object.getOwnPropertySymbols?u.concat(Object.getOwnPropertySymbols(f)):u},c.prototype.listeners=function(u){var f=t?t+u:u,g=this._events[f];if(!g)return[];if(g.fn)return[g.fn];for(var $=0,S=g.length,E=new Array(S);$<S;$++)E[$]=g[$].fn;return E},c.prototype.listenerCount=function(u){var f=t?t+u:u,g=this._events[f];return g?g.fn?1:g.length:0},c.prototype.emit=function(u,f,g,$,S,E){var v=t?t+u:u;if(!this._events[v])return!1;var T=this._events[v],I=arguments.length,A,P;if(T.fn){switch(T.once&&this.removeListener(u,T.fn,void 0,!0),I){case 1:return T.fn.call(T.context),!0;case 2:return T.fn.call(T.context,f),!0;case 3:return T.fn.call(T.context,f,g),!0;case 4:return T.fn.call(T.context,f,g,$),!0;case 5:return T.fn.call(T.context,f,g,$,S),!0;case 6:return T.fn.call(T.context,f,g,$,S,E),!0}for(P=1,A=new Array(I-1);P<I;P++)A[P-1]=arguments[P];T.fn.apply(T.context,A)}else{var x=T.length,D;for(P=0;P<x;P++)switch(T[P].once&&this.removeListener(u,T[P].fn,void 0,!0),I){case 1:T[P].fn.call(T[P].context);break;case 2:T[P].fn.call(T[P].context,f);break;case 3:T[P].fn.call(T[P].context,f,g);break;case 4:T[P].fn.call(T[P].context,f,g,$);break;default:if(!A)for(D=1,A=new Array(I-1);D<I;D++)A[D-1]=arguments[D];T[P].fn.apply(T[P].context,A)}}return!0},c.prototype.on=function(u,f,g){return o(this,u,f,g,!1)},c.prototype.once=function(u,f,g){return o(this,u,f,g,!0)},c.prototype.removeListener=function(u,f,g,$){var S=t?t+u:u;if(!this._events[S])return this;if(!f)return a(this,S),this;var E=this._events[S];if(E.fn)E.fn===f&&(!$||E.once)&&(!g||E.context===g)&&a(this,S);else{for(var v=0,T=[],I=E.length;v<I;v++)(E[v].fn!==f||$&&!E[v].once||g&&E[v].context!==g)&&T.push(E[v]);T.length?this._events[S]=T.length===1?T[0]:T:a(this,S)}return this},c.prototype.removeAllListeners=function(u){var f;return u?(f=t?t+u:u,this._events[f]&&a(this,f)):(this._events=new n,this._eventsCount=0),this},c.prototype.off=c.prototype.removeListener,c.prototype.addListener=c.prototype.on,c.prefixed=t,c.EventEmitter=c,r.exports=c})(eventemitter3$2);var eventemitter3Exports$2=eventemitter3$2.exports;const EventEmitter$2=getDefaultExportFromCjs(eventemitter3Exports$2);let TimeoutError$5=class extends Error{constructor(e){super(e),this.name="TimeoutError"}},AbortError$d=class extends Error{constructor(e){super(),this.name="AbortError",this.message=e}};const getDOMException$5=r=>globalThis.DOMException===void 0?new AbortError$d(r):new DOMException(r),getAbortedReason$5=r=>{const e=r.reason===void 0?getDOMException$5("This operation was aborted."):r.reason;return e instanceof Error?e:getDOMException$5(e)};function pTimeout$5(r,e,t,n){let i;const o=new Promise((a,c)=>{if(typeof e!="number"||Math.sign(e)!==1)throw new TypeError(`Expected \`milliseconds\` to be a positive number, got \`${e}\``);if(e===Number.POSITIVE_INFINITY){a(r);return}if(n={customTimers:{setTimeout,clearTimeout},...n},n.signal){const{signal:l}=n;l.aborted&&c(getAbortedReason$5(l)),l.addEventListener("abort",()=>{c(getAbortedReason$5(l))})}i=n.customTimers.setTimeout.call(void 0,()=>{if(typeof t=="function"){try{a(t())}catch(f){c(f)}return}const l=typeof t=="string"?t:`Promise timed out after ${e} milliseconds`,u=t instanceof Error?t:new TimeoutError$5(l);typeof r.cancel=="function"&&r.cancel(),c(u)},e),(async()=>{try{a(await r)}catch(l){c(l)}finally{n.customTimers.clearTimeout.call(void 0,i)}})()});return o.clear=()=>{clearTimeout(i),i=void 0},o}function lowerBound$4(r,e,t){let n=0,i=r.length;for(;i>0;){const o=Math.trunc(i/2);let a=n+o;t(r[a],e)<=0?(n=++a,i-=o+1):i=o}return n}var __classPrivateFieldGet$5=function(r,e,t,n){if(t==="a"&&!n)throw new TypeError("Private accessor was defined without a getter");if(typeof e=="function"?r!==e||!n:!e.has(r))throw new TypeError("Cannot read private member from an object whose class did not declare it");return t==="m"?n:t==="a"?n.call(r):n?n.value:e.get(r)},_PriorityQueue_queue$2;let PriorityQueue$2=class{constructor(){_PriorityQueue_queue$2.set(this,[])}enqueue(e,t){t={priority:0,...t};const n={priority:t.priority,run:e};if(this.size&&__classPrivateFieldGet$5(this,_PriorityQueue_queue$2,"f")[this.size-1].priority>=t.priority){__classPrivateFieldGet$5(this,_PriorityQueue_queue$2,"f").push(n);return}const i=lowerBound$4(__classPrivateFieldGet$5(this,_PriorityQueue_queue$2,"f"),n,(o,a)=>a.priority-o.priority);__classPrivateFieldGet$5(this,_PriorityQueue_queue$2,"f").splice(i,0,n)}dequeue(){const e=__classPrivateFieldGet$5(this,_PriorityQueue_queue$2,"f").shift();return e?.run}filter(e){return __classPrivateFieldGet$5(this,_PriorityQueue_queue$2,"f").filter(t=>t.priority===e.priority).map(t=>t.run)}get size(){return __classPrivateFieldGet$5(this,_PriorityQueue_queue$2,"f").length}};_PriorityQueue_queue$2=new WeakMap;var __classPrivateFieldSet$2=function(r,e,t,n,i){if(n==="m")throw new TypeError("Private method is not writable");if(n==="a"&&!i)throw new TypeError("Private accessor was defined without a setter");if(typeof e=="function"?r!==e||!i:!e.has(r))throw new TypeError("Cannot write private member to an object whose class did not declare it");return n==="a"?i.call(r,t):i?i.value=t:e.set(r,t),t},__classPrivateFieldGet$4=function(r,e,t,n){if(t==="a"&&!n)throw new TypeError("Private accessor was defined without a getter");if(typeof e=="function"?r!==e||!n:!e.has(r))throw new TypeError("Cannot read private member from an object whose class did not declare it");return t==="m"?n:t==="a"?n.call(r):n?n.value:e.get(r)},_PQueue_instances$2,_PQueue_carryoverConcurrencyCount$2,_PQueue_isIntervalIgnored$2,_PQueue_intervalCount$2,_PQueue_intervalCap$2,_PQueue_interval$2,_PQueue_intervalEnd$2,_PQueue_intervalId$2,_PQueue_timeoutId$2,_PQueue_queue$2,_PQueue_queueClass$2,_PQueue_pending$2,_PQueue_concurrency$2,_PQueue_isPaused$2,_PQueue_throwOnTimeout$2,_PQueue_doesIntervalAllowAnother_get$2,_PQueue_doesConcurrentAllowAnother_get$2,_PQueue_next$2,_PQueue_onResumeInterval$2,_PQueue_isIntervalPaused_get$2,_PQueue_tryToStartAnother$2,_PQueue_initializeIntervalIfNeeded$2,_PQueue_onInterval$2,_PQueue_processQueue$2,_PQueue_throwOnAbort$2,_PQueue_onEvent$2;let AbortError$c=class extends Error{},PQueue$2=class extends EventEmitter$2{constructor(e){var t,n,i,o;if(super(),_PQueue_instances$2.add(this),_PQueue_carryoverConcurrencyCount$2.set(this,void 0),_PQueue_isIntervalIgnored$2.set(this,void 0),_PQueue_intervalCount$2.set(this,0),_PQueue_intervalCap$2.set(this,void 0),_PQueue_interval$2.set(this,void 0),_PQueue_intervalEnd$2.set(this,0),_PQueue_intervalId$2.set(this,void 0),_PQueue_timeoutId$2.set(this,void 0),_PQueue_queue$2.set(this,void 0),_PQueue_queueClass$2.set(this,void 0),_PQueue_pending$2.set(this,0),_PQueue_concurrency$2.set(this,void 0),_PQueue_isPaused$2.set(this,void 0),_PQueue_throwOnTimeout$2.set(this,void 0),Object.defineProperty(this,"timeout",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),e={carryoverConcurrencyCount:!1,intervalCap:Number.POSITIVE_INFINITY,interval:0,concurrency:Number.POSITIVE_INFINITY,autoStart:!0,queueClass:PriorityQueue$2,...e},!(typeof e.intervalCap=="number"&&e.intervalCap>=1))throw new TypeError(`Expected \`intervalCap\` to be a number from 1 and up, got \`${(n=(t=e.intervalCap)===null||t===void 0?void 0:t.toString())!==null&&n!==void 0?n:""}\` (${typeof e.intervalCap})`);if(e.interval===void 0||!(Number.isFinite(e.interval)&&e.interval>=0))throw new TypeError(`Expected \`interval\` to be a finite number >= 0, got \`${(o=(i=e.interval)===null||i===void 0?void 0:i.toString())!==null&&o!==void 0?o:""}\` (${typeof e.interval})`);__classPrivateFieldSet$2(this,_PQueue_carryoverConcurrencyCount$2,e.carryoverConcurrencyCount,"f"),__classPrivateFieldSet$2(this,_PQueue_isIntervalIgnored$2,e.intervalCap===Number.POSITIVE_INFINITY||e.interval===0,"f"),__classPrivateFieldSet$2(this,_PQueue_intervalCap$2,e.intervalCap,"f"),__classPrivateFieldSet$2(this,_PQueue_interval$2,e.interval,"f"),__classPrivateFieldSet$2(this,_PQueue_queue$2,new e.queueClass,"f"),__classPrivateFieldSet$2(this,_PQueue_queueClass$2,e.queueClass,"f"),this.concurrency=e.concurrency,this.timeout=e.timeout,__classPrivateFieldSet$2(this,_PQueue_throwOnTimeout$2,e.throwOnTimeout===!0,"f"),__classPrivateFieldSet$2(this,_PQueue_isPaused$2,e.autoStart===!1,"f")}get concurrency(){return __classPrivateFieldGet$4(this,_PQueue_concurrency$2,"f")}set concurrency(e){if(!(typeof e=="number"&&e>=1))throw new TypeError(`Expected \`concurrency\` to be a number from 1 and up, got \`${e}\` (${typeof e})`);__classPrivateFieldSet$2(this,_PQueue_concurrency$2,e,"f"),__classPrivateFieldGet$4(this,_PQueue_instances$2,"m",_PQueue_processQueue$2).call(this)}async add(e,t={}){return t={timeout:this.timeout,throwOnTimeout:__classPrivateFieldGet$4(this,_PQueue_throwOnTimeout$2,"f"),...t},new Promise((n,i)=>{__classPrivateFieldGet$4(this,_PQueue_queue$2,"f").enqueue(async()=>{var o,a,c;__classPrivateFieldSet$2(this,_PQueue_pending$2,(a=__classPrivateFieldGet$4(this,_PQueue_pending$2,"f"),a++,a),"f"),__classPrivateFieldSet$2(this,_PQueue_intervalCount$2,(c=__classPrivateFieldGet$4(this,_PQueue_intervalCount$2,"f"),c++,c),"f");try{if(!((o=t.signal)===null||o===void 0)&&o.aborted)throw new AbortError$c("The task was aborted.");let l=e({signal:t.signal});t.timeout&&(l=pTimeout$5(Promise.resolve(l),t.timeout)),t.signal&&(l=Promise.race([l,__classPrivateFieldGet$4(this,_PQueue_instances$2,"m",_PQueue_throwOnAbort$2).call(this,t.signal)]));const u=await l;n(u),this.emit("completed",u)}catch(l){if(l instanceof TimeoutError$5&&!t.throwOnTimeout){n();return}i(l),this.emit("error",l)}finally{__classPrivateFieldGet$4(this,_PQueue_instances$2,"m",_PQueue_next$2).call(this)}},t),this.emit("add"),__classPrivateFieldGet$4(this,_PQueue_instances$2,"m",_PQueue_tryToStartAnother$2).call(this)})}async addAll(e,t){return Promise.all(e.map(async n=>this.add(n,t)))}start(){return __classPrivateFieldGet$4(this,_PQueue_isPaused$2,"f")?(__classPrivateFieldSet$2(this,_PQueue_isPaused$2,!1,"f"),__classPrivateFieldGet$4(this,_PQueue_instances$2,"m",_PQueue_processQueue$2).call(this),this):this}pause(){__classPrivateFieldSet$2(this,_PQueue_isPaused$2,!0,"f")}clear(){__classPrivateFieldSet$2(this,_PQueue_queue$2,new(__classPrivateFieldGet$4(this,_PQueue_queueClass$2,"f")),"f")}async onEmpty(){__classPrivateFieldGet$4(this,_PQueue_queue$2,"f").size!==0&&await __classPrivateFieldGet$4(this,_PQueue_instances$2,"m",_PQueue_onEvent$2).call(this,"empty")}async onSizeLessThan(e){__classPrivateFieldGet$4(this,_PQueue_queue$2,"f").size<e||await __classPrivateFieldGet$4(this,_PQueue_instances$2,"m",_PQueue_onEvent$2).call(this,"next",()=>__classPrivateFieldGet$4(this,_PQueue_queue$2,"f").size<e)}async onIdle(){__classPrivateFieldGet$4(this,_PQueue_pending$2,"f")===0&&__classPrivateFieldGet$4(this,_PQueue_queue$2,"f").size===0||await __classPrivateFieldGet$4(this,_PQueue_instances$2,"m",_PQueue_onEvent$2).call(this,"idle")}get size(){return __classPrivateFieldGet$4(this,_PQueue_queue$2,"f").size}sizeBy(e){return __classPrivateFieldGet$4(this,_PQueue_queue$2,"f").filter(e).length}get pending(){return __classPrivateFieldGet$4(this,_PQueue_pending$2,"f")}get isPaused(){return __classPrivateFieldGet$4(this,_PQueue_isPaused$2,"f")}};_PQueue_carryoverConcurrencyCount$2=new WeakMap,_PQueue_isIntervalIgnored$2=new WeakMap,_PQueue_intervalCount$2=new WeakMap,_PQueue_intervalCap$2=new WeakMap,_PQueue_interval$2=new WeakMap,_PQueue_intervalEnd$2=new WeakMap,_PQueue_intervalId$2=new WeakMap,_PQueue_timeoutId$2=new WeakMap,_PQueue_queue$2=new WeakMap,_PQueue_queueClass$2=new WeakMap,_PQueue_pending$2=new WeakMap,_PQueue_concurrency$2=new WeakMap,_PQueue_isPaused$2=new WeakMap,_PQueue_throwOnTimeout$2=new WeakMap,_PQueue_instances$2=new WeakSet,_PQueue_doesIntervalAllowAnother_get$2=function r(){return __classPrivateFieldGet$4(this,_PQueue_isIntervalIgnored$2,"f")||__classPrivateFieldGet$4(this,_PQueue_intervalCount$2,"f")<__classPrivateFieldGet$4(this,_PQueue_intervalCap$2,"f")},_PQueue_doesConcurrentAllowAnother_get$2=function r(){return __classPrivateFieldGet$4(this,_PQueue_pending$2,"f")<__classPrivateFieldGet$4(this,_PQueue_concurrency$2,"f")},_PQueue_next$2=function r(){var e;__classPrivateFieldSet$2(this,_PQueue_pending$2,(e=__classPrivateFieldGet$4(this,_PQueue_pending$2,"f"),e--,e),"f"),__classPrivateFieldGet$4(this,_PQueue_instances$2,"m",_PQueue_tryToStartAnother$2).call(this),this.emit("next")},_PQueue_onResumeInterval$2=function r(){__classPrivateFieldGet$4(this,_PQueue_instances$2,"m",_PQueue_onInterval$2).call(this),__classPrivateFieldGet$4(this,_PQueue_instances$2,"m",_PQueue_initializeIntervalIfNeeded$2).call(this),__classPrivateFieldSet$2(this,_PQueue_timeoutId$2,void 0,"f")},_PQueue_isIntervalPaused_get$2=function r(){const e=Date.now();if(__classPrivateFieldGet$4(this,_PQueue_intervalId$2,"f")===void 0){const t=__classPrivateFieldGet$4(this,_PQueue_intervalEnd$2,"f")-e;if(t<0)__classPrivateFieldSet$2(this,_PQueue_intervalCount$2,__classPrivateFieldGet$4(this,_PQueue_carryoverConcurrencyCount$2,"f")?__classPrivateFieldGet$4(this,_PQueue_pending$2,"f"):0,"f");else return __classPrivateFieldGet$4(this,_PQueue_timeoutId$2,"f")===void 0&&__classPrivateFieldSet$2(this,_PQueue_timeoutId$2,setTimeout(()=>{__classPrivateFieldGet$4(this,_PQueue_instances$2,"m",_PQueue_onResumeInterval$2).call(this)},t),"f"),!0}return!1},_PQueue_tryToStartAnother$2=function r(){if(__classPrivateFieldGet$4(this,_PQueue_queue$2,"f").size===0)return __classPrivateFieldGet$4(this,_PQueue_intervalId$2,"f")&&clearInterval(__classPrivateFieldGet$4(this,_PQueue_intervalId$2,"f")),__classPrivateFieldSet$2(this,_PQueue_intervalId$2,void 0,"f"),this.emit("empty"),__classPrivateFieldGet$4(this,_PQueue_pending$2,"f")===0&&this.emit("idle"),!1;if(!__classPrivateFieldGet$4(this,_PQueue_isPaused$2,"f")){const e=!__classPrivateFieldGet$4(this,_PQueue_instances$2,"a",_PQueue_isIntervalPaused_get$2);if(__classPrivateFieldGet$4(this,_PQueue_instances$2,"a",_PQueue_doesIntervalAllowAnother_get$2)&&__classPrivateFieldGet$4(this,_PQueue_instances$2,"a",_PQueue_doesConcurrentAllowAnother_get$2)){const t=__classPrivateFieldGet$4(this,_PQueue_queue$2,"f").dequeue();return t?(this.emit("active"),t(),e&&__classPrivateFieldGet$4(this,_PQueue_instances$2,"m",_PQueue_initializeIntervalIfNeeded$2).call(this),!0):!1}}return!1},_PQueue_initializeIntervalIfNeeded$2=function r(){__classPrivateFieldGet$4(this,_PQueue_isIntervalIgnored$2,"f")||__classPrivateFieldGet$4(this,_PQueue_intervalId$2,"f")!==void 0||(__classPrivateFieldSet$2(this,_PQueue_intervalId$2,setInterval(()=>{__classPrivateFieldGet$4(this,_PQueue_instances$2,"m",_PQueue_onInterval$2).call(this)},__classPrivateFieldGet$4(this,_PQueue_interval$2,"f")),"f"),__classPrivateFieldSet$2(this,_PQueue_intervalEnd$2,Date.now()+__classPrivateFieldGet$4(this,_PQueue_interval$2,"f"),"f"))},_PQueue_onInterval$2=function r(){__classPrivateFieldGet$4(this,_PQueue_intervalCount$2,"f")===0&&__classPrivateFieldGet$4(this,_PQueue_pending$2,"f")===0&&__classPrivateFieldGet$4(this,_PQueue_intervalId$2,"f")&&(clearInterval(__classPrivateFieldGet$4(this,_PQueue_intervalId$2,"f")),__classPrivateFieldSet$2(this,_PQueue_intervalId$2,void 0,"f")),__classPrivateFieldSet$2(this,_PQueue_intervalCount$2,__classPrivateFieldGet$4(this,_PQueue_carryoverConcurrencyCount$2,"f")?__classPrivateFieldGet$4(this,_PQueue_pending$2,"f"):0,"f"),__classPrivateFieldGet$4(this,_PQueue_instances$2,"m",_PQueue_processQueue$2).call(this)},_PQueue_processQueue$2=function r(){for(;__classPrivateFieldGet$4(this,_PQueue_instances$2,"m",_PQueue_tryToStartAnother$2).call(this););},_PQueue_throwOnAbort$2=async function r(e){return new Promise((t,n)=>{e.addEventListener("abort",()=>{n(new AbortError$c("The task was aborted."))},{once:!0})})},_PQueue_onEvent$2=async function r(e,t){return new Promise(n=>{const i=()=>{t&&!t()||(this.off(e,i),n())};this.on(e,i)})};let TimeoutError$4=class extends Error{constructor(e){super(e),this.name="TimeoutError"}},AbortError$b=class extends Error{constructor(e){super(),this.name="AbortError",this.message=e}};const getDOMException$4=r=>globalThis.DOMException===void 0?new AbortError$b(r):new DOMException(r),getAbortedReason$4=r=>{const e=r.reason===void 0?getDOMException$4("This operation was aborted."):r.reason;return e instanceof Error?e:getDOMException$4(e)};function pTimeout$4(r,e){const{milliseconds:t,fallback:n,message:i,customTimers:o={setTimeout,clearTimeout}}=e;let a;const l=new Promise((u,f)=>{if(typeof t!="number"||Math.sign(t)!==1)throw new TypeError(`Expected \`milliseconds\` to be a positive number, got \`${t}\``);if(e.signal){const{signal:$}=e;$.aborted&&f(getAbortedReason$4($)),$.addEventListener("abort",()=>{f(getAbortedReason$4($))})}if(t===Number.POSITIVE_INFINITY){r.then(u,f);return}const g=new TimeoutError$4;a=o.setTimeout.call(void 0,()=>{if(n){try{u(n())}catch($){f($)}return}typeof r.cancel=="function"&&r.cancel(),i===!1?u():i instanceof Error?f(i):(g.message=i??`Promise timed out after ${t} milliseconds`,f(g))},t),(async()=>{try{u(await r)}catch($){f($)}})()}).finally(()=>{l.clear()});return l.clear=()=>{o.clearTimeout.call(void 0,a),a=void 0},l}let nanoid=(r=21)=>crypto.getRandomValues(new Uint8Array(r)).reduce((e,t)=>(t&=63,t<36?e+=t.toString(36):t<62?e+=(t-26).toString(36).toUpperCase():t>62?e+="-":e+="_",e),"");const WORKER_REQUEST_READ_LOCK="lock:worker:request-read",WORKER_RELEASE_READ_LOCK="lock:worker:release-read",MASTER_GRANT_READ_LOCK="lock:master:grant-read",WORKER_REQUEST_WRITE_LOCK="lock:worker:request-write",WORKER_RELEASE_WRITE_LOCK="lock:worker:release-write",MASTER_GRANT_WRITE_LOCK="lock:master:grant-write",events={},observable=r=>{r.addEventListener("message",e=>{observable.dispatchEvent("message",r,e)}),r.port!=null&&r.port.addEventListener("message",e=>{observable.dispatchEvent("message",r,e)})};observable.addEventListener=(r,e)=>{events[r]==null&&(events[r]=[]),events[r].push(e)};observable.removeEventListener=(r,e)=>{events[r]!=null&&(events[r]=events[r].filter(t=>t===e))};observable.dispatchEvent=function(r,e,t){events[r]!=null&&events[r].forEach(n=>n(e,t))};const handleWorkerLockRequest=(r,e,t,n,i)=>(o,a)=>{if(a.data.type!==t)return;const c={type:a.data.type,name:a.data.name,identifier:a.data.identifier};r.dispatchEvent(new MessageEvent(e,{data:{name:c.name,handler:async()=>(o.postMessage({type:i,name:c.name,identifier:c.identifier}),await new Promise(l=>{const u=f=>{if(f==null||f.data==null)return;const g={type:f.data.type,name:f.data.name,identifier:f.data.identifier};g.type===n&&g.identifier===c.identifier&&(o.removeEventListener("message",u),l())};o.addEventListener("message",u)}))}}))},makeWorkerLockRequest=(r,e,t,n)=>async()=>{const i=nanoid();return globalThis.postMessage({type:e,identifier:i,name:r}),await new Promise(o=>{const a=c=>{if(c==null||c.data==null)return;const l={type:c.data.type,identifier:c.data.identifier};l.type===t&&l.identifier===i&&(globalThis.removeEventListener("message",a),o(()=>{globalThis.postMessage({type:n,identifier:i,name:r})}))};globalThis.addEventListener("message",a)})},defaultOptions$i={singleProcess:!1},impl=r=>{if(r=Object.assign({},defaultOptions$i,r),!!globalThis.document||r.singleProcess){const t=new EventTarget;return observable.addEventListener("message",handleWorkerLockRequest(t,"requestReadLock",WORKER_REQUEST_READ_LOCK,WORKER_RELEASE_READ_LOCK,MASTER_GRANT_READ_LOCK)),observable.addEventListener("message",handleWorkerLockRequest(t,"requestWriteLock",WORKER_REQUEST_WRITE_LOCK,WORKER_RELEASE_WRITE_LOCK,MASTER_GRANT_WRITE_LOCK)),t}return{isWorker:!0,readLock:t=>makeWorkerLockRequest(t,WORKER_REQUEST_READ_LOCK,MASTER_GRANT_READ_LOCK,WORKER_RELEASE_READ_LOCK),writeLock:t=>makeWorkerLockRequest(t,WORKER_REQUEST_WRITE_LOCK,MASTER_GRANT_WRITE_LOCK,WORKER_RELEASE_WRITE_LOCK)}},mutexes={};let implementation;async function createReleaseable(r,e){let t;const n=new Promise(i=>{t=i});return r.add(async()=>await pTimeout$4((async()=>await new Promise(i=>{t(()=>{i()})}))(),{milliseconds:e.timeout})),await n}const createMutex=(r,e)=>{if(implementation.isWorker===!0)return{readLock:implementation.readLock(r,e),writeLock:implementation.writeLock(r,e)};const t=new PQueue$2({concurrency:1});let n;return{async readLock(){if(n!=null)return await createReleaseable(n,e);n=new PQueue$2({concurrency:e.concurrency,autoStart:!1});const i=n,o=createReleaseable(n,e);return t.add(async()=>(i.start(),await i.onIdle().then(()=>{n===i&&(n=null)}))),await o},async writeLock(){return n=null,await createReleaseable(t,e)}}},defaultOptions$h={name:"lock",concurrency:1/0,timeout:846e5,singleProcess:!1};function createMortice(r){const e=Object.assign({},defaultOptions$h,r);return implementation==null&&(implementation=impl(e),implementation.isWorker!==!0&&(implementation.addEventListener("requestReadLock",t=>{mutexes[t.data.name]!=null&&mutexes[t.data.name].readLock().then(async n=>await t.data.handler().finally(()=>n()))}),implementation.addEventListener("requestWriteLock",async t=>{mutexes[t.data.name]!=null&&mutexes[t.data.name].writeLock().then(async n=>await t.data.handler().finally(()=>n()))}))),mutexes[e.name]==null&&(mutexes[e.name]=createMutex(e.name,e)),mutexes[e.name]}class BlockStorage{constructor(e,t,n={}){_(this,"lock");_(this,"child");_(this,"pins");_(this,"started");this.child=e,this.pins=t,this.lock=createMortice({singleProcess:n.holdGcLock}),this.started=!1}isStarted(){return this.started}async start(){await start(this.child),this.started=!0}async stop(){await stop(this.child),this.started=!1}unwrap(){return this.child}async put(e,t,n={}){const i=await this.lock.readLock();try{return await this.child.put(e,t,n)}finally{i()}}async*putMany(e,t={}){const n=await this.lock.readLock();try{yield*this.child.putMany(e,t)}finally{n()}}async get(e,t={}){const n=await this.lock.readLock();try{return await this.child.get(e,t)}finally{n()}}async*getMany(e,t={}){const n=await this.lock.readLock();try{yield*this.child.getMany(e,t)}finally{n()}}async delete(e,t={}){const n=await this.lock.writeLock();try{if(await this.pins.isPinned(e))throw new Error("CID was pinned");await this.child.delete(e,t)}finally{n()}}async*deleteMany(e,t={}){const n=await this.lock.writeLock();try{const i=this;yield*this.child.deleteMany(async function*(){for await(const o of e){if(await i.pins.isPinned(o))throw new Error("CID was pinned");yield o}}(),t)}finally{n()}}async has(e,t={}){const n=await this.lock.readLock();try{return await this.child.has(e,t)}finally{n()}}async*getAll(e={}){const t=await this.lock.readLock();try{yield*this.child.getAll(e)}finally{t()}}}const DS_VERSION_KEY=new Key("/version"),CURRENT_VERSION=1;async function assertDatastoreVersionIsCurrent(r){if(!await r.has(DS_VERSION_KEY)){await r.put(DS_VERSION_KEY,fromString$b(`${CURRENT_VERSION}`));return}const e=await r.get(DS_VERSION_KEY),t=toString$b(e);if(parseInt(t,10)!==CURRENT_VERSION)throw new Error("Unknown datastore version, a datastore migration may be required")}function defaultHashers(r=[]){return[sha256$2,sha512$2,identity$3,...r]}const log$_=logger$5("helia:networked-storage");function isBlockRetriever(r){return typeof r.retrieve=="function"}function isBlockAnnouncer(r){return typeof r.announce=="function"}class NetworkedStorage{constructor(e,t){_(this,"child");_(this,"blockRetrievers");_(this,"blockAnnouncers");_(this,"hashers");_(this,"started");this.child=e,this.blockRetrievers=(t.blockBrokers??[]).filter(isBlockRetriever),this.blockAnnouncers=(t.blockBrokers??[]).filter(isBlockAnnouncer),this.hashers=t.hashers??[],this.started=!1}isStarted(){return this.started}async start(){await start(this.child,...new Set([...this.blockRetrievers,...this.blockAnnouncers])),this.started=!0}async stop(){await stop(this.child,...new Set([...this.blockRetrievers,...this.blockAnnouncers])),this.started=!1}unwrap(){return this.child}async put(e,t,n={}){return await this.child.has(e)?(n.onProgress?.(new CustomProgressEvent("blocks:put:duplicate",e)),e):(n.onProgress?.(new CustomProgressEvent("blocks:put:providers:notify",e)),this.blockAnnouncers.forEach(i=>{i.announce(e,t,n)}),n.onProgress?.(new CustomProgressEvent("blocks:put:blockstore:put",e)),this.child.put(e,t,n))}async*putMany(e,t={}){const n=filter(e,async({cid:o})=>{const a=await this.child.has(o);return a&&t.onProgress?.(new CustomProgressEvent("blocks:put-many:duplicate",o)),!a}),i=forEach(n,({cid:o,block:a})=>{t.onProgress?.(new CustomProgressEvent("blocks:put-many:providers:notify",o)),this.blockAnnouncers.forEach(c=>{c.announce(o,a,t)})});t.onProgress?.(new CustomProgressEvent("blocks:put-many:blockstore:put-many")),yield*this.child.putMany(i,t)}async get(e,t={}){if(t.offline!==!0&&!await this.child.has(e)){t.onProgress?.(new CustomProgressEvent("blocks:get:providers:get",e));const n=await raceBlockRetrievers(e,this.blockRetrievers,this.hashers,t);return t.onProgress?.(new CustomProgressEvent("blocks:get:blockstore:put",e)),await this.child.put(e,n,t),t.onProgress?.(new CustomProgressEvent("blocks:get:providers:notify",e)),this.blockAnnouncers.forEach(i=>{i.announce(e,n,t)}),n}return t.onProgress?.(new CustomProgressEvent("blocks:get:blockstore:get",e)),this.child.get(e,t)}async*getMany(e,t={}){t.onProgress?.(new CustomProgressEvent("blocks:get-many:blockstore:get-many")),yield*this.child.getMany(forEach(e,async n=>{if(t.offline!==!0&&!await this.child.has(n)){t.onProgress?.(new CustomProgressEvent("blocks:get-many:providers:get",n));const i=await raceBlockRetrievers(n,this.blockRetrievers,this.hashers,t);t.onProgress?.(new CustomProgressEvent("blocks:get-many:blockstore:put",n)),await this.child.put(n,i,t),t.onProgress?.(new CustomProgressEvent("blocks:get-many:providers:notify",n)),this.blockAnnouncers.forEach(o=>{o.announce(n,i,t)})}}))}async delete(e,t={}){t.onProgress?.(new CustomProgressEvent("blocks:delete:blockstore:delete",e)),await this.child.delete(e,t)}async*deleteMany(e,t={}){t.onProgress?.(new CustomProgressEvent("blocks:delete-many:blockstore:delete-many")),yield*this.child.deleteMany(async function*(){for await(const n of e)yield n}(),t)}async has(e,t={}){return this.child.has(e,t)}async*getAll(e={}){e.onProgress?.(new CustomProgressEvent("blocks:get-all:blockstore:get-many")),yield*this.child.getAll(e)}}const getCidBlockVerifierFunction=(r,e)=>{const t=e.find(n=>n.code===r.multihash.code);if(t==null)throw new CodeError$e(`No hasher configured for multihash code 0x${r.multihash.code.toString(16)}, please configure one. You can look up which hash this is at https://github.com/multiformats/multicodec/blob/master/table.csv`,"ERR_UNKNOWN_HASH_ALG");return async n=>{const i=await t.digest(n);if(!equals$4(i.digest,r.multihash.digest))throw new CodeError$e("Hash of downloaded block did not match multihash from passed CID","ERR_HASH_MISMATCH")}};async function raceBlockRetrievers(r,e,t,n){const i=getCidBlockVerifierFunction(r,t),o=new AbortController,a=anySignal([o.signal,n.signal]);try{return await Promise.any(e.map(async c=>{try{let l=!1;const u=await c.retrieve(r,{...n,signal:a,validateFn:async f=>{await i(f),l=!0}});return l||await i(u),u}catch(l){throw log$_.error("could not retrieve verified block for %c",r,l),l}}))}finally{a.clear()}}const log$Z=logger$5("helia");class HeliaImpl{constructor(e){_(this,"libp2p");_(this,"blockstore");_(this,"datastore");_(this,"pins");const t=defaultHashers(e.hashers),n={blockstore:e.blockstore,datastore:e.datastore,libp2p:e.libp2p,hashers:t},i=e.blockBrokers?.map(a=>a(n))??[bitswap()(n),trustlessGateway()()],o=new NetworkedStorage(e.blockstore,{blockBrokers:i,hashers:t});this.pins=new PinsImpl(e.datastore,o,e.dagWalkers??[]),this.libp2p=e.libp2p,this.blockstore=new BlockStorage(o,this.pins,{holdGcLock:e.holdGcLock}),this.datastore=e.datastore}async start(){await assertDatastoreVersionIsCurrent(this.datastore),await start(this.blockstore),await this.libp2p.start()}async stop(){await this.libp2p.stop(),await stop(this.blockstore)}async gc(e={}){const t=await this.blockstore.lock.writeLock();try{const n=this,i=this.blockstore.unwrap();log$Z("gc start"),await drain(i.deleteMany(async function*(){for await(const{cid:o}of i.getAll())try{if(await n.pins.isPinned(o,e))continue;yield o,e.onProgress?.(new CustomProgressEvent("helia:gc:deleted",o))}catch(a){log$Z.error("Error during gc",a),e.onProgress?.(new CustomProgressEvent("helia:gc:error",a))}}()))}finally{t()}log$Z("gc finished")}}var forge$m={options:{usePureJavaScript:!1}};const forge$n=getDefaultExportFromCjs(forge$m);var util$4={exports:{}},api={},baseN$1=api,_reverseAlphabets={};api.encode=function(r,e,t){if(typeof e!="string")throw new TypeError('"alphabet" must be a string.');if(t!==void 0&&typeof t!="number")throw new TypeError('"maxline" must be a number.');var n="";if(!(r instanceof Uint8Array))n=_encodeWithByteBuffer(r,e);else{var i=0,o=e.length,a=e.charAt(0),c=[0];for(i=0;i<r.length;++i){for(var l=0,u=r[i];l<c.length;++l)u+=c[l]<<8,c[l]=u%o,u=u/o|0;for(;u>0;)c.push(u%o),u=u/o|0}for(i=0;r[i]===0&&i<r.length-1;++i)n+=a;for(i=c.length-1;i>=0;--i)n+=e[c[i]]}if(t){var f=new RegExp(".{1,"+t+"}","g");n=n.match(f).join(`\r
`)}return n};api.decode=function(r,e){if(typeof r!="string")throw new TypeError('"input" must be a string.');if(typeof e!="string")throw new TypeError('"alphabet" must be a string.');var t=_reverseAlphabets[e];if(!t){t=_reverseAlphabets[e]=[];for(var n=0;n<e.length;++n)t[e.charCodeAt(n)]=n}r=r.replace(/\s/g,"");for(var i=e.length,o=e.charAt(0),a=[0],n=0;n<r.length;n++){var c=t[r.charCodeAt(n)];if(c===void 0)return;for(var l=0,u=c;l<a.length;++l)u+=a[l]*i,a[l]=u&255,u>>=8;for(;u>0;)a.push(u&255),u>>=8}for(var f=0;r[f]===o&&f<r.length-1;++f)a.push(0);return typeof Buffer<"u"?Buffer.from(a.reverse()):new Uint8Array(a.reverse())};function _encodeWithByteBuffer(r,e){var t=0,n=e.length,i=e.charAt(0),o=[0];for(t=0;t<r.length();++t){for(var a=0,c=r.at(t);a<o.length;++a)c+=o[a]<<8,o[a]=c%n,c=c/n|0;for(;c>0;)o.push(c%n),c=c/n|0}var l="";for(t=0;r.at(t)===0&&t<r.length()-1;++t)l+=i;for(t=o.length-1;t>=0;--t)l+=e[o[t]];return l}var forge$l=forge$m,baseN=baseN$1,util$3=util$4.exports=forge$l.util=forge$l.util||{};(function(){if(typeof process<"u"&&process.nextTick&&!process.browser){util$3.nextTick=process.nextTick,typeof setImmediate=="function"?util$3.setImmediate=setImmediate:util$3.setImmediate=util$3.nextTick;return}if(typeof setImmediate=="function"){util$3.setImmediate=function(){return setImmediate.apply(void 0,arguments)},util$3.nextTick=function(a){return setImmediate(a)};return}if(util$3.setImmediate=function(a){setTimeout(a,0)},typeof window<"u"&&typeof window.postMessage=="function"){let a=function(c){if(c.source===window&&c.data===r){c.stopPropagation();var l=e.slice();e.length=0,l.forEach(function(u){u()})}};var r="forge.setImmediate",e=[];util$3.setImmediate=function(c){e.push(c),e.length===1&&window.postMessage(r,"*")},window.addEventListener("message",a,!0)}if(typeof MutationObserver<"u"){var t=Date.now(),n=!0,i=document.createElement("div"),e=[];new MutationObserver(function(){var c=e.slice();e.length=0,c.forEach(function(l){l()})}).observe(i,{attributes:!0});var o=util$3.setImmediate;util$3.setImmediate=function(c){Date.now()-t>15?(t=Date.now(),o(c)):(e.push(c),e.length===1&&i.setAttribute("a",n=!n))}}util$3.nextTick=util$3.setImmediate})();util$3.isNodejs=typeof process<"u"&&process.versions&&process.versions.node;util$3.globalScope=function(){return util$3.isNodejs?commonjsGlobal:typeof self>"u"?window:self}();util$3.isArray=Array.isArray||function(r){return Object.prototype.toString.call(r)==="[object Array]"};util$3.isArrayBuffer=function(r){return typeof ArrayBuffer<"u"&&r instanceof ArrayBuffer};util$3.isArrayBufferView=function(r){return r&&util$3.isArrayBuffer(r.buffer)&&r.byteLength!==void 0};function _checkBitsParam(r){if(!(r===8||r===16||r===24||r===32))throw new Error("Only 8, 16, 24, or 32 bits supported: "+r)}util$3.ByteBuffer=ByteStringBuffer;function ByteStringBuffer(r){if(this.data="",this.read=0,typeof r=="string")this.data=r;else if(util$3.isArrayBuffer(r)||util$3.isArrayBufferView(r))if(typeof Buffer<"u"&&r instanceof Buffer)this.data=r.toString("binary");else{var e=new Uint8Array(r);try{this.data=String.fromCharCode.apply(null,e)}catch{for(var t=0;t<e.length;++t)this.putByte(e[t])}}else(r instanceof ByteStringBuffer||typeof r=="object"&&typeof r.data=="string"&&typeof r.read=="number")&&(this.data=r.data,this.read=r.read);this._constructedStringLength=0}util$3.ByteStringBuffer=ByteStringBuffer;var _MAX_CONSTRUCTED_STRING_LENGTH=4096;util$3.ByteStringBuffer.prototype._optimizeConstructedString=function(r){this._constructedStringLength+=r,this._constructedStringLength>_MAX_CONSTRUCTED_STRING_LENGTH&&(this.data.substr(0,1),this._constructedStringLength=0)};util$3.ByteStringBuffer.prototype.length=function(){return this.data.length-this.read};util$3.ByteStringBuffer.prototype.isEmpty=function(){return this.length()<=0};util$3.ByteStringBuffer.prototype.putByte=function(r){return this.putBytes(String.fromCharCode(r))};util$3.ByteStringBuffer.prototype.fillWithByte=function(r,e){r=String.fromCharCode(r);for(var t=this.data;e>0;)e&1&&(t+=r),e>>>=1,e>0&&(r+=r);return this.data=t,this._optimizeConstructedString(e),this};util$3.ByteStringBuffer.prototype.putBytes=function(r){return this.data+=r,this._optimizeConstructedString(r.length),this};util$3.ByteStringBuffer.prototype.putString=function(r){return this.putBytes(util$3.encodeUtf8(r))};util$3.ByteStringBuffer.prototype.putInt16=function(r){return this.putBytes(String.fromCharCode(r>>8&255)+String.fromCharCode(r&255))};util$3.ByteStringBuffer.prototype.putInt24=function(r){return this.putBytes(String.fromCharCode(r>>16&255)+String.fromCharCode(r>>8&255)+String.fromCharCode(r&255))};util$3.ByteStringBuffer.prototype.putInt32=function(r){return this.putBytes(String.fromCharCode(r>>24&255)+String.fromCharCode(r>>16&255)+String.fromCharCode(r>>8&255)+String.fromCharCode(r&255))};util$3.ByteStringBuffer.prototype.putInt16Le=function(r){return this.putBytes(String.fromCharCode(r&255)+String.fromCharCode(r>>8&255))};util$3.ByteStringBuffer.prototype.putInt24Le=function(r){return this.putBytes(String.fromCharCode(r&255)+String.fromCharCode(r>>8&255)+String.fromCharCode(r>>16&255))};util$3.ByteStringBuffer.prototype.putInt32Le=function(r){return this.putBytes(String.fromCharCode(r&255)+String.fromCharCode(r>>8&255)+String.fromCharCode(r>>16&255)+String.fromCharCode(r>>24&255))};util$3.ByteStringBuffer.prototype.putInt=function(r,e){_checkBitsParam(e);var t="";do e-=8,t+=String.fromCharCode(r>>e&255);while(e>0);return this.putBytes(t)};util$3.ByteStringBuffer.prototype.putSignedInt=function(r,e){return r<0&&(r+=2<<e-1),this.putInt(r,e)};util$3.ByteStringBuffer.prototype.putBuffer=function(r){return this.putBytes(r.getBytes())};util$3.ByteStringBuffer.prototype.getByte=function(){return this.data.charCodeAt(this.read++)};util$3.ByteStringBuffer.prototype.getInt16=function(){var r=this.data.charCodeAt(this.read)<<8^this.data.charCodeAt(this.read+1);return this.read+=2,r};util$3.ByteStringBuffer.prototype.getInt24=function(){var r=this.data.charCodeAt(this.read)<<16^this.data.charCodeAt(this.read+1)<<8^this.data.charCodeAt(this.read+2);return this.read+=3,r};util$3.ByteStringBuffer.prototype.getInt32=function(){var r=this.data.charCodeAt(this.read)<<24^this.data.charCodeAt(this.read+1)<<16^this.data.charCodeAt(this.read+2)<<8^this.data.charCodeAt(this.read+3);return this.read+=4,r};util$3.ByteStringBuffer.prototype.getInt16Le=function(){var r=this.data.charCodeAt(this.read)^this.data.charCodeAt(this.read+1)<<8;return this.read+=2,r};util$3.ByteStringBuffer.prototype.getInt24Le=function(){var r=this.data.charCodeAt(this.read)^this.data.charCodeAt(this.read+1)<<8^this.data.charCodeAt(this.read+2)<<16;return this.read+=3,r};util$3.ByteStringBuffer.prototype.getInt32Le=function(){var r=this.data.charCodeAt(this.read)^this.data.charCodeAt(this.read+1)<<8^this.data.charCodeAt(this.read+2)<<16^this.data.charCodeAt(this.read+3)<<24;return this.read+=4,r};util$3.ByteStringBuffer.prototype.getInt=function(r){_checkBitsParam(r);var e=0;do e=(e<<8)+this.data.charCodeAt(this.read++),r-=8;while(r>0);return e};util$3.ByteStringBuffer.prototype.getSignedInt=function(r){var e=this.getInt(r),t=2<<r-2;return e>=t&&(e-=t<<1),e};util$3.ByteStringBuffer.prototype.getBytes=function(r){var e;return r?(r=Math.min(this.length(),r),e=this.data.slice(this.read,this.read+r),this.read+=r):r===0?e="":(e=this.read===0?this.data:this.data.slice(this.read),this.clear()),e};util$3.ByteStringBuffer.prototype.bytes=function(r){return typeof r>"u"?this.data.slice(this.read):this.data.slice(this.read,this.read+r)};util$3.ByteStringBuffer.prototype.at=function(r){return this.data.charCodeAt(this.read+r)};util$3.ByteStringBuffer.prototype.setAt=function(r,e){return this.data=this.data.substr(0,this.read+r)+String.fromCharCode(e)+this.data.substr(this.read+r+1),this};util$3.ByteStringBuffer.prototype.last=function(){return this.data.charCodeAt(this.data.length-1)};util$3.ByteStringBuffer.prototype.copy=function(){var r=util$3.createBuffer(this.data);return r.read=this.read,r};util$3.ByteStringBuffer.prototype.compact=function(){return this.read>0&&(this.data=this.data.slice(this.read),this.read=0),this};util$3.ByteStringBuffer.prototype.clear=function(){return this.data="",this.read=0,this};util$3.ByteStringBuffer.prototype.truncate=function(r){var e=Math.max(0,this.length()-r);return this.data=this.data.substr(this.read,e),this.read=0,this};util$3.ByteStringBuffer.prototype.toHex=function(){for(var r="",e=this.read;e<this.data.length;++e){var t=this.data.charCodeAt(e);t<16&&(r+="0"),r+=t.toString(16)}return r};util$3.ByteStringBuffer.prototype.toString=function(){return util$3.decodeUtf8(this.bytes())};function DataBuffer(r,e){e=e||{},this.read=e.readOffset||0,this.growSize=e.growSize||1024;var t=util$3.isArrayBuffer(r),n=util$3.isArrayBufferView(r);if(t||n){t?this.data=new DataView(r):this.data=new DataView(r.buffer,r.byteOffset,r.byteLength),this.write="writeOffset"in e?e.writeOffset:this.data.byteLength;return}this.data=new DataView(new ArrayBuffer(0)),this.write=0,r!=null&&this.putBytes(r),"writeOffset"in e&&(this.write=e.writeOffset)}util$3.DataBuffer=DataBuffer;util$3.DataBuffer.prototype.length=function(){return this.write-this.read};util$3.DataBuffer.prototype.isEmpty=function(){return this.length()<=0};util$3.DataBuffer.prototype.accommodate=function(r,e){if(this.length()>=r)return this;e=Math.max(e||this.growSize,r);var t=new Uint8Array(this.data.buffer,this.data.byteOffset,this.data.byteLength),n=new Uint8Array(this.length()+e);return n.set(t),this.data=new DataView(n.buffer),this};util$3.DataBuffer.prototype.putByte=function(r){return this.accommodate(1),this.data.setUint8(this.write++,r),this};util$3.DataBuffer.prototype.fillWithByte=function(r,e){this.accommodate(e);for(var t=0;t<e;++t)this.data.setUint8(r);return this};util$3.DataBuffer.prototype.putBytes=function(r,e){if(util$3.isArrayBufferView(r)){var t=new Uint8Array(r.buffer,r.byteOffset,r.byteLength),n=t.byteLength-t.byteOffset;this.accommodate(n);var i=new Uint8Array(this.data.buffer,this.write);return i.set(t),this.write+=n,this}if(util$3.isArrayBuffer(r)){var t=new Uint8Array(r);this.accommodate(t.byteLength);var i=new Uint8Array(this.data.buffer);return i.set(t,this.write),this.write+=t.byteLength,this}if(r instanceof util$3.DataBuffer||typeof r=="object"&&typeof r.read=="number"&&typeof r.write=="number"&&util$3.isArrayBufferView(r.data)){var t=new Uint8Array(r.data.byteLength,r.read,r.length());this.accommodate(t.byteLength);var i=new Uint8Array(r.data.byteLength,this.write);return i.set(t),this.write+=t.byteLength,this}if(r instanceof util$3.ByteStringBuffer&&(r=r.data,e="binary"),e=e||"binary",typeof r=="string"){var o;if(e==="hex")return this.accommodate(Math.ceil(r.length/2)),o=new Uint8Array(this.data.buffer,this.write),this.write+=util$3.binary.hex.decode(r,o,this.write),this;if(e==="base64")return this.accommodate(Math.ceil(r.length/4)*3),o=new Uint8Array(this.data.buffer,this.write),this.write+=util$3.binary.base64.decode(r,o,this.write),this;if(e==="utf8"&&(r=util$3.encodeUtf8(r),e="binary"),e==="binary"||e==="raw")return this.accommodate(r.length),o=new Uint8Array(this.data.buffer,this.write),this.write+=util$3.binary.raw.decode(o),this;if(e==="utf16")return this.accommodate(r.length*2),o=new Uint16Array(this.data.buffer,this.write),this.write+=util$3.text.utf16.encode(o),this;throw new Error("Invalid encoding: "+e)}throw Error("Invalid parameter: "+r)};util$3.DataBuffer.prototype.putBuffer=function(r){return this.putBytes(r),r.clear(),this};util$3.DataBuffer.prototype.putString=function(r){return this.putBytes(r,"utf16")};util$3.DataBuffer.prototype.putInt16=function(r){return this.accommodate(2),this.data.setInt16(this.write,r),this.write+=2,this};util$3.DataBuffer.prototype.putInt24=function(r){return this.accommodate(3),this.data.setInt16(this.write,r>>8&65535),this.data.setInt8(this.write,r>>16&255),this.write+=3,this};util$3.DataBuffer.prototype.putInt32=function(r){return this.accommodate(4),this.data.setInt32(this.write,r),this.write+=4,this};util$3.DataBuffer.prototype.putInt16Le=function(r){return this.accommodate(2),this.data.setInt16(this.write,r,!0),this.write+=2,this};util$3.DataBuffer.prototype.putInt24Le=function(r){return this.accommodate(3),this.data.setInt8(this.write,r>>16&255),this.data.setInt16(this.write,r>>8&65535,!0),this.write+=3,this};util$3.DataBuffer.prototype.putInt32Le=function(r){return this.accommodate(4),this.data.setInt32(this.write,r,!0),this.write+=4,this};util$3.DataBuffer.prototype.putInt=function(r,e){_checkBitsParam(e),this.accommodate(e/8);do e-=8,this.data.setInt8(this.write++,r>>e&255);while(e>0);return this};util$3.DataBuffer.prototype.putSignedInt=function(r,e){return _checkBitsParam(e),this.accommodate(e/8),r<0&&(r+=2<<e-1),this.putInt(r,e)};util$3.DataBuffer.prototype.getByte=function(){return this.data.getInt8(this.read++)};util$3.DataBuffer.prototype.getInt16=function(){var r=this.data.getInt16(this.read);return this.read+=2,r};util$3.DataBuffer.prototype.getInt24=function(){var r=this.data.getInt16(this.read)<<8^this.data.getInt8(this.read+2);return this.read+=3,r};util$3.DataBuffer.prototype.getInt32=function(){var r=this.data.getInt32(this.read);return this.read+=4,r};util$3.DataBuffer.prototype.getInt16Le=function(){var r=this.data.getInt16(this.read,!0);return this.read+=2,r};util$3.DataBuffer.prototype.getInt24Le=function(){var r=this.data.getInt8(this.read)^this.data.getInt16(this.read+1,!0)<<8;return this.read+=3,r};util$3.DataBuffer.prototype.getInt32Le=function(){var r=this.data.getInt32(this.read,!0);return this.read+=4,r};util$3.DataBuffer.prototype.getInt=function(r){_checkBitsParam(r);var e=0;do e=(e<<8)+this.data.getInt8(this.read++),r-=8;while(r>0);return e};util$3.DataBuffer.prototype.getSignedInt=function(r){var e=this.getInt(r),t=2<<r-2;return e>=t&&(e-=t<<1),e};util$3.DataBuffer.prototype.getBytes=function(r){var e;return r?(r=Math.min(this.length(),r),e=this.data.slice(this.read,this.read+r),this.read+=r):r===0?e="":(e=this.read===0?this.data:this.data.slice(this.read),this.clear()),e};util$3.DataBuffer.prototype.bytes=function(r){return typeof r>"u"?this.data.slice(this.read):this.data.slice(this.read,this.read+r)};util$3.DataBuffer.prototype.at=function(r){return this.data.getUint8(this.read+r)};util$3.DataBuffer.prototype.setAt=function(r,e){return this.data.setUint8(r,e),this};util$3.DataBuffer.prototype.last=function(){return this.data.getUint8(this.write-1)};util$3.DataBuffer.prototype.copy=function(){return new util$3.DataBuffer(this)};util$3.DataBuffer.prototype.compact=function(){if(this.read>0){var r=new Uint8Array(this.data.buffer,this.read),e=new Uint8Array(r.byteLength);e.set(r),this.data=new DataView(e),this.write-=this.read,this.read=0}return this};util$3.DataBuffer.prototype.clear=function(){return this.data=new DataView(new ArrayBuffer(0)),this.read=this.write=0,this};util$3.DataBuffer.prototype.truncate=function(r){return this.write=Math.max(0,this.length()-r),this.read=Math.min(this.read,this.write),this};util$3.DataBuffer.prototype.toHex=function(){for(var r="",e=this.read;e<this.data.byteLength;++e){var t=this.data.getUint8(e);t<16&&(r+="0"),r+=t.toString(16)}return r};util$3.DataBuffer.prototype.toString=function(r){var e=new Uint8Array(this.data,this.read,this.length());if(r=r||"utf8",r==="binary"||r==="raw")return util$3.binary.raw.encode(e);if(r==="hex")return util$3.binary.hex.encode(e);if(r==="base64")return util$3.binary.base64.encode(e);if(r==="utf8")return util$3.text.utf8.decode(e);if(r==="utf16")return util$3.text.utf16.decode(e);throw new Error("Invalid encoding: "+r)};util$3.createBuffer=function(r,e){return e=e||"raw",r!==void 0&&e==="utf8"&&(r=util$3.encodeUtf8(r)),new util$3.ByteBuffer(r)};util$3.fillString=function(r,e){for(var t="";e>0;)e&1&&(t+=r),e>>>=1,e>0&&(r+=r);return t};util$3.xorBytes=function(r,e,t){for(var n="",i="",o="",a=0,c=0;t>0;--t,++a)i=r.charCodeAt(a)^e.charCodeAt(a),c>=10&&(n+=o,o="",c=0),o+=String.fromCharCode(i),++c;return n+=o,n};util$3.hexToBytes=function(r){var e="",t=0;for(r.length&!0&&(t=1,e+=String.fromCharCode(parseInt(r[0],16)));t<r.length;t+=2)e+=String.fromCharCode(parseInt(r.substr(t,2),16));return e};util$3.bytesToHex=function(r){return util$3.createBuffer(r).toHex()};util$3.int32ToBytes=function(r){return String.fromCharCode(r>>24&255)+String.fromCharCode(r>>16&255)+String.fromCharCode(r>>8&255)+String.fromCharCode(r&255)};var _base64="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",_base64Idx=[62,-1,-1,-1,63,52,53,54,55,56,57,58,59,60,61,-1,-1,-1,64,-1,-1,-1,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,-1,-1,-1,-1,-1,-1,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51],_base58="123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz";util$3.encode64=function(r,e){for(var t="",n="",i,o,a,c=0;c<r.length;)i=r.charCodeAt(c++),o=r.charCodeAt(c++),a=r.charCodeAt(c++),t+=_base64.charAt(i>>2),t+=_base64.charAt((i&3)<<4|o>>4),isNaN(o)?t+="==":(t+=_base64.charAt((o&15)<<2|a>>6),t+=isNaN(a)?"=":_base64.charAt(a&63)),e&&t.length>e&&(n+=t.substr(0,e)+`\r
`,t=t.substr(e));return n+=t,n};util$3.decode64=function(r){r=r.replace(/[^A-Za-z0-9\+\/\=]/g,"");for(var e="",t,n,i,o,a=0;a<r.length;)t=_base64Idx[r.charCodeAt(a++)-43],n=_base64Idx[r.charCodeAt(a++)-43],i=_base64Idx[r.charCodeAt(a++)-43],o=_base64Idx[r.charCodeAt(a++)-43],e+=String.fromCharCode(t<<2|n>>4),i!==64&&(e+=String.fromCharCode((n&15)<<4|i>>2),o!==64&&(e+=String.fromCharCode((i&3)<<6|o)));return e};util$3.encodeUtf8=function(r){return unescape(encodeURIComponent(r))};util$3.decodeUtf8=function(r){return decodeURIComponent(escape(r))};util$3.binary={raw:{},hex:{},base64:{},base58:{},baseN:{encode:baseN.encode,decode:baseN.decode}};util$3.binary.raw.encode=function(r){return String.fromCharCode.apply(null,r)};util$3.binary.raw.decode=function(r,e,t){var n=e;n||(n=new Uint8Array(r.length)),t=t||0;for(var i=t,o=0;o<r.length;++o)n[i++]=r.charCodeAt(o);return e?i-t:n};util$3.binary.hex.encode=util$3.bytesToHex;util$3.binary.hex.decode=function(r,e,t){var n=e;n||(n=new Uint8Array(Math.ceil(r.length/2))),t=t||0;var i=0,o=t;for(r.length&1&&(i=1,n[o++]=parseInt(r[0],16));i<r.length;i+=2)n[o++]=parseInt(r.substr(i,2),16);return e?o-t:n};util$3.binary.base64.encode=function(r,e){for(var t="",n="",i,o,a,c=0;c<r.byteLength;)i=r[c++],o=r[c++],a=r[c++],t+=_base64.charAt(i>>2),t+=_base64.charAt((i&3)<<4|o>>4),isNaN(o)?t+="==":(t+=_base64.charAt((o&15)<<2|a>>6),t+=isNaN(a)?"=":_base64.charAt(a&63)),e&&t.length>e&&(n+=t.substr(0,e)+`\r
`,t=t.substr(e));return n+=t,n};util$3.binary.base64.decode=function(r,e,t){var n=e;n||(n=new Uint8Array(Math.ceil(r.length/4)*3)),r=r.replace(/[^A-Za-z0-9\+\/\=]/g,""),t=t||0;for(var i,o,a,c,l=0,u=t;l<r.length;)i=_base64Idx[r.charCodeAt(l++)-43],o=_base64Idx[r.charCodeAt(l++)-43],a=_base64Idx[r.charCodeAt(l++)-43],c=_base64Idx[r.charCodeAt(l++)-43],n[u++]=i<<2|o>>4,a!==64&&(n[u++]=(o&15)<<4|a>>2,c!==64&&(n[u++]=(a&3)<<6|c));return e?u-t:n.subarray(0,u)};util$3.binary.base58.encode=function(r,e){return util$3.binary.baseN.encode(r,_base58,e)};util$3.binary.base58.decode=function(r,e){return util$3.binary.baseN.decode(r,_base58,e)};util$3.text={utf8:{},utf16:{}};util$3.text.utf8.encode=function(r,e,t){r=util$3.encodeUtf8(r);var n=e;n||(n=new Uint8Array(r.length)),t=t||0;for(var i=t,o=0;o<r.length;++o)n[i++]=r.charCodeAt(o);return e?i-t:n};util$3.text.utf8.decode=function(r){return util$3.decodeUtf8(String.fromCharCode.apply(null,r))};util$3.text.utf16.encode=function(r,e,t){var n=e;n||(n=new Uint8Array(r.length*2));var i=new Uint16Array(n.buffer);t=t||0;for(var o=t,a=t,c=0;c<r.length;++c)i[a++]=r.charCodeAt(c),o+=2;return e?o-t:n};util$3.text.utf16.decode=function(r){return String.fromCharCode.apply(null,new Uint16Array(r.buffer))};util$3.deflate=function(r,e,t){if(e=util$3.decode64(r.deflate(util$3.encode64(e)).rval),t){var n=2,i=e.charCodeAt(1);i&32&&(n=6),e=e.substring(n,e.length-4)}return e};util$3.inflate=function(r,e,t){var n=r.inflate(util$3.encode64(e)).rval;return n===null?null:util$3.decode64(n)};var _setStorageObject=function(r,e,t){if(!r)throw new Error("WebStorage not available.");var n;if(t===null?n=r.removeItem(e):(t=util$3.encode64(JSON.stringify(t)),n=r.setItem(e,t)),typeof n<"u"&&n.rval!==!0){var i=new Error(n.error.message);throw i.id=n.error.id,i.name=n.error.name,i}},_getStorageObject=function(r,e){if(!r)throw new Error("WebStorage not available.");var t=r.getItem(e);if(r.init)if(t.rval===null){if(t.error){var n=new Error(t.error.message);throw n.id=t.error.id,n.name=t.error.name,n}t=null}else t=t.rval;return t!==null&&(t=JSON.parse(util$3.decode64(t))),t},_setItem=function(r,e,t,n){var i=_getStorageObject(r,e);i===null&&(i={}),i[t]=n,_setStorageObject(r,e,i)},_getItem=function(r,e,t){var n=_getStorageObject(r,e);return n!==null&&(n=t in n?n[t]:null),n},_removeItem=function(r,e,t){var n=_getStorageObject(r,e);if(n!==null&&t in n){delete n[t];var i=!0;for(var o in n){i=!1;break}i&&(n=null),_setStorageObject(r,e,n)}},_clearItems=function(r,e){_setStorageObject(r,e,null)},_callStorageFunction=function(r,e,t){var n=null;typeof t>"u"&&(t=["web","flash"]);var i,o=!1,a=null;for(var c in t){i=t[c];try{if(i==="flash"||i==="both"){if(e[0]===null)throw new Error("Flash local storage not available.");n=r.apply(this,e),o=i==="flash"}(i==="web"||i==="both")&&(e[0]=localStorage,n=r.apply(this,e),o=!0)}catch(l){a=l}if(o)break}if(!o)throw a;return n};util$3.setItem=function(r,e,t,n,i){_callStorageFunction(_setItem,arguments,i)};util$3.getItem=function(r,e,t,n){return _callStorageFunction(_getItem,arguments,n)};util$3.removeItem=function(r,e,t,n){_callStorageFunction(_removeItem,arguments,n)};util$3.clearItems=function(r,e,t){_callStorageFunction(_clearItems,arguments,t)};util$3.isEmpty=function(r){for(var e in r)if(r.hasOwnProperty(e))return!1;return!0};util$3.format=function(r){for(var e=/%./g,t,n,i=0,o=[],a=0;t=e.exec(r);){n=r.substring(a,e.lastIndex-2),n.length>0&&o.push(n),a=e.lastIndex;var c=t[0][1];switch(c){case"s":case"o":i<arguments.length?o.push(arguments[i+++1]):o.push("<?>");break;case"%":o.push("%");break;default:o.push("<%"+c+"?>")}}return o.push(r.substring(a)),o.join("")};util$3.formatNumber=function(r,e,t,n){var i=r,o=isNaN(e=Math.abs(e))?2:e,a=t===void 0?",":t,c=n===void 0?".":n,l=i<0?"-":"",u=parseInt(i=Math.abs(+i||0).toFixed(o),10)+"",f=u.length>3?u.length%3:0;return l+(f?u.substr(0,f)+c:"")+u.substr(f).replace(/(\d{3})(?=\d)/g,"$1"+c)+(o?a+Math.abs(i-u).toFixed(o).slice(2):"")};util$3.formatSize=function(r){return r>=1073741824?r=util$3.formatNumber(r/1073741824,2,".","")+" GiB":r>=1048576?r=util$3.formatNumber(r/1048576,2,".","")+" MiB":r>=1024?r=util$3.formatNumber(r/1024,0)+" KiB":r=util$3.formatNumber(r,0)+" bytes",r};util$3.bytesFromIP=function(r){return r.indexOf(".")!==-1?util$3.bytesFromIPv4(r):r.indexOf(":")!==-1?util$3.bytesFromIPv6(r):null};util$3.bytesFromIPv4=function(r){if(r=r.split("."),r.length!==4)return null;for(var e=util$3.createBuffer(),t=0;t<r.length;++t){var n=parseInt(r[t],10);if(isNaN(n))return null;e.putByte(n)}return e.getBytes()};util$3.bytesFromIPv6=function(r){var e=0;r=r.split(":").filter(function(a){return a.length===0&&++e,!0});for(var t=(8-r.length+e)*2,n=util$3.createBuffer(),i=0;i<8;++i){if(!r[i]||r[i].length===0){n.fillWithByte(0,t),t=0;continue}var o=util$3.hexToBytes(r[i]);o.length<2&&n.putByte(0),n.putBytes(o)}return n.getBytes()};util$3.bytesToIP=function(r){return r.length===4?util$3.bytesToIPv4(r):r.length===16?util$3.bytesToIPv6(r):null};util$3.bytesToIPv4=function(r){if(r.length!==4)return null;for(var e=[],t=0;t<r.length;++t)e.push(r.charCodeAt(t));return e.join(".")};util$3.bytesToIPv6=function(r){if(r.length!==16)return null;for(var e=[],t=[],n=0,i=0;i<r.length;i+=2){for(var o=util$3.bytesToHex(r[i]+r[i+1]);o[0]==="0"&&o!=="0";)o=o.substr(1);if(o==="0"){var a=t[t.length-1],c=e.length;!a||c!==a.end+1?t.push({start:c,end:c}):(a.end=c,a.end-a.start>t[n].end-t[n].start&&(n=t.length-1))}e.push(o)}if(t.length>0){var l=t[n];l.end-l.start>0&&(e.splice(l.start,l.end-l.start+1,""),l.start===0&&e.unshift(""),l.end===7&&e.push(""))}return e.join(":")};util$3.estimateCores=function(r,e){if(typeof r=="function"&&(e=r,r={}),r=r||{},"cores"in util$3&&!r.update)return e(null,util$3.cores);if(typeof navigator<"u"&&"hardwareConcurrency"in navigator&&navigator.hardwareConcurrency>0)return util$3.cores=navigator.hardwareConcurrency,e(null,util$3.cores);if(typeof Worker>"u")return util$3.cores=1,e(null,util$3.cores);if(typeof Blob>"u")return util$3.cores=2,e(null,util$3.cores);var t=URL.createObjectURL(new Blob(["(",function(){self.addEventListener("message",function(a){var c=Date.now(),l=c+4;self.postMessage({st:c,et:l})})}.toString(),")()"],{type:"application/javascript"}));n([],5,16);function n(a,c,l){if(c===0){var u=Math.floor(a.reduce(function(f,g){return f+g},0)/a.length);return util$3.cores=Math.max(1,u),URL.revokeObjectURL(t),e(null,util$3.cores)}i(l,function(f,g){a.push(o(l,g)),n(a,c-1,l)})}function i(a,c){for(var l=[],u=[],f=0;f<a;++f){var g=new Worker(t);g.addEventListener("message",function($){if(u.push($.data),u.length===a){for(var S=0;S<a;++S)l[S].terminate();c(null,u)}}),l.push(g)}for(var f=0;f<a;++f)l[f].postMessage(f)}function o(a,c){for(var l=[],u=0;u<a;++u)for(var f=c[u],g=l[u]=[],$=0;$<a;++$)if(u!==$){var S=c[$];(f.st>S.st&&f.st<S.et||S.st>f.st&&S.st<f.et)&&g.push($)}return l.reduce(function(E,v){return Math.max(E,v.length)},0)}};var utilExports=util$4.exports;const forgeUtil=getDefaultExportFromCjs(utilExports);var forge$k=forge$m;forge$k.pki=forge$k.pki||{};var oids$1=forge$k.pki.oids=forge$k.oids=forge$k.oids||{};function _IN(r,e){oids$1[r]=e,oids$1[e]=r}function _I_(r,e){oids$1[r]=e}_IN("1.2.840.113549.1.1.1","rsaEncryption");_IN("1.2.840.113549.1.1.4","md5WithRSAEncryption");_IN("1.2.840.113549.1.1.5","sha1WithRSAEncryption");_IN("1.2.840.113549.1.1.7","RSAES-OAEP");_IN("1.2.840.113549.1.1.8","mgf1");_IN("1.2.840.113549.1.1.9","pSpecified");_IN("1.2.840.113549.1.1.10","RSASSA-PSS");_IN("1.2.840.113549.1.1.11","sha256WithRSAEncryption");_IN("1.2.840.113549.1.1.12","sha384WithRSAEncryption");_IN("1.2.840.113549.1.1.13","sha512WithRSAEncryption");_IN("1.3.101.112","EdDSA25519");_IN("1.2.840.10040.4.3","dsa-with-sha1");_IN("1.3.14.3.2.7","desCBC");_IN("1.3.14.3.2.26","sha1");_IN("1.3.14.3.2.29","sha1WithRSASignature");_IN("2.16.840.1.101.3.4.2.1","sha256");_IN("2.16.840.1.101.3.4.2.2","sha384");_IN("2.16.840.1.101.3.4.2.3","sha512");_IN("2.16.840.1.101.3.4.2.4","sha224");_IN("2.16.840.1.101.3.4.2.5","sha512-224");_IN("2.16.840.1.101.3.4.2.6","sha512-256");_IN("1.2.840.113549.2.2","md2");_IN("1.2.840.113549.2.5","md5");_IN("1.2.840.113549.1.7.1","data");_IN("1.2.840.113549.1.7.2","signedData");_IN("1.2.840.113549.1.7.3","envelopedData");_IN("1.2.840.113549.1.7.4","signedAndEnvelopedData");_IN("1.2.840.113549.1.7.5","digestedData");_IN("1.2.840.113549.1.7.6","encryptedData");_IN("1.2.840.113549.1.9.1","emailAddress");_IN("1.2.840.113549.1.9.2","unstructuredName");_IN("1.2.840.113549.1.9.3","contentType");_IN("1.2.840.113549.1.9.4","messageDigest");_IN("1.2.840.113549.1.9.5","signingTime");_IN("1.2.840.113549.1.9.6","counterSignature");_IN("1.2.840.113549.1.9.7","challengePassword");_IN("1.2.840.113549.1.9.8","unstructuredAddress");_IN("1.2.840.113549.1.9.14","extensionRequest");_IN("1.2.840.113549.1.9.20","friendlyName");_IN("1.2.840.113549.1.9.21","localKeyId");_IN("1.2.840.113549.1.9.22.1","x509Certificate");_IN("1.2.840.113549.1.12.10.1.1","keyBag");_IN("1.2.840.113549.1.12.10.1.2","pkcs8ShroudedKeyBag");_IN("1.2.840.113549.1.12.10.1.3","certBag");_IN("1.2.840.113549.1.12.10.1.4","crlBag");_IN("1.2.840.113549.1.12.10.1.5","secretBag");_IN("1.2.840.113549.1.12.10.1.6","safeContentsBag");_IN("1.2.840.113549.1.5.13","pkcs5PBES2");_IN("1.2.840.113549.1.5.12","pkcs5PBKDF2");_IN("1.2.840.113549.1.12.1.1","pbeWithSHAAnd128BitRC4");_IN("1.2.840.113549.1.12.1.2","pbeWithSHAAnd40BitRC4");_IN("1.2.840.113549.1.12.1.3","pbeWithSHAAnd3-KeyTripleDES-CBC");_IN("1.2.840.113549.1.12.1.4","pbeWithSHAAnd2-KeyTripleDES-CBC");_IN("1.2.840.113549.1.12.1.5","pbeWithSHAAnd128BitRC2-CBC");_IN("1.2.840.113549.1.12.1.6","pbewithSHAAnd40BitRC2-CBC");_IN("1.2.840.113549.2.7","hmacWithSHA1");_IN("1.2.840.113549.2.8","hmacWithSHA224");_IN("1.2.840.113549.2.9","hmacWithSHA256");_IN("1.2.840.113549.2.10","hmacWithSHA384");_IN("1.2.840.113549.2.11","hmacWithSHA512");_IN("1.2.840.113549.3.7","des-EDE3-CBC");_IN("2.16.840.1.101.3.4.1.2","aes128-CBC");_IN("2.16.840.1.101.3.4.1.22","aes192-CBC");_IN("2.16.840.1.101.3.4.1.42","aes256-CBC");_IN("2.5.4.3","commonName");_IN("2.5.4.4","surname");_IN("2.5.4.5","serialNumber");_IN("2.5.4.6","countryName");_IN("2.5.4.7","localityName");_IN("2.5.4.8","stateOrProvinceName");_IN("2.5.4.9","streetAddress");_IN("2.5.4.10","organizationName");_IN("2.5.4.11","organizationalUnitName");_IN("2.5.4.12","title");_IN("2.5.4.13","description");_IN("2.5.4.15","businessCategory");_IN("2.5.4.17","postalCode");_IN("2.5.4.42","givenName");_IN("1.3.6.1.4.1.311.60.2.1.2","jurisdictionOfIncorporationStateOrProvinceName");_IN("1.3.6.1.4.1.311.60.2.1.3","jurisdictionOfIncorporationCountryName");_IN("2.16.840.1.113730.1.1","nsCertType");_IN("2.16.840.1.113730.1.13","nsComment");_I_("2.5.29.1","authorityKeyIdentifier");_I_("2.5.29.2","keyAttributes");_I_("2.5.29.3","certificatePolicies");_I_("2.5.29.4","keyUsageRestriction");_I_("2.5.29.5","policyMapping");_I_("2.5.29.6","subtreesConstraint");_I_("2.5.29.7","subjectAltName");_I_("2.5.29.8","issuerAltName");_I_("2.5.29.9","subjectDirectoryAttributes");_I_("2.5.29.10","basicConstraints");_I_("2.5.29.11","nameConstraints");_I_("2.5.29.12","policyConstraints");_I_("2.5.29.13","basicConstraints");_IN("2.5.29.14","subjectKeyIdentifier");_IN("2.5.29.15","keyUsage");_I_("2.5.29.16","privateKeyUsagePeriod");_IN("2.5.29.17","subjectAltName");_IN("2.5.29.18","issuerAltName");_IN("2.5.29.19","basicConstraints");_I_("2.5.29.20","cRLNumber");_I_("2.5.29.21","cRLReason");_I_("2.5.29.22","expirationDate");_I_("2.5.29.23","instructionCode");_I_("2.5.29.24","invalidityDate");_I_("2.5.29.25","cRLDistributionPoints");_I_("2.5.29.26","issuingDistributionPoint");_I_("2.5.29.27","deltaCRLIndicator");_I_("2.5.29.28","issuingDistributionPoint");_I_("2.5.29.29","certificateIssuer");_I_("2.5.29.30","nameConstraints");_IN("2.5.29.31","cRLDistributionPoints");_IN("2.5.29.32","certificatePolicies");_I_("2.5.29.33","policyMappings");_I_("2.5.29.34","policyConstraints");_IN("2.5.29.35","authorityKeyIdentifier");_I_("2.5.29.36","policyConstraints");_IN("2.5.29.37","extKeyUsage");_I_("2.5.29.46","freshestCRL");_I_("2.5.29.54","inhibitAnyPolicy");_IN("1.3.6.1.4.1.11129.2.4.2","timestampList");_IN("1.3.6.1.5.5.7.1.1","authorityInfoAccess");_IN("1.3.6.1.5.5.7.3.1","serverAuth");_IN("1.3.6.1.5.5.7.3.2","clientAuth");_IN("1.3.6.1.5.5.7.3.3","codeSigning");_IN("1.3.6.1.5.5.7.3.4","emailProtection");_IN("1.3.6.1.5.5.7.3.8","timeStamping");var forge$j=forge$m,asn1$2=forge$j.asn1=forge$j.asn1||{};asn1$2.Class={UNIVERSAL:0,APPLICATION:64,CONTEXT_SPECIFIC:128,PRIVATE:192};asn1$2.Type={NONE:0,BOOLEAN:1,INTEGER:2,BITSTRING:3,OCTETSTRING:4,NULL:5,OID:6,ODESC:7,EXTERNAL:8,REAL:9,ENUMERATED:10,EMBEDDED:11,UTF8:12,ROID:13,SEQUENCE:16,SET:17,PRINTABLESTRING:19,IA5STRING:22,UTCTIME:23,GENERALIZEDTIME:24,BMPSTRING:30};asn1$2.create=function(r,e,t,n,i){if(forge$j.util.isArray(n)){for(var o=[],a=0;a<n.length;++a)n[a]!==void 0&&o.push(n[a]);n=o}var c={tagClass:r,type:e,constructed:t,composed:t||forge$j.util.isArray(n),value:n};return i&&"bitStringContents"in i&&(c.bitStringContents=i.bitStringContents,c.original=asn1$2.copy(c)),c};asn1$2.copy=function(r,e){var t;if(forge$j.util.isArray(r)){t=[];for(var n=0;n<r.length;++n)t.push(asn1$2.copy(r[n],e));return t}return typeof r=="string"?r:(t={tagClass:r.tagClass,type:r.type,constructed:r.constructed,composed:r.composed,value:asn1$2.copy(r.value,e)},e&&!e.excludeBitStringContents&&(t.bitStringContents=r.bitStringContents),t)};asn1$2.equals=function(r,e,t){if(forge$j.util.isArray(r)){if(!forge$j.util.isArray(e)||r.length!==e.length)return!1;for(var n=0;n<r.length;++n)if(!asn1$2.equals(r[n],e[n]))return!1;return!0}if(typeof r!=typeof e)return!1;if(typeof r=="string")return r===e;var i=r.tagClass===e.tagClass&&r.type===e.type&&r.constructed===e.constructed&&r.composed===e.composed&&asn1$2.equals(r.value,e.value);return t&&t.includeBitStringContents&&(i=i&&r.bitStringContents===e.bitStringContents),i};asn1$2.getBerValueLength=function(r){var e=r.getByte();if(e!==128){var t,n=e&128;return n?t=r.getInt((e&127)<<3):t=e,t}};function _checkBufferLength(r,e,t){if(t>e){var n=new Error("Too few bytes to parse DER.");throw n.available=r.length(),n.remaining=e,n.requested=t,n}}var _getValueLength=function(r,e){var t=r.getByte();if(e--,t!==128){var n,i=t&128;if(!i)n=t;else{var o=t&127;_checkBufferLength(r,e,o),n=r.getInt(o<<3)}if(n<0)throw new Error("Negative length: "+n);return n}};asn1$2.fromDer=function(r,e){e===void 0&&(e={strict:!0,parseAllBytes:!0,decodeBitStrings:!0}),typeof e=="boolean"&&(e={strict:e,parseAllBytes:!0,decodeBitStrings:!0}),"strict"in e||(e.strict=!0),"parseAllBytes"in e||(e.parseAllBytes=!0),"decodeBitStrings"in e||(e.decodeBitStrings=!0),typeof r=="string"&&(r=forge$j.util.createBuffer(r));var t=r.length(),n=_fromDer(r,r.length(),0,e);if(e.parseAllBytes&&r.length()!==0){var i=new Error("Unparsed DER bytes remain after ASN.1 parsing.");throw i.byteCount=t,i.remaining=r.length(),i}return n};function _fromDer(r,e,t,n){var i;_checkBufferLength(r,e,2);var o=r.getByte();e--;var a=o&192,c=o&31;i=r.length();var l=_getValueLength(r,e);if(e-=i-r.length(),l!==void 0&&l>e){if(n.strict){var u=new Error("Too few bytes to read ASN.1 value.");throw u.available=r.length(),u.remaining=e,u.requested=l,u}l=e}var f,g,$=(o&32)===32;if($)if(f=[],l===void 0)for(;;){if(_checkBufferLength(r,e,2),r.bytes(2)==="\0\0"){r.getBytes(2),e-=2;break}i=r.length(),f.push(_fromDer(r,e,t+1,n)),e-=i-r.length()}else for(;l>0;)i=r.length(),f.push(_fromDer(r,l,t+1,n)),e-=i-r.length(),l-=i-r.length();if(f===void 0&&a===asn1$2.Class.UNIVERSAL&&c===asn1$2.Type.BITSTRING&&(g=r.bytes(l)),f===void 0&&n.decodeBitStrings&&a===asn1$2.Class.UNIVERSAL&&c===asn1$2.Type.BITSTRING&&l>1){var S=r.read,E=e,v=0;if(c===asn1$2.Type.BITSTRING&&(_checkBufferLength(r,e,1),v=r.getByte(),e--),v===0)try{i=r.length();var T={strict:!0,decodeBitStrings:!0},I=_fromDer(r,e,t+1,T),A=i-r.length();e-=A,c==asn1$2.Type.BITSTRING&&A++;var P=I.tagClass;A===l&&(P===asn1$2.Class.UNIVERSAL||P===asn1$2.Class.CONTEXT_SPECIFIC)&&(f=[I])}catch{}f===void 0&&(r.read=S,e=E)}if(f===void 0){if(l===void 0){if(n.strict)throw new Error("Non-constructed ASN.1 object of indefinite length.");l=e}if(c===asn1$2.Type.BMPSTRING)for(f="";l>0;l-=2)_checkBufferLength(r,e,2),f+=String.fromCharCode(r.getInt16()),e-=2;else f=r.getBytes(l),e-=l}var x=g===void 0?null:{bitStringContents:g};return asn1$2.create(a,c,$,f,x)}asn1$2.toDer=function(r){var e=forge$j.util.createBuffer(),t=r.tagClass|r.type,n=forge$j.util.createBuffer(),i=!1;if("bitStringContents"in r&&(i=!0,r.original&&(i=asn1$2.equals(r,r.original))),i)n.putBytes(r.bitStringContents);else if(r.composed){r.constructed?t|=32:n.putByte(0);for(var o=0;o<r.value.length;++o)r.value[o]!==void 0&&n.putBuffer(asn1$2.toDer(r.value[o]))}else if(r.type===asn1$2.Type.BMPSTRING)for(var o=0;o<r.value.length;++o)n.putInt16(r.value.charCodeAt(o));else r.type===asn1$2.Type.INTEGER&&r.value.length>1&&(r.value.charCodeAt(0)===0&&!(r.value.charCodeAt(1)&128)||r.value.charCodeAt(0)===255&&(r.value.charCodeAt(1)&128)===128)?n.putBytes(r.value.substr(1)):n.putBytes(r.value);if(e.putByte(t),n.length()<=127)e.putByte(n.length()&127);else{var a=n.length(),c="";do c+=String.fromCharCode(a&255),a=a>>>8;while(a>0);e.putByte(c.length|128);for(var o=c.length-1;o>=0;--o)e.putByte(c.charCodeAt(o))}return e.putBuffer(n),e};asn1$2.oidToDer=function(r){var e=r.split("."),t=forge$j.util.createBuffer();t.putByte(40*parseInt(e[0],10)+parseInt(e[1],10));for(var n,i,o,a,c=2;c<e.length;++c){n=!0,i=[],o=parseInt(e[c],10);do a=o&127,o=o>>>7,n||(a|=128),i.push(a),n=!1;while(o>0);for(var l=i.length-1;l>=0;--l)t.putByte(i[l])}return t};asn1$2.derToOid=function(r){var e;typeof r=="string"&&(r=forge$j.util.createBuffer(r));var t=r.getByte();e=Math.floor(t/40)+"."+t%40;for(var n=0;r.length()>0;)t=r.getByte(),n=n<<7,t&128?n+=t&127:(e+="."+(n+t),n=0);return e};asn1$2.utcTimeToDate=function(r){var e=new Date,t=parseInt(r.substr(0,2),10);t=t>=50?1900+t:2e3+t;var n=parseInt(r.substr(2,2),10)-1,i=parseInt(r.substr(4,2),10),o=parseInt(r.substr(6,2),10),a=parseInt(r.substr(8,2),10),c=0;if(r.length>11){var l=r.charAt(10),u=10;l!=="+"&&l!=="-"&&(c=parseInt(r.substr(10,2),10),u+=2)}if(e.setUTCFullYear(t,n,i),e.setUTCHours(o,a,c,0),u&&(l=r.charAt(u),l==="+"||l==="-")){var f=parseInt(r.substr(u+1,2),10),g=parseInt(r.substr(u+4,2),10),$=f*60+g;$*=6e4,l==="+"?e.setTime(+e-$):e.setTime(+e+$)}return e};asn1$2.generalizedTimeToDate=function(r){var e=new Date,t=parseInt(r.substr(0,4),10),n=parseInt(r.substr(4,2),10)-1,i=parseInt(r.substr(6,2),10),o=parseInt(r.substr(8,2),10),a=parseInt(r.substr(10,2),10),c=parseInt(r.substr(12,2),10),l=0,u=0,f=!1;r.charAt(r.length-1)==="Z"&&(f=!0);var g=r.length-5,$=r.charAt(g);if($==="+"||$==="-"){var S=parseInt(r.substr(g+1,2),10),E=parseInt(r.substr(g+4,2),10);u=S*60+E,u*=6e4,$==="+"&&(u*=-1),f=!0}return r.charAt(14)==="."&&(l=parseFloat(r.substr(14),10)*1e3),f?(e.setUTCFullYear(t,n,i),e.setUTCHours(o,a,c,l),e.setTime(+e+u)):(e.setFullYear(t,n,i),e.setHours(o,a,c,l)),e};asn1$2.dateToUtcTime=function(r){if(typeof r=="string")return r;var e="",t=[];t.push((""+r.getUTCFullYear()).substr(2)),t.push(""+(r.getUTCMonth()+1)),t.push(""+r.getUTCDate()),t.push(""+r.getUTCHours()),t.push(""+r.getUTCMinutes()),t.push(""+r.getUTCSeconds());for(var n=0;n<t.length;++n)t[n].length<2&&(e+="0"),e+=t[n];return e+="Z",e};asn1$2.dateToGeneralizedTime=function(r){if(typeof r=="string")return r;var e="",t=[];t.push(""+r.getUTCFullYear()),t.push(""+(r.getUTCMonth()+1)),t.push(""+r.getUTCDate()),t.push(""+r.getUTCHours()),t.push(""+r.getUTCMinutes()),t.push(""+r.getUTCSeconds());for(var n=0;n<t.length;++n)t[n].length<2&&(e+="0"),e+=t[n];return e+="Z",e};asn1$2.integerToDer=function(r){var e=forge$j.util.createBuffer();if(r>=-128&&r<128)return e.putSignedInt(r,8);if(r>=-32768&&r<32768)return e.putSignedInt(r,16);if(r>=-8388608&&r<8388608)return e.putSignedInt(r,24);if(r>=-2147483648&&r<2147483648)return e.putSignedInt(r,32);var t=new Error("Integer too large; max is 32-bits.");throw t.integer=r,t};asn1$2.derToInteger=function(r){typeof r=="string"&&(r=forge$j.util.createBuffer(r));var e=r.length()*8;if(e>32)throw new Error("Integer too large; max is 32-bits.");return r.getSignedInt(e)};asn1$2.validate=function(r,e,t,n){var i=!1;if((r.tagClass===e.tagClass||typeof e.tagClass>"u")&&(r.type===e.type||typeof e.type>"u"))if(r.constructed===e.constructed||typeof e.constructed>"u"){if(i=!0,e.value&&forge$j.util.isArray(e.value))for(var o=0,a=0;i&&a<e.value.length;++a)i=e.value[a].optional||!1,r.value[o]&&(i=asn1$2.validate(r.value[o],e.value[a],t,n),i?++o:e.value[a].optional&&(i=!0)),!i&&n&&n.push("["+e.name+'] Tag class "'+e.tagClass+'", type "'+e.type+'" expected value length "'+e.value.length+'", got "'+r.value.length+'"');if(i&&t&&(e.capture&&(t[e.capture]=r.value),e.captureAsn1&&(t[e.captureAsn1]=r),e.captureBitStringContents&&"bitStringContents"in r&&(t[e.captureBitStringContents]=r.bitStringContents),e.captureBitStringValue&&"bitStringContents"in r))if(r.bitStringContents.length<2)t[e.captureBitStringValue]="";else{var c=r.bitStringContents.charCodeAt(0);if(c!==0)throw new Error("captureBitStringValue only supported for zero unused bits");t[e.captureBitStringValue]=r.bitStringContents.slice(1)}}else n&&n.push("["+e.name+'] Expected constructed "'+e.constructed+'", got "'+r.constructed+'"');else n&&(r.tagClass!==e.tagClass&&n.push("["+e.name+'] Expected tag class "'+e.tagClass+'", got "'+r.tagClass+'"'),r.type!==e.type&&n.push("["+e.name+'] Expected type "'+e.type+'", got "'+r.type+'"'));return i};var _nonLatinRegex=/[^\\u0000-\\u00ff]/;asn1$2.prettyPrint=function(r,e,t){var n="";e=e||0,t=t||2,e>0&&(n+=`
`);for(var i="",o=0;o<e*t;++o)i+=" ";switch(n+=i+"Tag: ",r.tagClass){case asn1$2.Class.UNIVERSAL:n+="Universal:";break;case asn1$2.Class.APPLICATION:n+="Application:";break;case asn1$2.Class.CONTEXT_SPECIFIC:n+="Context-Specific:";break;case asn1$2.Class.PRIVATE:n+="Private:";break}if(r.tagClass===asn1$2.Class.UNIVERSAL)switch(n+=r.type,r.type){case asn1$2.Type.NONE:n+=" (None)";break;case asn1$2.Type.BOOLEAN:n+=" (Boolean)";break;case asn1$2.Type.INTEGER:n+=" (Integer)";break;case asn1$2.Type.BITSTRING:n+=" (Bit string)";break;case asn1$2.Type.OCTETSTRING:n+=" (Octet string)";break;case asn1$2.Type.NULL:n+=" (Null)";break;case asn1$2.Type.OID:n+=" (Object Identifier)";break;case asn1$2.Type.ODESC:n+=" (Object Descriptor)";break;case asn1$2.Type.EXTERNAL:n+=" (External or Instance of)";break;case asn1$2.Type.REAL:n+=" (Real)";break;case asn1$2.Type.ENUMERATED:n+=" (Enumerated)";break;case asn1$2.Type.EMBEDDED:n+=" (Embedded PDV)";break;case asn1$2.Type.UTF8:n+=" (UTF8)";break;case asn1$2.Type.ROID:n+=" (Relative Object Identifier)";break;case asn1$2.Type.SEQUENCE:n+=" (Sequence)";break;case asn1$2.Type.SET:n+=" (Set)";break;case asn1$2.Type.PRINTABLESTRING:n+=" (Printable String)";break;case asn1$2.Type.IA5String:n+=" (IA5String (ASCII))";break;case asn1$2.Type.UTCTIME:n+=" (UTC time)";break;case asn1$2.Type.GENERALIZEDTIME:n+=" (Generalized time)";break;case asn1$2.Type.BMPSTRING:n+=" (BMP String)";break}else n+=r.type;if(n+=`
`,n+=i+"Constructed: "+r.constructed+`
`,r.composed){for(var a=0,c="",o=0;o<r.value.length;++o)r.value[o]!==void 0&&(a+=1,c+=asn1$2.prettyPrint(r.value[o],e+1,t),o+1<r.value.length&&(c+=","));n+=i+"Sub values: "+a+c}else{if(n+=i+"Value: ",r.type===asn1$2.Type.OID){var l=asn1$2.derToOid(r.value);n+=l,forge$j.pki&&forge$j.pki.oids&&l in forge$j.pki.oids&&(n+=" ("+forge$j.pki.oids[l]+") ")}if(r.type===asn1$2.Type.INTEGER)try{n+=asn1$2.derToInteger(r.value)}catch{n+="0x"+forge$j.util.bytesToHex(r.value)}else if(r.type===asn1$2.Type.BITSTRING){if(r.value.length>1?n+="0x"+forge$j.util.bytesToHex(r.value.slice(1)):n+="(none)",r.value.length>0){var u=r.value.charCodeAt(0);u==1?n+=" (1 unused bit shown)":u>1&&(n+=" ("+u+" unused bits shown)")}}else if(r.type===asn1$2.Type.OCTETSTRING)_nonLatinRegex.test(r.value)||(n+="("+r.value+") "),n+="0x"+forge$j.util.bytesToHex(r.value);else if(r.type===asn1$2.Type.UTF8)try{n+=forge$j.util.decodeUtf8(r.value)}catch(f){if(f.message==="URI malformed")n+="0x"+forge$j.util.bytesToHex(r.value)+" (malformed UTF8)";else throw f}else r.type===asn1$2.Type.PRINTABLESTRING||r.type===asn1$2.Type.IA5String?n+=r.value:_nonLatinRegex.test(r.value)?n+="0x"+forge$j.util.bytesToHex(r.value):r.value.length===0?n+="[null]":n+=r.value}return n};var forge$i=forge$m;forge$i.cipher=forge$i.cipher||{};forge$i.cipher.algorithms=forge$i.cipher.algorithms||{};forge$i.cipher.createCipher=function(r,e){var t=r;if(typeof t=="string"&&(t=forge$i.cipher.getAlgorithm(t),t&&(t=t())),!t)throw new Error("Unsupported algorithm: "+r);return new forge$i.cipher.BlockCipher({algorithm:t,key:e,decrypt:!1})};forge$i.cipher.createDecipher=function(r,e){var t=r;if(typeof t=="string"&&(t=forge$i.cipher.getAlgorithm(t),t&&(t=t())),!t)throw new Error("Unsupported algorithm: "+r);return new forge$i.cipher.BlockCipher({algorithm:t,key:e,decrypt:!0})};forge$i.cipher.registerAlgorithm=function(r,e){r=r.toUpperCase(),forge$i.cipher.algorithms[r]=e};forge$i.cipher.getAlgorithm=function(r){return r=r.toUpperCase(),r in forge$i.cipher.algorithms?forge$i.cipher.algorithms[r]:null};var BlockCipher=forge$i.cipher.BlockCipher=function(r){this.algorithm=r.algorithm,this.mode=this.algorithm.mode,this.blockSize=this.mode.blockSize,this._finish=!1,this._input=null,this.output=null,this._op=r.decrypt?this.mode.decrypt:this.mode.encrypt,this._decrypt=r.decrypt,this.algorithm.initialize(r)};BlockCipher.prototype.start=function(r){r=r||{};var e={};for(var t in r)e[t]=r[t];e.decrypt=this._decrypt,this._finish=!1,this._input=forge$i.util.createBuffer(),this.output=r.output||forge$i.util.createBuffer(),this.mode.start(e)};BlockCipher.prototype.update=function(r){for(r&&this._input.putBuffer(r);!this._op.call(this.mode,this._input,this.output,this._finish)&&!this._finish;);this._input.compact()};BlockCipher.prototype.finish=function(r){r&&(this.mode.name==="ECB"||this.mode.name==="CBC")&&(this.mode.pad=function(t){return r(this.blockSize,t,!1)},this.mode.unpad=function(t){return r(this.blockSize,t,!0)});var e={};return e.decrypt=this._decrypt,e.overflow=this._input.length()%this.blockSize,!(!this._decrypt&&this.mode.pad&&!this.mode.pad(this._input,e)||(this._finish=!0,this.update(),this._decrypt&&this.mode.unpad&&!this.mode.unpad(this.output,e))||this.mode.afterFinish&&!this.mode.afterFinish(this.output,e))};var forge$h=forge$m;forge$h.cipher=forge$h.cipher||{};var modes=forge$h.cipher.modes=forge$h.cipher.modes||{};modes.ecb=function(r){r=r||{},this.name="ECB",this.cipher=r.cipher,this.blockSize=r.blockSize||16,this._ints=this.blockSize/4,this._inBlock=new Array(this._ints),this._outBlock=new Array(this._ints)};modes.ecb.prototype.start=function(r){};modes.ecb.prototype.encrypt=function(r,e,t){if(r.length()<this.blockSize&&!(t&&r.length()>0))return!0;for(var n=0;n<this._ints;++n)this._inBlock[n]=r.getInt32();this.cipher.encrypt(this._inBlock,this._outBlock);for(var n=0;n<this._ints;++n)e.putInt32(this._outBlock[n])};modes.ecb.prototype.decrypt=function(r,e,t){if(r.length()<this.blockSize&&!(t&&r.length()>0))return!0;for(var n=0;n<this._ints;++n)this._inBlock[n]=r.getInt32();this.cipher.decrypt(this._inBlock,this._outBlock);for(var n=0;n<this._ints;++n)e.putInt32(this._outBlock[n])};modes.ecb.prototype.pad=function(r,e){var t=r.length()===this.blockSize?this.blockSize:this.blockSize-r.length();return r.fillWithByte(t,t),!0};modes.ecb.prototype.unpad=function(r,e){if(e.overflow>0)return!1;var t=r.length(),n=r.at(t-1);return n>this.blockSize<<2?!1:(r.truncate(n),!0)};modes.cbc=function(r){r=r||{},this.name="CBC",this.cipher=r.cipher,this.blockSize=r.blockSize||16,this._ints=this.blockSize/4,this._inBlock=new Array(this._ints),this._outBlock=new Array(this._ints)};modes.cbc.prototype.start=function(r){if(r.iv===null){if(!this._prev)throw new Error("Invalid IV parameter.");this._iv=this._prev.slice(0)}else if("iv"in r)this._iv=transformIV(r.iv,this.blockSize),this._prev=this._iv.slice(0);else throw new Error("Invalid IV parameter.")};modes.cbc.prototype.encrypt=function(r,e,t){if(r.length()<this.blockSize&&!(t&&r.length()>0))return!0;for(var n=0;n<this._ints;++n)this._inBlock[n]=this._prev[n]^r.getInt32();this.cipher.encrypt(this._inBlock,this._outBlock);for(var n=0;n<this._ints;++n)e.putInt32(this._outBlock[n]);this._prev=this._outBlock};modes.cbc.prototype.decrypt=function(r,e,t){if(r.length()<this.blockSize&&!(t&&r.length()>0))return!0;for(var n=0;n<this._ints;++n)this._inBlock[n]=r.getInt32();this.cipher.decrypt(this._inBlock,this._outBlock);for(var n=0;n<this._ints;++n)e.putInt32(this._prev[n]^this._outBlock[n]);this._prev=this._inBlock.slice(0)};modes.cbc.prototype.pad=function(r,e){var t=r.length()===this.blockSize?this.blockSize:this.blockSize-r.length();return r.fillWithByte(t,t),!0};modes.cbc.prototype.unpad=function(r,e){if(e.overflow>0)return!1;var t=r.length(),n=r.at(t-1);return n>this.blockSize<<2?!1:(r.truncate(n),!0)};modes.cfb=function(r){r=r||{},this.name="CFB",this.cipher=r.cipher,this.blockSize=r.blockSize||16,this._ints=this.blockSize/4,this._inBlock=null,this._outBlock=new Array(this._ints),this._partialBlock=new Array(this._ints),this._partialOutput=forge$h.util.createBuffer(),this._partialBytes=0};modes.cfb.prototype.start=function(r){if(!("iv"in r))throw new Error("Invalid IV parameter.");this._iv=transformIV(r.iv,this.blockSize),this._inBlock=this._iv.slice(0),this._partialBytes=0};modes.cfb.prototype.encrypt=function(r,e,t){var n=r.length();if(n===0)return!0;if(this.cipher.encrypt(this._inBlock,this._outBlock),this._partialBytes===0&&n>=this.blockSize){for(var i=0;i<this._ints;++i)this._inBlock[i]=r.getInt32()^this._outBlock[i],e.putInt32(this._inBlock[i]);return}var o=(this.blockSize-n)%this.blockSize;o>0&&(o=this.blockSize-o),this._partialOutput.clear();for(var i=0;i<this._ints;++i)this._partialBlock[i]=r.getInt32()^this._outBlock[i],this._partialOutput.putInt32(this._partialBlock[i]);if(o>0)r.read-=this.blockSize;else for(var i=0;i<this._ints;++i)this._inBlock[i]=this._partialBlock[i];if(this._partialBytes>0&&this._partialOutput.getBytes(this._partialBytes),o>0&&!t)return e.putBytes(this._partialOutput.getBytes(o-this._partialBytes)),this._partialBytes=o,!0;e.putBytes(this._partialOutput.getBytes(n-this._partialBytes)),this._partialBytes=0};modes.cfb.prototype.decrypt=function(r,e,t){var n=r.length();if(n===0)return!0;if(this.cipher.encrypt(this._inBlock,this._outBlock),this._partialBytes===0&&n>=this.blockSize){for(var i=0;i<this._ints;++i)this._inBlock[i]=r.getInt32(),e.putInt32(this._inBlock[i]^this._outBlock[i]);return}var o=(this.blockSize-n)%this.blockSize;o>0&&(o=this.blockSize-o),this._partialOutput.clear();for(var i=0;i<this._ints;++i)this._partialBlock[i]=r.getInt32(),this._partialOutput.putInt32(this._partialBlock[i]^this._outBlock[i]);if(o>0)r.read-=this.blockSize;else for(var i=0;i<this._ints;++i)this._inBlock[i]=this._partialBlock[i];if(this._partialBytes>0&&this._partialOutput.getBytes(this._partialBytes),o>0&&!t)return e.putBytes(this._partialOutput.getBytes(o-this._partialBytes)),this._partialBytes=o,!0;e.putBytes(this._partialOutput.getBytes(n-this._partialBytes)),this._partialBytes=0};modes.ofb=function(r){r=r||{},this.name="OFB",this.cipher=r.cipher,this.blockSize=r.blockSize||16,this._ints=this.blockSize/4,this._inBlock=null,this._outBlock=new Array(this._ints),this._partialOutput=forge$h.util.createBuffer(),this._partialBytes=0};modes.ofb.prototype.start=function(r){if(!("iv"in r))throw new Error("Invalid IV parameter.");this._iv=transformIV(r.iv,this.blockSize),this._inBlock=this._iv.slice(0),this._partialBytes=0};modes.ofb.prototype.encrypt=function(r,e,t){var n=r.length();if(r.length()===0)return!0;if(this.cipher.encrypt(this._inBlock,this._outBlock),this._partialBytes===0&&n>=this.blockSize){for(var i=0;i<this._ints;++i)e.putInt32(r.getInt32()^this._outBlock[i]),this._inBlock[i]=this._outBlock[i];return}var o=(this.blockSize-n)%this.blockSize;o>0&&(o=this.blockSize-o),this._partialOutput.clear();for(var i=0;i<this._ints;++i)this._partialOutput.putInt32(r.getInt32()^this._outBlock[i]);if(o>0)r.read-=this.blockSize;else for(var i=0;i<this._ints;++i)this._inBlock[i]=this._outBlock[i];if(this._partialBytes>0&&this._partialOutput.getBytes(this._partialBytes),o>0&&!t)return e.putBytes(this._partialOutput.getBytes(o-this._partialBytes)),this._partialBytes=o,!0;e.putBytes(this._partialOutput.getBytes(n-this._partialBytes)),this._partialBytes=0};modes.ofb.prototype.decrypt=modes.ofb.prototype.encrypt;modes.ctr=function(r){r=r||{},this.name="CTR",this.cipher=r.cipher,this.blockSize=r.blockSize||16,this._ints=this.blockSize/4,this._inBlock=null,this._outBlock=new Array(this._ints),this._partialOutput=forge$h.util.createBuffer(),this._partialBytes=0};modes.ctr.prototype.start=function(r){if(!("iv"in r))throw new Error("Invalid IV parameter.");this._iv=transformIV(r.iv,this.blockSize),this._inBlock=this._iv.slice(0),this._partialBytes=0};modes.ctr.prototype.encrypt=function(r,e,t){var n=r.length();if(n===0)return!0;if(this.cipher.encrypt(this._inBlock,this._outBlock),this._partialBytes===0&&n>=this.blockSize)for(var i=0;i<this._ints;++i)e.putInt32(r.getInt32()^this._outBlock[i]);else{var o=(this.blockSize-n)%this.blockSize;o>0&&(o=this.blockSize-o),this._partialOutput.clear();for(var i=0;i<this._ints;++i)this._partialOutput.putInt32(r.getInt32()^this._outBlock[i]);if(o>0&&(r.read-=this.blockSize),this._partialBytes>0&&this._partialOutput.getBytes(this._partialBytes),o>0&&!t)return e.putBytes(this._partialOutput.getBytes(o-this._partialBytes)),this._partialBytes=o,!0;e.putBytes(this._partialOutput.getBytes(n-this._partialBytes)),this._partialBytes=0}inc32(this._inBlock)};modes.ctr.prototype.decrypt=modes.ctr.prototype.encrypt;modes.gcm=function(r){r=r||{},this.name="GCM",this.cipher=r.cipher,this.blockSize=r.blockSize||16,this._ints=this.blockSize/4,this._inBlock=new Array(this._ints),this._outBlock=new Array(this._ints),this._partialOutput=forge$h.util.createBuffer(),this._partialBytes=0,this._R=3774873600};modes.gcm.prototype.start=function(r){if(!("iv"in r))throw new Error("Invalid IV parameter.");var e=forge$h.util.createBuffer(r.iv);this._cipherLength=0;var t;if("additionalData"in r?t=forge$h.util.createBuffer(r.additionalData):t=forge$h.util.createBuffer(),"tagLength"in r?this._tagLength=r.tagLength:this._tagLength=128,this._tag=null,r.decrypt&&(this._tag=forge$h.util.createBuffer(r.tag).getBytes(),this._tag.length!==this._tagLength/8))throw new Error("Authentication tag does not match tag length.");this._hashBlock=new Array(this._ints),this.tag=null,this._hashSubkey=new Array(this._ints),this.cipher.encrypt([0,0,0,0],this._hashSubkey),this.componentBits=4,this._m=this.generateHashTable(this._hashSubkey,this.componentBits);var n=e.length();if(n===12)this._j0=[e.getInt32(),e.getInt32(),e.getInt32(),1];else{for(this._j0=[0,0,0,0];e.length()>0;)this._j0=this.ghash(this._hashSubkey,this._j0,[e.getInt32(),e.getInt32(),e.getInt32(),e.getInt32()]);this._j0=this.ghash(this._hashSubkey,this._j0,[0,0].concat(from64To32(n*8)))}this._inBlock=this._j0.slice(0),inc32(this._inBlock),this._partialBytes=0,t=forge$h.util.createBuffer(t),this._aDataLength=from64To32(t.length()*8);var i=t.length()%this.blockSize;for(i&&t.fillWithByte(0,this.blockSize-i),this._s=[0,0,0,0];t.length()>0;)this._s=this.ghash(this._hashSubkey,this._s,[t.getInt32(),t.getInt32(),t.getInt32(),t.getInt32()])};modes.gcm.prototype.encrypt=function(r,e,t){var n=r.length();if(n===0)return!0;if(this.cipher.encrypt(this._inBlock,this._outBlock),this._partialBytes===0&&n>=this.blockSize){for(var i=0;i<this._ints;++i)e.putInt32(this._outBlock[i]^=r.getInt32());this._cipherLength+=this.blockSize}else{var o=(this.blockSize-n)%this.blockSize;o>0&&(o=this.blockSize-o),this._partialOutput.clear();for(var i=0;i<this._ints;++i)this._partialOutput.putInt32(r.getInt32()^this._outBlock[i]);if(o<=0||t){if(t){var a=n%this.blockSize;this._cipherLength+=a,this._partialOutput.truncate(this.blockSize-a)}else this._cipherLength+=this.blockSize;for(var i=0;i<this._ints;++i)this._outBlock[i]=this._partialOutput.getInt32();this._partialOutput.read-=this.blockSize}if(this._partialBytes>0&&this._partialOutput.getBytes(this._partialBytes),o>0&&!t)return r.read-=this.blockSize,e.putBytes(this._partialOutput.getBytes(o-this._partialBytes)),this._partialBytes=o,!0;e.putBytes(this._partialOutput.getBytes(n-this._partialBytes)),this._partialBytes=0}this._s=this.ghash(this._hashSubkey,this._s,this._outBlock),inc32(this._inBlock)};modes.gcm.prototype.decrypt=function(r,e,t){var n=r.length();if(n<this.blockSize&&!(t&&n>0))return!0;this.cipher.encrypt(this._inBlock,this._outBlock),inc32(this._inBlock),this._hashBlock[0]=r.getInt32(),this._hashBlock[1]=r.getInt32(),this._hashBlock[2]=r.getInt32(),this._hashBlock[3]=r.getInt32(),this._s=this.ghash(this._hashSubkey,this._s,this._hashBlock);for(var i=0;i<this._ints;++i)e.putInt32(this._outBlock[i]^this._hashBlock[i]);n<this.blockSize?this._cipherLength+=n%this.blockSize:this._cipherLength+=this.blockSize};modes.gcm.prototype.afterFinish=function(r,e){var t=!0;e.decrypt&&e.overflow&&r.truncate(this.blockSize-e.overflow),this.tag=forge$h.util.createBuffer();var n=this._aDataLength.concat(from64To32(this._cipherLength*8));this._s=this.ghash(this._hashSubkey,this._s,n);var i=[];this.cipher.encrypt(this._j0,i);for(var o=0;o<this._ints;++o)this.tag.putInt32(this._s[o]^i[o]);return this.tag.truncate(this.tag.length()%(this._tagLength/8)),e.decrypt&&this.tag.bytes()!==this._tag&&(t=!1),t};modes.gcm.prototype.multiply=function(r,e){for(var t=[0,0,0,0],n=e.slice(0),i=0;i<128;++i){var o=r[i/32|0]&1<<31-i%32;o&&(t[0]^=n[0],t[1]^=n[1],t[2]^=n[2],t[3]^=n[3]),this.pow(n,n)}return t};modes.gcm.prototype.pow=function(r,e){for(var t=r[3]&1,n=3;n>0;--n)e[n]=r[n]>>>1|(r[n-1]&1)<<31;e[0]=r[0]>>>1,t&&(e[0]^=this._R)};modes.gcm.prototype.tableMultiply=function(r){for(var e=[0,0,0,0],t=0;t<32;++t){var n=t/8|0,i=r[n]>>>(7-t%8)*4&15,o=this._m[t][i];e[0]^=o[0],e[1]^=o[1],e[2]^=o[2],e[3]^=o[3]}return e};modes.gcm.prototype.ghash=function(r,e,t){return e[0]^=t[0],e[1]^=t[1],e[2]^=t[2],e[3]^=t[3],this.tableMultiply(e)};modes.gcm.prototype.generateHashTable=function(r,e){for(var t=8/e,n=4*t,i=16*t,o=new Array(i),a=0;a<i;++a){var c=[0,0,0,0],l=a/n|0,u=(n-1-a%n)*e;c[l]=1<<e-1<<u,o[a]=this.generateSubHashTable(this.multiply(c,r),e)}return o};modes.gcm.prototype.generateSubHashTable=function(r,e){var t=1<<e,n=t>>>1,i=new Array(t);i[n]=r.slice(0);for(var o=n>>>1;o>0;)this.pow(i[2*o],i[o]=[]),o>>=1;for(o=2;o<n;){for(var a=1;a<o;++a){var c=i[o],l=i[a];i[o+a]=[c[0]^l[0],c[1]^l[1],c[2]^l[2],c[3]^l[3]]}o*=2}for(i[0]=[0,0,0,0],o=n+1;o<t;++o){var u=i[o^n];i[o]=[r[0]^u[0],r[1]^u[1],r[2]^u[2],r[3]^u[3]]}return i};function transformIV(r,e){if(typeof r=="string"&&(r=forge$h.util.createBuffer(r)),forge$h.util.isArray(r)&&r.length>4){var t=r;r=forge$h.util.createBuffer();for(var n=0;n<t.length;++n)r.putByte(t[n])}if(r.length()<e)throw new Error("Invalid IV length; got "+r.length()+" bytes and expected "+e+" bytes.");if(!forge$h.util.isArray(r)){for(var i=[],o=e/4,n=0;n<o;++n)i.push(r.getInt32());r=i}return r}function inc32(r){r[r.length-1]=r[r.length-1]+1&4294967295}function from64To32(r){return[r/4294967296|0,r&4294967295]}var forge$g=forge$m;forge$g.aes=forge$g.aes||{};forge$g.aes.startEncrypting=function(r,e,t,n){var i=_createCipher$1({key:r,output:t,decrypt:!1,mode:n});return i.start(e),i};forge$g.aes.createEncryptionCipher=function(r,e){return _createCipher$1({key:r,output:null,decrypt:!1,mode:e})};forge$g.aes.startDecrypting=function(r,e,t,n){var i=_createCipher$1({key:r,output:t,decrypt:!0,mode:n});return i.start(e),i};forge$g.aes.createDecryptionCipher=function(r,e){return _createCipher$1({key:r,output:null,decrypt:!0,mode:e})};forge$g.aes.Algorithm=function(r,e){init||initialize();var t=this;t.name=r,t.mode=new e({blockSize:16,cipher:{encrypt:function(n,i){return _updateBlock$1(t._w,n,i,!1)},decrypt:function(n,i){return _updateBlock$1(t._w,n,i,!0)}}}),t._init=!1};forge$g.aes.Algorithm.prototype.initialize=function(r){if(!this._init){var e=r.key,t;if(typeof e=="string"&&(e.length===16||e.length===24||e.length===32))e=forge$g.util.createBuffer(e);else if(forge$g.util.isArray(e)&&(e.length===16||e.length===24||e.length===32)){t=e,e=forge$g.util.createBuffer();for(var n=0;n<t.length;++n)e.putByte(t[n])}if(!forge$g.util.isArray(e)){t=e,e=[];var i=t.length();if(i===16||i===24||i===32){i=i>>>2;for(var n=0;n<i;++n)e.push(t.getInt32())}}if(!forge$g.util.isArray(e)||!(e.length===4||e.length===6||e.length===8))throw new Error("Invalid key parameter.");var o=this.mode.name,a=["CFB","OFB","CTR","GCM"].indexOf(o)!==-1;this._w=_expandKey(e,r.decrypt&&!a),this._init=!0}};forge$g.aes._expandKey=function(r,e){return init||initialize(),_expandKey(r,e)};forge$g.aes._updateBlock=_updateBlock$1;registerAlgorithm$1("AES-ECB",forge$g.cipher.modes.ecb);registerAlgorithm$1("AES-CBC",forge$g.cipher.modes.cbc);registerAlgorithm$1("AES-CFB",forge$g.cipher.modes.cfb);registerAlgorithm$1("AES-OFB",forge$g.cipher.modes.ofb);registerAlgorithm$1("AES-CTR",forge$g.cipher.modes.ctr);registerAlgorithm$1("AES-GCM",forge$g.cipher.modes.gcm);function registerAlgorithm$1(r,e){var t=function(){return new forge$g.aes.Algorithm(r,e)};forge$g.cipher.registerAlgorithm(r,t)}var init=!1,Nb=4,sbox,isbox,rcon,mix,imix;function initialize(){init=!0,rcon=[0,1,2,4,8,16,32,64,128,27,54];for(var r=new Array(256),e=0;e<128;++e)r[e]=e<<1,r[e+128]=e+128<<1^283;sbox=new Array(256),isbox=new Array(256),mix=new Array(4),imix=new Array(4);for(var e=0;e<4;++e)mix[e]=new Array(256),imix[e]=new Array(256);for(var t=0,n=0,i,o,a,c,l,u,f,e=0;e<256;++e){c=n^n<<1^n<<2^n<<3^n<<4,c=c>>8^c&255^99,sbox[t]=c,isbox[c]=t,l=r[c],i=r[t],o=r[i],a=r[o],u=l<<24^c<<16^c<<8^(c^l),f=(i^o^a)<<24^(t^a)<<16^(t^o^a)<<8^(t^i^a);for(var g=0;g<4;++g)mix[g][t]=u,imix[g][c]=f,u=u<<24|u>>>8,f=f<<24|f>>>8;t===0?t=n=1:(t=i^r[r[r[i^a]]],n^=r[r[n]])}}function _expandKey(r,e){for(var t=r.slice(0),n,i=1,o=t.length,a=o+6+1,c=Nb*a,l=o;l<c;++l)n=t[l-1],l%o===0?(n=sbox[n>>>16&255]<<24^sbox[n>>>8&255]<<16^sbox[n&255]<<8^sbox[n>>>24]^rcon[i]<<24,i++):o>6&&l%o===4&&(n=sbox[n>>>24]<<24^sbox[n>>>16&255]<<16^sbox[n>>>8&255]<<8^sbox[n&255]),t[l]=t[l-o]^n;if(e){var u,f=imix[0],g=imix[1],$=imix[2],S=imix[3],E=t.slice(0);c=t.length;for(var l=0,v=c-Nb;l<c;l+=Nb,v-=Nb)if(l===0||l===c-Nb)E[l]=t[v],E[l+1]=t[v+3],E[l+2]=t[v+2],E[l+3]=t[v+1];else for(var T=0;T<Nb;++T)u=t[v+T],E[l+(3&-T)]=f[sbox[u>>>24]]^g[sbox[u>>>16&255]]^$[sbox[u>>>8&255]]^S[sbox[u&255]];t=E}return t}function _updateBlock$1(r,e,t,n){var i=r.length/4-1,o,a,c,l,u;n?(o=imix[0],a=imix[1],c=imix[2],l=imix[3],u=isbox):(o=mix[0],a=mix[1],c=mix[2],l=mix[3],u=sbox);var f,g,$,S,E,v,T;f=e[0]^r[0],g=e[n?3:1]^r[1],$=e[2]^r[2],S=e[n?1:3]^r[3];for(var I=3,A=1;A<i;++A)E=o[f>>>24]^a[g>>>16&255]^c[$>>>8&255]^l[S&255]^r[++I],v=o[g>>>24]^a[$>>>16&255]^c[S>>>8&255]^l[f&255]^r[++I],T=o[$>>>24]^a[S>>>16&255]^c[f>>>8&255]^l[g&255]^r[++I],S=o[S>>>24]^a[f>>>16&255]^c[g>>>8&255]^l[$&255]^r[++I],f=E,g=v,$=T;t[0]=u[f>>>24]<<24^u[g>>>16&255]<<16^u[$>>>8&255]<<8^u[S&255]^r[++I],t[n?3:1]=u[g>>>24]<<24^u[$>>>16&255]<<16^u[S>>>8&255]<<8^u[f&255]^r[++I],t[2]=u[$>>>24]<<24^u[S>>>16&255]<<16^u[f>>>8&255]<<8^u[g&255]^r[++I],t[n?1:3]=u[S>>>24]<<24^u[f>>>16&255]<<16^u[g>>>8&255]<<8^u[$&255]^r[++I]}function _createCipher$1(r){r=r||{};var e=(r.mode||"CBC").toUpperCase(),t="AES-"+e,n;r.decrypt?n=forge$g.cipher.createDecipher(t,r.key):n=forge$g.cipher.createCipher(t,r.key);var i=n.start;return n.start=function(o,a){var c=null;a instanceof forge$g.util.ByteBuffer&&(c=a,a={}),a=a||{},a.output=c,a.iv=o,i.call(n,a)},n}var forge$f=forge$m;forge$f.des=forge$f.des||{};forge$f.des.startEncrypting=function(r,e,t,n){var i=_createCipher({key:r,output:t,decrypt:!1,mode:n||(e===null?"ECB":"CBC")});return i.start(e),i};forge$f.des.createEncryptionCipher=function(r,e){return _createCipher({key:r,output:null,decrypt:!1,mode:e})};forge$f.des.startDecrypting=function(r,e,t,n){var i=_createCipher({key:r,output:t,decrypt:!0,mode:n||(e===null?"ECB":"CBC")});return i.start(e),i};forge$f.des.createDecryptionCipher=function(r,e){return _createCipher({key:r,output:null,decrypt:!0,mode:e})};forge$f.des.Algorithm=function(r,e){var t=this;t.name=r,t.mode=new e({blockSize:8,cipher:{encrypt:function(n,i){return _updateBlock(t._keys,n,i,!1)},decrypt:function(n,i){return _updateBlock(t._keys,n,i,!0)}}}),t._init=!1};forge$f.des.Algorithm.prototype.initialize=function(r){if(!this._init){var e=forge$f.util.createBuffer(r.key);if(this.name.indexOf("3DES")===0&&e.length()!==24)throw new Error("Invalid Triple-DES key size: "+e.length()*8);this._keys=_createKeys(e),this._init=!0}};registerAlgorithm("DES-ECB",forge$f.cipher.modes.ecb);registerAlgorithm("DES-CBC",forge$f.cipher.modes.cbc);registerAlgorithm("DES-CFB",forge$f.cipher.modes.cfb);registerAlgorithm("DES-OFB",forge$f.cipher.modes.ofb);registerAlgorithm("DES-CTR",forge$f.cipher.modes.ctr);registerAlgorithm("3DES-ECB",forge$f.cipher.modes.ecb);registerAlgorithm("3DES-CBC",forge$f.cipher.modes.cbc);registerAlgorithm("3DES-CFB",forge$f.cipher.modes.cfb);registerAlgorithm("3DES-OFB",forge$f.cipher.modes.ofb);registerAlgorithm("3DES-CTR",forge$f.cipher.modes.ctr);function registerAlgorithm(r,e){var t=function(){return new forge$f.des.Algorithm(r,e)};forge$f.cipher.registerAlgorithm(r,t)}var spfunction1=[16843776,0,65536,16843780,16842756,66564,4,65536,1024,16843776,16843780,1024,16778244,16842756,16777216,4,1028,16778240,16778240,66560,66560,16842752,16842752,16778244,65540,16777220,16777220,65540,0,1028,66564,16777216,65536,16843780,4,16842752,16843776,16777216,16777216,1024,16842756,65536,66560,16777220,1024,4,16778244,66564,16843780,65540,16842752,16778244,16777220,1028,66564,16843776,1028,16778240,16778240,0,65540,66560,0,16842756],spfunction2=[-2146402272,-2147450880,32768,1081376,1048576,32,-2146435040,-2147450848,-2147483616,-2146402272,-2146402304,-2147483648,-2147450880,1048576,32,-2146435040,1081344,1048608,-2147450848,0,-2147483648,32768,1081376,-2146435072,1048608,-2147483616,0,1081344,32800,-2146402304,-2146435072,32800,0,1081376,-2146435040,1048576,-2147450848,-2146435072,-2146402304,32768,-2146435072,-2147450880,32,-2146402272,1081376,32,32768,-2147483648,32800,-2146402304,1048576,-2147483616,1048608,-2147450848,-2147483616,1048608,1081344,0,-2147450880,32800,-2147483648,-2146435040,-2146402272,1081344],spfunction3=[520,134349312,0,134348808,134218240,0,131592,134218240,131080,134217736,134217736,131072,134349320,131080,134348800,520,134217728,8,134349312,512,131584,134348800,134348808,131592,134218248,131584,131072,134218248,8,134349320,512,134217728,134349312,134217728,131080,520,131072,134349312,134218240,0,512,131080,134349320,134218240,134217736,512,0,134348808,134218248,131072,134217728,134349320,8,131592,131584,134217736,134348800,134218248,520,134348800,131592,8,134348808,131584],spfunction4=[8396801,8321,8321,128,8396928,8388737,8388609,8193,0,8396800,8396800,8396929,129,0,8388736,8388609,1,8192,8388608,8396801,128,8388608,8193,8320,8388737,1,8320,8388736,8192,8396928,8396929,129,8388736,8388609,8396800,8396929,129,0,0,8396800,8320,8388736,8388737,1,8396801,8321,8321,128,8396929,129,1,8192,8388609,8193,8396928,8388737,8193,8320,8388608,8396801,128,8388608,8192,8396928],spfunction5=[256,34078976,34078720,1107296512,524288,256,1073741824,34078720,1074266368,524288,33554688,1074266368,1107296512,1107820544,524544,1073741824,33554432,1074266112,1074266112,0,1073742080,1107820800,1107820800,33554688,1107820544,1073742080,0,1107296256,34078976,33554432,1107296256,524544,524288,1107296512,256,33554432,1073741824,34078720,1107296512,1074266368,33554688,1073741824,1107820544,34078976,1074266368,256,33554432,1107820544,1107820800,524544,1107296256,1107820800,34078720,0,1074266112,1107296256,524544,33554688,1073742080,524288,0,1074266112,34078976,1073742080],spfunction6=[536870928,541065216,16384,541081616,541065216,16,541081616,4194304,536887296,4210704,4194304,536870928,4194320,536887296,536870912,16400,0,4194320,536887312,16384,4210688,536887312,16,541065232,541065232,0,4210704,541081600,16400,4210688,541081600,536870912,536887296,16,541065232,4210688,541081616,4194304,16400,536870928,4194304,536887296,536870912,16400,536870928,541081616,4210688,541065216,4210704,541081600,0,541065232,16,16384,541065216,4210704,16384,4194320,536887312,0,541081600,536870912,4194320,536887312],spfunction7=[2097152,69206018,67110914,0,2048,67110914,2099202,69208064,69208066,2097152,0,67108866,2,67108864,69206018,2050,67110912,2099202,2097154,67110912,67108866,69206016,69208064,2097154,69206016,2048,2050,69208066,2099200,2,67108864,2099200,67108864,2099200,2097152,67110914,67110914,69206018,69206018,2,2097154,67108864,67110912,2097152,69208064,2050,2099202,69208064,2050,67108866,69208066,69206016,2099200,0,2,69208066,0,2099202,69206016,2048,67108866,67110912,2048,2097154],spfunction8=[268439616,4096,262144,268701760,268435456,268439616,64,268435456,262208,268697600,268701760,266240,268701696,266304,4096,64,268697600,268435520,268439552,4160,266240,262208,268697664,268701696,4160,0,0,268697664,268435520,268439552,266304,262144,266304,262144,268701696,4096,64,268697664,4096,266304,268439552,64,268435520,268697600,268697664,268435456,262144,268439616,0,268701760,262208,268435520,268697600,268439552,268439616,0,268701760,266240,266240,4160,4160,262208,268435456,268701696];function _createKeys(r){for(var e=[0,4,536870912,536870916,65536,65540,536936448,536936452,512,516,536871424,536871428,66048,66052,536936960,536936964],t=[0,1,1048576,1048577,67108864,67108865,68157440,68157441,256,257,1048832,1048833,67109120,67109121,68157696,68157697],n=[0,8,2048,2056,16777216,16777224,16779264,16779272,0,8,2048,2056,16777216,16777224,16779264,16779272],i=[0,2097152,134217728,136314880,8192,2105344,134225920,136323072,131072,2228224,134348800,136445952,139264,2236416,134356992,136454144],o=[0,262144,16,262160,0,262144,16,262160,4096,266240,4112,266256,4096,266240,4112,266256],a=[0,1024,32,1056,0,1024,32,1056,33554432,33555456,33554464,33555488,33554432,33555456,33554464,33555488],c=[0,268435456,524288,268959744,2,268435458,524290,268959746,0,268435456,524288,268959744,2,268435458,524290,268959746],l=[0,65536,2048,67584,536870912,536936448,536872960,536938496,131072,196608,133120,198656,537001984,537067520,537004032,537069568],u=[0,262144,0,262144,2,262146,2,262146,33554432,33816576,33554432,33816576,33554434,33816578,33554434,33816578],f=[0,268435456,8,268435464,0,268435456,8,268435464,1024,268436480,1032,268436488,1024,268436480,1032,268436488],g=[0,32,0,32,1048576,1048608,1048576,1048608,8192,8224,8192,8224,1056768,1056800,1056768,1056800],$=[0,16777216,512,16777728,2097152,18874368,2097664,18874880,67108864,83886080,67109376,83886592,69206016,85983232,69206528,85983744],S=[0,4096,134217728,134221824,524288,528384,134742016,134746112,16,4112,134217744,134221840,524304,528400,134742032,134746128],E=[0,4,256,260,0,4,256,260,1,5,257,261,1,5,257,261],v=r.length()>8?3:1,T=[],I=[0,0,1,1,1,1,1,1,0,1,1,1,1,1,1,0],A=0,P,x=0;x<v;x++){var D=r.getInt32(),C=r.getInt32();P=(D>>>4^C)&252645135,C^=P,D^=P<<4,P=(C>>>-16^D)&65535,D^=P,C^=P<<-16,P=(D>>>2^C)&858993459,C^=P,D^=P<<2,P=(C>>>-16^D)&65535,D^=P,C^=P<<-16,P=(D>>>1^C)&1431655765,C^=P,D^=P<<1,P=(C>>>8^D)&16711935,D^=P,C^=P<<8,P=(D>>>1^C)&1431655765,C^=P,D^=P<<1,P=D<<8|C>>>20&240,D=C<<24|C<<8&16711680|C>>>8&65280|C>>>24&240,C=P;for(var k=0;k<I.length;++k){I[k]?(D=D<<2|D>>>26,C=C<<2|C>>>26):(D=D<<1|D>>>27,C=C<<1|C>>>27),D&=-15,C&=-15;var N=e[D>>>28]|t[D>>>24&15]|n[D>>>20&15]|i[D>>>16&15]|o[D>>>12&15]|a[D>>>8&15]|c[D>>>4&15],L=l[C>>>28]|u[C>>>24&15]|f[C>>>20&15]|g[C>>>16&15]|$[C>>>12&15]|S[C>>>8&15]|E[C>>>4&15];P=(L>>>16^N)&65535,T[A++]=N^P,T[A++]=L^P<<16}}return T}function _updateBlock(r,e,t,n){var i=r.length===32?3:9,o;i===3?o=n?[30,-2,-2]:[0,32,2]:o=n?[94,62,-2,32,64,2,30,-2,-2]:[0,32,2,62,30,-2,64,96,2];var a,c=e[0],l=e[1];a=(c>>>4^l)&252645135,l^=a,c^=a<<4,a=(c>>>16^l)&65535,l^=a,c^=a<<16,a=(l>>>2^c)&858993459,c^=a,l^=a<<2,a=(l>>>8^c)&16711935,c^=a,l^=a<<8,a=(c>>>1^l)&1431655765,l^=a,c^=a<<1,c=c<<1|c>>>31,l=l<<1|l>>>31;for(var u=0;u<i;u+=3){for(var f=o[u+1],g=o[u+2],$=o[u];$!=f;$+=g){var S=l^r[$],E=(l>>>4|l<<28)^r[$+1];a=c,c=l,l=a^(spfunction2[S>>>24&63]|spfunction4[S>>>16&63]|spfunction6[S>>>8&63]|spfunction8[S&63]|spfunction1[E>>>24&63]|spfunction3[E>>>16&63]|spfunction5[E>>>8&63]|spfunction7[E&63])}a=c,c=l,l=a}c=c>>>1|c<<31,l=l>>>1|l<<31,a=(c>>>1^l)&1431655765,l^=a,c^=a<<1,a=(l>>>8^c)&16711935,c^=a,l^=a<<8,a=(l>>>2^c)&858993459,c^=a,l^=a<<2,a=(c>>>16^l)&65535,l^=a,c^=a<<16,a=(c>>>4^l)&252645135,l^=a,c^=a<<4,t[0]=c,t[1]=l}function _createCipher(r){r=r||{};var e=(r.mode||"CBC").toUpperCase(),t="DES-"+e,n;r.decrypt?n=forge$f.cipher.createDecipher(t,r.key):n=forge$f.cipher.createCipher(t,r.key);var i=n.start;return n.start=function(o,a){var c=null;a instanceof forge$f.util.ByteBuffer&&(c=a,a={}),a=a||{},a.output=c,a.iv=o,i.call(n,a)},n}var forge$e=forge$m;forge$e.md=forge$e.md||{};forge$e.md.algorithms=forge$e.md.algorithms||{};var forge$d=forge$m,hmac$1=forge$d.hmac=forge$d.hmac||{};hmac$1.create=function(){var r=null,e=null,t=null,n=null,i={};return i.start=function(o,a){if(o!==null)if(typeof o=="string")if(o=o.toLowerCase(),o in forge$d.md.algorithms)e=forge$d.md.algorithms[o].create();else throw new Error('Unknown hash algorithm "'+o+'"');else e=o;if(a===null)a=r;else{if(typeof a=="string")a=forge$d.util.createBuffer(a);else if(forge$d.util.isArray(a)){var c=a;a=forge$d.util.createBuffer();for(var l=0;l<c.length;++l)a.putByte(c[l])}var u=a.length();u>e.blockLength&&(e.start(),e.update(a.bytes()),a=e.digest()),t=forge$d.util.createBuffer(),n=forge$d.util.createBuffer(),u=a.length();for(var l=0;l<u;++l){var c=a.at(l);t.putByte(54^c),n.putByte(92^c)}if(u<e.blockLength)for(var c=e.blockLength-u,l=0;l<c;++l)t.putByte(54),n.putByte(92);r=a,t=t.bytes(),n=n.bytes()}e.start(),e.update(t)},i.update=function(o){e.update(o)},i.getMac=function(){var o=e.digest().bytes();return e.start(),e.update(n),e.update(o),e.digest()},i.digest=i.getMac,i};const __viteBrowserExternal={},__viteBrowserExternal$1=Object.freeze(Object.defineProperty({__proto__:null,default:__viteBrowserExternal},Symbol.toStringTag,{value:"Module"})),require$$1=getAugmentedNamespace(__viteBrowserExternal$1);var forge$c=forge$m,pkcs5=forge$c.pkcs5=forge$c.pkcs5||{},crypto$3;forge$c.util.isNodejs&&!forge$c.options.usePureJavaScript&&(crypto$3=require$$1);var pbkdf2$1=forge$c.pbkdf2=pkcs5.pbkdf2=function(r,e,t,n,i,o){if(typeof i=="function"&&(o=i,i=null),forge$c.util.isNodejs&&!forge$c.options.usePureJavaScript&&crypto$3.pbkdf2&&(i===null||typeof i!="object")&&(crypto$3.pbkdf2Sync.length>4||!i||i==="sha1"))return typeof i!="string"&&(i="sha1"),r=Buffer.from(r,"binary"),e=Buffer.from(e,"binary"),o?crypto$3.pbkdf2Sync.length===4?crypto$3.pbkdf2(r,e,t,n,function(P,x){if(P)return o(P);o(null,x.toString("binary"))}):crypto$3.pbkdf2(r,e,t,n,i,function(P,x){if(P)return o(P);o(null,x.toString("binary"))}):crypto$3.pbkdf2Sync.length===4?crypto$3.pbkdf2Sync(r,e,t,n).toString("binary"):crypto$3.pbkdf2Sync(r,e,t,n,i).toString("binary");if((typeof i>"u"||i===null)&&(i="sha1"),typeof i=="string"){if(!(i in forge$c.md.algorithms))throw new Error("Unknown hash algorithm: "+i);i=forge$c.md[i].create()}var a=i.digestLength;if(n>4294967295*a){var c=new Error("Derived key is too long.");if(o)return o(c);throw c}var l=Math.ceil(n/a),u=n-(l-1)*a,f=forge$c.hmac.create();f.start(i,r);var g="",$,S,E;if(!o){for(var v=1;v<=l;++v){f.start(null,null),f.update(e),f.update(forge$c.util.int32ToBytes(v)),$=E=f.digest().getBytes();for(var T=2;T<=t;++T)f.start(null,null),f.update(E),S=f.digest().getBytes(),$=forge$c.util.xorBytes($,S,a),E=S;g+=v<l?$:$.substr(0,u)}return g}var v=1,T;function I(){if(v>l)return o(null,g);f.start(null,null),f.update(e),f.update(forge$c.util.int32ToBytes(v)),$=E=f.digest().getBytes(),T=2,A()}function A(){if(T<=t)return f.start(null,null),f.update(E),S=f.digest().getBytes(),$=forge$c.util.xorBytes($,S,a),E=S,++T,forge$c.util.setImmediate(A);g+=v<l?$:$.substr(0,u),++v,I()}I()};const forgePbkdf2=getDefaultExportFromCjs(pbkdf2$1);var forge$b=forge$m,pem=forge$b.pem=forge$b.pem||{};pem.encode=function(r,e){e=e||{};var t="-----BEGIN "+r.type+`-----\r
`,n;if(r.procType&&(n={name:"Proc-Type",values:[String(r.procType.version),r.procType.type]},t+=foldHeader(n)),r.contentDomain&&(n={name:"Content-Domain",values:[r.contentDomain]},t+=foldHeader(n)),r.dekInfo&&(n={name:"DEK-Info",values:[r.dekInfo.algorithm]},r.dekInfo.parameters&&n.values.push(r.dekInfo.parameters),t+=foldHeader(n)),r.headers)for(var i=0;i<r.headers.length;++i)t+=foldHeader(r.headers[i]);return r.procType&&(t+=`\r
`),t+=forge$b.util.encode64(r.body,e.maxline||64)+`\r
`,t+="-----END "+r.type+`-----\r
`,t};pem.decode=function(r){for(var e=[],t=/\s*-----BEGIN ([A-Z0-9- ]+)-----\r?\n?([\x21-\x7e\s]+?(?:\r?\n\r?\n))?([:A-Za-z0-9+\/=\s]+?)-----END \1-----/g,n=/([\x21-\x7e]+):\s*([\x21-\x7e\s^:]+)/,i=/\r?\n/,o;o=t.exec(r),!!o;){var a=o[1];a==="NEW CERTIFICATE REQUEST"&&(a="CERTIFICATE REQUEST");var c={type:a,procType:null,contentDomain:null,dekInfo:null,headers:[],body:forge$b.util.decode64(o[3])};if(e.push(c),!!o[2]){for(var l=o[2].split(i),u=0;o&&u<l.length;){for(var f=l[u].replace(/\s+$/,""),g=u+1;g<l.length;++g){var $=l[g];if(!/\s/.test($[0]))break;f+=$,u=g}if(o=f.match(n),o){for(var S={name:o[1],values:[]},E=o[2].split(","),v=0;v<E.length;++v)S.values.push(ltrim(E[v]));if(c.procType)if(!c.contentDomain&&S.name==="Content-Domain")c.contentDomain=E[0]||"";else if(!c.dekInfo&&S.name==="DEK-Info"){if(S.values.length===0)throw new Error('Invalid PEM formatted message. The "DEK-Info" header must have at least one subfield.');c.dekInfo={algorithm:E[0],parameters:E[1]||null}}else c.headers.push(S);else{if(S.name!=="Proc-Type")throw new Error('Invalid PEM formatted message. The first encapsulated header must be "Proc-Type".');if(S.values.length!==2)throw new Error('Invalid PEM formatted message. The "Proc-Type" header must have two subfields.');c.procType={version:E[0],type:E[1]}}}++u}if(c.procType==="ENCRYPTED"&&!c.dekInfo)throw new Error('Invalid PEM formatted message. The "DEK-Info" header must be present if "Proc-Type" is "ENCRYPTED".')}}if(e.length===0)throw new Error("Invalid PEM formatted message.");return e};function foldHeader(r){for(var e=r.name+": ",t=[],n=function(l,u){return" "+u},i=0;i<r.values.length;++i)t.push(r.values[i].replace(/^(\S+\r\n)/,n));e+=t.join(",")+`\r
`;for(var o=0,a=-1,i=0;i<e.length;++i,++o)if(o>65&&a!==-1){var c=e[a];c===","?(++a,e=e.substr(0,a)+`\r
 `+e.substr(a)):e=e.substr(0,a)+`\r
`+c+e.substr(a+1),o=i-a-1,a=-1,++i}else(e[i]===" "||e[i]==="	"||e[i]===",")&&(a=i);return e}function ltrim(r){return r.replace(/^\s+/,"")}var forge$a=forge$m,sha256$1=forge$a.sha256=forge$a.sha256||{};forge$a.md.sha256=forge$a.md.algorithms.sha256=sha256$1;sha256$1.create=function(){_initialized$2||_init$2();var r=null,e=forge$a.util.createBuffer(),t=new Array(64),n={algorithm:"sha256",blockLength:64,digestLength:32,messageLength:0,fullMessageLength:null,messageLengthSize:8};return n.start=function(){n.messageLength=0,n.fullMessageLength=n.messageLength64=[];for(var i=n.messageLengthSize/4,o=0;o<i;++o)n.fullMessageLength.push(0);return e=forge$a.util.createBuffer(),r={h0:1779033703,h1:3144134277,h2:1013904242,h3:2773480762,h4:1359893119,h5:2600822924,h6:528734635,h7:1541459225},n},n.start(),n.update=function(i,o){o==="utf8"&&(i=forge$a.util.encodeUtf8(i));var a=i.length;n.messageLength+=a,a=[a/4294967296>>>0,a>>>0];for(var c=n.fullMessageLength.length-1;c>=0;--c)n.fullMessageLength[c]+=a[1],a[1]=a[0]+(n.fullMessageLength[c]/4294967296>>>0),n.fullMessageLength[c]=n.fullMessageLength[c]>>>0,a[0]=a[1]/4294967296>>>0;return e.putBytes(i),_update$2(r,t,e),(e.read>2048||e.length()===0)&&e.compact(),n},n.digest=function(){var i=forge$a.util.createBuffer();i.putBytes(e.bytes());var o=n.fullMessageLength[n.fullMessageLength.length-1]+n.messageLengthSize,a=o&n.blockLength-1;i.putBytes(_padding$2.substr(0,n.blockLength-a));for(var c,l,u=n.fullMessageLength[0]*8,f=0;f<n.fullMessageLength.length-1;++f)c=n.fullMessageLength[f+1]*8,l=c/4294967296>>>0,u+=l,i.putInt32(u>>>0),u=c>>>0;i.putInt32(u);var g={h0:r.h0,h1:r.h1,h2:r.h2,h3:r.h3,h4:r.h4,h5:r.h5,h6:r.h6,h7:r.h7};_update$2(g,t,i);var $=forge$a.util.createBuffer();return $.putInt32(g.h0),$.putInt32(g.h1),$.putInt32(g.h2),$.putInt32(g.h3),$.putInt32(g.h4),$.putInt32(g.h5),$.putInt32(g.h6),$.putInt32(g.h7),$},n};var _padding$2=null,_initialized$2=!1,_k$1=null;function _init$2(){_padding$2="",_padding$2+=forge$a.util.fillString("\0",64),_k$1=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298],_initialized$2=!0}function _update$2(r,e,t){for(var n,i,o,a,c,l,u,f,g,$,S,E,v,T,I,A=t.length();A>=64;){for(u=0;u<16;++u)e[u]=t.getInt32();for(;u<64;++u)n=e[u-2],n=(n>>>17|n<<15)^(n>>>19|n<<13)^n>>>10,i=e[u-15],i=(i>>>7|i<<25)^(i>>>18|i<<14)^i>>>3,e[u]=n+e[u-7]+i+e[u-16]|0;for(f=r.h0,g=r.h1,$=r.h2,S=r.h3,E=r.h4,v=r.h5,T=r.h6,I=r.h7,u=0;u<64;++u)a=(E>>>6|E<<26)^(E>>>11|E<<21)^(E>>>25|E<<7),c=T^E&(v^T),o=(f>>>2|f<<30)^(f>>>13|f<<19)^(f>>>22|f<<10),l=f&g|$&(f^g),n=I+a+c+_k$1[u]+e[u],i=o+l,I=T,T=v,v=E,E=S+n>>>0,S=$,$=g,g=f,f=n+i>>>0;r.h0=r.h0+f|0,r.h1=r.h1+g|0,r.h2=r.h2+$|0,r.h3=r.h3+S|0,r.h4=r.h4+E|0,r.h5=r.h5+v|0,r.h6=r.h6+T|0,r.h7=r.h7+I|0,A-=64}}var forge$9=forge$m,_crypto$1=null;forge$9.util.isNodejs&&!forge$9.options.usePureJavaScript&&!process.versions["node-webkit"]&&(_crypto$1=require$$1);var prng=forge$9.prng=forge$9.prng||{};prng.create=function(r){for(var e={plugin:r,key:null,seed:null,time:null,reseeds:0,generated:0,keyBytes:""},t=r.md,n=new Array(32),i=0;i<32;++i)n[i]=t.create();e.pools=n,e.pool=0,e.generate=function(u,f){if(!f)return e.generateSync(u);var g=e.plugin.cipher,$=e.plugin.increment,S=e.plugin.formatKey,E=e.plugin.formatSeed,v=forge$9.util.createBuffer();e.key=null,T();function T(I){if(I)return f(I);if(v.length()>=u)return f(null,v.getBytes(u));if(e.generated>1048575&&(e.key=null),e.key===null)return forge$9.util.nextTick(function(){o(T)});var A=g(e.key,e.seed);e.generated+=A.length,v.putBytes(A),e.key=S(g(e.key,$(e.seed))),e.seed=E(g(e.key,e.seed)),forge$9.util.setImmediate(T)}},e.generateSync=function(u){var f=e.plugin.cipher,g=e.plugin.increment,$=e.plugin.formatKey,S=e.plugin.formatSeed;e.key=null;for(var E=forge$9.util.createBuffer();E.length()<u;){e.generated>1048575&&(e.key=null),e.key===null&&a();var v=f(e.key,e.seed);e.generated+=v.length,E.putBytes(v),e.key=$(f(e.key,g(e.seed))),e.seed=S(f(e.key,e.seed))}return E.getBytes(u)};function o(u){if(e.pools[0].messageLength>=32)return c(),u();var f=32-e.pools[0].messageLength<<5;e.seedFile(f,function(g,$){if(g)return u(g);e.collect($),c(),u()})}function a(){if(e.pools[0].messageLength>=32)return c();var u=32-e.pools[0].messageLength<<5;e.collect(e.seedFileSync(u)),c()}function c(){e.reseeds=e.reseeds===4294967295?0:e.reseeds+1;var u=e.plugin.md.create();u.update(e.keyBytes);for(var f=1,g=0;g<32;++g)e.reseeds%f===0&&(u.update(e.pools[g].digest().getBytes()),e.pools[g].start()),f=f<<1;e.keyBytes=u.digest().getBytes(),u.start(),u.update(e.keyBytes);var $=u.digest().getBytes();e.key=e.plugin.formatKey(e.keyBytes),e.seed=e.plugin.formatSeed($),e.generated=0}function l(u){var f=null,g=forge$9.util.globalScope,$=g.crypto||g.msCrypto;$&&$.getRandomValues&&(f=function(D){return $.getRandomValues(D)});var S=forge$9.util.createBuffer();if(f)for(;S.length()<u;){var E=Math.max(1,Math.min(u-S.length(),65536)/4),v=new Uint32Array(Math.floor(E));try{f(v);for(var T=0;T<v.length;++T)S.putInt32(v[T])}catch(D){if(!(typeof QuotaExceededError<"u"&&D instanceof QuotaExceededError))throw D}}if(S.length()<u)for(var I,A,P,x=Math.floor(Math.random()*65536);S.length()<u;){A=16807*(x&65535),I=16807*(x>>16),A+=(I&32767)<<16,A+=I>>15,A=(A&2147483647)+(A>>31),x=A&4294967295;for(var T=0;T<3;++T)P=x>>>(T<<3),P^=Math.floor(Math.random()*256),S.putByte(P&255)}return S.getBytes(u)}return _crypto$1?(e.seedFile=function(u,f){_crypto$1.randomBytes(u,function(g,$){if(g)return f(g);f(null,$.toString())})},e.seedFileSync=function(u){return _crypto$1.randomBytes(u).toString()}):(e.seedFile=function(u,f){try{f(null,l(u))}catch(g){f(g)}},e.seedFileSync=l),e.collect=function(u){for(var f=u.length,g=0;g<f;++g)e.pools[e.pool].update(u.substr(g,1)),e.pool=e.pool===31?0:e.pool+1},e.collectInt=function(u,f){for(var g="",$=0;$<f;$+=8)g+=String.fromCharCode(u>>$&255);e.collect(g)},e.registerWorker=function(u){if(u===self)e.seedFile=function(g,$){function S(E){var v=E.data;v.forge&&v.forge.prng&&(self.removeEventListener("message",S),$(v.forge.prng.err,v.forge.prng.bytes))}self.addEventListener("message",S),self.postMessage({forge:{prng:{needed:g}}})};else{var f=function(g){var $=g.data;$.forge&&$.forge.prng&&e.seedFile($.forge.prng.needed,function(S,E){u.postMessage({forge:{prng:{err:S,bytes:E}}})})};u.addEventListener("message",f)}},e};var forge$8=forge$m;(function(){if(forge$8.random&&forge$8.random.getBytes){forge$8.random;return}(function(r){var e={},t=new Array(4),n=forge$8.util.createBuffer();e.formatKey=function(g){var $=forge$8.util.createBuffer(g);return g=new Array(4),g[0]=$.getInt32(),g[1]=$.getInt32(),g[2]=$.getInt32(),g[3]=$.getInt32(),forge$8.aes._expandKey(g,!1)},e.formatSeed=function(g){var $=forge$8.util.createBuffer(g);return g=new Array(4),g[0]=$.getInt32(),g[1]=$.getInt32(),g[2]=$.getInt32(),g[3]=$.getInt32(),g},e.cipher=function(g,$){return forge$8.aes._updateBlock(g,$,t,!1),n.putInt32(t[0]),n.putInt32(t[1]),n.putInt32(t[2]),n.putInt32(t[3]),n.getBytes()},e.increment=function(g){return++g[3],g},e.md=forge$8.md.sha256;function i(){var g=forge$8.prng.create(e);return g.getBytes=function($,S){return g.generate($,S)},g.getBytesSync=function($){return g.generate($)},g}var o=i(),a=null,c=forge$8.util.globalScope,l=c.crypto||c.msCrypto;if(l&&l.getRandomValues&&(a=function(g){return l.getRandomValues(g)}),forge$8.options.usePureJavaScript||!forge$8.util.isNodejs&&!a){if(o.collectInt(+new Date,32),typeof navigator<"u"){var u="";for(var f in navigator)try{typeof navigator[f]=="string"&&(u+=navigator[f])}catch{}o.collect(u),u=null}r&&(r().mousemove(function(g){o.collectInt(g.clientX,16),o.collectInt(g.clientY,16)}),r().keypress(function(g){o.collectInt(g.charCode,8)}))}if(!forge$8.random)forge$8.random=o;else for(var f in o)forge$8.random[f]=o[f];forge$8.random.createInstance=i,forge$8.random})(typeof jQuery<"u"?jQuery:null)})();var forge$7=forge$m,piTable=[217,120,249,196,25,221,181,237,40,233,253,121,74,160,216,157,198,126,55,131,43,118,83,142,98,76,100,136,68,139,251,162,23,154,89,245,135,179,79,19,97,69,109,141,9,129,125,50,189,143,64,235,134,183,123,11,240,149,33,34,92,107,78,130,84,214,101,147,206,96,178,28,115,86,192,20,167,140,241,220,18,117,202,31,59,190,228,209,66,61,212,48,163,60,182,38,111,191,14,218,70,105,7,87,39,242,29,155,188,148,67,3,248,17,199,246,144,239,62,231,6,195,213,47,200,102,30,215,8,232,234,222,128,82,238,247,132,170,114,172,53,77,106,42,150,26,210,113,90,21,73,116,75,159,208,94,4,24,164,236,194,224,65,110,15,81,203,204,36,145,175,80,161,244,112,57,153,124,58,133,35,184,180,122,252,2,54,91,37,85,151,49,45,93,250,152,227,138,146,174,5,223,41,16,103,108,186,201,211,0,230,207,225,158,168,44,99,22,1,63,88,226,137,169,13,56,52,27,171,51,255,176,187,72,12,95,185,177,205,46,197,243,219,71,229,165,156,119,10,166,32,104,254,127,193,173],s$1=[1,2,3,5],rol=function(r,e){return r<<e&65535|(r&65535)>>16-e},ror=function(r,e){return(r&65535)>>e|r<<16-e&65535};forge$7.rc2=forge$7.rc2||{};forge$7.rc2.expandKey=function(r,e){typeof r=="string"&&(r=forge$7.util.createBuffer(r)),e=e||128;var t=r,n=r.length(),i=e,o=Math.ceil(i/8),a=255>>(i&7),c;for(c=n;c<128;c++)t.putByte(piTable[t.at(c-1)+t.at(c-n)&255]);for(t.setAt(128-o,piTable[t.at(128-o)&a]),c=127-o;c>=0;c--)t.setAt(c,piTable[t.at(c+1)^t.at(c+o)]);return t};var createCipher$1=function(r,e,t){var n=!1,i=null,o=null,a=null,c,l,u,f,g=[];for(r=forge$7.rc2.expandKey(r,e),u=0;u<64;u++)g.push(r.getInt16Le());t?(c=function(E){for(u=0;u<4;u++)E[u]+=g[f]+(E[(u+3)%4]&E[(u+2)%4])+(~E[(u+3)%4]&E[(u+1)%4]),E[u]=rol(E[u],s$1[u]),f++},l=function(E){for(u=0;u<4;u++)E[u]+=g[E[(u+3)%4]&63]}):(c=function(E){for(u=3;u>=0;u--)E[u]=ror(E[u],s$1[u]),E[u]-=g[f]+(E[(u+3)%4]&E[(u+2)%4])+(~E[(u+3)%4]&E[(u+1)%4]),f--},l=function(E){for(u=3;u>=0;u--)E[u]-=g[E[(u+3)%4]&63]});var $=function(E){var v=[];for(u=0;u<4;u++){var T=i.getInt16Le();a!==null&&(t?T^=a.getInt16Le():a.putInt16Le(T)),v.push(T&65535)}f=t?0:63;for(var I=0;I<E.length;I++)for(var A=0;A<E[I][0];A++)E[I][1](v);for(u=0;u<4;u++)a!==null&&(t?a.putInt16Le(v[u]):v[u]^=a.getInt16Le()),o.putInt16Le(v[u])},S=null;return S={start:function(E,v){E&&typeof E=="string"&&(E=forge$7.util.createBuffer(E)),n=!1,i=forge$7.util.createBuffer(),o=v||new forge$7.util.createBuffer,a=E,S.output=o},update:function(E){for(n||i.putBuffer(E);i.length()>=8;)$([[5,c],[1,l],[6,c],[1,l],[5,c]])},finish:function(E){var v=!0;if(t)if(E)v=E(8,i,!t);else{var T=i.length()===8?8:8-i.length();i.fillWithByte(T,T)}if(v&&(n=!0,S.update()),!t&&(v=i.length()===0,v))if(E)v=E(8,o,!t);else{var I=o.length(),A=o.at(I-1);A>I?v=!1:o.truncate(A)}return v}},S};forge$7.rc2.startEncrypting=function(r,e,t){var n=forge$7.rc2.createEncryptionCipher(r,128);return n.start(e,t),n};forge$7.rc2.createEncryptionCipher=function(r,e){return createCipher$1(r,e,!0)};forge$7.rc2.startDecrypting=function(r,e,t){var n=forge$7.rc2.createDecryptionCipher(r,128);return n.start(e,t),n};forge$7.rc2.createDecryptionCipher=function(r,e){return createCipher$1(r,e,!1)};var forge$6=forge$m;forge$6.jsbn=forge$6.jsbn||{};var dbits;function BigInteger$2(r,e,t){this.data=[],r!=null&&(typeof r=="number"?this.fromNumber(r,e,t):e==null&&typeof r!="string"?this.fromString(r,256):this.fromString(r,e))}forge$6.jsbn.BigInteger=BigInteger$2;function nbi(){return new BigInteger$2(null)}function am1(r,e,t,n,i,o){for(;--o>=0;){var a=e*this.data[r++]+t.data[n]+i;i=Math.floor(a/67108864),t.data[n++]=a&67108863}return i}function am2(r,e,t,n,i,o){for(var a=e&32767,c=e>>15;--o>=0;){var l=this.data[r]&32767,u=this.data[r++]>>15,f=c*l+u*a;l=a*l+((f&32767)<<15)+t.data[n]+(i&1073741823),i=(l>>>30)+(f>>>15)+c*u+(i>>>30),t.data[n++]=l&1073741823}return i}function am3(r,e,t,n,i,o){for(var a=e&16383,c=e>>14;--o>=0;){var l=this.data[r]&16383,u=this.data[r++]>>14,f=c*l+u*a;l=a*l+((f&16383)<<14)+t.data[n]+i,i=(l>>28)+(f>>14)+c*u,t.data[n++]=l&268435455}return i}typeof navigator>"u"?(BigInteger$2.prototype.am=am3,dbits=28):navigator.appName=="Microsoft Internet Explorer"?(BigInteger$2.prototype.am=am2,dbits=30):navigator.appName!="Netscape"?(BigInteger$2.prototype.am=am1,dbits=26):(BigInteger$2.prototype.am=am3,dbits=28);BigInteger$2.prototype.DB=dbits;BigInteger$2.prototype.DM=(1<<dbits)-1;BigInteger$2.prototype.DV=1<<dbits;var BI_FP=52;BigInteger$2.prototype.FV=Math.pow(2,BI_FP);BigInteger$2.prototype.F1=BI_FP-dbits;BigInteger$2.prototype.F2=2*dbits-BI_FP;var BI_RM="0123456789abcdefghijklmnopqrstuvwxyz",BI_RC=new Array,rr,vv;rr=48;for(vv=0;vv<=9;++vv)BI_RC[rr++]=vv;rr=97;for(vv=10;vv<36;++vv)BI_RC[rr++]=vv;rr=65;for(vv=10;vv<36;++vv)BI_RC[rr++]=vv;function int2char(r){return BI_RM.charAt(r)}function intAt(r,e){var t=BI_RC[r.charCodeAt(e)];return t??-1}function bnpCopyTo(r){for(var e=this.t-1;e>=0;--e)r.data[e]=this.data[e];r.t=this.t,r.s=this.s}function bnpFromInt(r){this.t=1,this.s=r<0?-1:0,r>0?this.data[0]=r:r<-1?this.data[0]=r+this.DV:this.t=0}function nbv(r){var e=nbi();return e.fromInt(r),e}function bnpFromString(r,e){var t;if(e==16)t=4;else if(e==8)t=3;else if(e==256)t=8;else if(e==2)t=1;else if(e==32)t=5;else if(e==4)t=2;else{this.fromRadix(r,e);return}this.t=0,this.s=0;for(var n=r.length,i=!1,o=0;--n>=0;){var a=t==8?r[n]&255:intAt(r,n);if(a<0){r.charAt(n)=="-"&&(i=!0);continue}i=!1,o==0?this.data[this.t++]=a:o+t>this.DB?(this.data[this.t-1]|=(a&(1<<this.DB-o)-1)<<o,this.data[this.t++]=a>>this.DB-o):this.data[this.t-1]|=a<<o,o+=t,o>=this.DB&&(o-=this.DB)}t==8&&r[0]&128&&(this.s=-1,o>0&&(this.data[this.t-1]|=(1<<this.DB-o)-1<<o)),this.clamp(),i&&BigInteger$2.ZERO.subTo(this,this)}function bnpClamp(){for(var r=this.s&this.DM;this.t>0&&this.data[this.t-1]==r;)--this.t}function bnToString(r){if(this.s<0)return"-"+this.negate().toString(r);var e;if(r==16)e=4;else if(r==8)e=3;else if(r==2)e=1;else if(r==32)e=5;else if(r==4)e=2;else return this.toRadix(r);var t=(1<<e)-1,n,i=!1,o="",a=this.t,c=this.DB-a*this.DB%e;if(a-- >0)for(c<this.DB&&(n=this.data[a]>>c)>0&&(i=!0,o=int2char(n));a>=0;)c<e?(n=(this.data[a]&(1<<c)-1)<<e-c,n|=this.data[--a]>>(c+=this.DB-e)):(n=this.data[a]>>(c-=e)&t,c<=0&&(c+=this.DB,--a)),n>0&&(i=!0),i&&(o+=int2char(n));return i?o:"0"}function bnNegate(){var r=nbi();return BigInteger$2.ZERO.subTo(this,r),r}function bnAbs(){return this.s<0?this.negate():this}function bnCompareTo(r){var e=this.s-r.s;if(e!=0)return e;var t=this.t;if(e=t-r.t,e!=0)return this.s<0?-e:e;for(;--t>=0;)if((e=this.data[t]-r.data[t])!=0)return e;return 0}function nbits(r){var e=1,t;return(t=r>>>16)!=0&&(r=t,e+=16),(t=r>>8)!=0&&(r=t,e+=8),(t=r>>4)!=0&&(r=t,e+=4),(t=r>>2)!=0&&(r=t,e+=2),(t=r>>1)!=0&&(r=t,e+=1),e}function bnBitLength(){return this.t<=0?0:this.DB*(this.t-1)+nbits(this.data[this.t-1]^this.s&this.DM)}function bnpDLShiftTo(r,e){var t;for(t=this.t-1;t>=0;--t)e.data[t+r]=this.data[t];for(t=r-1;t>=0;--t)e.data[t]=0;e.t=this.t+r,e.s=this.s}function bnpDRShiftTo(r,e){for(var t=r;t<this.t;++t)e.data[t-r]=this.data[t];e.t=Math.max(this.t-r,0),e.s=this.s}function bnpLShiftTo(r,e){var t=r%this.DB,n=this.DB-t,i=(1<<n)-1,o=Math.floor(r/this.DB),a=this.s<<t&this.DM,c;for(c=this.t-1;c>=0;--c)e.data[c+o+1]=this.data[c]>>n|a,a=(this.data[c]&i)<<t;for(c=o-1;c>=0;--c)e.data[c]=0;e.data[o]=a,e.t=this.t+o+1,e.s=this.s,e.clamp()}function bnpRShiftTo(r,e){e.s=this.s;var t=Math.floor(r/this.DB);if(t>=this.t){e.t=0;return}var n=r%this.DB,i=this.DB-n,o=(1<<n)-1;e.data[0]=this.data[t]>>n;for(var a=t+1;a<this.t;++a)e.data[a-t-1]|=(this.data[a]&o)<<i,e.data[a-t]=this.data[a]>>n;n>0&&(e.data[this.t-t-1]|=(this.s&o)<<i),e.t=this.t-t,e.clamp()}function bnpSubTo(r,e){for(var t=0,n=0,i=Math.min(r.t,this.t);t<i;)n+=this.data[t]-r.data[t],e.data[t++]=n&this.DM,n>>=this.DB;if(r.t<this.t){for(n-=r.s;t<this.t;)n+=this.data[t],e.data[t++]=n&this.DM,n>>=this.DB;n+=this.s}else{for(n+=this.s;t<r.t;)n-=r.data[t],e.data[t++]=n&this.DM,n>>=this.DB;n-=r.s}e.s=n<0?-1:0,n<-1?e.data[t++]=this.DV+n:n>0&&(e.data[t++]=n),e.t=t,e.clamp()}function bnpMultiplyTo(r,e){var t=this.abs(),n=r.abs(),i=t.t;for(e.t=i+n.t;--i>=0;)e.data[i]=0;for(i=0;i<n.t;++i)e.data[i+t.t]=t.am(0,n.data[i],e,i,0,t.t);e.s=0,e.clamp(),this.s!=r.s&&BigInteger$2.ZERO.subTo(e,e)}function bnpSquareTo(r){for(var e=this.abs(),t=r.t=2*e.t;--t>=0;)r.data[t]=0;for(t=0;t<e.t-1;++t){var n=e.am(t,e.data[t],r,2*t,0,1);(r.data[t+e.t]+=e.am(t+1,2*e.data[t],r,2*t+1,n,e.t-t-1))>=e.DV&&(r.data[t+e.t]-=e.DV,r.data[t+e.t+1]=1)}r.t>0&&(r.data[r.t-1]+=e.am(t,e.data[t],r,2*t,0,1)),r.s=0,r.clamp()}function bnpDivRemTo(r,e,t){var n=r.abs();if(!(n.t<=0)){var i=this.abs();if(i.t<n.t){e?.fromInt(0),t!=null&&this.copyTo(t);return}t==null&&(t=nbi());var o=nbi(),a=this.s,c=r.s,l=this.DB-nbits(n.data[n.t-1]);l>0?(n.lShiftTo(l,o),i.lShiftTo(l,t)):(n.copyTo(o),i.copyTo(t));var u=o.t,f=o.data[u-1];if(f!=0){var g=f*(1<<this.F1)+(u>1?o.data[u-2]>>this.F2:0),$=this.FV/g,S=(1<<this.F1)/g,E=1<<this.F2,v=t.t,T=v-u,I=e??nbi();for(o.dlShiftTo(T,I),t.compareTo(I)>=0&&(t.data[t.t++]=1,t.subTo(I,t)),BigInteger$2.ONE.dlShiftTo(u,I),I.subTo(o,o);o.t<u;)o.data[o.t++]=0;for(;--T>=0;){var A=t.data[--v]==f?this.DM:Math.floor(t.data[v]*$+(t.data[v-1]+E)*S);if((t.data[v]+=o.am(0,A,t,T,0,u))<A)for(o.dlShiftTo(T,I),t.subTo(I,t);t.data[v]<--A;)t.subTo(I,t)}e!=null&&(t.drShiftTo(u,e),a!=c&&BigInteger$2.ZERO.subTo(e,e)),t.t=u,t.clamp(),l>0&&t.rShiftTo(l,t),a<0&&BigInteger$2.ZERO.subTo(t,t)}}}function bnMod(r){var e=nbi();return this.abs().divRemTo(r,null,e),this.s<0&&e.compareTo(BigInteger$2.ZERO)>0&&r.subTo(e,e),e}function Classic(r){this.m=r}function cConvert(r){return r.s<0||r.compareTo(this.m)>=0?r.mod(this.m):r}function cRevert(r){return r}function cReduce(r){r.divRemTo(this.m,null,r)}function cMulTo(r,e,t){r.multiplyTo(e,t),this.reduce(t)}function cSqrTo(r,e){r.squareTo(e),this.reduce(e)}Classic.prototype.convert=cConvert;Classic.prototype.revert=cRevert;Classic.prototype.reduce=cReduce;Classic.prototype.mulTo=cMulTo;Classic.prototype.sqrTo=cSqrTo;function bnpInvDigit(){if(this.t<1)return 0;var r=this.data[0];if(!(r&1))return 0;var e=r&3;return e=e*(2-(r&15)*e)&15,e=e*(2-(r&255)*e)&255,e=e*(2-((r&65535)*e&65535))&65535,e=e*(2-r*e%this.DV)%this.DV,e>0?this.DV-e:-e}function Montgomery(r){this.m=r,this.mp=r.invDigit(),this.mpl=this.mp&32767,this.mph=this.mp>>15,this.um=(1<<r.DB-15)-1,this.mt2=2*r.t}function montConvert(r){var e=nbi();return r.abs().dlShiftTo(this.m.t,e),e.divRemTo(this.m,null,e),r.s<0&&e.compareTo(BigInteger$2.ZERO)>0&&this.m.subTo(e,e),e}function montRevert(r){var e=nbi();return r.copyTo(e),this.reduce(e),e}function montReduce(r){for(;r.t<=this.mt2;)r.data[r.t++]=0;for(var e=0;e<this.m.t;++e){var t=r.data[e]&32767,n=t*this.mpl+((t*this.mph+(r.data[e]>>15)*this.mpl&this.um)<<15)&r.DM;for(t=e+this.m.t,r.data[t]+=this.m.am(0,n,r,e,0,this.m.t);r.data[t]>=r.DV;)r.data[t]-=r.DV,r.data[++t]++}r.clamp(),r.drShiftTo(this.m.t,r),r.compareTo(this.m)>=0&&r.subTo(this.m,r)}function montSqrTo(r,e){r.squareTo(e),this.reduce(e)}function montMulTo(r,e,t){r.multiplyTo(e,t),this.reduce(t)}Montgomery.prototype.convert=montConvert;Montgomery.prototype.revert=montRevert;Montgomery.prototype.reduce=montReduce;Montgomery.prototype.mulTo=montMulTo;Montgomery.prototype.sqrTo=montSqrTo;function bnpIsEven(){return(this.t>0?this.data[0]&1:this.s)==0}function bnpExp(r,e){if(r>4294967295||r<1)return BigInteger$2.ONE;var t=nbi(),n=nbi(),i=e.convert(this),o=nbits(r)-1;for(i.copyTo(t);--o>=0;)if(e.sqrTo(t,n),(r&1<<o)>0)e.mulTo(n,i,t);else{var a=t;t=n,n=a}return e.revert(t)}function bnModPowInt(r,e){var t;return r<256||e.isEven()?t=new Classic(e):t=new Montgomery(e),this.exp(r,t)}BigInteger$2.prototype.copyTo=bnpCopyTo;BigInteger$2.prototype.fromInt=bnpFromInt;BigInteger$2.prototype.fromString=bnpFromString;BigInteger$2.prototype.clamp=bnpClamp;BigInteger$2.prototype.dlShiftTo=bnpDLShiftTo;BigInteger$2.prototype.drShiftTo=bnpDRShiftTo;BigInteger$2.prototype.lShiftTo=bnpLShiftTo;BigInteger$2.prototype.rShiftTo=bnpRShiftTo;BigInteger$2.prototype.subTo=bnpSubTo;BigInteger$2.prototype.multiplyTo=bnpMultiplyTo;BigInteger$2.prototype.squareTo=bnpSquareTo;BigInteger$2.prototype.divRemTo=bnpDivRemTo;BigInteger$2.prototype.invDigit=bnpInvDigit;BigInteger$2.prototype.isEven=bnpIsEven;BigInteger$2.prototype.exp=bnpExp;BigInteger$2.prototype.toString=bnToString;BigInteger$2.prototype.negate=bnNegate;BigInteger$2.prototype.abs=bnAbs;BigInteger$2.prototype.compareTo=bnCompareTo;BigInteger$2.prototype.bitLength=bnBitLength;BigInteger$2.prototype.mod=bnMod;BigInteger$2.prototype.modPowInt=bnModPowInt;BigInteger$2.ZERO=nbv(0);BigInteger$2.ONE=nbv(1);function bnClone(){var r=nbi();return this.copyTo(r),r}function bnIntValue(){if(this.s<0){if(this.t==1)return this.data[0]-this.DV;if(this.t==0)return-1}else{if(this.t==1)return this.data[0];if(this.t==0)return 0}return(this.data[1]&(1<<32-this.DB)-1)<<this.DB|this.data[0]}function bnByteValue(){return this.t==0?this.s:this.data[0]<<24>>24}function bnShortValue(){return this.t==0?this.s:this.data[0]<<16>>16}function bnpChunkSize(r){return Math.floor(Math.LN2*this.DB/Math.log(r))}function bnSigNum(){return this.s<0?-1:this.t<=0||this.t==1&&this.data[0]<=0?0:1}function bnpToRadix(r){if(r==null&&(r=10),this.signum()==0||r<2||r>36)return"0";var e=this.chunkSize(r),t=Math.pow(r,e),n=nbv(t),i=nbi(),o=nbi(),a="";for(this.divRemTo(n,i,o);i.signum()>0;)a=(t+o.intValue()).toString(r).substr(1)+a,i.divRemTo(n,i,o);return o.intValue().toString(r)+a}function bnpFromRadix(r,e){this.fromInt(0),e==null&&(e=10);for(var t=this.chunkSize(e),n=Math.pow(e,t),i=!1,o=0,a=0,c=0;c<r.length;++c){var l=intAt(r,c);if(l<0){r.charAt(c)=="-"&&this.signum()==0&&(i=!0);continue}a=e*a+l,++o>=t&&(this.dMultiply(n),this.dAddOffset(a,0),o=0,a=0)}o>0&&(this.dMultiply(Math.pow(e,o)),this.dAddOffset(a,0)),i&&BigInteger$2.ZERO.subTo(this,this)}function bnpFromNumber(r,e,t){if(typeof e=="number")if(r<2)this.fromInt(1);else for(this.fromNumber(r,t),this.testBit(r-1)||this.bitwiseTo(BigInteger$2.ONE.shiftLeft(r-1),op_or,this),this.isEven()&&this.dAddOffset(1,0);!this.isProbablePrime(e);)this.dAddOffset(2,0),this.bitLength()>r&&this.subTo(BigInteger$2.ONE.shiftLeft(r-1),this);else{var n=new Array,i=r&7;n.length=(r>>3)+1,e.nextBytes(n),i>0?n[0]&=(1<<i)-1:n[0]=0,this.fromString(n,256)}}function bnToByteArray(){var r=this.t,e=new Array;e[0]=this.s;var t=this.DB-r*this.DB%8,n,i=0;if(r-- >0)for(t<this.DB&&(n=this.data[r]>>t)!=(this.s&this.DM)>>t&&(e[i++]=n|this.s<<this.DB-t);r>=0;)t<8?(n=(this.data[r]&(1<<t)-1)<<8-t,n|=this.data[--r]>>(t+=this.DB-8)):(n=this.data[r]>>(t-=8)&255,t<=0&&(t+=this.DB,--r)),n&128&&(n|=-256),i==0&&(this.s&128)!=(n&128)&&++i,(i>0||n!=this.s)&&(e[i++]=n);return e}function bnEquals(r){return this.compareTo(r)==0}function bnMin(r){return this.compareTo(r)<0?this:r}function bnMax(r){return this.compareTo(r)>0?this:r}function bnpBitwiseTo(r,e,t){var n,i,o=Math.min(r.t,this.t);for(n=0;n<o;++n)t.data[n]=e(this.data[n],r.data[n]);if(r.t<this.t){for(i=r.s&this.DM,n=o;n<this.t;++n)t.data[n]=e(this.data[n],i);t.t=this.t}else{for(i=this.s&this.DM,n=o;n<r.t;++n)t.data[n]=e(i,r.data[n]);t.t=r.t}t.s=e(this.s,r.s),t.clamp()}function op_and(r,e){return r&e}function bnAnd(r){var e=nbi();return this.bitwiseTo(r,op_and,e),e}function op_or(r,e){return r|e}function bnOr(r){var e=nbi();return this.bitwiseTo(r,op_or,e),e}function op_xor(r,e){return r^e}function bnXor(r){var e=nbi();return this.bitwiseTo(r,op_xor,e),e}function op_andnot(r,e){return r&~e}function bnAndNot(r){var e=nbi();return this.bitwiseTo(r,op_andnot,e),e}function bnNot(){for(var r=nbi(),e=0;e<this.t;++e)r.data[e]=this.DM&~this.data[e];return r.t=this.t,r.s=~this.s,r}function bnShiftLeft(r){var e=nbi();return r<0?this.rShiftTo(-r,e):this.lShiftTo(r,e),e}function bnShiftRight(r){var e=nbi();return r<0?this.lShiftTo(-r,e):this.rShiftTo(r,e),e}function lbit(r){if(r==0)return-1;var e=0;return r&65535||(r>>=16,e+=16),r&255||(r>>=8,e+=8),r&15||(r>>=4,e+=4),r&3||(r>>=2,e+=2),r&1||++e,e}function bnGetLowestSetBit(){for(var r=0;r<this.t;++r)if(this.data[r]!=0)return r*this.DB+lbit(this.data[r]);return this.s<0?this.t*this.DB:-1}function cbit(r){for(var e=0;r!=0;)r&=r-1,++e;return e}function bnBitCount(){for(var r=0,e=this.s&this.DM,t=0;t<this.t;++t)r+=cbit(this.data[t]^e);return r}function bnTestBit(r){var e=Math.floor(r/this.DB);return e>=this.t?this.s!=0:(this.data[e]&1<<r%this.DB)!=0}function bnpChangeBit(r,e){var t=BigInteger$2.ONE.shiftLeft(r);return this.bitwiseTo(t,e,t),t}function bnSetBit(r){return this.changeBit(r,op_or)}function bnClearBit(r){return this.changeBit(r,op_andnot)}function bnFlipBit(r){return this.changeBit(r,op_xor)}function bnpAddTo(r,e){for(var t=0,n=0,i=Math.min(r.t,this.t);t<i;)n+=this.data[t]+r.data[t],e.data[t++]=n&this.DM,n>>=this.DB;if(r.t<this.t){for(n+=r.s;t<this.t;)n+=this.data[t],e.data[t++]=n&this.DM,n>>=this.DB;n+=this.s}else{for(n+=this.s;t<r.t;)n+=r.data[t],e.data[t++]=n&this.DM,n>>=this.DB;n+=r.s}e.s=n<0?-1:0,n>0?e.data[t++]=n:n<-1&&(e.data[t++]=this.DV+n),e.t=t,e.clamp()}function bnAdd(r){var e=nbi();return this.addTo(r,e),e}function bnSubtract(r){var e=nbi();return this.subTo(r,e),e}function bnMultiply(r){var e=nbi();return this.multiplyTo(r,e),e}function bnDivide(r){var e=nbi();return this.divRemTo(r,e,null),e}function bnRemainder(r){var e=nbi();return this.divRemTo(r,null,e),e}function bnDivideAndRemainder(r){var e=nbi(),t=nbi();return this.divRemTo(r,e,t),new Array(e,t)}function bnpDMultiply(r){this.data[this.t]=this.am(0,r-1,this,0,0,this.t),++this.t,this.clamp()}function bnpDAddOffset(r,e){if(r!=0){for(;this.t<=e;)this.data[this.t++]=0;for(this.data[e]+=r;this.data[e]>=this.DV;)this.data[e]-=this.DV,++e>=this.t&&(this.data[this.t++]=0),++this.data[e]}}function NullExp(){}function nNop(r){return r}function nMulTo(r,e,t){r.multiplyTo(e,t)}function nSqrTo(r,e){r.squareTo(e)}NullExp.prototype.convert=nNop;NullExp.prototype.revert=nNop;NullExp.prototype.mulTo=nMulTo;NullExp.prototype.sqrTo=nSqrTo;function bnPow(r){return this.exp(r,new NullExp)}function bnpMultiplyLowerTo(r,e,t){var n=Math.min(this.t+r.t,e);for(t.s=0,t.t=n;n>0;)t.data[--n]=0;var i;for(i=t.t-this.t;n<i;++n)t.data[n+this.t]=this.am(0,r.data[n],t,n,0,this.t);for(i=Math.min(r.t,e);n<i;++n)this.am(0,r.data[n],t,n,0,e-n);t.clamp()}function bnpMultiplyUpperTo(r,e,t){--e;var n=t.t=this.t+r.t-e;for(t.s=0;--n>=0;)t.data[n]=0;for(n=Math.max(e-this.t,0);n<r.t;++n)t.data[this.t+n-e]=this.am(e-n,r.data[n],t,0,0,this.t+n-e);t.clamp(),t.drShiftTo(1,t)}function Barrett(r){this.r2=nbi(),this.q3=nbi(),BigInteger$2.ONE.dlShiftTo(2*r.t,this.r2),this.mu=this.r2.divide(r),this.m=r}function barrettConvert(r){if(r.s<0||r.t>2*this.m.t)return r.mod(this.m);if(r.compareTo(this.m)<0)return r;var e=nbi();return r.copyTo(e),this.reduce(e),e}function barrettRevert(r){return r}function barrettReduce(r){for(r.drShiftTo(this.m.t-1,this.r2),r.t>this.m.t+1&&(r.t=this.m.t+1,r.clamp()),this.mu.multiplyUpperTo(this.r2,this.m.t+1,this.q3),this.m.multiplyLowerTo(this.q3,this.m.t+1,this.r2);r.compareTo(this.r2)<0;)r.dAddOffset(1,this.m.t+1);for(r.subTo(this.r2,r);r.compareTo(this.m)>=0;)r.subTo(this.m,r)}function barrettSqrTo(r,e){r.squareTo(e),this.reduce(e)}function barrettMulTo(r,e,t){r.multiplyTo(e,t),this.reduce(t)}Barrett.prototype.convert=barrettConvert;Barrett.prototype.revert=barrettRevert;Barrett.prototype.reduce=barrettReduce;Barrett.prototype.mulTo=barrettMulTo;Barrett.prototype.sqrTo=barrettSqrTo;function bnModPow(r,e){var t=r.bitLength(),n,i=nbv(1),o;if(t<=0)return i;t<18?n=1:t<48?n=3:t<144?n=4:t<768?n=5:n=6,t<8?o=new Classic(e):e.isEven()?o=new Barrett(e):o=new Montgomery(e);var a=new Array,c=3,l=n-1,u=(1<<n)-1;if(a[1]=o.convert(this),n>1){var f=nbi();for(o.sqrTo(a[1],f);c<=u;)a[c]=nbi(),o.mulTo(f,a[c-2],a[c]),c+=2}var g=r.t-1,$,S=!0,E=nbi(),v;for(t=nbits(r.data[g])-1;g>=0;){for(t>=l?$=r.data[g]>>t-l&u:($=(r.data[g]&(1<<t+1)-1)<<l-t,g>0&&($|=r.data[g-1]>>this.DB+t-l)),c=n;!($&1);)$>>=1,--c;if((t-=c)<0&&(t+=this.DB,--g),S)a[$].copyTo(i),S=!1;else{for(;c>1;)o.sqrTo(i,E),o.sqrTo(E,i),c-=2;c>0?o.sqrTo(i,E):(v=i,i=E,E=v),o.mulTo(E,a[$],i)}for(;g>=0&&!(r.data[g]&1<<t);)o.sqrTo(i,E),v=i,i=E,E=v,--t<0&&(t=this.DB-1,--g)}return o.revert(i)}function bnGCD(r){var e=this.s<0?this.negate():this.clone(),t=r.s<0?r.negate():r.clone();if(e.compareTo(t)<0){var n=e;e=t,t=n}var i=e.getLowestSetBit(),o=t.getLowestSetBit();if(o<0)return e;for(i<o&&(o=i),o>0&&(e.rShiftTo(o,e),t.rShiftTo(o,t));e.signum()>0;)(i=e.getLowestSetBit())>0&&e.rShiftTo(i,e),(i=t.getLowestSetBit())>0&&t.rShiftTo(i,t),e.compareTo(t)>=0?(e.subTo(t,e),e.rShiftTo(1,e)):(t.subTo(e,t),t.rShiftTo(1,t));return o>0&&t.lShiftTo(o,t),t}function bnpModInt(r){if(r<=0)return 0;var e=this.DV%r,t=this.s<0?r-1:0;if(this.t>0)if(e==0)t=this.data[0]%r;else for(var n=this.t-1;n>=0;--n)t=(e*t+this.data[n])%r;return t}function bnModInverse(r){var e=r.isEven();if(this.isEven()&&e||r.signum()==0)return BigInteger$2.ZERO;for(var t=r.clone(),n=this.clone(),i=nbv(1),o=nbv(0),a=nbv(0),c=nbv(1);t.signum()!=0;){for(;t.isEven();)t.rShiftTo(1,t),e?((!i.isEven()||!o.isEven())&&(i.addTo(this,i),o.subTo(r,o)),i.rShiftTo(1,i)):o.isEven()||o.subTo(r,o),o.rShiftTo(1,o);for(;n.isEven();)n.rShiftTo(1,n),e?((!a.isEven()||!c.isEven())&&(a.addTo(this,a),c.subTo(r,c)),a.rShiftTo(1,a)):c.isEven()||c.subTo(r,c),c.rShiftTo(1,c);t.compareTo(n)>=0?(t.subTo(n,t),e&&i.subTo(a,i),o.subTo(c,o)):(n.subTo(t,n),e&&a.subTo(i,a),c.subTo(o,c))}if(n.compareTo(BigInteger$2.ONE)!=0)return BigInteger$2.ZERO;if(c.compareTo(r)>=0)return c.subtract(r);if(c.signum()<0)c.addTo(r,c);else return c;return c.signum()<0?c.add(r):c}var lowprimes=[2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251,257,263,269,271,277,281,283,293,307,311,313,317,331,337,347,349,353,359,367,373,379,383,389,397,401,409,419,421,431,433,439,443,449,457,461,463,467,479,487,491,499,503,509],lplim=(1<<26)/lowprimes[lowprimes.length-1];function bnIsProbablePrime(r){var e,t=this.abs();if(t.t==1&&t.data[0]<=lowprimes[lowprimes.length-1]){for(e=0;e<lowprimes.length;++e)if(t.data[0]==lowprimes[e])return!0;return!1}if(t.isEven())return!1;for(e=1;e<lowprimes.length;){for(var n=lowprimes[e],i=e+1;i<lowprimes.length&&n<lplim;)n*=lowprimes[i++];for(n=t.modInt(n);e<i;)if(n%lowprimes[e++]==0)return!1}return t.millerRabin(r)}function bnpMillerRabin(r){var e=this.subtract(BigInteger$2.ONE),t=e.getLowestSetBit();if(t<=0)return!1;for(var n=e.shiftRight(t),i=bnGetPrng(),o,a=0;a<r;++a){do o=new BigInteger$2(this.bitLength(),i);while(o.compareTo(BigInteger$2.ONE)<=0||o.compareTo(e)>=0);var c=o.modPow(n,this);if(c.compareTo(BigInteger$2.ONE)!=0&&c.compareTo(e)!=0){for(var l=1;l++<t&&c.compareTo(e)!=0;)if(c=c.modPowInt(2,this),c.compareTo(BigInteger$2.ONE)==0)return!1;if(c.compareTo(e)!=0)return!1}}return!0}function bnGetPrng(){return{nextBytes:function(r){for(var e=0;e<r.length;++e)r[e]=Math.floor(Math.random()*256)}}}BigInteger$2.prototype.chunkSize=bnpChunkSize;BigInteger$2.prototype.toRadix=bnpToRadix;BigInteger$2.prototype.fromRadix=bnpFromRadix;BigInteger$2.prototype.fromNumber=bnpFromNumber;BigInteger$2.prototype.bitwiseTo=bnpBitwiseTo;BigInteger$2.prototype.changeBit=bnpChangeBit;BigInteger$2.prototype.addTo=bnpAddTo;BigInteger$2.prototype.dMultiply=bnpDMultiply;BigInteger$2.prototype.dAddOffset=bnpDAddOffset;BigInteger$2.prototype.multiplyLowerTo=bnpMultiplyLowerTo;BigInteger$2.prototype.multiplyUpperTo=bnpMultiplyUpperTo;BigInteger$2.prototype.modInt=bnpModInt;BigInteger$2.prototype.millerRabin=bnpMillerRabin;BigInteger$2.prototype.clone=bnClone;BigInteger$2.prototype.intValue=bnIntValue;BigInteger$2.prototype.byteValue=bnByteValue;BigInteger$2.prototype.shortValue=bnShortValue;BigInteger$2.prototype.signum=bnSigNum;BigInteger$2.prototype.toByteArray=bnToByteArray;BigInteger$2.prototype.equals=bnEquals;BigInteger$2.prototype.min=bnMin;BigInteger$2.prototype.max=bnMax;BigInteger$2.prototype.and=bnAnd;BigInteger$2.prototype.or=bnOr;BigInteger$2.prototype.xor=bnXor;BigInteger$2.prototype.andNot=bnAndNot;BigInteger$2.prototype.not=bnNot;BigInteger$2.prototype.shiftLeft=bnShiftLeft;BigInteger$2.prototype.shiftRight=bnShiftRight;BigInteger$2.prototype.getLowestSetBit=bnGetLowestSetBit;BigInteger$2.prototype.bitCount=bnBitCount;BigInteger$2.prototype.testBit=bnTestBit;BigInteger$2.prototype.setBit=bnSetBit;BigInteger$2.prototype.clearBit=bnClearBit;BigInteger$2.prototype.flipBit=bnFlipBit;BigInteger$2.prototype.add=bnAdd;BigInteger$2.prototype.subtract=bnSubtract;BigInteger$2.prototype.multiply=bnMultiply;BigInteger$2.prototype.divide=bnDivide;BigInteger$2.prototype.remainder=bnRemainder;BigInteger$2.prototype.divideAndRemainder=bnDivideAndRemainder;BigInteger$2.prototype.modPow=bnModPow;BigInteger$2.prototype.modInverse=bnModInverse;BigInteger$2.prototype.pow=bnPow;BigInteger$2.prototype.gcd=bnGCD;BigInteger$2.prototype.isProbablePrime=bnIsProbablePrime;var forge$5=forge$m,sha1=forge$5.sha1=forge$5.sha1||{};forge$5.md.sha1=forge$5.md.algorithms.sha1=sha1;sha1.create=function(){_initialized$1||_init$1();var r=null,e=forge$5.util.createBuffer(),t=new Array(80),n={algorithm:"sha1",blockLength:64,digestLength:20,messageLength:0,fullMessageLength:null,messageLengthSize:8};return n.start=function(){n.messageLength=0,n.fullMessageLength=n.messageLength64=[];for(var i=n.messageLengthSize/4,o=0;o<i;++o)n.fullMessageLength.push(0);return e=forge$5.util.createBuffer(),r={h0:1732584193,h1:4023233417,h2:2562383102,h3:271733878,h4:3285377520},n},n.start(),n.update=function(i,o){o==="utf8"&&(i=forge$5.util.encodeUtf8(i));var a=i.length;n.messageLength+=a,a=[a/4294967296>>>0,a>>>0];for(var c=n.fullMessageLength.length-1;c>=0;--c)n.fullMessageLength[c]+=a[1],a[1]=a[0]+(n.fullMessageLength[c]/4294967296>>>0),n.fullMessageLength[c]=n.fullMessageLength[c]>>>0,a[0]=a[1]/4294967296>>>0;return e.putBytes(i),_update$1(r,t,e),(e.read>2048||e.length()===0)&&e.compact(),n},n.digest=function(){var i=forge$5.util.createBuffer();i.putBytes(e.bytes());var o=n.fullMessageLength[n.fullMessageLength.length-1]+n.messageLengthSize,a=o&n.blockLength-1;i.putBytes(_padding$1.substr(0,n.blockLength-a));for(var c,l,u=n.fullMessageLength[0]*8,f=0;f<n.fullMessageLength.length-1;++f)c=n.fullMessageLength[f+1]*8,l=c/4294967296>>>0,u+=l,i.putInt32(u>>>0),u=c>>>0;i.putInt32(u);var g={h0:r.h0,h1:r.h1,h2:r.h2,h3:r.h3,h4:r.h4};_update$1(g,t,i);var $=forge$5.util.createBuffer();return $.putInt32(g.h0),$.putInt32(g.h1),$.putInt32(g.h2),$.putInt32(g.h3),$.putInt32(g.h4),$},n};var _padding$1=null,_initialized$1=!1;function _init$1(){_padding$1="",_padding$1+=forge$5.util.fillString("\0",64),_initialized$1=!0}function _update$1(r,e,t){for(var n,i,o,a,c,l,u,f,g=t.length();g>=64;){for(i=r.h0,o=r.h1,a=r.h2,c=r.h3,l=r.h4,f=0;f<16;++f)n=t.getInt32(),e[f]=n,u=c^o&(a^c),n=(i<<5|i>>>27)+u+l+1518500249+n,l=c,c=a,a=(o<<30|o>>>2)>>>0,o=i,i=n;for(;f<20;++f)n=e[f-3]^e[f-8]^e[f-14]^e[f-16],n=n<<1|n>>>31,e[f]=n,u=c^o&(a^c),n=(i<<5|i>>>27)+u+l+1518500249+n,l=c,c=a,a=(o<<30|o>>>2)>>>0,o=i,i=n;for(;f<32;++f)n=e[f-3]^e[f-8]^e[f-14]^e[f-16],n=n<<1|n>>>31,e[f]=n,u=o^a^c,n=(i<<5|i>>>27)+u+l+1859775393+n,l=c,c=a,a=(o<<30|o>>>2)>>>0,o=i,i=n;for(;f<40;++f)n=e[f-6]^e[f-16]^e[f-28]^e[f-32],n=n<<2|n>>>30,e[f]=n,u=o^a^c,n=(i<<5|i>>>27)+u+l+1859775393+n,l=c,c=a,a=(o<<30|o>>>2)>>>0,o=i,i=n;for(;f<60;++f)n=e[f-6]^e[f-16]^e[f-28]^e[f-32],n=n<<2|n>>>30,e[f]=n,u=o&a|c&(o^a),n=(i<<5|i>>>27)+u+l+2400959708+n,l=c,c=a,a=(o<<30|o>>>2)>>>0,o=i,i=n;for(;f<80;++f)n=e[f-6]^e[f-16]^e[f-28]^e[f-32],n=n<<2|n>>>30,e[f]=n,u=o^a^c,n=(i<<5|i>>>27)+u+l+3395469782+n,l=c,c=a,a=(o<<30|o>>>2)>>>0,o=i,i=n;r.h0=r.h0+i|0,r.h1=r.h1+o|0,r.h2=r.h2+a|0,r.h3=r.h3+c|0,r.h4=r.h4+l|0,g-=64}}var forge$4=forge$m,pkcs1=forge$4.pkcs1=forge$4.pkcs1||{};pkcs1.encode_rsa_oaep=function(r,e,t){var n,i,o,a;typeof t=="string"?(n=t,i=arguments[3]||void 0,o=arguments[4]||void 0):t&&(n=t.label||void 0,i=t.seed||void 0,o=t.md||void 0,t.mgf1&&t.mgf1.md&&(a=t.mgf1.md)),o?o.start():o=forge$4.md.sha1.create(),a||(a=o);var c=Math.ceil(r.n.bitLength()/8),l=c-2*o.digestLength-2;if(e.length>l){var u=new Error("RSAES-OAEP input message length is too long.");throw u.length=e.length,u.maxLength=l,u}n||(n=""),o.update(n,"raw");for(var f=o.digest(),g="",$=l-e.length,S=0;S<$;S++)g+="\0";var E=f.getBytes()+g+""+e;if(!i)i=forge$4.random.getBytes(o.digestLength);else if(i.length!==o.digestLength){var u=new Error("Invalid RSAES-OAEP seed. The seed length must match the digest length.");throw u.seedLength=i.length,u.digestLength=o.digestLength,u}var v=rsa_mgf1(i,c-o.digestLength-1,a),T=forge$4.util.xorBytes(E,v,E.length),I=rsa_mgf1(T,o.digestLength,a),A=forge$4.util.xorBytes(i,I,i.length);return"\0"+A+T};pkcs1.decode_rsa_oaep=function(r,e,t){var n,i,o;typeof t=="string"?(n=t,i=arguments[3]||void 0):t&&(n=t.label||void 0,i=t.md||void 0,t.mgf1&&t.mgf1.md&&(o=t.mgf1.md));var a=Math.ceil(r.n.bitLength()/8);if(e.length!==a){var T=new Error("RSAES-OAEP encoded message length is invalid.");throw T.length=e.length,T.expectedLength=a,T}if(i===void 0?i=forge$4.md.sha1.create():i.start(),o||(o=i),a<2*i.digestLength+2)throw new Error("RSAES-OAEP key is too short for the hash function.");n||(n=""),i.update(n,"raw");for(var c=i.digest().getBytes(),l=e.charAt(0),u=e.substring(1,i.digestLength+1),f=e.substring(1+i.digestLength),g=rsa_mgf1(f,i.digestLength,o),$=forge$4.util.xorBytes(u,g,u.length),S=rsa_mgf1($,a-i.digestLength-1,o),E=forge$4.util.xorBytes(f,S,f.length),v=E.substring(0,i.digestLength),T=l!=="\0",I=0;I<i.digestLength;++I)T|=c.charAt(I)!==v.charAt(I);for(var A=1,P=i.digestLength,x=i.digestLength;x<E.length;x++){var D=E.charCodeAt(x),C=D&1^1,k=A?65534:0;T|=D&k,A=A&C,P+=A}if(T||E.charCodeAt(P)!==1)throw new Error("Invalid RSAES-OAEP padding.");return E.substring(P+1)};function rsa_mgf1(r,e,t){t||(t=forge$4.md.sha1.create());for(var n="",i=Math.ceil(e/t.digestLength),o=0;o<i;++o){var a=String.fromCharCode(o>>24&255,o>>16&255,o>>8&255,o&255);t.start(),t.update(r+a),n+=t.digest().getBytes()}return n.substring(0,e)}var forge$3=forge$m;(function(){if(forge$3.prime){forge$3.prime;return}var r=forge$3.prime=forge$3.prime||{},e=forge$3.jsbn.BigInteger,t=[6,4,2,4,2,4,6,2],n=new e(null);n.fromInt(30);var i=function(g,$){return g|$};r.generateProbablePrime=function(g,$,S){typeof $=="function"&&(S=$,$={}),$=$||{};var E=$.algorithm||"PRIMEINC";typeof E=="string"&&(E={name:E}),E.options=E.options||{};var v=$.prng||forge$3.random,T={nextBytes:function(I){for(var A=v.getBytesSync(I.length),P=0;P<I.length;++P)I[P]=A.charCodeAt(P)}};if(E.name==="PRIMEINC")return o(g,T,E.options,S);throw new Error("Invalid prime generation algorithm: "+E.name)};function o(g,$,S,E){return"workers"in S?l(g,$,S,E):a(g,$,S,E)}function a(g,$,S,E){var v=u(g,$),T=0,I=f(v.bitLength());"millerRabinTests"in S&&(I=S.millerRabinTests);var A=10;"maxBlockTime"in S&&(A=S.maxBlockTime),c(v,g,$,T,I,A,E)}function c(g,$,S,E,v,T,I){var A=+new Date;do{if(g.bitLength()>$&&(g=u($,S)),g.isProbablePrime(v))return I(null,g);g.dAddOffset(t[E++%8],0)}while(T<0||+new Date-A<T);forge$3.util.setImmediate(function(){c(g,$,S,E,v,T,I)})}function l(g,$,S,E){if(typeof Worker>"u")return a(g,$,S,E);var v=u(g,$),T=S.workers,I=S.workLoad||100,A=I*30/8,P=S.workerScript||"forge/prime.worker.js";if(T===-1)return forge$3.util.estimateCores(function(D,C){D&&(C=2),T=C-1,x()});x();function x(){T=Math.max(1,T);for(var D=[],C=0;C<T;++C)D[C]=new Worker(P);for(var C=0;C<T;++C)D[C].addEventListener("message",N);var k=!1;function N(L){if(!k){var M=L.data;if(M.found){for(var U=0;U<D.length;++U)D[U].terminate();return k=!0,E(null,new e(M.prime,16))}v.bitLength()>g&&(v=u(g,$));var z=v.toString(16);L.target.postMessage({hex:z,workLoad:I}),v.dAddOffset(A,0)}}}}function u(g,$){var S=new e(g,$),E=g-1;return S.testBit(E)||S.bitwiseTo(e.ONE.shiftLeft(E),i,S),S.dAddOffset(31-S.mod(n).byteValue(),0),S}function f(g){return g<=100?27:g<=150?18:g<=200?15:g<=250?12:g<=300?9:g<=350?8:g<=400?7:g<=500?6:g<=600?5:g<=800?4:g<=1250?3:2}})();var forge$2=forge$m;if(typeof BigInteger$1>"u")var BigInteger$1=forge$2.jsbn.BigInteger;var _crypto=forge$2.util.isNodejs?require$$1:null,asn1$1=forge$2.asn1,util$2=forge$2.util;forge$2.pki=forge$2.pki||{};forge$2.pki.rsa=forge$2.rsa=forge$2.rsa||{};var pki$1=forge$2.pki,GCD_30_DELTA=[6,4,2,4,2,4,6,2],privateKeyValidator={name:"PrivateKeyInfo",tagClass:asn1$1.Class.UNIVERSAL,type:asn1$1.Type.SEQUENCE,constructed:!0,value:[{name:"PrivateKeyInfo.version",tagClass:asn1$1.Class.UNIVERSAL,type:asn1$1.Type.INTEGER,constructed:!1,capture:"privateKeyVersion"},{name:"PrivateKeyInfo.privateKeyAlgorithm",tagClass:asn1$1.Class.UNIVERSAL,type:asn1$1.Type.SEQUENCE,constructed:!0,value:[{name:"AlgorithmIdentifier.algorithm",tagClass:asn1$1.Class.UNIVERSAL,type:asn1$1.Type.OID,constructed:!1,capture:"privateKeyOid"}]},{name:"PrivateKeyInfo",tagClass:asn1$1.Class.UNIVERSAL,type:asn1$1.Type.OCTETSTRING,constructed:!1,capture:"privateKey"}]},rsaPrivateKeyValidator={name:"RSAPrivateKey",tagClass:asn1$1.Class.UNIVERSAL,type:asn1$1.Type.SEQUENCE,constructed:!0,value:[{name:"RSAPrivateKey.version",tagClass:asn1$1.Class.UNIVERSAL,type:asn1$1.Type.INTEGER,constructed:!1,capture:"privateKeyVersion"},{name:"RSAPrivateKey.modulus",tagClass:asn1$1.Class.UNIVERSAL,type:asn1$1.Type.INTEGER,constructed:!1,capture:"privateKeyModulus"},{name:"RSAPrivateKey.publicExponent",tagClass:asn1$1.Class.UNIVERSAL,type:asn1$1.Type.INTEGER,constructed:!1,capture:"privateKeyPublicExponent"},{name:"RSAPrivateKey.privateExponent",tagClass:asn1$1.Class.UNIVERSAL,type:asn1$1.Type.INTEGER,constructed:!1,capture:"privateKeyPrivateExponent"},{name:"RSAPrivateKey.prime1",tagClass:asn1$1.Class.UNIVERSAL,type:asn1$1.Type.INTEGER,constructed:!1,capture:"privateKeyPrime1"},{name:"RSAPrivateKey.prime2",tagClass:asn1$1.Class.UNIVERSAL,type:asn1$1.Type.INTEGER,constructed:!1,capture:"privateKeyPrime2"},{name:"RSAPrivateKey.exponent1",tagClass:asn1$1.Class.UNIVERSAL,type:asn1$1.Type.INTEGER,constructed:!1,capture:"privateKeyExponent1"},{name:"RSAPrivateKey.exponent2",tagClass:asn1$1.Class.UNIVERSAL,type:asn1$1.Type.INTEGER,constructed:!1,capture:"privateKeyExponent2"},{name:"RSAPrivateKey.coefficient",tagClass:asn1$1.Class.UNIVERSAL,type:asn1$1.Type.INTEGER,constructed:!1,capture:"privateKeyCoefficient"}]},rsaPublicKeyValidator={name:"RSAPublicKey",tagClass:asn1$1.Class.UNIVERSAL,type:asn1$1.Type.SEQUENCE,constructed:!0,value:[{name:"RSAPublicKey.modulus",tagClass:asn1$1.Class.UNIVERSAL,type:asn1$1.Type.INTEGER,constructed:!1,capture:"publicKeyModulus"},{name:"RSAPublicKey.exponent",tagClass:asn1$1.Class.UNIVERSAL,type:asn1$1.Type.INTEGER,constructed:!1,capture:"publicKeyExponent"}]},publicKeyValidator=forge$2.pki.rsa.publicKeyValidator={name:"SubjectPublicKeyInfo",tagClass:asn1$1.Class.UNIVERSAL,type:asn1$1.Type.SEQUENCE,constructed:!0,captureAsn1:"subjectPublicKeyInfo",value:[{name:"SubjectPublicKeyInfo.AlgorithmIdentifier",tagClass:asn1$1.Class.UNIVERSAL,type:asn1$1.Type.SEQUENCE,constructed:!0,value:[{name:"AlgorithmIdentifier.algorithm",tagClass:asn1$1.Class.UNIVERSAL,type:asn1$1.Type.OID,constructed:!1,capture:"publicKeyOid"}]},{name:"SubjectPublicKeyInfo.subjectPublicKey",tagClass:asn1$1.Class.UNIVERSAL,type:asn1$1.Type.BITSTRING,constructed:!1,value:[{name:"SubjectPublicKeyInfo.subjectPublicKey.RSAPublicKey",tagClass:asn1$1.Class.UNIVERSAL,type:asn1$1.Type.SEQUENCE,constructed:!0,optional:!0,captureAsn1:"rsaPublicKey"}]}]},digestInfoValidator={name:"DigestInfo",tagClass:asn1$1.Class.UNIVERSAL,type:asn1$1.Type.SEQUENCE,constructed:!0,value:[{name:"DigestInfo.DigestAlgorithm",tagClass:asn1$1.Class.UNIVERSAL,type:asn1$1.Type.SEQUENCE,constructed:!0,value:[{name:"DigestInfo.DigestAlgorithm.algorithmIdentifier",tagClass:asn1$1.Class.UNIVERSAL,type:asn1$1.Type.OID,constructed:!1,capture:"algorithmIdentifier"},{name:"DigestInfo.DigestAlgorithm.parameters",tagClass:asn1$1.Class.UNIVERSAL,type:asn1$1.Type.NULL,capture:"parameters",optional:!0,constructed:!1}]},{name:"DigestInfo.digest",tagClass:asn1$1.Class.UNIVERSAL,type:asn1$1.Type.OCTETSTRING,constructed:!1,capture:"digest"}]},emsaPkcs1v15encode=function(r){var e;if(r.algorithm in pki$1.oids)e=pki$1.oids[r.algorithm];else{var t=new Error("Unknown message digest algorithm.");throw t.algorithm=r.algorithm,t}var n=asn1$1.oidToDer(e).getBytes(),i=asn1$1.create(asn1$1.Class.UNIVERSAL,asn1$1.Type.SEQUENCE,!0,[]),o=asn1$1.create(asn1$1.Class.UNIVERSAL,asn1$1.Type.SEQUENCE,!0,[]);o.value.push(asn1$1.create(asn1$1.Class.UNIVERSAL,asn1$1.Type.OID,!1,n)),o.value.push(asn1$1.create(asn1$1.Class.UNIVERSAL,asn1$1.Type.NULL,!1,""));var a=asn1$1.create(asn1$1.Class.UNIVERSAL,asn1$1.Type.OCTETSTRING,!1,r.digest().getBytes());return i.value.push(o),i.value.push(a),asn1$1.toDer(i).getBytes()},_modPow=function(r,e,t){if(t)return r.modPow(e.e,e.n);if(!e.p||!e.q)return r.modPow(e.d,e.n);e.dP||(e.dP=e.d.mod(e.p.subtract(BigInteger$1.ONE))),e.dQ||(e.dQ=e.d.mod(e.q.subtract(BigInteger$1.ONE))),e.qInv||(e.qInv=e.q.modInverse(e.p));var n;do n=new BigInteger$1(forge$2.util.bytesToHex(forge$2.random.getBytes(e.n.bitLength()/8)),16);while(n.compareTo(e.n)>=0||!n.gcd(e.n).equals(BigInteger$1.ONE));r=r.multiply(n.modPow(e.e,e.n)).mod(e.n);for(var i=r.mod(e.p).modPow(e.dP,e.p),o=r.mod(e.q).modPow(e.dQ,e.q);i.compareTo(o)<0;)i=i.add(e.p);var a=i.subtract(o).multiply(e.qInv).mod(e.p).multiply(e.q).add(o);return a=a.multiply(n.modInverse(e.n)).mod(e.n),a};pki$1.rsa.encrypt=function(r,e,t){var n=t,i,o=Math.ceil(e.n.bitLength()/8);t!==!1&&t!==!0?(n=t===2,i=_encodePkcs1_v1_5(r,e,t)):(i=forge$2.util.createBuffer(),i.putBytes(r));for(var a=new BigInteger$1(i.toHex(),16),c=_modPow(a,e,n),l=c.toString(16),u=forge$2.util.createBuffer(),f=o-Math.ceil(l.length/2);f>0;)u.putByte(0),--f;return u.putBytes(forge$2.util.hexToBytes(l)),u.getBytes()};pki$1.rsa.decrypt=function(r,e,t,n){var i=Math.ceil(e.n.bitLength()/8);if(r.length!==i){var o=new Error("Encrypted message length is invalid.");throw o.length=r.length,o.expected=i,o}var a=new BigInteger$1(forge$2.util.createBuffer(r).toHex(),16);if(a.compareTo(e.n)>=0)throw new Error("Encrypted message is invalid.");for(var c=_modPow(a,e,t),l=c.toString(16),u=forge$2.util.createBuffer(),f=i-Math.ceil(l.length/2);f>0;)u.putByte(0),--f;return u.putBytes(forge$2.util.hexToBytes(l)),n!==!1?_decodePkcs1_v1_5(u.getBytes(),e,t):u.getBytes()};pki$1.rsa.createKeyPairGenerationState=function(r,e,t){typeof r=="string"&&(r=parseInt(r,10)),r=r||2048,t=t||{};var n=t.prng||forge$2.random,i={nextBytes:function(c){for(var l=n.getBytesSync(c.length),u=0;u<c.length;++u)c[u]=l.charCodeAt(u)}},o=t.algorithm||"PRIMEINC",a;if(o==="PRIMEINC")a={algorithm:o,state:0,bits:r,rng:i,eInt:e||65537,e:new BigInteger$1(null),p:null,q:null,qBits:r>>1,pBits:r-(r>>1),pqState:0,num:null,keys:null},a.e.fromInt(a.eInt);else throw new Error("Invalid key generation algorithm: "+o);return a};pki$1.rsa.stepKeyPairGenerationState=function(r,e){"algorithm"in r||(r.algorithm="PRIMEINC");var t=new BigInteger$1(null);t.fromInt(30);for(var n=0,i=function(g,$){return g|$},o=+new Date,a,c=0;r.keys===null&&(e<=0||c<e);){if(r.state===0){var l=r.p===null?r.pBits:r.qBits,u=l-1;r.pqState===0?(r.num=new BigInteger$1(l,r.rng),r.num.testBit(u)||r.num.bitwiseTo(BigInteger$1.ONE.shiftLeft(u),i,r.num),r.num.dAddOffset(31-r.num.mod(t).byteValue(),0),n=0,++r.pqState):r.pqState===1?r.num.bitLength()>l?r.pqState=0:r.num.isProbablePrime(_getMillerRabinTests(r.num.bitLength()))?++r.pqState:r.num.dAddOffset(GCD_30_DELTA[n++%8],0):r.pqState===2?r.pqState=r.num.subtract(BigInteger$1.ONE).gcd(r.e).compareTo(BigInteger$1.ONE)===0?3:0:r.pqState===3&&(r.pqState=0,r.p===null?r.p=r.num:r.q=r.num,r.p!==null&&r.q!==null&&++r.state,r.num=null)}else if(r.state===1)r.p.compareTo(r.q)<0&&(r.num=r.p,r.p=r.q,r.q=r.num),++r.state;else if(r.state===2)r.p1=r.p.subtract(BigInteger$1.ONE),r.q1=r.q.subtract(BigInteger$1.ONE),r.phi=r.p1.multiply(r.q1),++r.state;else if(r.state===3)r.phi.gcd(r.e).compareTo(BigInteger$1.ONE)===0?++r.state:(r.p=null,r.q=null,r.state=0);else if(r.state===4)r.n=r.p.multiply(r.q),r.n.bitLength()===r.bits?++r.state:(r.q=null,r.state=0);else if(r.state===5){var f=r.e.modInverse(r.phi);r.keys={privateKey:pki$1.rsa.setPrivateKey(r.n,r.e,f,r.p,r.q,f.mod(r.p1),f.mod(r.q1),r.q.modInverse(r.p)),publicKey:pki$1.rsa.setPublicKey(r.n,r.e)}}a=+new Date,c+=a-o,o=a}return r.keys!==null};pki$1.rsa.generateKeyPair=function(r,e,t,n){if(arguments.length===1?typeof r=="object"?(t=r,r=void 0):typeof r=="function"&&(n=r,r=void 0):arguments.length===2?typeof r=="number"?typeof e=="function"?(n=e,e=void 0):typeof e!="number"&&(t=e,e=void 0):(t=r,n=e,r=void 0,e=void 0):arguments.length===3&&(typeof e=="number"?typeof t=="function"&&(n=t,t=void 0):(n=t,t=e,e=void 0)),t=t||{},r===void 0&&(r=t.bits||2048),e===void 0&&(e=t.e||65537),!forge$2.options.usePureJavaScript&&!t.prng&&r>=256&&r<=16384&&(e===65537||e===3)){if(n){if(_detectNodeCrypto("generateKeyPair"))return _crypto.generateKeyPair("rsa",{modulusLength:r,publicExponent:e,publicKeyEncoding:{type:"spki",format:"pem"},privateKeyEncoding:{type:"pkcs8",format:"pem"}},function(c,l,u){if(c)return n(c);n(null,{privateKey:pki$1.privateKeyFromPem(u),publicKey:pki$1.publicKeyFromPem(l)})});if(_detectSubtleCrypto("generateKey")&&_detectSubtleCrypto("exportKey"))return util$2.globalScope.crypto.subtle.generateKey({name:"RSASSA-PKCS1-v1_5",modulusLength:r,publicExponent:_intToUint8Array(e),hash:{name:"SHA-256"}},!0,["sign","verify"]).then(function(c){return util$2.globalScope.crypto.subtle.exportKey("pkcs8",c.privateKey)}).then(void 0,function(c){n(c)}).then(function(c){if(c){var l=pki$1.privateKeyFromAsn1(asn1$1.fromDer(forge$2.util.createBuffer(c)));n(null,{privateKey:l,publicKey:pki$1.setRsaPublicKey(l.n,l.e)})}});if(_detectSubtleMsCrypto("generateKey")&&_detectSubtleMsCrypto("exportKey")){var i=util$2.globalScope.msCrypto.subtle.generateKey({name:"RSASSA-PKCS1-v1_5",modulusLength:r,publicExponent:_intToUint8Array(e),hash:{name:"SHA-256"}},!0,["sign","verify"]);i.oncomplete=function(c){var l=c.target.result,u=util$2.globalScope.msCrypto.subtle.exportKey("pkcs8",l.privateKey);u.oncomplete=function(f){var g=f.target.result,$=pki$1.privateKeyFromAsn1(asn1$1.fromDer(forge$2.util.createBuffer(g)));n(null,{privateKey:$,publicKey:pki$1.setRsaPublicKey($.n,$.e)})},u.onerror=function(f){n(f)}},i.onerror=function(c){n(c)};return}}else if(_detectNodeCrypto("generateKeyPairSync")){var o=_crypto.generateKeyPairSync("rsa",{modulusLength:r,publicExponent:e,publicKeyEncoding:{type:"spki",format:"pem"},privateKeyEncoding:{type:"pkcs8",format:"pem"}});return{privateKey:pki$1.privateKeyFromPem(o.privateKey),publicKey:pki$1.publicKeyFromPem(o.publicKey)}}}var a=pki$1.rsa.createKeyPairGenerationState(r,e,t);if(!n)return pki$1.rsa.stepKeyPairGenerationState(a,0),a.keys;_generateKeyPair(a,t,n)};pki$1.setRsaPublicKey=pki$1.rsa.setPublicKey=function(r,e){var t={n:r,e};return t.encrypt=function(n,i,o){if(typeof i=="string"?i=i.toUpperCase():i===void 0&&(i="RSAES-PKCS1-V1_5"),i==="RSAES-PKCS1-V1_5")i={encode:function(c,l,u){return _encodePkcs1_v1_5(c,l,2).getBytes()}};else if(i==="RSA-OAEP"||i==="RSAES-OAEP")i={encode:function(c,l){return forge$2.pkcs1.encode_rsa_oaep(l,c,o)}};else if(["RAW","NONE","NULL",null].indexOf(i)!==-1)i={encode:function(c){return c}};else if(typeof i=="string")throw new Error('Unsupported encryption scheme: "'+i+'".');var a=i.encode(n,t,!0);return pki$1.rsa.encrypt(a,t,!0)},t.verify=function(n,i,o,a){typeof o=="string"?o=o.toUpperCase():o===void 0&&(o="RSASSA-PKCS1-V1_5"),a===void 0&&(a={_parseAllDigestBytes:!0}),"_parseAllDigestBytes"in a||(a._parseAllDigestBytes=!0),o==="RSASSA-PKCS1-V1_5"?o={verify:function(l,u){u=_decodePkcs1_v1_5(u,t,!0);var f=asn1$1.fromDer(u,{parseAllBytes:a._parseAllDigestBytes}),g={},$=[];if(!asn1$1.validate(f,digestInfoValidator,g,$)){var S=new Error("ASN.1 object does not contain a valid RSASSA-PKCS1-v1_5 DigestInfo value.");throw S.errors=$,S}var E=asn1$1.derToOid(g.algorithmIdentifier);if(!(E===forge$2.oids.md2||E===forge$2.oids.md5||E===forge$2.oids.sha1||E===forge$2.oids.sha224||E===forge$2.oids.sha256||E===forge$2.oids.sha384||E===forge$2.oids.sha512||E===forge$2.oids["sha512-224"]||E===forge$2.oids["sha512-256"])){var S=new Error("Unknown RSASSA-PKCS1-v1_5 DigestAlgorithm identifier.");throw S.oid=E,S}if((E===forge$2.oids.md2||E===forge$2.oids.md5)&&!("parameters"in g))throw new Error("ASN.1 object does not contain a valid RSASSA-PKCS1-v1_5 DigestInfo value. Missing algorithm identifer NULL parameters.");return l===g.digest}}:(o==="NONE"||o==="NULL"||o===null)&&(o={verify:function(l,u){return u=_decodePkcs1_v1_5(u,t,!0),l===u}});var c=pki$1.rsa.decrypt(i,t,!0,!1);return o.verify(n,c,t.n.bitLength())},t};pki$1.setRsaPrivateKey=pki$1.rsa.setPrivateKey=function(r,e,t,n,i,o,a,c){var l={n:r,e,d:t,p:n,q:i,dP:o,dQ:a,qInv:c};return l.decrypt=function(u,f,g){typeof f=="string"?f=f.toUpperCase():f===void 0&&(f="RSAES-PKCS1-V1_5");var $=pki$1.rsa.decrypt(u,l,!1,!1);if(f==="RSAES-PKCS1-V1_5")f={decode:_decodePkcs1_v1_5};else if(f==="RSA-OAEP"||f==="RSAES-OAEP")f={decode:function(S,E){return forge$2.pkcs1.decode_rsa_oaep(E,S,g)}};else if(["RAW","NONE","NULL",null].indexOf(f)!==-1)f={decode:function(S){return S}};else throw new Error('Unsupported encryption scheme: "'+f+'".');return f.decode($,l,!1)},l.sign=function(u,f){var g=!1;typeof f=="string"&&(f=f.toUpperCase()),f===void 0||f==="RSASSA-PKCS1-V1_5"?(f={encode:emsaPkcs1v15encode},g=1):(f==="NONE"||f==="NULL"||f===null)&&(f={encode:function(){return u}},g=1);var $=f.encode(u,l.n.bitLength());return pki$1.rsa.encrypt($,l,g)},l};pki$1.wrapRsaPrivateKey=function(r){return asn1$1.create(asn1$1.Class.UNIVERSAL,asn1$1.Type.SEQUENCE,!0,[asn1$1.create(asn1$1.Class.UNIVERSAL,asn1$1.Type.INTEGER,!1,asn1$1.integerToDer(0).getBytes()),asn1$1.create(asn1$1.Class.UNIVERSAL,asn1$1.Type.SEQUENCE,!0,[asn1$1.create(asn1$1.Class.UNIVERSAL,asn1$1.Type.OID,!1,asn1$1.oidToDer(pki$1.oids.rsaEncryption).getBytes()),asn1$1.create(asn1$1.Class.UNIVERSAL,asn1$1.Type.NULL,!1,"")]),asn1$1.create(asn1$1.Class.UNIVERSAL,asn1$1.Type.OCTETSTRING,!1,asn1$1.toDer(r).getBytes())])};pki$1.privateKeyFromAsn1=function(r){var e={},t=[];if(asn1$1.validate(r,privateKeyValidator,e,t)&&(r=asn1$1.fromDer(forge$2.util.createBuffer(e.privateKey))),e={},t=[],!asn1$1.validate(r,rsaPrivateKeyValidator,e,t)){var n=new Error("Cannot read private key. ASN.1 object does not contain an RSAPrivateKey.");throw n.errors=t,n}var i,o,a,c,l,u,f,g;return i=forge$2.util.createBuffer(e.privateKeyModulus).toHex(),o=forge$2.util.createBuffer(e.privateKeyPublicExponent).toHex(),a=forge$2.util.createBuffer(e.privateKeyPrivateExponent).toHex(),c=forge$2.util.createBuffer(e.privateKeyPrime1).toHex(),l=forge$2.util.createBuffer(e.privateKeyPrime2).toHex(),u=forge$2.util.createBuffer(e.privateKeyExponent1).toHex(),f=forge$2.util.createBuffer(e.privateKeyExponent2).toHex(),g=forge$2.util.createBuffer(e.privateKeyCoefficient).toHex(),pki$1.setRsaPrivateKey(new BigInteger$1(i,16),new BigInteger$1(o,16),new BigInteger$1(a,16),new BigInteger$1(c,16),new BigInteger$1(l,16),new BigInteger$1(u,16),new BigInteger$1(f,16),new BigInteger$1(g,16))};pki$1.privateKeyToAsn1=pki$1.privateKeyToRSAPrivateKey=function(r){return asn1$1.create(asn1$1.Class.UNIVERSAL,asn1$1.Type.SEQUENCE,!0,[asn1$1.create(asn1$1.Class.UNIVERSAL,asn1$1.Type.INTEGER,!1,asn1$1.integerToDer(0).getBytes()),asn1$1.create(asn1$1.Class.UNIVERSAL,asn1$1.Type.INTEGER,!1,_bnToBytes(r.n)),asn1$1.create(asn1$1.Class.UNIVERSAL,asn1$1.Type.INTEGER,!1,_bnToBytes(r.e)),asn1$1.create(asn1$1.Class.UNIVERSAL,asn1$1.Type.INTEGER,!1,_bnToBytes(r.d)),asn1$1.create(asn1$1.Class.UNIVERSAL,asn1$1.Type.INTEGER,!1,_bnToBytes(r.p)),asn1$1.create(asn1$1.Class.UNIVERSAL,asn1$1.Type.INTEGER,!1,_bnToBytes(r.q)),asn1$1.create(asn1$1.Class.UNIVERSAL,asn1$1.Type.INTEGER,!1,_bnToBytes(r.dP)),asn1$1.create(asn1$1.Class.UNIVERSAL,asn1$1.Type.INTEGER,!1,_bnToBytes(r.dQ)),asn1$1.create(asn1$1.Class.UNIVERSAL,asn1$1.Type.INTEGER,!1,_bnToBytes(r.qInv))])};pki$1.publicKeyFromAsn1=function(r){var e={},t=[];if(asn1$1.validate(r,publicKeyValidator,e,t)){var n=asn1$1.derToOid(e.publicKeyOid);if(n!==pki$1.oids.rsaEncryption){var i=new Error("Cannot read public key. Unknown OID.");throw i.oid=n,i}r=e.rsaPublicKey}if(t=[],!asn1$1.validate(r,rsaPublicKeyValidator,e,t)){var i=new Error("Cannot read public key. ASN.1 object does not contain an RSAPublicKey.");throw i.errors=t,i}var o=forge$2.util.createBuffer(e.publicKeyModulus).toHex(),a=forge$2.util.createBuffer(e.publicKeyExponent).toHex();return pki$1.setRsaPublicKey(new BigInteger$1(o,16),new BigInteger$1(a,16))};pki$1.publicKeyToAsn1=pki$1.publicKeyToSubjectPublicKeyInfo=function(r){return asn1$1.create(asn1$1.Class.UNIVERSAL,asn1$1.Type.SEQUENCE,!0,[asn1$1.create(asn1$1.Class.UNIVERSAL,asn1$1.Type.SEQUENCE,!0,[asn1$1.create(asn1$1.Class.UNIVERSAL,asn1$1.Type.OID,!1,asn1$1.oidToDer(pki$1.oids.rsaEncryption).getBytes()),asn1$1.create(asn1$1.Class.UNIVERSAL,asn1$1.Type.NULL,!1,"")]),asn1$1.create(asn1$1.Class.UNIVERSAL,asn1$1.Type.BITSTRING,!1,[pki$1.publicKeyToRSAPublicKey(r)])])};pki$1.publicKeyToRSAPublicKey=function(r){return asn1$1.create(asn1$1.Class.UNIVERSAL,asn1$1.Type.SEQUENCE,!0,[asn1$1.create(asn1$1.Class.UNIVERSAL,asn1$1.Type.INTEGER,!1,_bnToBytes(r.n)),asn1$1.create(asn1$1.Class.UNIVERSAL,asn1$1.Type.INTEGER,!1,_bnToBytes(r.e))])};function _encodePkcs1_v1_5(r,e,t){var n=forge$2.util.createBuffer(),i=Math.ceil(e.n.bitLength()/8);if(r.length>i-11){var o=new Error("Message is too long for PKCS#1 v1.5 padding.");throw o.length=r.length,o.max=i-11,o}n.putByte(0),n.putByte(t);var a=i-3-r.length,c;if(t===0||t===1){c=t===0?0:255;for(var l=0;l<a;++l)n.putByte(c)}else for(;a>0;){for(var u=0,f=forge$2.random.getBytes(a),l=0;l<a;++l)c=f.charCodeAt(l),c===0?++u:n.putByte(c);a=u}return n.putByte(0),n.putBytes(r),n}function _decodePkcs1_v1_5(r,e,t,n){var i=Math.ceil(e.n.bitLength()/8),o=forge$2.util.createBuffer(r),a=o.getByte(),c=o.getByte();if(a!==0||t&&c!==0&&c!==1||!t&&c!=2||t&&c===0&&typeof n>"u")throw new Error("Encryption block is invalid.");var l=0;if(c===0){l=i-3-n;for(var u=0;u<l;++u)if(o.getByte()!==0)throw new Error("Encryption block is invalid.")}else if(c===1)for(l=0;o.length()>1;){if(o.getByte()!==255){--o.read;break}++l}else if(c===2)for(l=0;o.length()>1;){if(o.getByte()===0){--o.read;break}++l}var f=o.getByte();if(f!==0||l!==i-3-o.length())throw new Error("Encryption block is invalid.");return o.getBytes()}function _generateKeyPair(r,e,t){typeof e=="function"&&(t=e,e={}),e=e||{};var n={algorithm:{name:e.algorithm||"PRIMEINC",options:{workers:e.workers||2,workLoad:e.workLoad||100,workerScript:e.workerScript}}};"prng"in e&&(n.prng=e.prng),i();function i(){o(r.pBits,function(c,l){if(c)return t(c);if(r.p=l,r.q!==null)return a(c,r.q);o(r.qBits,a)})}function o(c,l){forge$2.prime.generateProbablePrime(c,n,l)}function a(c,l){if(c)return t(c);if(r.q=l,r.p.compareTo(r.q)<0){var u=r.p;r.p=r.q,r.q=u}if(r.p.subtract(BigInteger$1.ONE).gcd(r.e).compareTo(BigInteger$1.ONE)!==0){r.p=null,i();return}if(r.q.subtract(BigInteger$1.ONE).gcd(r.e).compareTo(BigInteger$1.ONE)!==0){r.q=null,o(r.qBits,a);return}if(r.p1=r.p.subtract(BigInteger$1.ONE),r.q1=r.q.subtract(BigInteger$1.ONE),r.phi=r.p1.multiply(r.q1),r.phi.gcd(r.e).compareTo(BigInteger$1.ONE)!==0){r.p=r.q=null,i();return}if(r.n=r.p.multiply(r.q),r.n.bitLength()!==r.bits){r.q=null,o(r.qBits,a);return}var f=r.e.modInverse(r.phi);r.keys={privateKey:pki$1.rsa.setPrivateKey(r.n,r.e,f,r.p,r.q,f.mod(r.p1),f.mod(r.q1),r.q.modInverse(r.p)),publicKey:pki$1.rsa.setPublicKey(r.n,r.e)},t(null,r.keys)}}function _bnToBytes(r){var e=r.toString(16);e[0]>="8"&&(e="00"+e);var t=forge$2.util.hexToBytes(e);return t.length>1&&(t.charCodeAt(0)===0&&!(t.charCodeAt(1)&128)||t.charCodeAt(0)===255&&(t.charCodeAt(1)&128)===128)?t.substr(1):t}function _getMillerRabinTests(r){return r<=100?27:r<=150?18:r<=200?15:r<=250?12:r<=300?9:r<=350?8:r<=400?7:r<=500?6:r<=600?5:r<=800?4:r<=1250?3:2}function _detectNodeCrypto(r){return forge$2.util.isNodejs&&typeof _crypto[r]=="function"}function _detectSubtleCrypto(r){return typeof util$2.globalScope<"u"&&typeof util$2.globalScope.crypto=="object"&&typeof util$2.globalScope.crypto.subtle=="object"&&typeof util$2.globalScope.crypto.subtle[r]=="function"}function _detectSubtleMsCrypto(r){return typeof util$2.globalScope<"u"&&typeof util$2.globalScope.msCrypto=="object"&&typeof util$2.globalScope.msCrypto.subtle=="object"&&typeof util$2.globalScope.msCrypto.subtle[r]=="function"}function _intToUint8Array(r){for(var e=forge$2.util.hexToBytes(r.toString(16)),t=new Uint8Array(e.length),n=0;n<e.length;++n)t[n]=e.charCodeAt(n);return t}var forge$1=forge$m;if(typeof BigInteger>"u")var BigInteger=forge$1.jsbn.BigInteger;var asn1=forge$1.asn1,pki=forge$1.pki=forge$1.pki||{};pki.pbe=forge$1.pbe=forge$1.pbe||{};var oids=pki.oids,encryptedPrivateKeyValidator={name:"EncryptedPrivateKeyInfo",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.SEQUENCE,constructed:!0,value:[{name:"EncryptedPrivateKeyInfo.encryptionAlgorithm",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.SEQUENCE,constructed:!0,value:[{name:"AlgorithmIdentifier.algorithm",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.OID,constructed:!1,capture:"encryptionOid"},{name:"AlgorithmIdentifier.parameters",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.SEQUENCE,constructed:!0,captureAsn1:"encryptionParams"}]},{name:"EncryptedPrivateKeyInfo.encryptedData",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.OCTETSTRING,constructed:!1,capture:"encryptedData"}]},PBES2AlgorithmsValidator={name:"PBES2Algorithms",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.SEQUENCE,constructed:!0,value:[{name:"PBES2Algorithms.keyDerivationFunc",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.SEQUENCE,constructed:!0,value:[{name:"PBES2Algorithms.keyDerivationFunc.oid",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.OID,constructed:!1,capture:"kdfOid"},{name:"PBES2Algorithms.params",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.SEQUENCE,constructed:!0,value:[{name:"PBES2Algorithms.params.salt",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.OCTETSTRING,constructed:!1,capture:"kdfSalt"},{name:"PBES2Algorithms.params.iterationCount",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.INTEGER,constructed:!1,capture:"kdfIterationCount"},{name:"PBES2Algorithms.params.keyLength",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.INTEGER,constructed:!1,optional:!0,capture:"keyLength"},{name:"PBES2Algorithms.params.prf",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.SEQUENCE,constructed:!0,optional:!0,value:[{name:"PBES2Algorithms.params.prf.algorithm",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.OID,constructed:!1,capture:"prfOid"}]}]}]},{name:"PBES2Algorithms.encryptionScheme",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.SEQUENCE,constructed:!0,value:[{name:"PBES2Algorithms.encryptionScheme.oid",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.OID,constructed:!1,capture:"encOid"},{name:"PBES2Algorithms.encryptionScheme.iv",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.OCTETSTRING,constructed:!1,capture:"encIv"}]}]},pkcs12PbeParamsValidator={name:"pkcs-12PbeParams",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.SEQUENCE,constructed:!0,value:[{name:"pkcs-12PbeParams.salt",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.OCTETSTRING,constructed:!1,capture:"salt"},{name:"pkcs-12PbeParams.iterations",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.INTEGER,constructed:!1,capture:"iterations"}]};pki.encryptPrivateKeyInfo=function(r,e,t){t=t||{},t.saltSize=t.saltSize||8,t.count=t.count||2048,t.algorithm=t.algorithm||"aes128",t.prfAlgorithm=t.prfAlgorithm||"sha1";var n=forge$1.random.getBytesSync(t.saltSize),i=t.count,o=asn1.integerToDer(i),a,c,l;if(t.algorithm.indexOf("aes")===0||t.algorithm==="des"){var u,f,g;switch(t.algorithm){case"aes128":a=16,u=16,f=oids["aes128-CBC"],g=forge$1.aes.createEncryptionCipher;break;case"aes192":a=24,u=16,f=oids["aes192-CBC"],g=forge$1.aes.createEncryptionCipher;break;case"aes256":a=32,u=16,f=oids["aes256-CBC"],g=forge$1.aes.createEncryptionCipher;break;case"des":a=8,u=8,f=oids.desCBC,g=forge$1.des.createEncryptionCipher;break;default:var $=new Error("Cannot encrypt private key. Unknown encryption algorithm.");throw $.algorithm=t.algorithm,$}var S="hmacWith"+t.prfAlgorithm.toUpperCase(),E=prfAlgorithmToMessageDigest(S),v=forge$1.pkcs5.pbkdf2(e,n,i,a,E),T=forge$1.random.getBytesSync(u),I=g(v);I.start(T),I.update(asn1.toDer(r)),I.finish(),l=I.output.getBytes();var A=createPbkdf2Params(n,o,a,S);c=asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,!0,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OID,!1,asn1.oidToDer(oids.pkcs5PBES2).getBytes()),asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,!0,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,!0,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OID,!1,asn1.oidToDer(oids.pkcs5PBKDF2).getBytes()),A]),asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,!0,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OID,!1,asn1.oidToDer(f).getBytes()),asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OCTETSTRING,!1,T)])])])}else if(t.algorithm==="3des"){a=24;var P=new forge$1.util.ByteBuffer(n),v=pki.pbe.generatePkcs12Key(e,P,1,i,a),T=pki.pbe.generatePkcs12Key(e,P,2,i,a),I=forge$1.des.createEncryptionCipher(v);I.start(T),I.update(asn1.toDer(r)),I.finish(),l=I.output.getBytes(),c=asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,!0,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OID,!1,asn1.oidToDer(oids["pbeWithSHAAnd3-KeyTripleDES-CBC"]).getBytes()),asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,!0,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OCTETSTRING,!1,n),asn1.create(asn1.Class.UNIVERSAL,asn1.Type.INTEGER,!1,o.getBytes())])])}else{var $=new Error("Cannot encrypt private key. Unknown encryption algorithm.");throw $.algorithm=t.algorithm,$}var x=asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,!0,[c,asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OCTETSTRING,!1,l)]);return x};pki.decryptPrivateKeyInfo=function(r,e){var t=null,n={},i=[];if(!asn1.validate(r,encryptedPrivateKeyValidator,n,i)){var o=new Error("Cannot read encrypted private key. ASN.1 object is not a supported EncryptedPrivateKeyInfo.");throw o.errors=i,o}var a=asn1.derToOid(n.encryptionOid),c=pki.pbe.getCipher(a,n.encryptionParams,e),l=forge$1.util.createBuffer(n.encryptedData);return c.update(l),c.finish()&&(t=asn1.fromDer(c.output)),t};pki.encryptedPrivateKeyToPem=function(r,e){var t={type:"ENCRYPTED PRIVATE KEY",body:asn1.toDer(r).getBytes()};return forge$1.pem.encode(t,{maxline:e})};pki.encryptedPrivateKeyFromPem=function(r){var e=forge$1.pem.decode(r)[0];if(e.type!=="ENCRYPTED PRIVATE KEY"){var t=new Error('Could not convert encrypted private key from PEM; PEM header type is "ENCRYPTED PRIVATE KEY".');throw t.headerType=e.type,t}if(e.procType&&e.procType.type==="ENCRYPTED")throw new Error("Could not convert encrypted private key from PEM; PEM is encrypted.");return asn1.fromDer(e.body)};pki.encryptRsaPrivateKey=function(r,e,t){if(t=t||{},!t.legacy){var n=pki.wrapRsaPrivateKey(pki.privateKeyToAsn1(r));return n=pki.encryptPrivateKeyInfo(n,e,t),pki.encryptedPrivateKeyToPem(n)}var i,o,a,c;switch(t.algorithm){case"aes128":i="AES-128-CBC",a=16,o=forge$1.random.getBytesSync(16),c=forge$1.aes.createEncryptionCipher;break;case"aes192":i="AES-192-CBC",a=24,o=forge$1.random.getBytesSync(16),c=forge$1.aes.createEncryptionCipher;break;case"aes256":i="AES-256-CBC",a=32,o=forge$1.random.getBytesSync(16),c=forge$1.aes.createEncryptionCipher;break;case"3des":i="DES-EDE3-CBC",a=24,o=forge$1.random.getBytesSync(8),c=forge$1.des.createEncryptionCipher;break;case"des":i="DES-CBC",a=8,o=forge$1.random.getBytesSync(8),c=forge$1.des.createEncryptionCipher;break;default:var l=new Error('Could not encrypt RSA private key; unsupported encryption algorithm "'+t.algorithm+'".');throw l.algorithm=t.algorithm,l}var u=forge$1.pbe.opensslDeriveBytes(e,o.substr(0,8),a),f=c(u);f.start(o),f.update(asn1.toDer(pki.privateKeyToAsn1(r))),f.finish();var g={type:"RSA PRIVATE KEY",procType:{version:"4",type:"ENCRYPTED"},dekInfo:{algorithm:i,parameters:forge$1.util.bytesToHex(o).toUpperCase()},body:f.output.getBytes()};return forge$1.pem.encode(g)};pki.decryptRsaPrivateKey=function(r,e){var t=null,n=forge$1.pem.decode(r)[0];if(n.type!=="ENCRYPTED PRIVATE KEY"&&n.type!=="PRIVATE KEY"&&n.type!=="RSA PRIVATE KEY"){var i=new Error('Could not convert private key from PEM; PEM header type is not "ENCRYPTED PRIVATE KEY", "PRIVATE KEY", or "RSA PRIVATE KEY".');throw i.headerType=i,i}if(n.procType&&n.procType.type==="ENCRYPTED"){var o,a;switch(n.dekInfo.algorithm){case"DES-CBC":o=8,a=forge$1.des.createDecryptionCipher;break;case"DES-EDE3-CBC":o=24,a=forge$1.des.createDecryptionCipher;break;case"AES-128-CBC":o=16,a=forge$1.aes.createDecryptionCipher;break;case"AES-192-CBC":o=24,a=forge$1.aes.createDecryptionCipher;break;case"AES-256-CBC":o=32,a=forge$1.aes.createDecryptionCipher;break;case"RC2-40-CBC":o=5,a=function(g){return forge$1.rc2.createDecryptionCipher(g,40)};break;case"RC2-64-CBC":o=8,a=function(g){return forge$1.rc2.createDecryptionCipher(g,64)};break;case"RC2-128-CBC":o=16,a=function(g){return forge$1.rc2.createDecryptionCipher(g,128)};break;default:var i=new Error('Could not decrypt private key; unsupported encryption algorithm "'+n.dekInfo.algorithm+'".');throw i.algorithm=n.dekInfo.algorithm,i}var c=forge$1.util.hexToBytes(n.dekInfo.parameters),l=forge$1.pbe.opensslDeriveBytes(e,c.substr(0,8),o),u=a(l);if(u.start(c),u.update(forge$1.util.createBuffer(n.body)),u.finish())t=u.output.getBytes();else return t}else t=n.body;return n.type==="ENCRYPTED PRIVATE KEY"?t=pki.decryptPrivateKeyInfo(asn1.fromDer(t),e):t=asn1.fromDer(t),t!==null&&(t=pki.privateKeyFromAsn1(t)),t};pki.pbe.generatePkcs12Key=function(r,e,t,n,i,o){var a,c;if(typeof o>"u"||o===null){if(!("sha1"in forge$1.md))throw new Error('"sha1" hash algorithm unavailable.');o=forge$1.md.sha1.create()}var l=o.digestLength,u=o.blockLength,f=new forge$1.util.ByteBuffer,g=new forge$1.util.ByteBuffer;if(r!=null){for(c=0;c<r.length;c++)g.putInt16(r.charCodeAt(c));g.putInt16(0)}var $=g.length(),S=e.length(),E=new forge$1.util.ByteBuffer;E.fillWithByte(t,u);var v=u*Math.ceil(S/u),T=new forge$1.util.ByteBuffer;for(c=0;c<v;c++)T.putByte(e.at(c%S));var I=u*Math.ceil($/u),A=new forge$1.util.ByteBuffer;for(c=0;c<I;c++)A.putByte(g.at(c%$));var P=T;P.putBuffer(A);for(var x=Math.ceil(i/l),D=1;D<=x;D++){var C=new forge$1.util.ByteBuffer;C.putBytes(E.bytes()),C.putBytes(P.bytes());for(var k=0;k<n;k++)o.start(),o.update(C.getBytes()),C=o.digest();var N=new forge$1.util.ByteBuffer;for(c=0;c<u;c++)N.putByte(C.at(c%l));var L=Math.ceil(S/u)+Math.ceil($/u),M=new forge$1.util.ByteBuffer;for(a=0;a<L;a++){var U=new forge$1.util.ByteBuffer(P.getBytes(u)),z=511;for(c=N.length()-1;c>=0;c--)z=z>>8,z+=N.at(c)+U.at(c),U.setAt(c,z&255);M.putBuffer(U)}P=M,f.putBuffer(C)}return f.truncate(f.length()-i),f};pki.pbe.getCipher=function(r,e,t){switch(r){case pki.oids.pkcs5PBES2:return pki.pbe.getCipherForPBES2(r,e,t);case pki.oids["pbeWithSHAAnd3-KeyTripleDES-CBC"]:case pki.oids["pbewithSHAAnd40BitRC2-CBC"]:return pki.pbe.getCipherForPKCS12PBE(r,e,t);default:var n=new Error("Cannot read encrypted PBE data block. Unsupported OID.");throw n.oid=r,n.supportedOids=["pkcs5PBES2","pbeWithSHAAnd3-KeyTripleDES-CBC","pbewithSHAAnd40BitRC2-CBC"],n}};pki.pbe.getCipherForPBES2=function(r,e,t){var n={},i=[];if(!asn1.validate(e,PBES2AlgorithmsValidator,n,i)){var o=new Error("Cannot read password-based-encryption algorithm parameters. ASN.1 object is not a supported EncryptedPrivateKeyInfo.");throw o.errors=i,o}if(r=asn1.derToOid(n.kdfOid),r!==pki.oids.pkcs5PBKDF2){var o=new Error("Cannot read encrypted private key. Unsupported key derivation function OID.");throw o.oid=r,o.supportedOids=["pkcs5PBKDF2"],o}if(r=asn1.derToOid(n.encOid),r!==pki.oids["aes128-CBC"]&&r!==pki.oids["aes192-CBC"]&&r!==pki.oids["aes256-CBC"]&&r!==pki.oids["des-EDE3-CBC"]&&r!==pki.oids.desCBC){var o=new Error("Cannot read encrypted private key. Unsupported encryption scheme OID.");throw o.oid=r,o.supportedOids=["aes128-CBC","aes192-CBC","aes256-CBC","des-EDE3-CBC","desCBC"],o}var a=n.kdfSalt,c=forge$1.util.createBuffer(n.kdfIterationCount);c=c.getInt(c.length()<<3);var l,u;switch(pki.oids[r]){case"aes128-CBC":l=16,u=forge$1.aes.createDecryptionCipher;break;case"aes192-CBC":l=24,u=forge$1.aes.createDecryptionCipher;break;case"aes256-CBC":l=32,u=forge$1.aes.createDecryptionCipher;break;case"des-EDE3-CBC":l=24,u=forge$1.des.createDecryptionCipher;break;case"desCBC":l=8,u=forge$1.des.createDecryptionCipher;break}var f=prfOidToMessageDigest(n.prfOid),g=forge$1.pkcs5.pbkdf2(t,a,c,l,f),$=n.encIv,S=u(g);return S.start($),S};pki.pbe.getCipherForPKCS12PBE=function(r,e,t){var n={},i=[];if(!asn1.validate(e,pkcs12PbeParamsValidator,n,i)){var o=new Error("Cannot read password-based-encryption algorithm parameters. ASN.1 object is not a supported EncryptedPrivateKeyInfo.");throw o.errors=i,o}var a=forge$1.util.createBuffer(n.salt),c=forge$1.util.createBuffer(n.iterations);c=c.getInt(c.length()<<3);var l,u,f;switch(r){case pki.oids["pbeWithSHAAnd3-KeyTripleDES-CBC"]:l=24,u=8,f=forge$1.des.startDecrypting;break;case pki.oids["pbewithSHAAnd40BitRC2-CBC"]:l=5,u=8,f=function(v,T){var I=forge$1.rc2.createDecryptionCipher(v,40);return I.start(T,null),I};break;default:var o=new Error("Cannot read PKCS #12 PBE data block. Unsupported OID.");throw o.oid=r,o}var g=prfOidToMessageDigest(n.prfOid),$=pki.pbe.generatePkcs12Key(t,a,1,c,l,g);g.start();var S=pki.pbe.generatePkcs12Key(t,a,2,c,u,g);return f($,S)};pki.pbe.opensslDeriveBytes=function(r,e,t,n){if(typeof n>"u"||n===null){if(!("md5"in forge$1.md))throw new Error('"md5" hash algorithm unavailable.');n=forge$1.md.md5.create()}e===null&&(e="");for(var i=[hash$1(n,r+e)],o=16,a=1;o<t;++a,o+=16)i.push(hash$1(n,i[a-1]+r+e));return i.join("").substr(0,t)};function hash$1(r,e){return r.start().update(e).digest().getBytes()}function prfOidToMessageDigest(r){var e;if(!r)e="hmacWithSHA1";else if(e=pki.oids[asn1.derToOid(r)],!e){var t=new Error("Unsupported PRF OID.");throw t.oid=r,t.supported=["hmacWithSHA1","hmacWithSHA224","hmacWithSHA256","hmacWithSHA384","hmacWithSHA512"],t}return prfAlgorithmToMessageDigest(e)}function prfAlgorithmToMessageDigest(r){var e=forge$1.md;switch(r){case"hmacWithSHA224":e=forge$1.md.sha512;case"hmacWithSHA1":case"hmacWithSHA256":case"hmacWithSHA384":case"hmacWithSHA512":r=r.substr(8).toLowerCase();break;default:var t=new Error("Unsupported PRF algorithm.");throw t.algorithm=r,t.supported=["hmacWithSHA1","hmacWithSHA224","hmacWithSHA256","hmacWithSHA384","hmacWithSHA512"],t}if(!e||!(r in e))throw new Error("Unknown hash algorithm: "+r);return e[r].create()}function createPbkdf2Params(r,e,t,n){var i=asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,!0,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OCTETSTRING,!1,r),asn1.create(asn1.Class.UNIVERSAL,asn1.Type.INTEGER,!1,e.getBytes())]);return n!=="hmacWithSHA1"&&i.value.push(asn1.create(asn1.Class.UNIVERSAL,asn1.Type.INTEGER,!1,forge$1.util.hexToBytes(t.toString(16))),asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,!0,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OID,!1,asn1.oidToDer(pki.oids[n]).getBytes()),asn1.create(asn1.Class.UNIVERSAL,asn1.Type.NULL,!1,"")])),i}function number$2(r){if(!Number.isSafeInteger(r)||r<0)throw new Error(`Wrong positive integer: ${r}`)}function bytes$1(r,...e){if(!(r instanceof Uint8Array))throw new Error("Expected Uint8Array");if(e.length>0&&!e.includes(r.length))throw new Error(`Expected Uint8Array of length ${e}, not of length=${r.length}`)}function hash(r){if(typeof r!="function"||typeof r.create!="function")throw new Error("Hash should be wrapped by utils.wrapConstructor");number$2(r.outputLen),number$2(r.blockLen)}function exists$2(r,e=!0){if(r.destroyed)throw new Error("Hash instance has been destroyed");if(e&&r.finished)throw new Error("Hash#digest() has already been called")}function output$1(r,e){bytes$1(r);const t=e.outputLen;if(r.length<t)throw new Error(`digestInto() expects output buffer of length at least ${t}`)}const crypto$2=typeof globalThis=="object"&&"crypto"in globalThis?globalThis.crypto:void 0;/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */const u8a$2=r=>r instanceof Uint8Array,createView$1=r=>new DataView(r.buffer,r.byteOffset,r.byteLength),rotr=(r,e)=>r<<32-e|r>>>e,isLE$1=new Uint8Array(new Uint32Array([287454020]).buffer)[0]===68;if(!isLE$1)throw new Error("Non little-endian hardware is not supported");function utf8ToBytes$3(r){if(typeof r!="string")throw new Error(`utf8ToBytes expected string, got ${typeof r}`);return new Uint8Array(new TextEncoder().encode(r))}function toBytes$3(r){if(typeof r=="string"&&(r=utf8ToBytes$3(r)),!u8a$2(r))throw new Error(`expected Uint8Array, got ${typeof r}`);return r}function concatBytes$1(...r){const e=new Uint8Array(r.reduce((n,i)=>n+i.length,0));let t=0;return r.forEach(n=>{if(!u8a$2(n))throw new Error("Uint8Array expected");e.set(n,t),t+=n.length}),e}class Hash{clone(){return this._cloneInto()}}function wrapConstructor(r){const e=n=>r().update(toBytes$3(n)).digest(),t=r();return e.outputLen=t.outputLen,e.blockLen=t.blockLen,e.create=()=>r(),e}function randomBytes$a(r=32){if(crypto$2&&typeof crypto$2.getRandomValues=="function")return crypto$2.getRandomValues(new Uint8Array(r));throw new Error("crypto.getRandomValues must be defined")}function setBigUint64$1(r,e,t,n){if(typeof r.setBigUint64=="function")return r.setBigUint64(e,t,n);const i=BigInt(32),o=BigInt(4294967295),a=Number(t>>i&o),c=Number(t&o),l=n?4:0,u=n?0:4;r.setUint32(e+l,a,n),r.setUint32(e+u,c,n)}class SHA2 extends Hash{constructor(e,t,n,i){super(),this.blockLen=e,this.outputLen=t,this.padOffset=n,this.isLE=i,this.finished=!1,this.length=0,this.pos=0,this.destroyed=!1,this.buffer=new Uint8Array(e),this.view=createView$1(this.buffer)}update(e){exists$2(this);const{view:t,buffer:n,blockLen:i}=this;e=toBytes$3(e);const o=e.length;for(let a=0;a<o;){const c=Math.min(i-this.pos,o-a);if(c===i){const l=createView$1(e);for(;i<=o-a;a+=i)this.process(l,a);continue}n.set(e.subarray(a,a+c),this.pos),this.pos+=c,a+=c,this.pos===i&&(this.process(t,0),this.pos=0)}return this.length+=e.length,this.roundClean(),this}digestInto(e){exists$2(this),output$1(e,this),this.finished=!0;const{buffer:t,view:n,blockLen:i,isLE:o}=this;let{pos:a}=this;t[a++]=128,this.buffer.subarray(a).fill(0),this.padOffset>i-a&&(this.process(n,0),a=0);for(let g=a;g<i;g++)t[g]=0;setBigUint64$1(n,i-8,BigInt(this.length*8),o),this.process(n,0);const c=createView$1(e),l=this.outputLen;if(l%4)throw new Error("_sha2: outputLen should be aligned to 32bit");const u=l/4,f=this.get();if(u>f.length)throw new Error("_sha2: outputLen bigger than state");for(let g=0;g<u;g++)c.setUint32(4*g,f[g],o)}digest(){const{buffer:e,outputLen:t}=this;this.digestInto(e);const n=e.slice(0,t);return this.destroy(),n}_cloneInto(e){e||(e=new this.constructor),e.set(...this.get());const{blockLen:t,buffer:n,length:i,finished:o,destroyed:a,pos:c}=this;return e.length=i,e.pos=c,e.finished=o,e.destroyed=a,i%t&&e.buffer.set(n),e}}const U32_MASK64=BigInt(2**32-1),_32n=BigInt(32);function fromBig(r,e=!1){return e?{h:Number(r&U32_MASK64),l:Number(r>>_32n&U32_MASK64)}:{h:Number(r>>_32n&U32_MASK64)|0,l:Number(r&U32_MASK64)|0}}function split(r,e=!1){let t=new Uint32Array(r.length),n=new Uint32Array(r.length);for(let i=0;i<r.length;i++){const{h:o,l:a}=fromBig(r[i],e);[t[i],n[i]]=[o,a]}return[t,n]}const toBig=(r,e)=>BigInt(r>>>0)<<_32n|BigInt(e>>>0),shrSH=(r,e,t)=>r>>>t,shrSL=(r,e,t)=>r<<32-t|e>>>t,rotrSH=(r,e,t)=>r>>>t|e<<32-t,rotrSL=(r,e,t)=>r<<32-t|e>>>t,rotrBH=(r,e,t)=>r<<64-t|e>>>t-32,rotrBL=(r,e,t)=>r>>>t-32|e<<64-t,rotr32H=(r,e)=>e,rotr32L=(r,e)=>r,rotlSH=(r,e,t)=>r<<t|e>>>32-t,rotlSL=(r,e,t)=>e<<t|r>>>32-t,rotlBH=(r,e,t)=>e<<t-32|r>>>64-t,rotlBL=(r,e,t)=>r<<t-32|e>>>64-t;function add(r,e,t,n){const i=(e>>>0)+(n>>>0);return{h:r+t+(i/2**32|0)|0,l:i|0}}const add3L=(r,e,t)=>(r>>>0)+(e>>>0)+(t>>>0),add3H=(r,e,t,n)=>e+t+n+(r/2**32|0)|0,add4L=(r,e,t,n)=>(r>>>0)+(e>>>0)+(t>>>0)+(n>>>0),add4H=(r,e,t,n,i)=>e+t+n+i+(r/2**32|0)|0,add5L=(r,e,t,n,i)=>(r>>>0)+(e>>>0)+(t>>>0)+(n>>>0)+(i>>>0),add5H=(r,e,t,n,i,o)=>e+t+n+i+o+(r/2**32|0)|0,u64={fromBig,split,toBig,shrSH,shrSL,rotrSH,rotrSL,rotrBH,rotrBL,rotr32H,rotr32L,rotlSH,rotlSL,rotlBH,rotlBL,add,add3L,add3H,add4L,add4H,add5H,add5L},u64$1=u64,[SHA512_Kh,SHA512_Kl]=u64$1.split(["0x428a2f98d728ae22","0x7137449123ef65cd","0xb5c0fbcfec4d3b2f","0xe9b5dba58189dbbc","0x3956c25bf348b538","0x59f111f1b605d019","0x923f82a4af194f9b","0xab1c5ed5da6d8118","0xd807aa98a3030242","0x12835b0145706fbe","0x243185be4ee4b28c","0x550c7dc3d5ffb4e2","0x72be5d74f27b896f","0x80deb1fe3b1696b1","0x9bdc06a725c71235","0xc19bf174cf692694","0xe49b69c19ef14ad2","0xefbe4786384f25e3","0x0fc19dc68b8cd5b5","0x240ca1cc77ac9c65","0x2de92c6f592b0275","0x4a7484aa6ea6e483","0x5cb0a9dcbd41fbd4","0x76f988da831153b5","0x983e5152ee66dfab","0xa831c66d2db43210","0xb00327c898fb213f","0xbf597fc7beef0ee4","0xc6e00bf33da88fc2","0xd5a79147930aa725","0x06ca6351e003826f","0x142929670a0e6e70","0x27b70a8546d22ffc","0x2e1b21385c26c926","0x4d2c6dfc5ac42aed","0x53380d139d95b3df","0x650a73548baf63de","0x766a0abb3c77b2a8","0x81c2c92e47edaee6","0x92722c851482353b","0xa2bfe8a14cf10364","0xa81a664bbc423001","0xc24b8b70d0f89791","0xc76c51a30654be30","0xd192e819d6ef5218","0xd69906245565a910","0xf40e35855771202a","0x106aa07032bbd1b8","0x19a4c116b8d2d0c8","0x1e376c085141ab53","0x2748774cdf8eeb99","0x34b0bcb5e19b48a8","0x391c0cb3c5c95a63","0x4ed8aa4ae3418acb","0x5b9cca4f7763e373","0x682e6ff3d6b2b8a3","0x748f82ee5defb2fc","0x78a5636f43172f60","0x84c87814a1f0ab72","0x8cc702081a6439ec","0x90befffa23631e28","0xa4506cebde82bde9","0xbef9a3f7b2c67915","0xc67178f2e372532b","0xca273eceea26619c","0xd186b8c721c0c207","0xeada7dd6cde0eb1e","0xf57d4f7fee6ed178","0x06f067aa72176fba","0x0a637dc5a2c898a6","0x113f9804bef90dae","0x1b710b35131c471b","0x28db77f523047d84","0x32caab7b40c72493","0x3c9ebe0a15c9bebc","0x431d67c49c100d4c","0x4cc5d4becb3e42b6","0x597f299cfc657e2a","0x5fcb6fab3ad6faec","0x6c44198c4a475817"].map(r=>BigInt(r))),SHA512_W_H=new Uint32Array(80),SHA512_W_L=new Uint32Array(80);class SHA512 extends SHA2{constructor(){super(128,64,16,!1),this.Ah=1779033703,this.Al=-205731576,this.Bh=-1150833019,this.Bl=-2067093701,this.Ch=1013904242,this.Cl=-23791573,this.Dh=-1521486534,this.Dl=1595750129,this.Eh=1359893119,this.El=-1377402159,this.Fh=-1694144372,this.Fl=725511199,this.Gh=528734635,this.Gl=-79577749,this.Hh=1541459225,this.Hl=327033209}get(){const{Ah:e,Al:t,Bh:n,Bl:i,Ch:o,Cl:a,Dh:c,Dl:l,Eh:u,El:f,Fh:g,Fl:$,Gh:S,Gl:E,Hh:v,Hl:T}=this;return[e,t,n,i,o,a,c,l,u,f,g,$,S,E,v,T]}set(e,t,n,i,o,a,c,l,u,f,g,$,S,E,v,T){this.Ah=e|0,this.Al=t|0,this.Bh=n|0,this.Bl=i|0,this.Ch=o|0,this.Cl=a|0,this.Dh=c|0,this.Dl=l|0,this.Eh=u|0,this.El=f|0,this.Fh=g|0,this.Fl=$|0,this.Gh=S|0,this.Gl=E|0,this.Hh=v|0,this.Hl=T|0}process(e,t){for(let P=0;P<16;P++,t+=4)SHA512_W_H[P]=e.getUint32(t),SHA512_W_L[P]=e.getUint32(t+=4);for(let P=16;P<80;P++){const x=SHA512_W_H[P-15]|0,D=SHA512_W_L[P-15]|0,C=u64$1.rotrSH(x,D,1)^u64$1.rotrSH(x,D,8)^u64$1.shrSH(x,D,7),k=u64$1.rotrSL(x,D,1)^u64$1.rotrSL(x,D,8)^u64$1.shrSL(x,D,7),N=SHA512_W_H[P-2]|0,L=SHA512_W_L[P-2]|0,M=u64$1.rotrSH(N,L,19)^u64$1.rotrBH(N,L,61)^u64$1.shrSH(N,L,6),U=u64$1.rotrSL(N,L,19)^u64$1.rotrBL(N,L,61)^u64$1.shrSL(N,L,6),z=u64$1.add4L(k,U,SHA512_W_L[P-7],SHA512_W_L[P-16]),Y=u64$1.add4H(z,C,M,SHA512_W_H[P-7],SHA512_W_H[P-16]);SHA512_W_H[P]=Y|0,SHA512_W_L[P]=z|0}let{Ah:n,Al:i,Bh:o,Bl:a,Ch:c,Cl:l,Dh:u,Dl:f,Eh:g,El:$,Fh:S,Fl:E,Gh:v,Gl:T,Hh:I,Hl:A}=this;for(let P=0;P<80;P++){const x=u64$1.rotrSH(g,$,14)^u64$1.rotrSH(g,$,18)^u64$1.rotrBH(g,$,41),D=u64$1.rotrSL(g,$,14)^u64$1.rotrSL(g,$,18)^u64$1.rotrBL(g,$,41),C=g&S^~g&v,k=$&E^~$&T,N=u64$1.add5L(A,D,k,SHA512_Kl[P],SHA512_W_L[P]),L=u64$1.add5H(N,I,x,C,SHA512_Kh[P],SHA512_W_H[P]),M=N|0,U=u64$1.rotrSH(n,i,28)^u64$1.rotrBH(n,i,34)^u64$1.rotrBH(n,i,39),z=u64$1.rotrSL(n,i,28)^u64$1.rotrBL(n,i,34)^u64$1.rotrBL(n,i,39),Y=n&o^n&c^o&c,j=i&a^i&l^a&l;I=v|0,A=T|0,v=S|0,T=E|0,S=g|0,E=$|0,{h:g,l:$}=u64$1.add(u|0,f|0,L|0,M|0),u=c|0,f=l|0,c=o|0,l=a|0,o=n|0,a=i|0;const B=u64$1.add3L(M,z,j);n=u64$1.add3H(B,L,U,Y),i=B|0}({h:n,l:i}=u64$1.add(this.Ah|0,this.Al|0,n|0,i|0)),{h:o,l:a}=u64$1.add(this.Bh|0,this.Bl|0,o|0,a|0),{h:c,l}=u64$1.add(this.Ch|0,this.Cl|0,c|0,l|0),{h:u,l:f}=u64$1.add(this.Dh|0,this.Dl|0,u|0,f|0),{h:g,l:$}=u64$1.add(this.Eh|0,this.El|0,g|0,$|0),{h:S,l:E}=u64$1.add(this.Fh|0,this.Fl|0,S|0,E|0),{h:v,l:T}=u64$1.add(this.Gh|0,this.Gl|0,v|0,T|0),{h:I,l:A}=u64$1.add(this.Hh|0,this.Hl|0,I|0,A|0),this.set(n,i,o,a,c,l,u,f,g,$,S,E,v,T,I,A)}roundClean(){SHA512_W_H.fill(0),SHA512_W_L.fill(0)}destroy(){this.buffer.fill(0),this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)}}const sha512$1=wrapConstructor(()=>new SHA512);/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */const _0n$5=BigInt(0),_1n$7=BigInt(1),_2n$4=BigInt(2),u8a$1=r=>r instanceof Uint8Array,hexes=Array.from({length:256},(r,e)=>e.toString(16).padStart(2,"0"));function bytesToHex(r){if(!u8a$1(r))throw new Error("Uint8Array expected");let e="";for(let t=0;t<r.length;t++)e+=hexes[r[t]];return e}function numberToHexUnpadded(r){const e=r.toString(16);return e.length&1?`0${e}`:e}function hexToNumber(r){if(typeof r!="string")throw new Error("hex string expected, got "+typeof r);return BigInt(r===""?"0":`0x${r}`)}function hexToBytes(r){if(typeof r!="string")throw new Error("hex string expected, got "+typeof r);const e=r.length;if(e%2)throw new Error("padded hex string expected, got unpadded hex of length "+e);const t=new Uint8Array(e/2);for(let n=0;n<t.length;n++){const i=n*2,o=r.slice(i,i+2),a=Number.parseInt(o,16);if(Number.isNaN(a)||a<0)throw new Error("Invalid byte sequence");t[n]=a}return t}function bytesToNumberBE(r){return hexToNumber(bytesToHex(r))}function bytesToNumberLE(r){if(!u8a$1(r))throw new Error("Uint8Array expected");return hexToNumber(bytesToHex(Uint8Array.from(r).reverse()))}function numberToBytesBE(r,e){return hexToBytes(r.toString(16).padStart(e*2,"0"))}function numberToBytesLE(r,e){return numberToBytesBE(r,e).reverse()}function numberToVarBytesBE(r){return hexToBytes(numberToHexUnpadded(r))}function ensureBytes$1(r,e,t){let n;if(typeof e=="string")try{n=hexToBytes(e)}catch(o){throw new Error(`${r} must be valid hex string, got "${e}". Cause: ${o}`)}else if(u8a$1(e))n=Uint8Array.from(e);else throw new Error(`${r} must be hex string or Uint8Array`);const i=n.length;if(typeof t=="number"&&i!==t)throw new Error(`${r} expected ${t} bytes, got ${i}`);return n}function concatBytes(...r){const e=new Uint8Array(r.reduce((n,i)=>n+i.length,0));let t=0;return r.forEach(n=>{if(!u8a$1(n))throw new Error("Uint8Array expected");e.set(n,t),t+=n.length}),e}function equalBytes$1(r,e){if(r.length!==e.length)return!1;for(let t=0;t<r.length;t++)if(r[t]!==e[t])return!1;return!0}function utf8ToBytes$2(r){if(typeof r!="string")throw new Error(`utf8ToBytes expected string, got ${typeof r}`);return new Uint8Array(new TextEncoder().encode(r))}function bitLen(r){let e;for(e=0;r>_0n$5;r>>=_1n$7,e+=1);return e}function bitGet(r,e){return r>>BigInt(e)&_1n$7}const bitSet=(r,e,t)=>r|(t?_1n$7:_0n$5)<<BigInt(e),bitMask=r=>(_2n$4<<BigInt(r-1))-_1n$7,u8n=r=>new Uint8Array(r),u8fr=r=>Uint8Array.from(r);function createHmacDrbg(r,e,t){if(typeof r!="number"||r<2)throw new Error("hashLen must be a number");if(typeof e!="number"||e<2)throw new Error("qByteLen must be a number");if(typeof t!="function")throw new Error("hmacFn must be a function");let n=u8n(r),i=u8n(r),o=0;const a=()=>{n.fill(1),i.fill(0),o=0},c=(...g)=>t(i,n,...g),l=(g=u8n())=>{i=c(u8fr([0]),g),n=c(),g.length!==0&&(i=c(u8fr([1]),g),n=c())},u=()=>{if(o++>=1e3)throw new Error("drbg: tried 1000 values");let g=0;const $=[];for(;g<e;){n=c();const S=n.slice();$.push(S),g+=n.length}return concatBytes(...$)};return(g,$)=>{a(),l(g);let S;for(;!(S=$(u()));)l();return a(),S}}const validatorFns={bigint:r=>typeof r=="bigint",function:r=>typeof r=="function",boolean:r=>typeof r=="boolean",string:r=>typeof r=="string",stringOrUint8Array:r=>typeof r=="string"||r instanceof Uint8Array,isSafeInteger:r=>Number.isSafeInteger(r),array:r=>Array.isArray(r),field:(r,e)=>e.Fp.isValid(r),hash:r=>typeof r=="function"&&Number.isSafeInteger(r.outputLen)};function validateObject(r,e,t={}){const n=(i,o,a)=>{const c=validatorFns[o];if(typeof c!="function")throw new Error(`Invalid validator "${o}", expected function`);const l=r[i];if(!(a&&l===void 0)&&!c(l,r))throw new Error(`Invalid param ${String(i)}=${l} (${typeof l}), expected ${o}`)};for(const[i,o]of Object.entries(e))n(i,o,!1);for(const[i,o]of Object.entries(t))n(i,o,!0);return r}const ut=Object.freeze(Object.defineProperty({__proto__:null,bitGet,bitLen,bitMask,bitSet,bytesToHex,bytesToNumberBE,bytesToNumberLE,concatBytes,createHmacDrbg,ensureBytes:ensureBytes$1,equalBytes:equalBytes$1,hexToBytes,hexToNumber,numberToBytesBE,numberToBytesLE,numberToHexUnpadded,numberToVarBytesBE,utf8ToBytes:utf8ToBytes$2,validateObject},Symbol.toStringTag,{value:"Module"}));/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */const _0n$4=BigInt(0),_1n$6=BigInt(1),_2n$3=BigInt(2),_3n$1=BigInt(3),_4n=BigInt(4),_5n$1=BigInt(5),_8n$1=BigInt(8);BigInt(9);BigInt(16);function mod(r,e){const t=r%e;return t>=_0n$4?t:e+t}function pow(r,e,t){if(t<=_0n$4||e<_0n$4)throw new Error("Expected power/modulo > 0");if(t===_1n$6)return _0n$4;let n=_1n$6;for(;e>_0n$4;)e&_1n$6&&(n=n*r%t),r=r*r%t,e>>=_1n$6;return n}function pow2(r,e,t){let n=r;for(;e-- >_0n$4;)n*=n,n%=t;return n}function invert(r,e){if(r===_0n$4||e<=_0n$4)throw new Error(`invert: expected positive integers, got n=${r} mod=${e}`);let t=mod(r,e),n=e,i=_0n$4,o=_1n$6;for(;t!==_0n$4;){const c=n/t,l=n%t,u=i-o*c;n=t,t=l,i=o,o=u}if(n!==_1n$6)throw new Error("invert: does not exist");return mod(i,e)}function tonelliShanks(r){const e=(r-_1n$6)/_2n$3;let t,n,i;for(t=r-_1n$6,n=0;t%_2n$3===_0n$4;t/=_2n$3,n++);for(i=_2n$3;i<r&&pow(i,e,r)!==r-_1n$6;i++);if(n===1){const a=(r+_1n$6)/_4n;return function(l,u){const f=l.pow(u,a);if(!l.eql(l.sqr(f),u))throw new Error("Cannot find square root");return f}}const o=(t+_1n$6)/_2n$3;return function(c,l){if(c.pow(l,e)===c.neg(c.ONE))throw new Error("Cannot find square root");let u=n,f=c.pow(c.mul(c.ONE,i),t),g=c.pow(l,o),$=c.pow(l,t);for(;!c.eql($,c.ONE);){if(c.eql($,c.ZERO))return c.ZERO;let S=1;for(let v=c.sqr($);S<u&&!c.eql(v,c.ONE);S++)v=c.sqr(v);const E=c.pow(f,_1n$6<<BigInt(u-S-1));f=c.sqr(E),g=c.mul(g,E),$=c.mul($,f),u=S}return g}}function FpSqrt(r){if(r%_4n===_3n$1){const e=(r+_1n$6)/_4n;return function(n,i){const o=n.pow(i,e);if(!n.eql(n.sqr(o),i))throw new Error("Cannot find square root");return o}}if(r%_8n$1===_5n$1){const e=(r-_5n$1)/_8n$1;return function(n,i){const o=n.mul(i,_2n$3),a=n.pow(o,e),c=n.mul(i,a),l=n.mul(n.mul(c,_2n$3),a),u=n.mul(c,n.sub(l,n.ONE));if(!n.eql(n.sqr(u),i))throw new Error("Cannot find square root");return u}}return tonelliShanks(r)}const isNegativeLE=(r,e)=>(mod(r,e)&_1n$6)===_1n$6,FIELD_FIELDS=["create","isValid","is0","neg","inv","sqrt","sqr","eql","add","sub","mul","pow","div","addN","subN","mulN","sqrN"];function validateField(r){const e={ORDER:"bigint",MASK:"bigint",BYTES:"isSafeInteger",BITS:"isSafeInteger"},t=FIELD_FIELDS.reduce((n,i)=>(n[i]="function",n),e);return validateObject(r,t)}function FpPow(r,e,t){if(t<_0n$4)throw new Error("Expected power > 0");if(t===_0n$4)return r.ONE;if(t===_1n$6)return e;let n=r.ONE,i=e;for(;t>_0n$4;)t&_1n$6&&(n=r.mul(n,i)),i=r.sqr(i),t>>=_1n$6;return n}function FpInvertBatch(r,e){const t=new Array(e.length),n=e.reduce((o,a,c)=>r.is0(a)?o:(t[c]=o,r.mul(o,a)),r.ONE),i=r.inv(n);return e.reduceRight((o,a,c)=>r.is0(a)?o:(t[c]=r.mul(o,t[c]),r.mul(o,a)),i),t}function nLength(r,e){const t=e!==void 0?e:r.toString(2).length,n=Math.ceil(t/8);return{nBitLength:t,nByteLength:n}}function Field(r,e,t=!1,n={}){if(r<=_0n$4)throw new Error(`Expected Field ORDER > 0, got ${r}`);const{nBitLength:i,nByteLength:o}=nLength(r,e);if(o>2048)throw new Error("Field lengths over 2048 bytes are not supported");const a=FpSqrt(r),c=Object.freeze({ORDER:r,BITS:i,BYTES:o,MASK:bitMask(i),ZERO:_0n$4,ONE:_1n$6,create:l=>mod(l,r),isValid:l=>{if(typeof l!="bigint")throw new Error(`Invalid field element: expected bigint, got ${typeof l}`);return _0n$4<=l&&l<r},is0:l=>l===_0n$4,isOdd:l=>(l&_1n$6)===_1n$6,neg:l=>mod(-l,r),eql:(l,u)=>l===u,sqr:l=>mod(l*l,r),add:(l,u)=>mod(l+u,r),sub:(l,u)=>mod(l-u,r),mul:(l,u)=>mod(l*u,r),pow:(l,u)=>FpPow(c,l,u),div:(l,u)=>mod(l*invert(u,r),r),sqrN:l=>l*l,addN:(l,u)=>l+u,subN:(l,u)=>l-u,mulN:(l,u)=>l*u,inv:l=>invert(l,r),sqrt:n.sqrt||(l=>a(c,l)),invertBatch:l=>FpInvertBatch(c,l),cmov:(l,u,f)=>f?u:l,toBytes:l=>t?numberToBytesLE(l,o):numberToBytesBE(l,o),fromBytes:l=>{if(l.length!==o)throw new Error(`Fp.fromBytes: expected ${o}, got ${l.length}`);return t?bytesToNumberLE(l):bytesToNumberBE(l)}});return Object.freeze(c)}function FpSqrtEven(r,e){if(!r.isOdd)throw new Error("Field doesn't have isOdd");const t=r.sqrt(e);return r.isOdd(t)?r.neg(t):t}function getFieldBytesLength(r){if(typeof r!="bigint")throw new Error("field order must be bigint");const e=r.toString(2).length;return Math.ceil(e/8)}function getMinHashLength(r){const e=getFieldBytesLength(r);return e+Math.ceil(e/2)}function mapHashToField(r,e,t=!1){const n=r.length,i=getFieldBytesLength(e),o=getMinHashLength(e);if(n<16||n<o||n>1024)throw new Error(`expected ${o}-1024 bytes of input, got ${n}`);const a=t?bytesToNumberBE(r):bytesToNumberLE(r),c=mod(a,e-_1n$6)+_1n$6;return t?numberToBytesLE(c,i):numberToBytesBE(c,i)}/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */const _0n$3=BigInt(0),_1n$5=BigInt(1);function wNAF(r,e){const t=(i,o)=>{const a=o.negate();return i?a:o},n=i=>{const o=Math.ceil(e/i)+1,a=2**(i-1);return{windows:o,windowSize:a}};return{constTimeNegate:t,unsafeLadder(i,o){let a=r.ZERO,c=i;for(;o>_0n$3;)o&_1n$5&&(a=a.add(c)),c=c.double(),o>>=_1n$5;return a},precomputeWindow(i,o){const{windows:a,windowSize:c}=n(o),l=[];let u=i,f=u;for(let g=0;g<a;g++){f=u,l.push(f);for(let $=1;$<c;$++)f=f.add(u),l.push(f);u=f.double()}return l},wNAF(i,o,a){const{windows:c,windowSize:l}=n(i);let u=r.ZERO,f=r.BASE;const g=BigInt(2**i-1),$=2**i,S=BigInt(i);for(let E=0;E<c;E++){const v=E*l;let T=Number(a&g);a>>=S,T>l&&(T-=$,a+=_1n$5);const I=v,A=v+Math.abs(T)-1,P=E%2!==0,x=T<0;T===0?f=f.add(t(P,o[I])):u=u.add(t(x,o[A]))}return{p:u,f}},wNAFCached(i,o,a,c){const l=i._WINDOW_SIZE||1;let u=o.get(i);return u||(u=this.precomputeWindow(i,l),l!==1&&o.set(i,c(u))),this.wNAF(l,u,a)}}}function validateBasic(r){return validateField(r.Fp),validateObject(r,{n:"bigint",h:"bigint",Gx:"field",Gy:"field"},{nBitLength:"isSafeInteger",nByteLength:"isSafeInteger"}),Object.freeze({...nLength(r.n,r.nBitLength),...r,p:r.Fp.ORDER})}/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */const _0n$2=BigInt(0),_1n$4=BigInt(1),_2n$2=BigInt(2),_8n=BigInt(8),VERIFY_DEFAULT={zip215:!0};function validateOpts$2(r){const e=validateBasic(r);return validateObject(r,{hash:"function",a:"bigint",d:"bigint",randomBytes:"function"},{adjustScalarBytes:"function",domain:"function",uvRatio:"function",mapToCurve:"function"}),Object.freeze({...e})}function twistedEdwards(r){const e=validateOpts$2(r),{Fp:t,n,prehash:i,hash:o,randomBytes:a,nByteLength:c,h:l}=e,u=_2n$2<<BigInt(c*8)-_1n$4,f=t.create,g=e.uvRatio||((q,O)=>{try{return{isValid:!0,value:t.sqrt(q*t.inv(O))}}catch{return{isValid:!1,value:_0n$2}}}),$=e.adjustScalarBytes||(q=>q),S=e.domain||((q,O,Q)=>{if(O.length||Q)throw new Error("Contexts/pre-hash are not supported");return q}),E=q=>typeof q=="bigint"&&_0n$2<q,v=(q,O)=>E(q)&&E(O)&&q<O,T=q=>q===_0n$2||v(q,u);function I(q,O){if(v(q,O))return q;throw new Error(`Expected valid scalar < ${O}, got ${typeof q} ${q}`)}function A(q){return q===_0n$2?q:I(q,n)}const P=new Map;function x(q){if(!(q instanceof D))throw new Error("ExtendedPoint expected")}class D{constructor(O,Q,W,X){if(this.ex=O,this.ey=Q,this.ez=W,this.et=X,!T(O))throw new Error("x required");if(!T(Q))throw new Error("y required");if(!T(W))throw new Error("z required");if(!T(X))throw new Error("t required")}get x(){return this.toAffine().x}get y(){return this.toAffine().y}static fromAffine(O){if(O instanceof D)throw new Error("extended point not allowed");const{x:Q,y:W}=O||{};if(!T(Q)||!T(W))throw new Error("invalid affine point");return new D(Q,W,_1n$4,f(Q*W))}static normalizeZ(O){const Q=t.invertBatch(O.map(W=>W.ez));return O.map((W,X)=>W.toAffine(Q[X])).map(D.fromAffine)}_setWindowSize(O){this._WINDOW_SIZE=O,P.delete(this)}assertValidity(){const{a:O,d:Q}=e;if(this.is0())throw new Error("bad point: ZERO");const{ex:W,ey:X,ez:Z,et:J}=this,re=f(W*W),ee=f(X*X),te=f(Z*Z),ae=f(te*te),oe=f(re*O),fe=f(te*f(oe+ee)),pe=f(ae+f(Q*f(re*ee)));if(fe!==pe)throw new Error("bad point: equation left != right (1)");const de=f(W*X),me=f(Z*J);if(de!==me)throw new Error("bad point: equation left != right (2)")}equals(O){x(O);const{ex:Q,ey:W,ez:X}=this,{ex:Z,ey:J,ez:re}=O,ee=f(Q*re),te=f(Z*X),ae=f(W*re),oe=f(J*X);return ee===te&&ae===oe}is0(){return this.equals(D.ZERO)}negate(){return new D(f(-this.ex),this.ey,this.ez,f(-this.et))}double(){const{a:O}=e,{ex:Q,ey:W,ez:X}=this,Z=f(Q*Q),J=f(W*W),re=f(_2n$2*f(X*X)),ee=f(O*Z),te=Q+W,ae=f(f(te*te)-Z-J),oe=ee+J,fe=oe-re,pe=ee-J,de=f(ae*fe),me=f(oe*pe),Ae=f(ae*pe),Oe=f(fe*oe);return new D(de,me,Oe,Ae)}add(O){x(O);const{a:Q,d:W}=e,{ex:X,ey:Z,ez:J,et:re}=this,{ex:ee,ey:te,ez:ae,et:oe}=O;if(Q===BigInt(-1)){const kt=f((Z-X)*(te+ee)),Nt=f((Z+X)*(te-ee)),Tt=f(Nt-kt);if(Tt===_0n$2)return this.double();const Lt=f(J*_2n$2*oe),Bt=f(re*_2n$2*ae),Ot=Bt+Lt,Mt=Nt+kt,Kt=Bt-Lt,yr=f(Ot*Tt),gr=f(Mt*Kt),mr=f(Ot*Kt),$r=f(Tt*Mt);return new D(yr,gr,$r,mr)}const fe=f(X*ee),pe=f(Z*te),de=f(re*W*oe),me=f(J*ae),Ae=f((X+Z)*(ee+te)-fe-pe),Oe=me-de,Je=me+de,xt=f(pe-Q*fe),dr=f(Ae*Oe),hr=f(Je*xt),fr=f(Ae*xt),pr=f(Oe*Je);return new D(dr,hr,pr,fr)}subtract(O){return this.add(O.negate())}wNAF(O){return N.wNAFCached(this,P,O,D.normalizeZ)}multiply(O){const{p:Q,f:W}=this.wNAF(I(O,n));return D.normalizeZ([Q,W])[0]}multiplyUnsafe(O){let Q=A(O);return Q===_0n$2?k:this.equals(k)||Q===_1n$4?this:this.equals(C)?this.wNAF(Q).p:N.unsafeLadder(this,Q)}isSmallOrder(){return this.multiplyUnsafe(l).is0()}isTorsionFree(){return N.unsafeLadder(this,n).is0()}toAffine(O){const{ex:Q,ey:W,ez:X}=this,Z=this.is0();O==null&&(O=Z?_8n:t.inv(X));const J=f(Q*O),re=f(W*O),ee=f(X*O);if(Z)return{x:_0n$2,y:_1n$4};if(ee!==_1n$4)throw new Error("invZ was invalid");return{x:J,y:re}}clearCofactor(){const{h:O}=e;return O===_1n$4?this:this.multiplyUnsafe(O)}static fromHex(O,Q=!1){const{d:W,a:X}=e,Z=t.BYTES;O=ensureBytes$1("pointHex",O,Z);const J=O.slice(),re=O[Z-1];J[Z-1]=re&-129;const ee=bytesToNumberLE(J);ee===_0n$2||(Q?I(ee,u):I(ee,t.ORDER));const te=f(ee*ee),ae=f(te-_1n$4),oe=f(W*te-X);let{isValid:fe,value:pe}=g(ae,oe);if(!fe)throw new Error("Point.fromHex: invalid y coordinate");const de=(pe&_1n$4)===_1n$4,me=(re&128)!==0;if(!Q&&pe===_0n$2&&me)throw new Error("Point.fromHex: x=0 and x_0=1");return me!==de&&(pe=f(-pe)),D.fromAffine({x:pe,y:ee})}static fromPrivateKey(O){return U(O).point}toRawBytes(){const{x:O,y:Q}=this.toAffine(),W=numberToBytesLE(Q,t.BYTES);return W[W.length-1]|=O&_1n$4?128:0,W}toHex(){return bytesToHex(this.toRawBytes())}}D.BASE=new D(e.Gx,e.Gy,_1n$4,f(e.Gx*e.Gy)),D.ZERO=new D(_0n$2,_1n$4,_1n$4,_0n$2);const{BASE:C,ZERO:k}=D,N=wNAF(D,c*8);function L(q){return mod(q,n)}function M(q){return L(bytesToNumberLE(q))}function U(q){const O=c;q=ensureBytes$1("private key",q,O);const Q=ensureBytes$1("hashed private key",o(q),2*O),W=$(Q.slice(0,O)),X=Q.slice(O,2*O),Z=M(W),J=C.multiply(Z),re=J.toRawBytes();return{head:W,prefix:X,scalar:Z,point:J,pointBytes:re}}function z(q){return U(q).pointBytes}function Y(q=new Uint8Array,...O){const Q=concatBytes(...O);return M(o(S(Q,ensureBytes$1("context",q),!!i)))}function j(q,O,Q={}){q=ensureBytes$1("message",q),i&&(q=i(q));const{prefix:W,scalar:X,pointBytes:Z}=U(O),J=Y(Q.context,W,q),re=C.multiply(J).toRawBytes(),ee=Y(Q.context,re,Z,q),te=L(J+ee*X);A(te);const ae=concatBytes(re,numberToBytesLE(te,t.BYTES));return ensureBytes$1("result",ae,c*2)}const B=VERIFY_DEFAULT;function H(q,O,Q,W=B){const{context:X,zip215:Z}=W,J=t.BYTES;q=ensureBytes$1("signature",q,2*J),O=ensureBytes$1("message",O),i&&(O=i(O));const re=bytesToNumberLE(q.slice(J,2*J));let ee,te,ae;try{ee=D.fromHex(Q,Z),te=D.fromHex(q.slice(0,J),Z),ae=C.multiplyUnsafe(re)}catch{return!1}if(!Z&&ee.isSmallOrder())return!1;const oe=Y(X,te.toRawBytes(),ee.toRawBytes(),O);return te.add(ee.multiplyUnsafe(oe)).subtract(ae).clearCofactor().equals(D.ZERO)}return C._setWindowSize(8),{CURVE:e,getPublicKey:z,sign:j,verify:H,ExtendedPoint:D,utils:{getExtendedPublicKey:U,randomPrivateKey:()=>a(t.BYTES),precompute(q=8,O=D.BASE){return O._setWindowSize(q),O.multiply(BigInt(3)),O}}}}/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */const _0n$1=BigInt(0),_1n$3=BigInt(1);function validateOpts$1(r){return validateObject(r,{a:"bigint"},{montgomeryBits:"isSafeInteger",nByteLength:"isSafeInteger",adjustScalarBytes:"function",domain:"function",powPminus2:"function",Gu:"bigint"}),Object.freeze({...r})}function montgomery(r){const e=validateOpts$1(r),{P:t}=e,n=P=>mod(P,t),i=e.montgomeryBits,o=Math.ceil(i/8),a=e.nByteLength,c=e.adjustScalarBytes||(P=>P),l=e.powPminus2||(P=>pow(P,t-BigInt(2),t));function u(P,x,D){const C=n(P*(x-D));return x=n(x-C),D=n(D+C),[x,D]}function f(P){if(typeof P=="bigint"&&_0n$1<=P&&P<t)return P;throw new Error("Expected valid scalar 0 < scalar < CURVE.P")}const g=(e.a-BigInt(2))/BigInt(4);function $(P,x){const D=f(P),C=f(x),k=D;let N=_1n$3,L=_0n$1,M=D,U=_1n$3,z=_0n$1,Y;for(let B=BigInt(i-1);B>=_0n$1;B--){const H=C>>B&_1n$3;z^=H,Y=u(z,N,M),N=Y[0],M=Y[1],Y=u(z,L,U),L=Y[0],U=Y[1],z=H;const G=N+L,q=n(G*G),O=N-L,Q=n(O*O),W=q-Q,X=M+U,Z=M-U,J=n(Z*G),re=n(X*O),ee=J+re,te=J-re;M=n(ee*ee),U=n(k*n(te*te)),N=n(q*Q),L=n(W*(q+n(g*W)))}Y=u(z,N,M),N=Y[0],M=Y[1],Y=u(z,L,U),L=Y[0],U=Y[1];const j=l(L);return n(N*j)}function S(P){return numberToBytesLE(n(P),o)}function E(P){const x=ensureBytes$1("u coordinate",P,o);return a===o&&(x[a-1]&=127),bytesToNumberLE(x)}function v(P){const x=ensureBytes$1("scalar",P);if(x.length!==o&&x.length!==a)throw new Error(`Expected ${o} or ${a} bytes, got ${x.length}`);return bytesToNumberLE(c(x))}function T(P,x){const D=E(x),C=v(P),k=$(D,C);if(k===_0n$1)throw new Error("Invalid private or public key received");return S(k)}const I=S(e.Gu);function A(P){return T(P,I)}return{scalarMult:T,scalarMultBase:A,getSharedSecret:(P,x)=>T(P,x),getPublicKey:P=>A(P),utils:{randomPrivateKey:()=>e.randomBytes(e.nByteLength)},GuBytes:I}}/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */const ED25519_P=BigInt("57896044618658097711785492504343953926634992332820282019728792003956564819949"),ED25519_SQRT_M1=BigInt("19681161376707505956807079304988542015446066515923890162744021073123829784752");BigInt(0);const _1n$2=BigInt(1),_2n$1=BigInt(2),_5n=BigInt(5),_10n=BigInt(10),_20n=BigInt(20),_40n=BigInt(40),_80n=BigInt(80);function ed25519_pow_2_252_3(r){const e=ED25519_P,n=r*r%e*r%e,i=pow2(n,_2n$1,e)*n%e,o=pow2(i,_1n$2,e)*r%e,a=pow2(o,_5n,e)*o%e,c=pow2(a,_10n,e)*a%e,l=pow2(c,_20n,e)*c%e,u=pow2(l,_40n,e)*l%e,f=pow2(u,_80n,e)*u%e,g=pow2(f,_80n,e)*u%e,$=pow2(g,_10n,e)*a%e;return{pow_p_5_8:pow2($,_2n$1,e)*r%e,b2:n}}function adjustScalarBytes(r){return r[0]&=248,r[31]&=127,r[31]|=64,r}function uvRatio(r,e){const t=ED25519_P,n=mod(e*e*e,t),i=mod(n*n*e,t),o=ed25519_pow_2_252_3(r*i).pow_p_5_8;let a=mod(r*n*o,t);const c=mod(e*a*a,t),l=a,u=mod(a*ED25519_SQRT_M1,t),f=c===r,g=c===mod(-r,t),$=c===mod(-r*ED25519_SQRT_M1,t);return f&&(a=l),(g||$)&&(a=u),isNegativeLE(a,t)&&(a=mod(-a,t)),{isValid:f||g,value:a}}const Fp$1=Field(ED25519_P,void 0,!0),ed25519Defaults={a:BigInt(-1),d:BigInt("37095705934669439343138083508754565189542113879843219016388785533085940283555"),Fp:Fp$1,n:BigInt("7237005577332262213973186563042994240857116359379907606001950938285454250989"),h:BigInt(8),Gx:BigInt("15112221349535400772501151409588531511454012693041857206046113283949847762202"),Gy:BigInt("46316835694926478169428394003475163141307993866256225615783033603165251855960"),hash:sha512$1,randomBytes:randomBytes$a,adjustScalarBytes,uvRatio},ed25519=twistedEdwards(ed25519Defaults);function ed25519_domain(r,e,t){if(e.length>255)throw new Error("Context is too big");return concatBytes$1(utf8ToBytes$3("SigEd25519 no Ed25519 collisions"),new Uint8Array([t?1:0,e.length]),e,r)}({...ed25519Defaults});({...ed25519Defaults});const x25519=montgomery({P:ED25519_P,a:BigInt(486662),montgomeryBits:255,nByteLength:32,Gu:BigInt(9),powPminus2:r=>{const e=ED25519_P,{pow_p_5_8:t,b2:n}=ed25519_pow_2_252_3(r);return mod(pow2(t,BigInt(3),e)*n,e)},adjustScalarBytes,randomBytes:randomBytes$a}),ELL2_C1=(Fp$1.ORDER+BigInt(3))/BigInt(8);Fp$1.pow(_2n$1,ELL2_C1);Fp$1.sqrt(Fp$1.neg(Fp$1.ONE));(Fp$1.ORDER-BigInt(5))/BigInt(8);BigInt(486662);FpSqrtEven(Fp$1,Fp$1.neg(BigInt(486664)));BigInt("25063068953384623474111414158702152701244531502492656460079210482610430750235");BigInt("54469307008909316920995813868745141605393597292927456921205312896311721017578");BigInt("1159843021668779879193775521855586647937357759715417654439879720876111806838");BigInt("40440834346308536858101042469323190826248399146238708352240133220865137265952");BigInt("0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");const PUBLIC_KEY_BYTE_LENGTH$8=32,PRIVATE_KEY_BYTE_LENGTH$8=64,KEYS_BYTE_LENGTH$8=32;async function generateKey$q(){const r=ed25519.utils.randomPrivateKey(),e=ed25519.getPublicKey(r);return{privateKey:concatKeys$8(r,e),publicKey:e}}async function generateKeyFromSeed$8(r){if(r.length!==KEYS_BYTE_LENGTH$8)throw new TypeError('"seed" must be 32 bytes in length.');if(!(r instanceof Uint8Array))throw new TypeError('"seed" must be a node.js Buffer, or Uint8Array.');const e=r,t=ed25519.getPublicKey(e);return{privateKey:concatKeys$8(e,t),publicKey:t}}async function hashAndSign$q(r,e){const t=r.subarray(0,KEYS_BYTE_LENGTH$8);return ed25519.sign(e,t)}async function hashAndVerify$q(r,e,t){return ed25519.verify(e,t,r)}function concatKeys$8(r,e){const t=new Uint8Array(PRIVATE_KEY_BYTE_LENGTH$8);for(let n=0;n<KEYS_BYTE_LENGTH$8;n++)t[n]=r[n],t[KEYS_BYTE_LENGTH$8+n]=e[n];return t}const webcrypto$8={get(r=globalThis){const e=r.crypto;if(e==null||e.subtle==null)throw Object.assign(new Error("Missing Web Crypto API. The most likely cause of this error is that this page is being accessed from an insecure context (i.e. not HTTPS). For more information and possible resolutions see https://github.com/libp2p/js-libp2p-crypto/blob/master/README.md#web-crypto-api"),{code:"ERR_MISSING_WEB_CRYPTO"});return e}},derivedEmptyPasswordKey$8={alg:"A128GCM",ext:!0,k:"scm9jmO_4BJAgdwWGVulLg",key_ops:["encrypt","decrypt"],kty:"oct"};function create$9(r){const e=r?.algorithm??"AES-GCM";let t=r?.keyLength??16;const n=r?.nonceLength??12,i=r?.digest??"SHA-256",o=r?.saltLength??16,a=r?.iterations??32767,c=webcrypto$8.get();t*=8;async function l(g,$){const S=c.getRandomValues(new Uint8Array(o)),E=c.getRandomValues(new Uint8Array(n)),v={name:e,iv:E};typeof $=="string"&&($=fromString$b($));let T;if($.length===0){T=await c.subtle.importKey("jwk",derivedEmptyPasswordKey$8,{name:"AES-GCM"},!0,["encrypt"]);try{const A={name:"PBKDF2",salt:S,iterations:a,hash:{name:i}},P=await c.subtle.importKey("raw",$,{name:"PBKDF2"},!1,["deriveKey"]);T=await c.subtle.deriveKey(A,P,{name:e,length:t},!0,["encrypt"])}catch{T=await c.subtle.importKey("jwk",derivedEmptyPasswordKey$8,{name:"AES-GCM"},!0,["encrypt"])}}else{const A={name:"PBKDF2",salt:S,iterations:a,hash:{name:i}},P=await c.subtle.importKey("raw",$,{name:"PBKDF2"},!1,["deriveKey"]);T=await c.subtle.deriveKey(A,P,{name:e,length:t},!0,["encrypt"])}const I=await c.subtle.encrypt(v,T,g);return concat$6([S,v.iv,new Uint8Array(I)])}async function u(g,$){const S=g.subarray(0,o),E=g.subarray(o,o+n),v=g.subarray(o+n),T={name:e,iv:E};typeof $=="string"&&($=fromString$b($));let I;if($.length===0)try{const P={name:"PBKDF2",salt:S,iterations:a,hash:{name:i}},x=await c.subtle.importKey("raw",$,{name:"PBKDF2"},!1,["deriveKey"]);I=await c.subtle.deriveKey(P,x,{name:e,length:t},!0,["decrypt"])}catch{I=await c.subtle.importKey("jwk",derivedEmptyPasswordKey$8,{name:"AES-GCM"},!0,["decrypt"])}else{const P={name:"PBKDF2",salt:S,iterations:a,hash:{name:i}},x=await c.subtle.importKey("raw",$,{name:"PBKDF2"},!1,["deriveKey"]);I=await c.subtle.deriveKey(P,x,{name:e,length:t},!0,["decrypt"])}const A=await c.subtle.decrypt(T,I,v);return new Uint8Array(A)}return{encrypt:l,decrypt:u}}async function exporter$9(r,e){const n=await create$9().encrypt(r,e);return base64$6.encode(n)}var KeyType$a;(function(r){r.RSA="RSA",r.Ed25519="Ed25519",r.Secp256k1="Secp256k1"})(KeyType$a||(KeyType$a={}));var __KeyTypeValues$a;(function(r){r[r.RSA=0]="RSA",r[r.Ed25519=1]="Ed25519",r[r.Secp256k1=2]="Secp256k1"})(__KeyTypeValues$a||(__KeyTypeValues$a={}));(function(r){r.codec=()=>enumeration(__KeyTypeValues$a)})(KeyType$a||(KeyType$a={}));var PublicKey$a;(function(r){let e;r.codec=()=>(e==null&&(e=message((t,n,i={})=>{i.lengthDelimited!==!1&&n.fork(),t.Type!=null&&(n.uint32(8),KeyType$a.codec().encode(t.Type,n)),t.Data!=null&&(n.uint32(18),n.bytes(t.Data)),i.lengthDelimited!==!1&&n.ldelim()},(t,n)=>{const i={},o=n==null?t.len:t.pos+n;for(;t.pos<o;){const a=t.uint32();switch(a>>>3){case 1:i.Type=KeyType$a.codec().decode(t);break;case 2:i.Data=t.bytes();break;default:t.skipType(a&7);break}}return i})),e),r.encode=t=>encodeMessage(t,r.codec()),r.decode=t=>decodeMessage$1(t,r.codec())})(PublicKey$a||(PublicKey$a={}));var PrivateKey$a;(function(r){let e;r.codec=()=>(e==null&&(e=message((t,n,i={})=>{i.lengthDelimited!==!1&&n.fork(),t.Type!=null&&(n.uint32(8),KeyType$a.codec().encode(t.Type,n)),t.Data!=null&&(n.uint32(18),n.bytes(t.Data)),i.lengthDelimited!==!1&&n.ldelim()},(t,n)=>{const i={},o=n==null?t.len:t.pos+n;for(;t.pos<o;){const a=t.uint32();switch(a>>>3){case 1:i.Type=KeyType$a.codec().decode(t);break;case 2:i.Data=t.bytes();break;default:t.skipType(a&7);break}}return i})),e),r.encode=t=>encodeMessage(t,r.codec()),r.decode=t=>decodeMessage$1(t,r.codec())})(PrivateKey$a||(PrivateKey$a={}));let Ed25519PublicKey$8=class{constructor(e){_(this,"_key");this._key=ensureKey$8(e,PUBLIC_KEY_BYTE_LENGTH$8)}async verify(e,t){return hashAndVerify$q(this._key,t,e)}marshal(){return this._key}get bytes(){return PublicKey$a.encode({Type:KeyType$a.Ed25519,Data:this.marshal()}).subarray()}equals(e){return equals$4(this.bytes,e.bytes)}async hash(){const{bytes:e}=await sha256$2.digest(this.bytes);return e}},Ed25519PrivateKey$8=class{constructor(e,t){_(this,"_key");_(this,"_publicKey");this._key=ensureKey$8(e,PRIVATE_KEY_BYTE_LENGTH$8),this._publicKey=ensureKey$8(t,PUBLIC_KEY_BYTE_LENGTH$8)}async sign(e){return hashAndSign$q(this._key,e)}get public(){return new Ed25519PublicKey$8(this._publicKey)}marshal(){return this._key}get bytes(){return PrivateKey$a.encode({Type:KeyType$a.Ed25519,Data:this.marshal()}).subarray()}equals(e){return equals$4(this.bytes,e.bytes)}async hash(){const{bytes:e}=await sha256$2.digest(this.bytes);return e}async id(){const e=identity$3.digest(this.public.bytes);return base58btc$4.encode(e.bytes).substring(1)}async export(e,t="libp2p-key"){if(t==="libp2p-key")return exporter$9(this.bytes,e);throw new CodeError$e(`export format '${t}' is not supported`,"ERR_INVALID_EXPORT_FORMAT")}};function unmarshalEd25519PrivateKey$8(r){if(r.length>PRIVATE_KEY_BYTE_LENGTH$8){r=ensureKey$8(r,PRIVATE_KEY_BYTE_LENGTH$8+PUBLIC_KEY_BYTE_LENGTH$8);const n=r.subarray(0,PRIVATE_KEY_BYTE_LENGTH$8),i=r.subarray(PRIVATE_KEY_BYTE_LENGTH$8,r.length);return new Ed25519PrivateKey$8(n,i)}r=ensureKey$8(r,PRIVATE_KEY_BYTE_LENGTH$8);const e=r.subarray(0,PRIVATE_KEY_BYTE_LENGTH$8),t=r.subarray(PUBLIC_KEY_BYTE_LENGTH$8);return new Ed25519PrivateKey$8(e,t)}function unmarshalEd25519PublicKey$8(r){return r=ensureKey$8(r,PUBLIC_KEY_BYTE_LENGTH$8),new Ed25519PublicKey$8(r)}async function generateKeyPair$t(){const{privateKey:r,publicKey:e}=await generateKey$q();return new Ed25519PrivateKey$8(r,e)}async function generateKeyPairFromSeed$8(r){const{privateKey:e,publicKey:t}=await generateKeyFromSeed$8(r);return new Ed25519PrivateKey$8(e,t)}function ensureKey$8(r,e){if(r=Uint8Array.from(r??[]),r.length!==e)throw new CodeError$e(`Key must be a Uint8Array of length ${e}, got ${r.length}`,"ERR_INVALID_KEY_TYPE");return r}const Ed25519$8=Object.freeze(Object.defineProperty({__proto__:null,Ed25519PrivateKey:Ed25519PrivateKey$8,Ed25519PublicKey:Ed25519PublicKey$8,generateKeyPair:generateKeyPair$t,generateKeyPairFromSeed:generateKeyPairFromSeed$8,unmarshalEd25519PrivateKey:unmarshalEd25519PrivateKey$8,unmarshalEd25519PublicKey:unmarshalEd25519PublicKey$8},Symbol.toStringTag,{value:"Module"}));function bigIntegerToUintBase64url$8(r,e){let t=Uint8Array.from(r.abs().toByteArray());if(t=t[0]===0?t.subarray(1):t,e!=null){if(t.length>e)throw new Error("byte array longer than desired length");t=concat$6([new Uint8Array(e-t.length),t])}return toString$b(t,"base64url")}function base64urlToBigInteger$8(r){const e=base64urlToBuffer$8(r);return new forge$n.jsbn.BigInteger(toString$b(e,"base16"),16)}function base64urlToBuffer$8(r,e){let t=fromString$b(r,"base64urlpad");if(e!=null){if(t.length>e)throw new Error("byte array longer than desired length");t=concat$6([new Uint8Array(e-t.length),t])}return t}const bits$a={"P-256":256,"P-384":384,"P-521":521},curveTypes$a=Object.keys(bits$a);curveTypes$a.join(" / ");var forge=forge$m,sha512=forge.sha512=forge.sha512||{};forge.md.sha512=forge.md.algorithms.sha512=sha512;var sha384=forge.sha384=forge.sha512.sha384=forge.sha512.sha384||{};sha384.create=function(){return sha512.create("SHA-384")};forge.md.sha384=forge.md.algorithms.sha384=sha384;forge.sha512.sha256=forge.sha512.sha256||{create:function(){return sha512.create("SHA-512/256")}};forge.md["sha512/256"]=forge.md.algorithms["sha512/256"]=forge.sha512.sha256;forge.sha512.sha224=forge.sha512.sha224||{create:function(){return sha512.create("SHA-512/224")}};forge.md["sha512/224"]=forge.md.algorithms["sha512/224"]=forge.sha512.sha224;sha512.create=function(r){if(_initialized||_init(),typeof r>"u"&&(r="SHA-512"),!(r in _states))throw new Error("Invalid SHA-512 algorithm: "+r);for(var e=_states[r],t=null,n=forge.util.createBuffer(),i=new Array(80),o=0;o<80;++o)i[o]=new Array(2);var a=64;switch(r){case"SHA-384":a=48;break;case"SHA-512/256":a=32;break;case"SHA-512/224":a=28;break}var c={algorithm:r.replace("-","").toLowerCase(),blockLength:128,digestLength:a,messageLength:0,fullMessageLength:null,messageLengthSize:16};return c.start=function(){c.messageLength=0,c.fullMessageLength=c.messageLength128=[];for(var l=c.messageLengthSize/4,u=0;u<l;++u)c.fullMessageLength.push(0);n=forge.util.createBuffer(),t=new Array(e.length);for(var u=0;u<e.length;++u)t[u]=e[u].slice(0);return c},c.start(),c.update=function(l,u){u==="utf8"&&(l=forge.util.encodeUtf8(l));var f=l.length;c.messageLength+=f,f=[f/4294967296>>>0,f>>>0];for(var g=c.fullMessageLength.length-1;g>=0;--g)c.fullMessageLength[g]+=f[1],f[1]=f[0]+(c.fullMessageLength[g]/4294967296>>>0),c.fullMessageLength[g]=c.fullMessageLength[g]>>>0,f[0]=f[1]/4294967296>>>0;return n.putBytes(l),_update(t,i,n),(n.read>2048||n.length()===0)&&n.compact(),c},c.digest=function(){var l=forge.util.createBuffer();l.putBytes(n.bytes());var u=c.fullMessageLength[c.fullMessageLength.length-1]+c.messageLengthSize,f=u&c.blockLength-1;l.putBytes(_padding.substr(0,c.blockLength-f));for(var g,$,S=c.fullMessageLength[0]*8,E=0;E<c.fullMessageLength.length-1;++E)g=c.fullMessageLength[E+1]*8,$=g/4294967296>>>0,S+=$,l.putInt32(S>>>0),S=g>>>0;l.putInt32(S);for(var v=new Array(t.length),E=0;E<t.length;++E)v[E]=t[E].slice(0);_update(v,i,l);var T=forge.util.createBuffer(),I;r==="SHA-512"?I=v.length:r==="SHA-384"?I=v.length-2:I=v.length-4;for(var E=0;E<I;++E)T.putInt32(v[E][0]),(E!==I-1||r!=="SHA-512/224")&&T.putInt32(v[E][1]);return T},c};var _padding=null,_initialized=!1,_k=null,_states=null;function _init(){_padding="",_padding+=forge.util.fillString("\0",128),_k=[[1116352408,3609767458],[1899447441,602891725],[3049323471,3964484399],[3921009573,2173295548],[961987163,4081628472],[1508970993,3053834265],[2453635748,2937671579],[2870763221,3664609560],[3624381080,2734883394],[310598401,1164996542],[607225278,1323610764],[1426881987,3590304994],[1925078388,4068182383],[2162078206,991336113],[2614888103,633803317],[3248222580,3479774868],[3835390401,2666613458],[4022224774,944711139],[264347078,2341262773],[604807628,2007800933],[770255983,1495990901],[1249150122,1856431235],[1555081692,3175218132],[1996064986,2198950837],[2554220882,3999719339],[2821834349,766784016],[2952996808,2566594879],[3210313671,3203337956],[3336571891,1034457026],[3584528711,2466948901],[113926993,3758326383],[338241895,168717936],[666307205,1188179964],[773529912,1546045734],[1294757372,1522805485],[1396182291,2643833823],[1695183700,2343527390],[1986661051,1014477480],[2177026350,1206759142],[2456956037,344077627],[2730485921,1290863460],[2820302411,3158454273],[3259730800,3505952657],[3345764771,106217008],[3516065817,3606008344],[3600352804,1432725776],[4094571909,1467031594],[275423344,851169720],[430227734,3100823752],[506948616,1363258195],[659060556,3750685593],[883997877,3785050280],[958139571,3318307427],[1322822218,3812723403],[1537002063,2003034995],[1747873779,3602036899],[1955562222,1575990012],[2024104815,1125592928],[2227730452,2716904306],[2361852424,442776044],[2428436474,593698344],[2756734187,3733110249],[3204031479,2999351573],[3329325298,3815920427],[3391569614,3928383900],[3515267271,566280711],[3940187606,3454069534],[4118630271,4000239992],[116418474,1914138554],[174292421,2731055270],[289380356,3203993006],[460393269,320620315],[685471733,587496836],[852142971,1086792851],[1017036298,365543100],[1126000580,2618297676],[1288033470,3409855158],[1501505948,4234509866],[1607167915,987167468],[1816402316,1246189591]],_states={},_states["SHA-512"]=[[1779033703,4089235720],[3144134277,2227873595],[1013904242,4271175723],[2773480762,1595750129],[1359893119,2917565137],[2600822924,725511199],[528734635,4215389547],[1541459225,327033209]],_states["SHA-384"]=[[3418070365,3238371032],[1654270250,914150663],[2438529370,812702999],[355462360,4144912697],[1731405415,4290775857],[2394180231,1750603025],[3675008525,1694076839],[1203062813,3204075428]],_states["SHA-512/256"]=[[573645204,4230739756],[2673172387,3360449730],[596883563,1867755857],[2520282905,1497426621],[2519219938,2827943907],[3193839141,1401305490],[721525244,746961066],[246885852,2177182882]],_states["SHA-512/224"]=[[2352822216,424955298],[1944164710,2312950998],[502970286,855612546],[1738396948,1479516111],[258812777,2077511080],[2011393907,79989058],[1067287976,1780299464],[286451373,2446758561]],_initialized=!0}function _update(r,e,t){for(var n,i,o,a,c,l,u,f,g,$,S,E,v,T,I,A,P,x,D,C,k,N,L,M,U,z,Y,j,B,H,G,q,O,Q,W,X=t.length();X>=128;){for(B=0;B<16;++B)e[B][0]=t.getInt32()>>>0,e[B][1]=t.getInt32()>>>0;for(;B<80;++B)q=e[B-2],H=q[0],G=q[1],n=((H>>>19|G<<13)^(G>>>29|H<<3)^H>>>6)>>>0,i=((H<<13|G>>>19)^(G<<3|H>>>29)^(H<<26|G>>>6))>>>0,Q=e[B-15],H=Q[0],G=Q[1],o=((H>>>1|G<<31)^(H>>>8|G<<24)^H>>>7)>>>0,a=((H<<31|G>>>1)^(H<<24|G>>>8)^(H<<25|G>>>7))>>>0,O=e[B-7],W=e[B-16],G=i+O[1]+a+W[1],e[B][0]=n+O[0]+o+W[0]+(G/4294967296>>>0)>>>0,e[B][1]=G>>>0;for(v=r[0][0],T=r[0][1],I=r[1][0],A=r[1][1],P=r[2][0],x=r[2][1],D=r[3][0],C=r[3][1],k=r[4][0],N=r[4][1],L=r[5][0],M=r[5][1],U=r[6][0],z=r[6][1],Y=r[7][0],j=r[7][1],B=0;B<80;++B)u=((k>>>14|N<<18)^(k>>>18|N<<14)^(N>>>9|k<<23))>>>0,f=((k<<18|N>>>14)^(k<<14|N>>>18)^(N<<23|k>>>9))>>>0,g=(U^k&(L^U))>>>0,$=(z^N&(M^z))>>>0,c=((v>>>28|T<<4)^(T>>>2|v<<30)^(T>>>7|v<<25))>>>0,l=((v<<4|T>>>28)^(T<<30|v>>>2)^(T<<25|v>>>7))>>>0,S=(v&I|P&(v^I))>>>0,E=(T&A|x&(T^A))>>>0,G=j+f+$+_k[B][1]+e[B][1],n=Y+u+g+_k[B][0]+e[B][0]+(G/4294967296>>>0)>>>0,i=G>>>0,G=l+E,o=c+S+(G/4294967296>>>0)>>>0,a=G>>>0,Y=U,j=z,U=L,z=M,L=k,M=N,G=C+i,k=D+n+(G/4294967296>>>0)>>>0,N=G>>>0,D=P,C=x,P=I,x=A,I=v,A=T,G=i+a,v=n+o+(G/4294967296>>>0)>>>0,T=G>>>0;G=r[0][1]+T,r[0][0]=r[0][0]+v+(G/4294967296>>>0)>>>0,r[0][1]=G>>>0,G=r[1][1]+A,r[1][0]=r[1][0]+I+(G/4294967296>>>0)>>>0,r[1][1]=G>>>0,G=r[2][1]+x,r[2][0]=r[2][0]+P+(G/4294967296>>>0)>>>0,r[2][1]=G>>>0,G=r[3][1]+C,r[3][0]=r[3][0]+D+(G/4294967296>>>0)>>>0,r[3][1]=G>>>0,G=r[4][1]+N,r[4][0]=r[4][0]+k+(G/4294967296>>>0)>>>0,r[4][1]=G>>>0,G=r[5][1]+M,r[5][0]=r[5][0]+L+(G/4294967296>>>0)>>>0,r[5][1]=G>>>0,G=r[6][1]+z,r[6][0]=r[6][0]+U+(G/4294967296>>>0)>>>0,r[6][1]=G>>>0,G=r[7][1]+j,r[7][0]=r[7][0]+Y+(G/4294967296>>>0)>>>0,r[7][1]=G>>>0,X-=128}}function randomBytes$9(r){if(isNaN(r)||r<=0)throw new CodeError$e("random bytes length must be a Number bigger than 0","ERR_INVALID_LENGTH");return randomBytes$a(r)}function convert$a(r,e){return e.map(t=>base64urlToBigInteger$8(r[t]))}function jwk2priv$8(r){return forge$n.pki.setRsaPrivateKey(...convert$a(r,["n","e","d","p","q","dp","dq","qi"]))}function jwk2pub$8(r){return forge$n.pki.setRsaPublicKey(...convert$a(r,["n","e"]))}function pkcs1ToJwk$8(r){const e=forge$n.asn1.fromDer(toString$b(r,"ascii")),t=forge$n.pki.privateKeyFromAsn1(e);return{kty:"RSA",n:bigIntegerToUintBase64url$8(t.n),e:bigIntegerToUintBase64url$8(t.e),d:bigIntegerToUintBase64url$8(t.d),p:bigIntegerToUintBase64url$8(t.p),q:bigIntegerToUintBase64url$8(t.q),dp:bigIntegerToUintBase64url$8(t.dP),dq:bigIntegerToUintBase64url$8(t.dQ),qi:bigIntegerToUintBase64url$8(t.qInv),alg:"RS256"}}function jwkToPkcs1$8(r){if(r.n==null||r.e==null||r.d==null||r.p==null||r.q==null||r.dp==null||r.dq==null||r.qi==null)throw new CodeError$e("JWK was missing components","ERR_INVALID_PARAMETERS");const e=forge$n.pki.privateKeyToAsn1({n:base64urlToBigInteger$8(r.n),e:base64urlToBigInteger$8(r.e),d:base64urlToBigInteger$8(r.d),p:base64urlToBigInteger$8(r.p),q:base64urlToBigInteger$8(r.q),dP:base64urlToBigInteger$8(r.dp),dQ:base64urlToBigInteger$8(r.dq),qInv:base64urlToBigInteger$8(r.qi)});return fromString$b(forge$n.asn1.toDer(e).getBytes(),"ascii")}function pkixToJwk$8(r){const e=forge$n.asn1.fromDer(toString$b(r,"ascii")),t=forge$n.pki.publicKeyFromAsn1(e);return{kty:"RSA",n:bigIntegerToUintBase64url$8(t.n),e:bigIntegerToUintBase64url$8(t.e)}}function jwkToPkix$8(r){if(r.n==null||r.e==null)throw new CodeError$e("JWK was missing components","ERR_INVALID_PARAMETERS");const e=forge$n.pki.publicKeyToAsn1({n:base64urlToBigInteger$8(r.n),e:base64urlToBigInteger$8(r.e)});return fromString$b(forge$n.asn1.toDer(e).getBytes(),"ascii")}async function generateKey$p(r){const e=await webcrypto$8.get().subtle.generateKey({name:"RSASSA-PKCS1-v1_5",modulusLength:r,publicExponent:new Uint8Array([1,0,1]),hash:{name:"SHA-256"}},!0,["sign","verify"]),t=await exportKey$8(e);return{privateKey:t[0],publicKey:t[1]}}async function unmarshalPrivateKey$e(r){const t=[await webcrypto$8.get().subtle.importKey("jwk",r,{name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-256"}},!0,["sign"]),await derivePublicFromPrivate$8(r)],n=await exportKey$8({privateKey:t[0],publicKey:t[1]});return{privateKey:n[0],publicKey:n[1]}}async function hashAndSign$p(r,e){const t=await webcrypto$8.get().subtle.importKey("jwk",r,{name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-256"}},!1,["sign"]),n=await webcrypto$8.get().subtle.sign({name:"RSASSA-PKCS1-v1_5"},t,Uint8Array.from(e));return new Uint8Array(n,0,n.byteLength)}async function hashAndVerify$p(r,e,t){const n=await webcrypto$8.get().subtle.importKey("jwk",r,{name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-256"}},!1,["verify"]);return webcrypto$8.get().subtle.verify({name:"RSASSA-PKCS1-v1_5"},n,e,t)}async function exportKey$8(r){if(r.privateKey==null||r.publicKey==null)throw new CodeError$e("Private and public key are required","ERR_INVALID_PARAMETERS");return Promise.all([webcrypto$8.get().subtle.exportKey("jwk",r.privateKey),webcrypto$8.get().subtle.exportKey("jwk",r.publicKey)])}async function derivePublicFromPrivate$8(r){return webcrypto$8.get().subtle.importKey("jwk",{kty:r.kty,n:r.n,e:r.e},{name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-256"}},!0,["verify"])}function convertKey$8(r,e,t,n){const i=e?jwk2pub$8(r):jwk2priv$8(r),o=toString$b(Uint8Array.from(t),"ascii"),a=n(o,i);return fromString$b(a,"ascii")}function encrypt$8(r,e){return convertKey$8(r,!0,e,(t,n)=>n.encrypt(t))}function decrypt$8(r,e){return convertKey$8(r,!1,e,(t,n)=>n.decrypt(t))}function keySize$8(r){if(r.kty!=="RSA")throw new CodeError$e("invalid key type","ERR_INVALID_KEY_TYPE");if(r.n==null)throw new CodeError$e("invalid key modulus","ERR_INVALID_KEY_MODULUS");return fromString$b(r.n,"base64url").length*8}const MAX_KEY_SIZE$8=8192;let RsaPublicKey$8=class{constructor(e){_(this,"_key");this._key=e}async verify(e,t){return hashAndVerify$p(this._key,t,e)}marshal(){return jwkToPkix$8(this._key)}get bytes(){return PublicKey$a.encode({Type:KeyType$a.RSA,Data:this.marshal()}).subarray()}encrypt(e){return encrypt$8(this._key,e)}equals(e){return equals$4(this.bytes,e.bytes)}async hash(){const{bytes:e}=await sha256$2.digest(this.bytes);return e}},RsaPrivateKey$8=class{constructor(e,t){_(this,"_key");_(this,"_publicKey");this._key=e,this._publicKey=t}genSecret(){return randomBytes$9(16)}async sign(e){return hashAndSign$p(this._key,e)}get public(){if(this._publicKey==null)throw new CodeError$e("public key not provided","ERR_PUBKEY_NOT_PROVIDED");return new RsaPublicKey$8(this._publicKey)}decrypt(e){return decrypt$8(this._key,e)}marshal(){return jwkToPkcs1$8(this._key)}get bytes(){return PrivateKey$a.encode({Type:KeyType$a.RSA,Data:this.marshal()}).subarray()}equals(e){return equals$4(this.bytes,e.bytes)}async hash(){const{bytes:e}=await sha256$2.digest(this.bytes);return e}async id(){const e=await this.public.hash();return toString$b(e,"base58btc")}async export(e,t="pkcs-8"){if(t==="pkcs-8"){const n=new forge$n.util.ByteBuffer(this.marshal()),i=forge$n.asn1.fromDer(n),o=forge$n.pki.privateKeyFromAsn1(i),a={algorithm:"aes256",count:1e4,saltSize:128/8,prfAlgorithm:"sha512"};return forge$n.pki.encryptRsaPrivateKey(o,e,a)}else{if(t==="libp2p-key")return exporter$9(this.bytes,e);throw new CodeError$e(`export format '${t}' is not supported`,"ERR_INVALID_EXPORT_FORMAT")}}};async function unmarshalRsaPrivateKey$8(r){const e=pkcs1ToJwk$8(r);if(keySize$8(e)>MAX_KEY_SIZE$8)throw new CodeError$e("key size is too large","ERR_KEY_SIZE_TOO_LARGE");const t=await unmarshalPrivateKey$e(e);return new RsaPrivateKey$8(t.privateKey,t.publicKey)}function unmarshalRsaPublicKey$8(r){const e=pkixToJwk$8(r);if(keySize$8(e)>MAX_KEY_SIZE$8)throw new CodeError$e("key size is too large","ERR_KEY_SIZE_TOO_LARGE");return new RsaPublicKey$8(e)}async function fromJwk$8(r){if(keySize$8(r)>MAX_KEY_SIZE$8)throw new CodeError$e("key size is too large","ERR_KEY_SIZE_TOO_LARGE");const e=await unmarshalPrivateKey$e(r);return new RsaPrivateKey$8(e.privateKey,e.publicKey)}async function generateKeyPair$s(r){if(r>MAX_KEY_SIZE$8)throw new CodeError$e("key size is too large","ERR_KEY_SIZE_TOO_LARGE");const e=await generateKey$p(r);return new RsaPrivateKey$8(e.privateKey,e.publicKey)}const RSA$8=Object.freeze(Object.defineProperty({__proto__:null,MAX_KEY_SIZE:MAX_KEY_SIZE$8,RsaPrivateKey:RsaPrivateKey$8,RsaPublicKey:RsaPublicKey$8,fromJwk:fromJwk$8,generateKeyPair:generateKeyPair$s,unmarshalRsaPrivateKey:unmarshalRsaPrivateKey$8,unmarshalRsaPublicKey:unmarshalRsaPublicKey$8},Symbol.toStringTag,{value:"Module"})),Chi=(r,e,t)=>r&e^~r&t,Maj=(r,e,t)=>r&e^r&t^e&t,SHA256_K=new Uint32Array([1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298]),IV=new Uint32Array([1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225]),SHA256_W=new Uint32Array(64);class SHA256 extends SHA2{constructor(){super(64,32,8,!1),this.A=IV[0]|0,this.B=IV[1]|0,this.C=IV[2]|0,this.D=IV[3]|0,this.E=IV[4]|0,this.F=IV[5]|0,this.G=IV[6]|0,this.H=IV[7]|0}get(){const{A:e,B:t,C:n,D:i,E:o,F:a,G:c,H:l}=this;return[e,t,n,i,o,a,c,l]}set(e,t,n,i,o,a,c,l){this.A=e|0,this.B=t|0,this.C=n|0,this.D=i|0,this.E=o|0,this.F=a|0,this.G=c|0,this.H=l|0}process(e,t){for(let g=0;g<16;g++,t+=4)SHA256_W[g]=e.getUint32(t,!1);for(let g=16;g<64;g++){const $=SHA256_W[g-15],S=SHA256_W[g-2],E=rotr($,7)^rotr($,18)^$>>>3,v=rotr(S,17)^rotr(S,19)^S>>>10;SHA256_W[g]=v+SHA256_W[g-7]+E+SHA256_W[g-16]|0}let{A:n,B:i,C:o,D:a,E:c,F:l,G:u,H:f}=this;for(let g=0;g<64;g++){const $=rotr(c,6)^rotr(c,11)^rotr(c,25),S=f+$+Chi(c,l,u)+SHA256_K[g]+SHA256_W[g]|0,v=(rotr(n,2)^rotr(n,13)^rotr(n,22))+Maj(n,i,o)|0;f=u,u=l,l=c,c=a+S|0,a=o,o=i,i=n,n=S+v|0}n=n+this.A|0,i=i+this.B|0,o=o+this.C|0,a=a+this.D|0,c=c+this.E|0,l=l+this.F|0,u=u+this.G|0,f=f+this.H|0,this.set(n,i,o,a,c,l,u,f)}roundClean(){SHA256_W.fill(0)}destroy(){this.set(0,0,0,0,0,0,0,0),this.buffer.fill(0)}}const sha256=wrapConstructor(()=>new SHA256);/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */function validatePointOpts(r){const e=validateBasic(r);validateObject(e,{a:"field",b:"field"},{allowedPrivateKeyLengths:"array",wrapPrivateKey:"boolean",isTorsionFree:"function",clearCofactor:"function",allowInfinityPoint:"boolean",fromBytes:"function",toBytes:"function"});const{endo:t,Fp:n,a:i}=e;if(t){if(!n.eql(i,n.ZERO))throw new Error("Endomorphism can only be defined for Koblitz curves that have a=0");if(typeof t!="object"||typeof t.beta!="bigint"||typeof t.splitScalar!="function")throw new Error("Expected endomorphism with beta: bigint and splitScalar: function")}return Object.freeze({...e})}const{bytesToNumberBE:b2n,hexToBytes:h2b}=ut,DER={Err:class extends Error{constructor(e=""){super(e)}},_parseInt(r){const{Err:e}=DER;if(r.length<2||r[0]!==2)throw new e("Invalid signature integer tag");const t=r[1],n=r.subarray(2,t+2);if(!t||n.length!==t)throw new e("Invalid signature integer: wrong length");if(n[0]&128)throw new e("Invalid signature integer: negative");if(n[0]===0&&!(n[1]&128))throw new e("Invalid signature integer: unnecessary leading zero");return{d:b2n(n),l:r.subarray(t+2)}},toSig(r){const{Err:e}=DER,t=typeof r=="string"?h2b(r):r;if(!(t instanceof Uint8Array))throw new Error("ui8a expected");let n=t.length;if(n<2||t[0]!=48)throw new e("Invalid signature tag");if(t[1]!==n-2)throw new e("Invalid signature: incorrect length");const{d:i,l:o}=DER._parseInt(t.subarray(2)),{d:a,l:c}=DER._parseInt(o);if(c.length)throw new e("Invalid signature: left bytes after parsing");return{r:i,s:a}},hexFromSig(r){const e=u=>Number.parseInt(u[0],16)&8?"00"+u:u,t=u=>{const f=u.toString(16);return f.length&1?`0${f}`:f},n=e(t(r.s)),i=e(t(r.r)),o=n.length/2,a=i.length/2,c=t(o),l=t(a);return`30${t(a+o+4)}02${l}${i}02${c}${n}`}},_0n=BigInt(0),_1n$1=BigInt(1);BigInt(2);const _3n=BigInt(3);BigInt(4);function weierstrassPoints(r){const e=validatePointOpts(r),{Fp:t}=e,n=e.toBytes||((E,v,T)=>{const I=v.toAffine();return concatBytes(Uint8Array.from([4]),t.toBytes(I.x),t.toBytes(I.y))}),i=e.fromBytes||(E=>{const v=E.subarray(1),T=t.fromBytes(v.subarray(0,t.BYTES)),I=t.fromBytes(v.subarray(t.BYTES,2*t.BYTES));return{x:T,y:I}});function o(E){const{a:v,b:T}=e,I=t.sqr(E),A=t.mul(I,E);return t.add(t.add(A,t.mul(E,v)),T)}if(!t.eql(t.sqr(e.Gy),o(e.Gx)))throw new Error("bad generator point: equation left != right");function a(E){return typeof E=="bigint"&&_0n<E&&E<e.n}function c(E){if(!a(E))throw new Error("Expected valid bigint: 0 < bigint < curve.n")}function l(E){const{allowedPrivateKeyLengths:v,nByteLength:T,wrapPrivateKey:I,n:A}=e;if(v&&typeof E!="bigint"){if(E instanceof Uint8Array&&(E=bytesToHex(E)),typeof E!="string"||!v.includes(E.length))throw new Error("Invalid key");E=E.padStart(T*2,"0")}let P;try{P=typeof E=="bigint"?E:bytesToNumberBE(ensureBytes$1("private key",E,T))}catch{throw new Error(`private key must be ${T} bytes, hex or bigint, not ${typeof E}`)}return I&&(P=mod(P,A)),c(P),P}const u=new Map;function f(E){if(!(E instanceof g))throw new Error("ProjectivePoint expected")}class g{constructor(v,T,I){if(this.px=v,this.py=T,this.pz=I,v==null||!t.isValid(v))throw new Error("x required");if(T==null||!t.isValid(T))throw new Error("y required");if(I==null||!t.isValid(I))throw new Error("z required")}static fromAffine(v){const{x:T,y:I}=v||{};if(!v||!t.isValid(T)||!t.isValid(I))throw new Error("invalid affine point");if(v instanceof g)throw new Error("projective point not allowed");const A=P=>t.eql(P,t.ZERO);return A(T)&&A(I)?g.ZERO:new g(T,I,t.ONE)}get x(){return this.toAffine().x}get y(){return this.toAffine().y}static normalizeZ(v){const T=t.invertBatch(v.map(I=>I.pz));return v.map((I,A)=>I.toAffine(T[A])).map(g.fromAffine)}static fromHex(v){const T=g.fromAffine(i(ensureBytes$1("pointHex",v)));return T.assertValidity(),T}static fromPrivateKey(v){return g.BASE.multiply(l(v))}_setWindowSize(v){this._WINDOW_SIZE=v,u.delete(this)}assertValidity(){if(this.is0()){if(e.allowInfinityPoint&&!t.is0(this.py))return;throw new Error("bad point: ZERO")}const{x:v,y:T}=this.toAffine();if(!t.isValid(v)||!t.isValid(T))throw new Error("bad point: x or y not FE");const I=t.sqr(T),A=o(v);if(!t.eql(I,A))throw new Error("bad point: equation left != right");if(!this.isTorsionFree())throw new Error("bad point: not in prime-order subgroup")}hasEvenY(){const{y:v}=this.toAffine();if(t.isOdd)return!t.isOdd(v);throw new Error("Field doesn't support isOdd")}equals(v){f(v);const{px:T,py:I,pz:A}=this,{px:P,py:x,pz:D}=v,C=t.eql(t.mul(T,D),t.mul(P,A)),k=t.eql(t.mul(I,D),t.mul(x,A));return C&&k}negate(){return new g(this.px,t.neg(this.py),this.pz)}double(){const{a:v,b:T}=e,I=t.mul(T,_3n),{px:A,py:P,pz:x}=this;let D=t.ZERO,C=t.ZERO,k=t.ZERO,N=t.mul(A,A),L=t.mul(P,P),M=t.mul(x,x),U=t.mul(A,P);return U=t.add(U,U),k=t.mul(A,x),k=t.add(k,k),D=t.mul(v,k),C=t.mul(I,M),C=t.add(D,C),D=t.sub(L,C),C=t.add(L,C),C=t.mul(D,C),D=t.mul(U,D),k=t.mul(I,k),M=t.mul(v,M),U=t.sub(N,M),U=t.mul(v,U),U=t.add(U,k),k=t.add(N,N),N=t.add(k,N),N=t.add(N,M),N=t.mul(N,U),C=t.add(C,N),M=t.mul(P,x),M=t.add(M,M),N=t.mul(M,U),D=t.sub(D,N),k=t.mul(M,L),k=t.add(k,k),k=t.add(k,k),new g(D,C,k)}add(v){f(v);const{px:T,py:I,pz:A}=this,{px:P,py:x,pz:D}=v;let C=t.ZERO,k=t.ZERO,N=t.ZERO;const L=e.a,M=t.mul(e.b,_3n);let U=t.mul(T,P),z=t.mul(I,x),Y=t.mul(A,D),j=t.add(T,I),B=t.add(P,x);j=t.mul(j,B),B=t.add(U,z),j=t.sub(j,B),B=t.add(T,A);let H=t.add(P,D);return B=t.mul(B,H),H=t.add(U,Y),B=t.sub(B,H),H=t.add(I,A),C=t.add(x,D),H=t.mul(H,C),C=t.add(z,Y),H=t.sub(H,C),N=t.mul(L,B),C=t.mul(M,Y),N=t.add(C,N),C=t.sub(z,N),N=t.add(z,N),k=t.mul(C,N),z=t.add(U,U),z=t.add(z,U),Y=t.mul(L,Y),B=t.mul(M,B),z=t.add(z,Y),Y=t.sub(U,Y),Y=t.mul(L,Y),B=t.add(B,Y),U=t.mul(z,B),k=t.add(k,U),U=t.mul(H,B),C=t.mul(j,C),C=t.sub(C,U),U=t.mul(j,z),N=t.mul(H,N),N=t.add(N,U),new g(C,k,N)}subtract(v){return this.add(v.negate())}is0(){return this.equals(g.ZERO)}wNAF(v){return S.wNAFCached(this,u,v,T=>{const I=t.invertBatch(T.map(A=>A.pz));return T.map((A,P)=>A.toAffine(I[P])).map(g.fromAffine)})}multiplyUnsafe(v){const T=g.ZERO;if(v===_0n)return T;if(c(v),v===_1n$1)return this;const{endo:I}=e;if(!I)return S.unsafeLadder(this,v);let{k1neg:A,k1:P,k2neg:x,k2:D}=I.splitScalar(v),C=T,k=T,N=this;for(;P>_0n||D>_0n;)P&_1n$1&&(C=C.add(N)),D&_1n$1&&(k=k.add(N)),N=N.double(),P>>=_1n$1,D>>=_1n$1;return A&&(C=C.negate()),x&&(k=k.negate()),k=new g(t.mul(k.px,I.beta),k.py,k.pz),C.add(k)}multiply(v){c(v);let T=v,I,A;const{endo:P}=e;if(P){const{k1neg:x,k1:D,k2neg:C,k2:k}=P.splitScalar(T);let{p:N,f:L}=this.wNAF(D),{p:M,f:U}=this.wNAF(k);N=S.constTimeNegate(x,N),M=S.constTimeNegate(C,M),M=new g(t.mul(M.px,P.beta),M.py,M.pz),I=N.add(M),A=L.add(U)}else{const{p:x,f:D}=this.wNAF(T);I=x,A=D}return g.normalizeZ([I,A])[0]}multiplyAndAddUnsafe(v,T,I){const A=g.BASE,P=(D,C)=>C===_0n||C===_1n$1||!D.equals(A)?D.multiplyUnsafe(C):D.multiply(C),x=P(this,T).add(P(v,I));return x.is0()?void 0:x}toAffine(v){const{px:T,py:I,pz:A}=this,P=this.is0();v==null&&(v=P?t.ONE:t.inv(A));const x=t.mul(T,v),D=t.mul(I,v),C=t.mul(A,v);if(P)return{x:t.ZERO,y:t.ZERO};if(!t.eql(C,t.ONE))throw new Error("invZ was invalid");return{x,y:D}}isTorsionFree(){const{h:v,isTorsionFree:T}=e;if(v===_1n$1)return!0;if(T)return T(g,this);throw new Error("isTorsionFree() has not been declared for the elliptic curve")}clearCofactor(){const{h:v,clearCofactor:T}=e;return v===_1n$1?this:T?T(g,this):this.multiplyUnsafe(e.h)}toRawBytes(v=!0){return this.assertValidity(),n(g,this,v)}toHex(v=!0){return bytesToHex(this.toRawBytes(v))}}g.BASE=new g(e.Gx,e.Gy,t.ONE),g.ZERO=new g(t.ZERO,t.ONE,t.ZERO);const $=e.nBitLength,S=wNAF(g,e.endo?Math.ceil($/2):$);return{CURVE:e,ProjectivePoint:g,normPrivateKeyToScalar:l,weierstrassEquation:o,isWithinCurveOrder:a}}function validateOpts(r){const e=validateBasic(r);return validateObject(e,{hash:"hash",hmac:"function",randomBytes:"function"},{bits2int:"function",bits2int_modN:"function",lowS:"boolean"}),Object.freeze({lowS:!0,...e})}function weierstrass(r){const e=validateOpts(r),{Fp:t,n}=e,i=t.BYTES+1,o=2*t.BYTES+1;function a(B){return _0n<B&&B<t.ORDER}function c(B){return mod(B,n)}function l(B){return invert(B,n)}const{ProjectivePoint:u,normPrivateKeyToScalar:f,weierstrassEquation:g,isWithinCurveOrder:$}=weierstrassPoints({...e,toBytes(B,H,G){const q=H.toAffine(),O=t.toBytes(q.x),Q=concatBytes;return G?Q(Uint8Array.from([H.hasEvenY()?2:3]),O):Q(Uint8Array.from([4]),O,t.toBytes(q.y))},fromBytes(B){const H=B.length,G=B[0],q=B.subarray(1);if(H===i&&(G===2||G===3)){const O=bytesToNumberBE(q);if(!a(O))throw new Error("Point is not on curve");const Q=g(O);let W=t.sqrt(Q);const X=(W&_1n$1)===_1n$1;return(G&1)===1!==X&&(W=t.neg(W)),{x:O,y:W}}else if(H===o&&G===4){const O=t.fromBytes(q.subarray(0,t.BYTES)),Q=t.fromBytes(q.subarray(t.BYTES,2*t.BYTES));return{x:O,y:Q}}else throw new Error(`Point of length ${H} was invalid. Expected ${i} compressed bytes or ${o} uncompressed bytes`)}}),S=B=>bytesToHex(numberToBytesBE(B,e.nByteLength));function E(B){const H=n>>_1n$1;return B>H}function v(B){return E(B)?c(-B):B}const T=(B,H,G)=>bytesToNumberBE(B.slice(H,G));class I{constructor(H,G,q){this.r=H,this.s=G,this.recovery=q,this.assertValidity()}static fromCompact(H){const G=e.nByteLength;return H=ensureBytes$1("compactSignature",H,G*2),new I(T(H,0,G),T(H,G,2*G))}static fromDER(H){const{r:G,s:q}=DER.toSig(ensureBytes$1("DER",H));return new I(G,q)}assertValidity(){if(!$(this.r))throw new Error("r must be 0 < r < CURVE.n");if(!$(this.s))throw new Error("s must be 0 < s < CURVE.n")}addRecoveryBit(H){return new I(this.r,this.s,H)}recoverPublicKey(H){const{r:G,s:q,recovery:O}=this,Q=k(ensureBytes$1("msgHash",H));if(O==null||![0,1,2,3].includes(O))throw new Error("recovery id invalid");const W=O===2||O===3?G+e.n:G;if(W>=t.ORDER)throw new Error("recovery id 2 or 3 invalid");const X=O&1?"03":"02",Z=u.fromHex(X+S(W)),J=l(W),re=c(-Q*J),ee=c(q*J),te=u.BASE.multiplyAndAddUnsafe(Z,re,ee);if(!te)throw new Error("point at infinify");return te.assertValidity(),te}hasHighS(){return E(this.s)}normalizeS(){return this.hasHighS()?new I(this.r,c(-this.s),this.recovery):this}toDERRawBytes(){return hexToBytes(this.toDERHex())}toDERHex(){return DER.hexFromSig({r:this.r,s:this.s})}toCompactRawBytes(){return hexToBytes(this.toCompactHex())}toCompactHex(){return S(this.r)+S(this.s)}}const A={isValidPrivateKey(B){try{return f(B),!0}catch{return!1}},normPrivateKeyToScalar:f,randomPrivateKey:()=>{const B=getMinHashLength(e.n);return mapHashToField(e.randomBytes(B),e.n)},precompute(B=8,H=u.BASE){return H._setWindowSize(B),H.multiply(BigInt(3)),H}};function P(B,H=!0){return u.fromPrivateKey(B).toRawBytes(H)}function x(B){const H=B instanceof Uint8Array,G=typeof B=="string",q=(H||G)&&B.length;return H?q===i||q===o:G?q===2*i||q===2*o:B instanceof u}function D(B,H,G=!0){if(x(B))throw new Error("first arg must be private key");if(!x(H))throw new Error("second arg must be public key");return u.fromHex(H).multiply(f(B)).toRawBytes(G)}const C=e.bits2int||function(B){const H=bytesToNumberBE(B),G=B.length*8-e.nBitLength;return G>0?H>>BigInt(G):H},k=e.bits2int_modN||function(B){return c(C(B))},N=bitMask(e.nBitLength);function L(B){if(typeof B!="bigint")throw new Error("bigint expected");if(!(_0n<=B&&B<N))throw new Error(`bigint expected < 2^${e.nBitLength}`);return numberToBytesBE(B,e.nByteLength)}function M(B,H,G=U){if(["recovered","canonical"].some(oe=>oe in G))throw new Error("sign() legacy options not supported");const{hash:q,randomBytes:O}=e;let{lowS:Q,prehash:W,extraEntropy:X}=G;Q==null&&(Q=!0),B=ensureBytes$1("msgHash",B),W&&(B=ensureBytes$1("prehashed msgHash",q(B)));const Z=k(B),J=f(H),re=[L(J),L(Z)];if(X!=null){const oe=X===!0?O(t.BYTES):X;re.push(ensureBytes$1("extraEntropy",oe))}const ee=concatBytes(...re),te=Z;function ae(oe){const fe=C(oe);if(!$(fe))return;const pe=l(fe),de=u.BASE.multiply(fe).toAffine(),me=c(de.x);if(me===_0n)return;const Ae=c(pe*c(te+me*J));if(Ae===_0n)return;let Oe=(de.x===me?0:2)|Number(de.y&_1n$1),Je=Ae;return Q&&E(Ae)&&(Je=v(Ae),Oe^=1),new I(me,Je,Oe)}return{seed:ee,k2sig:ae}}const U={lowS:e.lowS,prehash:!1},z={lowS:e.lowS,prehash:!1};function Y(B,H,G=U){const{seed:q,k2sig:O}=M(B,H,G),Q=e;return createHmacDrbg(Q.hash.outputLen,Q.nByteLength,Q.hmac)(q,O)}u.BASE._setWindowSize(8);function j(B,H,G,q=z){const O=B;if(H=ensureBytes$1("msgHash",H),G=ensureBytes$1("publicKey",G),"strict"in q)throw new Error("options.strict was renamed to lowS");const{lowS:Q,prehash:W}=q;let X,Z;try{if(typeof O=="string"||O instanceof Uint8Array)try{X=I.fromDER(O)}catch(de){if(!(de instanceof DER.Err))throw de;X=I.fromCompact(O)}else if(typeof O=="object"&&typeof O.r=="bigint"&&typeof O.s=="bigint"){const{r:de,s:me}=O;X=new I(de,me)}else throw new Error("PARSE");Z=u.fromHex(G)}catch(de){if(de.message==="PARSE")throw new Error("signature must be Signature instance, Uint8Array or hex string");return!1}if(Q&&X.hasHighS())return!1;W&&(H=e.hash(H));const{r:J,s:re}=X,ee=k(H),te=l(re),ae=c(ee*te),oe=c(J*te),fe=u.BASE.multiplyAndAddUnsafe(Z,ae,oe)?.toAffine();return fe?c(fe.x)===J:!1}return{CURVE:e,getPublicKey:P,getSharedSecret:D,sign:Y,verify:j,ProjectivePoint:u,Signature:I,utils:A}}class HMAC extends Hash{constructor(e,t){super(),this.finished=!1,this.destroyed=!1,hash(e);const n=toBytes$3(t);if(this.iHash=e.create(),typeof this.iHash.update!="function")throw new Error("Expected instance of class which extends utils.Hash");this.blockLen=this.iHash.blockLen,this.outputLen=this.iHash.outputLen;const i=this.blockLen,o=new Uint8Array(i);o.set(n.length>i?e.create().update(n).digest():n);for(let a=0;a<o.length;a++)o[a]^=54;this.iHash.update(o),this.oHash=e.create();for(let a=0;a<o.length;a++)o[a]^=106;this.oHash.update(o),o.fill(0)}update(e){return exists$2(this),this.iHash.update(e),this}digestInto(e){exists$2(this),bytes$1(e,this.outputLen),this.finished=!0,this.iHash.digestInto(e),this.oHash.update(e),this.oHash.digestInto(e),this.destroy()}digest(){const e=new Uint8Array(this.oHash.outputLen);return this.digestInto(e),e}_cloneInto(e){e||(e=Object.create(Object.getPrototypeOf(this),{}));const{oHash:t,iHash:n,finished:i,destroyed:o,blockLen:a,outputLen:c}=this;return e=e,e.finished=i,e.destroyed=o,e.blockLen=a,e.outputLen=c,e.oHash=t._cloneInto(e.oHash),e.iHash=n._cloneInto(e.iHash),e}destroy(){this.destroyed=!0,this.oHash.destroy(),this.iHash.destroy()}}const hmac=(r,e,t)=>new HMAC(r,e).update(t).digest();hmac.create=(r,e)=>new HMAC(r,e);/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */function getHash(r){return{hash:r,hmac:(e,...t)=>hmac(r,e,concatBytes$1(...t)),randomBytes:randomBytes$a}}function createCurve(r,e){const t=n=>weierstrass({...r,...getHash(n)});return Object.freeze({...t(e),create:t})}/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */const secp256k1P=BigInt("0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f"),secp256k1N=BigInt("0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141"),_1n=BigInt(1),_2n=BigInt(2),divNearest=(r,e)=>(r+e/_2n)/e;function sqrtMod(r){const e=secp256k1P,t=BigInt(3),n=BigInt(6),i=BigInt(11),o=BigInt(22),a=BigInt(23),c=BigInt(44),l=BigInt(88),u=r*r*r%e,f=u*u*r%e,g=pow2(f,t,e)*f%e,$=pow2(g,t,e)*f%e,S=pow2($,_2n,e)*u%e,E=pow2(S,i,e)*S%e,v=pow2(E,o,e)*E%e,T=pow2(v,c,e)*v%e,I=pow2(T,l,e)*T%e,A=pow2(I,c,e)*v%e,P=pow2(A,t,e)*f%e,x=pow2(P,a,e)*E%e,D=pow2(x,n,e)*u%e,C=pow2(D,_2n,e);if(!Fp.eql(Fp.sqr(C),r))throw new Error("Cannot find square root");return C}const Fp=Field(secp256k1P,void 0,void 0,{sqrt:sqrtMod}),secp256k1=createCurve({a:BigInt(0),b:BigInt(7),Fp,n:secp256k1N,Gx:BigInt("55066263022277343669578718895168534326250603453777594175500187360389116729240"),Gy:BigInt("32670510020758816978083085130507043184471273380659243275938904335757337482424"),h:BigInt(1),lowS:!0,endo:{beta:BigInt("0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee"),splitScalar:r=>{const e=secp256k1N,t=BigInt("0x3086d221a7d46bcde86c90e49284eb15"),n=-_1n*BigInt("0xe4437ed6010e88286f547fa90abfe4c3"),i=BigInt("0x114ca50f7a8e2f3f657c1108d9d44cfd8"),o=t,a=BigInt("0x100000000000000000000000000000000"),c=divNearest(o*r,e),l=divNearest(-n*r,e);let u=mod(r-c*t-l*i,e),f=mod(-c*n-l*o,e);const g=u>a,$=f>a;if(g&&(u=e-u),$&&(f=e-f),u>a||f>a)throw new Error("splitScalar: Endomorphism failed, k="+r);return{k1neg:g,k1:u,k2neg:$,k2:f}}}},sha256);BigInt(0);secp256k1.ProjectivePoint;function generateKey$o(){return secp256k1.utils.randomPrivateKey()}async function hashAndSign$o(r,e){const{digest:t}=await sha256$2.digest(e);try{return secp256k1.sign(t,r).toDERRawBytes()}catch(n){throw new CodeError$e(String(n),"ERR_INVALID_INPUT")}}async function hashAndVerify$o(r,e,t){try{const{digest:n}=await sha256$2.digest(t);return secp256k1.verify(e,n,r)}catch(n){throw new CodeError$e(String(n),"ERR_INVALID_INPUT")}}function compressPublicKey$8(r){return secp256k1.ProjectivePoint.fromHex(r).toRawBytes(!0)}function validatePrivateKey$8(r){try{secp256k1.getPublicKey(r,!0)}catch(e){throw new CodeError$e(String(e),"ERR_INVALID_PRIVATE_KEY")}}function validatePublicKey$8(r){try{secp256k1.ProjectivePoint.fromHex(r)}catch(e){throw new CodeError$e(String(e),"ERR_INVALID_PUBLIC_KEY")}}function computePublicKey$8(r){try{return secp256k1.getPublicKey(r,!0)}catch(e){throw new CodeError$e(String(e),"ERR_INVALID_PRIVATE_KEY")}}let Secp256k1PublicKey$8=class{constructor(e){_(this,"_key");validatePublicKey$8(e),this._key=e}async verify(e,t){return hashAndVerify$o(this._key,t,e)}marshal(){return compressPublicKey$8(this._key)}get bytes(){return PublicKey$a.encode({Type:KeyType$a.Secp256k1,Data:this.marshal()}).subarray()}equals(e){return equals$4(this.bytes,e.bytes)}async hash(){const{bytes:e}=await sha256$2.digest(this.bytes);return e}},Secp256k1PrivateKey$8=class{constructor(e,t){_(this,"_key");_(this,"_publicKey");this._key=e,this._publicKey=t??computePublicKey$8(e),validatePrivateKey$8(this._key),validatePublicKey$8(this._publicKey)}async sign(e){return hashAndSign$o(this._key,e)}get public(){return new Secp256k1PublicKey$8(this._publicKey)}marshal(){return this._key}get bytes(){return PrivateKey$a.encode({Type:KeyType$a.Secp256k1,Data:this.marshal()}).subarray()}equals(e){return equals$4(this.bytes,e.bytes)}async hash(){const{bytes:e}=await sha256$2.digest(this.bytes);return e}async id(){const e=await this.public.hash();return toString$b(e,"base58btc")}async export(e,t="libp2p-key"){if(t==="libp2p-key")return exporter$9(this.bytes,e);throw new CodeError$e(`export format '${t}' is not supported`,"ERR_INVALID_EXPORT_FORMAT")}};function unmarshalSecp256k1PrivateKey$8(r){return new Secp256k1PrivateKey$8(r)}function unmarshalSecp256k1PublicKey$8(r){return new Secp256k1PublicKey$8(r)}async function generateKeyPair$r(){const r=generateKey$o();return new Secp256k1PrivateKey$8(r)}const Secp256k1$8=Object.freeze(Object.defineProperty({__proto__:null,Secp256k1PrivateKey:Secp256k1PrivateKey$8,Secp256k1PublicKey:Secp256k1PublicKey$8,generateKeyPair:generateKeyPair$r,unmarshalSecp256k1PrivateKey:unmarshalSecp256k1PrivateKey$8,unmarshalSecp256k1PublicKey:unmarshalSecp256k1PublicKey$8},Symbol.toStringTag,{value:"Module"})),supportedKeys$8={rsa:RSA$8,ed25519:Ed25519$8,secp256k1:Secp256k1$8};function unsupportedKey$8(r){const e=Object.keys(supportedKeys$8).join(" / ");return new CodeError$e(`invalid or unsupported key type ${r}. Must be ${e}`,"ERR_UNSUPPORTED_KEY_TYPE")}function typeToKey$4(r){if(r=r.toLowerCase(),r==="rsa"||r==="ed25519"||r==="secp256k1")return supportedKeys$8[r];throw unsupportedKey$8(r)}async function generateKeyPair$q(r,e){return typeToKey$4(r).generateKeyPair(e??2048)}function unmarshalPublicKey$6(r){const e=PublicKey$a.decode(r),t=e.Data??new Uint8Array;switch(e.Type){case KeyType$a.RSA:return supportedKeys$8.rsa.unmarshalRsaPublicKey(t);case KeyType$a.Ed25519:return supportedKeys$8.ed25519.unmarshalEd25519PublicKey(t);case KeyType$a.Secp256k1:return supportedKeys$8.secp256k1.unmarshalSecp256k1PublicKey(t);default:throw unsupportedKey$8(e.Type??"unknown")}}function marshalPublicKey$3(r,e){return e=(e??"rsa").toLowerCase(),typeToKey$4(e),r.bytes}async function unmarshalPrivateKey$d(r){const e=PrivateKey$a.decode(r),t=e.Data??new Uint8Array;switch(e.Type){case KeyType$a.RSA:return supportedKeys$8.rsa.unmarshalRsaPrivateKey(t);case KeyType$a.Ed25519:return supportedKeys$8.ed25519.unmarshalEd25519PrivateKey(t);case KeyType$a.Secp256k1:return supportedKeys$8.secp256k1.unmarshalSecp256k1PrivateKey(t);default:throw unsupportedKey$8(e.Type??"RSA")}}function marshalPrivateKey$1(r,e){return e=(e??"rsa").toLowerCase(),typeToKey$4(e),r.bytes}const contentRouting=Symbol.for("@libp2p/content-routing");function setMaxListeners$5(){}var Te,Ft;let TypedEventEmitter$1=(Ft=class extends EventTarget{constructor(){super(...arguments);ne(this,Te,new Map)}listenerCount(t){const n=F(this,Te).get(t);return n==null?0:n.length}addEventListener(t,n,i){super.addEventListener(t,n,i);let o=F(this,Te).get(t);o==null&&(o=[],F(this,Te).set(t,o)),o.push({callback:n,once:(i!==!0&&i!==!1&&i?.once)??!1})}removeEventListener(t,n,i){super.removeEventListener(t.toString(),n??null,i);let o=F(this,Te).get(t);o!=null&&(o=o.filter(({callback:a})=>a!==n),F(this,Te).set(t,o))}dispatchEvent(t){const n=super.dispatchEvent(t);let i=F(this,Te).get(t.type);return i==null||(i=i.filter(({once:o})=>!o),F(this,Te).set(t.type,i)),n}safeDispatchEvent(t,n){return this.dispatchEvent(new CustomEvent$2(t,n))}},Te=new WeakMap,Ft),CustomEventPolyfill$1=class extends Event{constructor(t,n){super(t,n);_(this,"detail");this.detail=n?.detail}};const CustomEvent$2=globalThis.CustomEvent??CustomEventPolyfill$1,setMaxListeners$4=(r,...e)=>{try{[...e]}catch{}},peerDiscovery=Symbol.for("@libp2p/peer-discovery"),peerRouting=Symbol.for("@libp2p/peer-routing"),webcrypto$7={get(r=globalThis){const e=r.crypto;if(e==null||e.subtle==null)throw Object.assign(new Error("Missing Web Crypto API. The most likely cause of this error is that this page is being accessed from an insecure context (i.e. not HTTPS). For more information and possible resolutions see https://github.com/libp2p/js-libp2p-crypto/blob/master/README.md#web-crypto-api"),{code:"ERR_MISSING_WEB_CRYPTO"});return e}},PUBLIC_KEY_BYTE_LENGTH$7=32,PRIVATE_KEY_BYTE_LENGTH$7=64,KEYS_BYTE_LENGTH$7=32;async function generateKey$n(){const r=ed25519.utils.randomPrivateKey(),e=ed25519.getPublicKey(r);return{privateKey:concatKeys$7(r,e),publicKey:e}}async function generateKeyFromSeed$7(r){if(r.length!==KEYS_BYTE_LENGTH$7)throw new TypeError('"seed" must be 32 bytes in length.');if(!(r instanceof Uint8Array))throw new TypeError('"seed" must be a node.js Buffer, or Uint8Array.');const e=r,t=ed25519.getPublicKey(e);return{privateKey:concatKeys$7(e,t),publicKey:t}}async function hashAndSign$n(r,e){const t=r.subarray(0,KEYS_BYTE_LENGTH$7);return ed25519.sign(e,t)}async function hashAndVerify$n(r,e,t){return ed25519.verify(e,t,r)}function concatKeys$7(r,e){const t=new Uint8Array(PRIVATE_KEY_BYTE_LENGTH$7);for(let n=0;n<KEYS_BYTE_LENGTH$7;n++)t[n]=r[n],t[KEYS_BYTE_LENGTH$7+n]=e[n];return t}const derivedEmptyPasswordKey$7={alg:"A128GCM",ext:!0,k:"scm9jmO_4BJAgdwWGVulLg",key_ops:["encrypt","decrypt"],kty:"oct"};function create$8(r){const e=r?.algorithm??"AES-GCM";let t=r?.keyLength??16;const n=r?.nonceLength??12,i=r?.digest??"SHA-256",o=r?.saltLength??16,a=r?.iterations??32767,c=webcrypto$7.get();t*=8;async function l(g,$){const S=c.getRandomValues(new Uint8Array(o)),E=c.getRandomValues(new Uint8Array(n)),v={name:e,iv:E};typeof $=="string"&&($=fromString$b($));let T;if($.length===0){T=await c.subtle.importKey("jwk",derivedEmptyPasswordKey$7,{name:"AES-GCM"},!0,["encrypt"]);try{const A={name:"PBKDF2",salt:S,iterations:a,hash:{name:i}},P=await c.subtle.importKey("raw",$,{name:"PBKDF2"},!1,["deriveKey"]);T=await c.subtle.deriveKey(A,P,{name:e,length:t},!0,["encrypt"])}catch{T=await c.subtle.importKey("jwk",derivedEmptyPasswordKey$7,{name:"AES-GCM"},!0,["encrypt"])}}else{const A={name:"PBKDF2",salt:S,iterations:a,hash:{name:i}},P=await c.subtle.importKey("raw",$,{name:"PBKDF2"},!1,["deriveKey"]);T=await c.subtle.deriveKey(A,P,{name:e,length:t},!0,["encrypt"])}const I=await c.subtle.encrypt(v,T,g);return concat$6([S,v.iv,new Uint8Array(I)])}async function u(g,$){const S=g.subarray(0,o),E=g.subarray(o,o+n),v=g.subarray(o+n),T={name:e,iv:E};typeof $=="string"&&($=fromString$b($));let I;if($.length===0)try{const P={name:"PBKDF2",salt:S,iterations:a,hash:{name:i}},x=await c.subtle.importKey("raw",$,{name:"PBKDF2"},!1,["deriveKey"]);I=await c.subtle.deriveKey(P,x,{name:e,length:t},!0,["decrypt"])}catch{I=await c.subtle.importKey("jwk",derivedEmptyPasswordKey$7,{name:"AES-GCM"},!0,["decrypt"])}else{const P={name:"PBKDF2",salt:S,iterations:a,hash:{name:i}},x=await c.subtle.importKey("raw",$,{name:"PBKDF2"},!1,["deriveKey"]);I=await c.subtle.deriveKey(P,x,{name:e,length:t},!0,["decrypt"])}const A=await c.subtle.decrypt(T,I,v);return new Uint8Array(A)}return{encrypt:l,decrypt:u}}async function exporter$8(r,e){const n=await create$8().encrypt(r,e);return base64$6.encode(n)}var KeyType$9;(function(r){r.RSA="RSA",r.Ed25519="Ed25519",r.Secp256k1="Secp256k1"})(KeyType$9||(KeyType$9={}));var __KeyTypeValues$9;(function(r){r[r.RSA=0]="RSA",r[r.Ed25519=1]="Ed25519",r[r.Secp256k1=2]="Secp256k1"})(__KeyTypeValues$9||(__KeyTypeValues$9={}));(function(r){r.codec=()=>enumeration(__KeyTypeValues$9)})(KeyType$9||(KeyType$9={}));var PublicKey$9;(function(r){let e;r.codec=()=>(e==null&&(e=message((t,n,i={})=>{i.lengthDelimited!==!1&&n.fork(),t.Type!=null&&(n.uint32(8),KeyType$9.codec().encode(t.Type,n)),t.Data!=null&&(n.uint32(18),n.bytes(t.Data)),i.lengthDelimited!==!1&&n.ldelim()},(t,n)=>{const i={},o=n==null?t.len:t.pos+n;for(;t.pos<o;){const a=t.uint32();switch(a>>>3){case 1:i.Type=KeyType$9.codec().decode(t);break;case 2:i.Data=t.bytes();break;default:t.skipType(a&7);break}}return i})),e),r.encode=t=>encodeMessage(t,r.codec()),r.decode=t=>decodeMessage$1(t,r.codec())})(PublicKey$9||(PublicKey$9={}));var PrivateKey$9;(function(r){let e;r.codec=()=>(e==null&&(e=message((t,n,i={})=>{i.lengthDelimited!==!1&&n.fork(),t.Type!=null&&(n.uint32(8),KeyType$9.codec().encode(t.Type,n)),t.Data!=null&&(n.uint32(18),n.bytes(t.Data)),i.lengthDelimited!==!1&&n.ldelim()},(t,n)=>{const i={},o=n==null?t.len:t.pos+n;for(;t.pos<o;){const a=t.uint32();switch(a>>>3){case 1:i.Type=KeyType$9.codec().decode(t);break;case 2:i.Data=t.bytes();break;default:t.skipType(a&7);break}}return i})),e),r.encode=t=>encodeMessage(t,r.codec()),r.decode=t=>decodeMessage$1(t,r.codec())})(PrivateKey$9||(PrivateKey$9={}));let Ed25519PublicKey$7=class{constructor(e){_(this,"_key");this._key=ensureKey$7(e,PUBLIC_KEY_BYTE_LENGTH$7)}async verify(e,t){return hashAndVerify$n(this._key,t,e)}marshal(){return this._key}get bytes(){return PublicKey$9.encode({Type:KeyType$9.Ed25519,Data:this.marshal()}).subarray()}equals(e){return equals$4(this.bytes,e.bytes)}async hash(){const{bytes:e}=await sha256$2.digest(this.bytes);return e}},Ed25519PrivateKey$7=class{constructor(e,t){_(this,"_key");_(this,"_publicKey");this._key=ensureKey$7(e,PRIVATE_KEY_BYTE_LENGTH$7),this._publicKey=ensureKey$7(t,PUBLIC_KEY_BYTE_LENGTH$7)}async sign(e){return hashAndSign$n(this._key,e)}get public(){return new Ed25519PublicKey$7(this._publicKey)}marshal(){return this._key}get bytes(){return PrivateKey$9.encode({Type:KeyType$9.Ed25519,Data:this.marshal()}).subarray()}equals(e){return equals$4(this.bytes,e.bytes)}async hash(){const{bytes:e}=await sha256$2.digest(this.bytes);return e}async id(){const e=identity$3.digest(this.public.bytes);return base58btc$4.encode(e.bytes).substring(1)}async export(e,t="libp2p-key"){if(t==="libp2p-key")return exporter$8(this.bytes,e);throw new CodeError$e(`export format '${t}' is not supported`,"ERR_INVALID_EXPORT_FORMAT")}};function unmarshalEd25519PrivateKey$7(r){if(r.length>PRIVATE_KEY_BYTE_LENGTH$7){r=ensureKey$7(r,PRIVATE_KEY_BYTE_LENGTH$7+PUBLIC_KEY_BYTE_LENGTH$7);const n=r.subarray(0,PRIVATE_KEY_BYTE_LENGTH$7),i=r.subarray(PRIVATE_KEY_BYTE_LENGTH$7,r.length);return new Ed25519PrivateKey$7(n,i)}r=ensureKey$7(r,PRIVATE_KEY_BYTE_LENGTH$7);const e=r.subarray(0,PRIVATE_KEY_BYTE_LENGTH$7),t=r.subarray(PUBLIC_KEY_BYTE_LENGTH$7);return new Ed25519PrivateKey$7(e,t)}function unmarshalEd25519PublicKey$7(r){return r=ensureKey$7(r,PUBLIC_KEY_BYTE_LENGTH$7),new Ed25519PublicKey$7(r)}async function generateKeyPair$p(){const{privateKey:r,publicKey:e}=await generateKey$n();return new Ed25519PrivateKey$7(r,e)}async function generateKeyPairFromSeed$7(r){const{privateKey:e,publicKey:t}=await generateKeyFromSeed$7(r);return new Ed25519PrivateKey$7(e,t)}function ensureKey$7(r,e){if(r=Uint8Array.from(r??[]),r.length!==e)throw new CodeError$e(`Key must be a Uint8Array of length ${e}, got ${r.length}`,"ERR_INVALID_KEY_TYPE");return r}const Ed25519$7=Object.freeze(Object.defineProperty({__proto__:null,Ed25519PrivateKey:Ed25519PrivateKey$7,Ed25519PublicKey:Ed25519PublicKey$7,generateKeyPair:generateKeyPair$p,generateKeyPairFromSeed:generateKeyPairFromSeed$7,unmarshalEd25519PrivateKey:unmarshalEd25519PrivateKey$7,unmarshalEd25519PublicKey:unmarshalEd25519PublicKey$7},Symbol.toStringTag,{value:"Module"}));function bigIntegerToUintBase64url$7(r,e){let t=Uint8Array.from(r.abs().toByteArray());if(t=t[0]===0?t.subarray(1):t,e!=null){if(t.length>e)throw new Error("byte array longer than desired length");t=concat$6([new Uint8Array(e-t.length),t])}return toString$b(t,"base64url")}function base64urlToBigInteger$7(r){const e=base64urlToBuffer$7(r);return new forge$n.jsbn.BigInteger(toString$b(e,"base16"),16)}function base64urlToBuffer$7(r,e){let t=fromString$b(r,"base64urlpad");if(e!=null){if(t.length>e)throw new Error("byte array longer than desired length");t=concat$6([new Uint8Array(e-t.length),t])}return t}const bits$9={"P-256":256,"P-384":384,"P-521":521},curveTypes$9=Object.keys(bits$9);curveTypes$9.join(" / ");async function importer$1(r,e){const t=base64$6.decode(r);return create$8().decrypt(t,e)}function randomBytes$8(r){if(isNaN(r)||r<=0)throw new CodeError$e("random bytes length must be a Number bigger than 0","ERR_INVALID_LENGTH");return randomBytes$a(r)}function convert$9(r,e){return e.map(t=>base64urlToBigInteger$7(r[t]))}function jwk2priv$7(r){return forge$n.pki.setRsaPrivateKey(...convert$9(r,["n","e","d","p","q","dp","dq","qi"]))}function jwk2pub$7(r){return forge$n.pki.setRsaPublicKey(...convert$9(r,["n","e"]))}function pkcs1ToJwk$7(r){const e=forge$n.asn1.fromDer(toString$b(r,"ascii")),t=forge$n.pki.privateKeyFromAsn1(e);return{kty:"RSA",n:bigIntegerToUintBase64url$7(t.n),e:bigIntegerToUintBase64url$7(t.e),d:bigIntegerToUintBase64url$7(t.d),p:bigIntegerToUintBase64url$7(t.p),q:bigIntegerToUintBase64url$7(t.q),dp:bigIntegerToUintBase64url$7(t.dP),dq:bigIntegerToUintBase64url$7(t.dQ),qi:bigIntegerToUintBase64url$7(t.qInv),alg:"RS256"}}function jwkToPkcs1$7(r){if(r.n==null||r.e==null||r.d==null||r.p==null||r.q==null||r.dp==null||r.dq==null||r.qi==null)throw new CodeError$e("JWK was missing components","ERR_INVALID_PARAMETERS");const e=forge$n.pki.privateKeyToAsn1({n:base64urlToBigInteger$7(r.n),e:base64urlToBigInteger$7(r.e),d:base64urlToBigInteger$7(r.d),p:base64urlToBigInteger$7(r.p),q:base64urlToBigInteger$7(r.q),dP:base64urlToBigInteger$7(r.dp),dQ:base64urlToBigInteger$7(r.dq),qInv:base64urlToBigInteger$7(r.qi)});return fromString$b(forge$n.asn1.toDer(e).getBytes(),"ascii")}function pkixToJwk$7(r){const e=forge$n.asn1.fromDer(toString$b(r,"ascii")),t=forge$n.pki.publicKeyFromAsn1(e);return{kty:"RSA",n:bigIntegerToUintBase64url$7(t.n),e:bigIntegerToUintBase64url$7(t.e)}}function jwkToPkix$7(r){if(r.n==null||r.e==null)throw new CodeError$e("JWK was missing components","ERR_INVALID_PARAMETERS");const e=forge$n.pki.publicKeyToAsn1({n:base64urlToBigInteger$7(r.n),e:base64urlToBigInteger$7(r.e)});return fromString$b(forge$n.asn1.toDer(e).getBytes(),"ascii")}async function generateKey$m(r){const e=await webcrypto$7.get().subtle.generateKey({name:"RSASSA-PKCS1-v1_5",modulusLength:r,publicExponent:new Uint8Array([1,0,1]),hash:{name:"SHA-256"}},!0,["sign","verify"]),t=await exportKey$7(e);return{privateKey:t[0],publicKey:t[1]}}async function unmarshalPrivateKey$c(r){const t=[await webcrypto$7.get().subtle.importKey("jwk",r,{name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-256"}},!0,["sign"]),await derivePublicFromPrivate$7(r)],n=await exportKey$7({privateKey:t[0],publicKey:t[1]});return{privateKey:n[0],publicKey:n[1]}}async function hashAndSign$m(r,e){const t=await webcrypto$7.get().subtle.importKey("jwk",r,{name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-256"}},!1,["sign"]),n=await webcrypto$7.get().subtle.sign({name:"RSASSA-PKCS1-v1_5"},t,Uint8Array.from(e));return new Uint8Array(n,0,n.byteLength)}async function hashAndVerify$m(r,e,t){const n=await webcrypto$7.get().subtle.importKey("jwk",r,{name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-256"}},!1,["verify"]);return webcrypto$7.get().subtle.verify({name:"RSASSA-PKCS1-v1_5"},n,e,t)}async function exportKey$7(r){if(r.privateKey==null||r.publicKey==null)throw new CodeError$e("Private and public key are required","ERR_INVALID_PARAMETERS");return Promise.all([webcrypto$7.get().subtle.exportKey("jwk",r.privateKey),webcrypto$7.get().subtle.exportKey("jwk",r.publicKey)])}async function derivePublicFromPrivate$7(r){return webcrypto$7.get().subtle.importKey("jwk",{kty:r.kty,n:r.n,e:r.e},{name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-256"}},!0,["verify"])}function convertKey$7(r,e,t,n){const i=e?jwk2pub$7(r):jwk2priv$7(r),o=toString$b(Uint8Array.from(t),"ascii"),a=n(o,i);return fromString$b(a,"ascii")}function encrypt$7(r,e){return convertKey$7(r,!0,e,(t,n)=>n.encrypt(t))}function decrypt$7(r,e){return convertKey$7(r,!1,e,(t,n)=>n.decrypt(t))}function keySize$7(r){if(r.kty!=="RSA")throw new CodeError$e("invalid key type","ERR_INVALID_KEY_TYPE");if(r.n==null)throw new CodeError$e("invalid key modulus","ERR_INVALID_KEY_MODULUS");return fromString$b(r.n,"base64url").length*8}const MAX_KEY_SIZE$7=8192;let RsaPublicKey$7=class{constructor(e){_(this,"_key");this._key=e}async verify(e,t){return hashAndVerify$m(this._key,t,e)}marshal(){return jwkToPkix$7(this._key)}get bytes(){return PublicKey$9.encode({Type:KeyType$9.RSA,Data:this.marshal()}).subarray()}encrypt(e){return encrypt$7(this._key,e)}equals(e){return equals$4(this.bytes,e.bytes)}async hash(){const{bytes:e}=await sha256$2.digest(this.bytes);return e}},RsaPrivateKey$7=class{constructor(e,t){_(this,"_key");_(this,"_publicKey");this._key=e,this._publicKey=t}genSecret(){return randomBytes$8(16)}async sign(e){return hashAndSign$m(this._key,e)}get public(){if(this._publicKey==null)throw new CodeError$e("public key not provided","ERR_PUBKEY_NOT_PROVIDED");return new RsaPublicKey$7(this._publicKey)}decrypt(e){return decrypt$7(this._key,e)}marshal(){return jwkToPkcs1$7(this._key)}get bytes(){return PrivateKey$9.encode({Type:KeyType$9.RSA,Data:this.marshal()}).subarray()}equals(e){return equals$4(this.bytes,e.bytes)}async hash(){const{bytes:e}=await sha256$2.digest(this.bytes);return e}async id(){const e=await this.public.hash();return toString$b(e,"base58btc")}async export(e,t="pkcs-8"){if(t==="pkcs-8"){const n=new forge$n.util.ByteBuffer(this.marshal()),i=forge$n.asn1.fromDer(n),o=forge$n.pki.privateKeyFromAsn1(i),a={algorithm:"aes256",count:1e4,saltSize:128/8,prfAlgorithm:"sha512"};return forge$n.pki.encryptRsaPrivateKey(o,e,a)}else{if(t==="libp2p-key")return exporter$8(this.bytes,e);throw new CodeError$e(`export format '${t}' is not supported`,"ERR_INVALID_EXPORT_FORMAT")}}};async function unmarshalRsaPrivateKey$7(r){const e=pkcs1ToJwk$7(r);if(keySize$7(e)>MAX_KEY_SIZE$7)throw new CodeError$e("key size is too large","ERR_KEY_SIZE_TOO_LARGE");const t=await unmarshalPrivateKey$c(e);return new RsaPrivateKey$7(t.privateKey,t.publicKey)}function unmarshalRsaPublicKey$7(r){const e=pkixToJwk$7(r);if(keySize$7(e)>MAX_KEY_SIZE$7)throw new CodeError$e("key size is too large","ERR_KEY_SIZE_TOO_LARGE");return new RsaPublicKey$7(e)}async function fromJwk$7(r){if(keySize$7(r)>MAX_KEY_SIZE$7)throw new CodeError$e("key size is too large","ERR_KEY_SIZE_TOO_LARGE");const e=await unmarshalPrivateKey$c(r);return new RsaPrivateKey$7(e.privateKey,e.publicKey)}async function generateKeyPair$o(r){if(r>MAX_KEY_SIZE$7)throw new CodeError$e("key size is too large","ERR_KEY_SIZE_TOO_LARGE");const e=await generateKey$m(r);return new RsaPrivateKey$7(e.privateKey,e.publicKey)}const RSA$7=Object.freeze(Object.defineProperty({__proto__:null,MAX_KEY_SIZE:MAX_KEY_SIZE$7,RsaPrivateKey:RsaPrivateKey$7,RsaPublicKey:RsaPublicKey$7,fromJwk:fromJwk$7,generateKeyPair:generateKeyPair$o,unmarshalRsaPrivateKey:unmarshalRsaPrivateKey$7,unmarshalRsaPublicKey:unmarshalRsaPublicKey$7},Symbol.toStringTag,{value:"Module"}));function generateKey$l(){return secp256k1.utils.randomPrivateKey()}async function hashAndSign$l(r,e){const{digest:t}=await sha256$2.digest(e);try{return secp256k1.sign(t,r).toDERRawBytes()}catch(n){throw new CodeError$e(String(n),"ERR_INVALID_INPUT")}}async function hashAndVerify$l(r,e,t){try{const{digest:n}=await sha256$2.digest(t);return secp256k1.verify(e,n,r)}catch(n){throw new CodeError$e(String(n),"ERR_INVALID_INPUT")}}function compressPublicKey$7(r){return secp256k1.ProjectivePoint.fromHex(r).toRawBytes(!0)}function validatePrivateKey$7(r){try{secp256k1.getPublicKey(r,!0)}catch(e){throw new CodeError$e(String(e),"ERR_INVALID_PRIVATE_KEY")}}function validatePublicKey$7(r){try{secp256k1.ProjectivePoint.fromHex(r)}catch(e){throw new CodeError$e(String(e),"ERR_INVALID_PUBLIC_KEY")}}function computePublicKey$7(r){try{return secp256k1.getPublicKey(r,!0)}catch(e){throw new CodeError$e(String(e),"ERR_INVALID_PRIVATE_KEY")}}let Secp256k1PublicKey$7=class{constructor(e){_(this,"_key");validatePublicKey$7(e),this._key=e}async verify(e,t){return hashAndVerify$l(this._key,t,e)}marshal(){return compressPublicKey$7(this._key)}get bytes(){return PublicKey$9.encode({Type:KeyType$9.Secp256k1,Data:this.marshal()}).subarray()}equals(e){return equals$4(this.bytes,e.bytes)}async hash(){const{bytes:e}=await sha256$2.digest(this.bytes);return e}},Secp256k1PrivateKey$7=class{constructor(e,t){_(this,"_key");_(this,"_publicKey");this._key=e,this._publicKey=t??computePublicKey$7(e),validatePrivateKey$7(this._key),validatePublicKey$7(this._publicKey)}async sign(e){return hashAndSign$l(this._key,e)}get public(){return new Secp256k1PublicKey$7(this._publicKey)}marshal(){return this._key}get bytes(){return PrivateKey$9.encode({Type:KeyType$9.Secp256k1,Data:this.marshal()}).subarray()}equals(e){return equals$4(this.bytes,e.bytes)}async hash(){const{bytes:e}=await sha256$2.digest(this.bytes);return e}async id(){const e=await this.public.hash();return toString$b(e,"base58btc")}async export(e,t="libp2p-key"){if(t==="libp2p-key")return exporter$8(this.bytes,e);throw new CodeError$e(`export format '${t}' is not supported`,"ERR_INVALID_EXPORT_FORMAT")}};function unmarshalSecp256k1PrivateKey$7(r){return new Secp256k1PrivateKey$7(r)}function unmarshalSecp256k1PublicKey$7(r){return new Secp256k1PublicKey$7(r)}async function generateKeyPair$n(){const r=generateKey$l();return new Secp256k1PrivateKey$7(r)}const Secp256k1$7=Object.freeze(Object.defineProperty({__proto__:null,Secp256k1PrivateKey:Secp256k1PrivateKey$7,Secp256k1PublicKey:Secp256k1PublicKey$7,generateKeyPair:generateKeyPair$n,unmarshalSecp256k1PrivateKey:unmarshalSecp256k1PrivateKey$7,unmarshalSecp256k1PublicKey:unmarshalSecp256k1PublicKey$7},Symbol.toStringTag,{value:"Module"})),supportedKeys$7={rsa:RSA$7,ed25519:Ed25519$7,secp256k1:Secp256k1$7};function unsupportedKey$7(r){const e=Object.keys(supportedKeys$7).join(" / ");return new CodeError$e(`invalid or unsupported key type ${r}. Must be ${e}`,"ERR_UNSUPPORTED_KEY_TYPE")}function typeToKey$3(r){if(r=r.toLowerCase(),r==="rsa"||r==="ed25519"||r==="secp256k1")return supportedKeys$7[r];throw unsupportedKey$7(r)}async function generateKeyPair$m(r,e){return typeToKey$3(r).generateKeyPair(e??2048)}async function unmarshalPrivateKey$b(r){const e=PrivateKey$9.decode(r),t=e.Data??new Uint8Array;switch(e.Type){case KeyType$9.RSA:return supportedKeys$7.rsa.unmarshalRsaPrivateKey(t);case KeyType$9.Ed25519:return supportedKeys$7.ed25519.unmarshalEd25519PrivateKey(t);case KeyType$9.Secp256k1:return supportedKeys$7.secp256k1.unmarshalSecp256k1PrivateKey(t);default:throw unsupportedKey$7(e.Type??"RSA")}}async function importKey(r,e){try{const i=await importer$1(r,e);return await unmarshalPrivateKey$b(i)}catch{}const t=forge$n.pki.decryptRsaPrivateKey(r,e);if(t===null)throw new CodeError$e("Cannot read the key, most likely the password is wrong or not a RSA key","ERR_CANNOT_DECRYPT_PEM");let n=forge$n.asn1.toDer(forge$n.pki.privateKeyToAsn1(t));return n=fromString$b(n.getBytes(),"ascii"),supportedKeys$7.rsa.unmarshalRsaPrivateKey(n)}const hashName={sha1:"sha1","sha2-256":"sha256","sha2-512":"sha512"};function pbkdf2(r,e,t,n,i){if(i!=="sha1"&&i!=="sha2-256"&&i!=="sha2-512"){const c=Object.keys(hashName).join(" / ");throw new CodeError$e(`Hash '${i}' is unknown or not supported. Must be ${c}`,"ERR_UNSUPPORTED_HASH_TYPE")}const o=hashName[i],a=forgePbkdf2(r,e,t,n,o);return forgeUtil.encode64(a,null)}const symbol$4=Symbol.for("@libp2p/peer-id");function isPeerId$2(r){return r!=null&&!!r[symbol$4]}const inspect$c=Symbol.for("nodejs.util.inspect.custom"),baseDecoder$a=Object.values(bases$2).map(r=>r.decoder).reduce((r,e)=>r.or(e),bases$2.identity.decoder),LIBP2P_KEY_CODE$a=114,MARSHALLED_ED225519_PUBLIC_KEY_LENGTH$a=36,MARSHALLED_SECP256K1_PUBLIC_KEY_LENGTH$a=37;var Er;let PeerIdImpl$a=class{constructor(e){_(this,"type");_(this,"multihash");_(this,"privateKey");_(this,"publicKey");_(this,"string");_(this,Er,!0);this.type=e.type,this.multihash=e.multihash,this.privateKey=e.privateKey,Object.defineProperty(this,"string",{enumerable:!1,writable:!0})}get[Symbol.toStringTag](){return`PeerId(${this.toString()})`}toString(){return this.string==null&&(this.string=base58btc$4.encode(this.multihash.bytes).slice(1)),this.string}toCID(){return CID$3.createV1(LIBP2P_KEY_CODE$a,this.multihash)}toBytes(){return this.multihash.bytes}toJSON(){return this.toString()}equals(e){if(e instanceof Uint8Array)return equals$4(this.multihash.bytes,e);if(typeof e=="string")return peerIdFromString$a(e).equals(this);if(e?.multihash?.bytes!=null)return equals$4(this.multihash.bytes,e.multihash.bytes);throw new Error("not valid Id")}[(Er=symbol$4,inspect$c)](){return`PeerId(${this.toString()})`}},RSAPeerIdImpl$a=class extends PeerIdImpl$a{constructor(t){super({...t,type:"RSA"});_(this,"type","RSA");_(this,"publicKey");this.publicKey=t.publicKey}},Ed25519PeerIdImpl$a=class extends PeerIdImpl$a{constructor(t){super({...t,type:"Ed25519"});_(this,"type","Ed25519");_(this,"publicKey");this.publicKey=t.multihash.digest}},Secp256k1PeerIdImpl$a=class extends PeerIdImpl$a{constructor(t){super({...t,type:"secp256k1"});_(this,"type","secp256k1");_(this,"publicKey");this.publicKey=t.multihash.digest}};function peerIdFromString$a(r,e){if(r.charAt(0)==="1"||r.charAt(0)==="Q"){const t=decode$n(base58btc$4.decode(`z${r}`));return r.startsWith("12D")?new Ed25519PeerIdImpl$a({multihash:t}):r.startsWith("16U")?new Secp256k1PeerIdImpl$a({multihash:t}):new RSAPeerIdImpl$a({multihash:t})}return peerIdFromBytes$a(baseDecoder$a.decode(r))}function peerIdFromBytes$a(r){try{const e=decode$n(r);if(e.code===identity$3.code){if(e.digest.length===MARSHALLED_ED225519_PUBLIC_KEY_LENGTH$a)return new Ed25519PeerIdImpl$a({multihash:e});if(e.digest.length===MARSHALLED_SECP256K1_PUBLIC_KEY_LENGTH$a)return new Secp256k1PeerIdImpl$a({multihash:e})}if(e.code===sha256$2.code)return new RSAPeerIdImpl$a({multihash:e})}catch{return peerIdFromCID$a(CID$3.decode(r))}throw new Error("Supplied PeerID CID is invalid")}function peerIdFromCID$a(r){if(r==null||r.multihash==null||r.version==null||r.version===1&&r.code!==LIBP2P_KEY_CODE$a)throw new Error("Supplied PeerID CID is invalid");const e=r.multihash;if(e.code===sha256$2.code)return new RSAPeerIdImpl$a({multihash:r.multihash});if(e.code===identity$3.code){if(e.digest.length===MARSHALLED_ED225519_PUBLIC_KEY_LENGTH$a)return new Ed25519PeerIdImpl$a({multihash:r.multihash});if(e.digest.length===MARSHALLED_SECP256K1_PUBLIC_KEY_LENGTH$a)return new Secp256k1PeerIdImpl$a({multihash:r.multihash})}throw new Error("Supplied PeerID CID is invalid")}async function peerIdFromKeys$7(r,e){return r.length===MARSHALLED_ED225519_PUBLIC_KEY_LENGTH$a?new Ed25519PeerIdImpl$a({multihash:create$c(identity$3.code,r),privateKey:e}):r.length===MARSHALLED_SECP256K1_PUBLIC_KEY_LENGTH$a?new Secp256k1PeerIdImpl$a({multihash:create$c(identity$3.code,r),privateKey:e}):new RSAPeerIdImpl$a({multihash:await sha256$2.digest(r),publicKey:r,privateKey:e})}var isPlainObj=r=>{if(Object.prototype.toString.call(r)!=="[object Object]")return!1;const e=Object.getPrototypeOf(r);return e===null||e===Object.prototype};const isOptionObject=isPlainObj,{hasOwnProperty}=Object.prototype,{propertyIsEnumerable}=Object,defineProperty=(r,e,t)=>Object.defineProperty(r,e,{value:t,writable:!0,enumerable:!0,configurable:!0}),globalThis$1=commonjsGlobal,defaultMergeOptions={concatArrays:!1,ignoreUndefined:!1},getEnumerableOwnPropertyKeys=r=>{const e=[];for(const t in r)hasOwnProperty.call(r,t)&&e.push(t);if(Object.getOwnPropertySymbols){const t=Object.getOwnPropertySymbols(r);for(const n of t)propertyIsEnumerable.call(r,n)&&e.push(n)}return e};function clone(r){return Array.isArray(r)?cloneArray(r):isOptionObject(r)?cloneOptionObject(r):r}function cloneArray(r){const e=r.slice(0,0);return getEnumerableOwnPropertyKeys(r).forEach(t=>{defineProperty(e,t,clone(r[t]))}),e}function cloneOptionObject(r){const e=Object.getPrototypeOf(r)===null?Object.create(null):{};return getEnumerableOwnPropertyKeys(r).forEach(t=>{defineProperty(e,t,clone(r[t]))}),e}const mergeKeys=(r,e,t,n)=>(t.forEach(i=>{typeof e[i]>"u"&&n.ignoreUndefined||(i in r&&r[i]!==Object.getPrototypeOf(r)?defineProperty(r,i,merge(r[i],e[i],n)):defineProperty(r,i,clone(e[i])))}),r),concatArrays=(r,e,t)=>{let n=r.slice(0,0),i=0;return[r,e].forEach(o=>{const a=[];for(let c=0;c<o.length;c++)hasOwnProperty.call(o,c)&&(a.push(String(c)),o===r?defineProperty(n,i++,o[c]):defineProperty(n,i++,clone(o[c])));n=mergeKeys(n,o,getEnumerableOwnPropertyKeys(o).filter(c=>!a.includes(c)),t)}),n};function merge(r,e,t){return t.concatArrays&&Array.isArray(r)&&Array.isArray(e)?concatArrays(r,e,t):!isOptionObject(e)||!isOptionObject(r)?clone(e):mergeKeys(r,e,getEnumerableOwnPropertyKeys(e),t)}var mergeOptions$8=function(...r){const e=merge(clone(defaultMergeOptions),this!==globalThis$1&&this||{},defaultMergeOptions);let t={_:{}};for(const n of r)if(n!==void 0){if(!isOptionObject(n))throw new TypeError("`"+n+"` is not an Option Object");t=merge(t,{_:n},e)}return t._};const mergeOptions$9=getDefaultExportFromCjs(mergeOptions$8);function isHighSurrogate$1(r){return r>=55296&&r<=56319}function isLowSurrogate$1(r){return r>=56320&&r<=57343}var truncate$2=function r(e,t,n){if(typeof t!="string")throw new Error("Input must be string");for(var i=t.length,o=0,a,c,l=0;l<i;l+=1){if(a=t.charCodeAt(l),c=t[l],isHighSurrogate$1(a)&&isLowSurrogate$1(t.charCodeAt(l+1))&&(l+=1,c+=t[l]),o+=e(c),o===n)return t.slice(0,l+1);if(o>n)return t.slice(0,l-c.length+1)}return t};function isHighSurrogate(r){return r>=55296&&r<=56319}function isLowSurrogate(r){return r>=56320&&r<=57343}var browser$3=function r(e){if(typeof e!="string")throw new Error("Input must be string");for(var t=e.length,n=0,i=null,o=null,a=0;a<t;a++)i=e.charCodeAt(a),isLowSurrogate(i)?o!=null&&isHighSurrogate(o)?n+=1:n+=3:i<=127?n+=1:i>=128&&i<=2047?n+=2:i>=2048&&i<=65535&&(n+=3),o=i;return n},truncate$1=truncate$2,getLength=browser$3,browser$2=truncate$1.bind(null,getLength),truncate=browser$2,illegalRe=/[\/\?<>\\:\*\|"]/g,controlRe=/[\x00-\x1f\x80-\x9f]/g,reservedRe=/^\.+$/,windowsReservedRe=/^(con|prn|aux|nul|com[0-9]|lpt[0-9])(\..*)?$/i,windowsTrailingRe=/[\. ]+$/;function sanitize(r,e){if(typeof r!="string")throw new Error("Input must be string");var t=r.replace(illegalRe,e).replace(controlRe,e).replace(reservedRe,e).replace(windowsReservedRe,e).replace(windowsTrailingRe,e);return truncate(t,255)}var sanitizeFilename=function(r,e){var t=e&&e.replacement||"",n=sanitize(r,t);return t===""?n:sanitize(n,"")};const sanitize$1=getDefaultExportFromCjs(sanitizeFilename);var codes$a;(function(r){r.ERR_INVALID_PARAMETERS="ERR_INVALID_PARAMETERS",r.ERR_INVALID_KEY_NAME="ERR_INVALID_KEY_NAME",r.ERR_INVALID_KEY_TYPE="ERR_INVALID_KEY_TYPE",r.ERR_KEY_ALREADY_EXISTS="ERR_KEY_ALREADY_EXISTS",r.ERR_INVALID_KEY_SIZE="ERR_INVALID_KEY_SIZE",r.ERR_KEY_NOT_FOUND="ERR_KEY_NOT_FOUND",r.ERR_OLD_KEY_NAME_INVALID="ERR_OLD_KEY_NAME_INVALID",r.ERR_NEW_KEY_NAME_INVALID="ERR_NEW_KEY_NAME_INVALID",r.ERR_PASSWORD_REQUIRED="ERR_PASSWORD_REQUIRED",r.ERR_PEM_REQUIRED="ERR_PEM_REQUIRED",r.ERR_CANNOT_READ_KEY="ERR_CANNOT_READ_KEY",r.ERR_MISSING_PRIVATE_KEY="ERR_MISSING_PRIVATE_KEY",r.ERR_INVALID_OLD_PASS_TYPE="ERR_INVALID_OLD_PASS_TYPE",r.ERR_INVALID_NEW_PASS_TYPE="ERR_INVALID_NEW_PASS_TYPE",r.ERR_INVALID_PASS_LENGTH="ERR_INVALID_PASS_LENGTH"})(codes$a||(codes$a={}));const log$Y=logger$5("libp2p:keychain"),keyPrefix="/pkcs8/",infoPrefix="/info/",privates=new WeakMap,NIST={minKeyLength:112/8,minSaltLength:128/8,minIterationCount:1e3},defaultOptions$g={dek:{keyLength:512/8,iterationCount:1e4,salt:"you should override this value with a crypto secure random number",hash:"sha2-512"}};function validateKeyName(r){return r==null||typeof r!="string"?!1:r===sanitize$1(r.trim())&&r.length>0}async function randomDelay(){const t=Math.random()*800+200;await new Promise(n=>setTimeout(n,t))}function DsName(r){return new Key(keyPrefix+r)}function DsInfoName(r){return new Key(infoPrefix+r)}class DefaultKeyChain{constructor(e,t){_(this,"components");_(this,"init");if(this.components=e,this.init=mergeOptions$9(defaultOptions$g,t),this.init.pass!=null&&this.init.pass?.length<20)throw new Error("pass must be least 20 characters");if(this.init.dek?.keyLength!=null&&this.init.dek.keyLength<NIST.minKeyLength)throw new Error(`dek.keyLength must be least ${NIST.minKeyLength} bytes`);if(this.init.dek?.salt?.length!=null&&this.init.dek.salt.length<NIST.minSaltLength)throw new Error(`dek.saltLength must be least ${NIST.minSaltLength} bytes`);if(this.init.dek?.iterationCount!=null&&this.init.dek.iterationCount<NIST.minIterationCount)throw new Error(`dek.iterationCount must be least ${NIST.minIterationCount}`);const n=this.init.pass!=null&&this.init.dek?.salt!=null?pbkdf2(this.init.pass,this.init.dek?.salt,this.init.dek?.iterationCount,this.init.dek?.keyLength,this.init.dek?.hash):"";privates.set(this,{dek:n})}static generateOptions(){const e=Object.assign({},defaultOptions$g),t=Math.ceil(NIST.minSaltLength/3)*3;return e.dek.salt=toString$b(randomBytes$8(t),"base64"),e}static get options(){return defaultOptions$g}async createKey(e,t,n=2048){if(!validateKeyName(e)||e==="self")throw await randomDelay(),new CodeError$e("Invalid key name",codes$a.ERR_INVALID_KEY_NAME);if(typeof t!="string")throw await randomDelay(),new CodeError$e("Invalid key type",codes$a.ERR_INVALID_KEY_TYPE);const i=DsName(e);if(await this.components.datastore.has(i))throw await randomDelay(),new CodeError$e("Key name already exists",codes$a.ERR_KEY_ALREADY_EXISTS);switch(t.toLowerCase()){case"rsa":if(!Number.isSafeInteger(n)||n<2048)throw await randomDelay(),new CodeError$e("Invalid RSA key size",codes$a.ERR_INVALID_KEY_SIZE);break}let a;try{const c=await generateKeyPair$m(t,n),l=await c.id(),u=privates.get(this);if(u==null)throw new CodeError$e("dek missing",codes$a.ERR_INVALID_PARAMETERS);const f=u.dek,g=await c.export(f);a={name:e,id:l};const $=this.components.datastore.batch();$.put(i,fromString$b(g)),$.put(DsInfoName(e),fromString$b(JSON.stringify(a))),await $.commit()}catch(c){throw await randomDelay(),c}return a}async listKeys(){const e={prefix:infoPrefix},t=[];for await(const n of this.components.datastore.query(e))t.push(JSON.parse(toString$b(n.value)));return t}async findKeyById(e){try{const n=(await this.listKeys()).find(i=>i.id===e);if(n==null)throw new CodeError$e(`Key with id '${e}' does not exist.`,codes$a.ERR_KEY_NOT_FOUND);return n}catch(t){throw await randomDelay(),t}}async findKeyByName(e){if(!validateKeyName(e))throw await randomDelay(),new CodeError$e(`Invalid key name '${e}'`,codes$a.ERR_INVALID_KEY_NAME);const t=DsInfoName(e);try{const n=await this.components.datastore.get(t);return JSON.parse(toString$b(n))}catch(n){throw await randomDelay(),log$Y.error(n),new CodeError$e(`Key '${e}' does not exist.`,codes$a.ERR_KEY_NOT_FOUND)}}async removeKey(e){if(!validateKeyName(e)||e==="self")throw await randomDelay(),new CodeError$e(`Invalid key name '${e}'`,codes$a.ERR_INVALID_KEY_NAME);const t=DsName(e),n=await this.findKeyByName(e),i=this.components.datastore.batch();return i.delete(t),i.delete(DsInfoName(e)),await i.commit(),n}async renameKey(e,t){if(!validateKeyName(e)||e==="self")throw await randomDelay(),new CodeError$e(`Invalid old key name '${e}'`,codes$a.ERR_OLD_KEY_NAME_INVALID);if(!validateKeyName(t)||t==="self")throw await randomDelay(),new CodeError$e(`Invalid new key name '${t}'`,codes$a.ERR_NEW_KEY_NAME_INVALID);const n=DsName(e),i=DsName(t),o=DsInfoName(e),a=DsInfoName(t);if(await this.components.datastore.has(i))throw await randomDelay(),new CodeError$e(`Key '${t}' already exists`,codes$a.ERR_KEY_ALREADY_EXISTS);try{const l=await this.components.datastore.get(n),u=await this.components.datastore.get(o),f=JSON.parse(toString$b(u));f.name=t;const g=this.components.datastore.batch();return g.put(i,l),g.put(a,fromString$b(JSON.stringify(f))),g.delete(n),g.delete(o),await g.commit(),f}catch(l){throw await randomDelay(),l}}async exportKey(e,t){if(!validateKeyName(e))throw await randomDelay(),new CodeError$e(`Invalid key name '${e}'`,codes$a.ERR_INVALID_KEY_NAME);if(t==null)throw await randomDelay(),new CodeError$e("Password is required",codes$a.ERR_PASSWORD_REQUIRED);const n=DsName(e);try{const i=await this.components.datastore.get(n),o=toString$b(i),a=privates.get(this);if(a==null)throw new CodeError$e("dek missing",codes$a.ERR_INVALID_PARAMETERS);const c=a.dek;return await(await importKey(o,c)).export(t)}catch(i){throw await randomDelay(),i}}async exportPeerId(e){const t="temporary-password",n=await this.exportKey(e,t),i=await importKey(n,t);return peerIdFromKeys$7(i.public.bytes,i.bytes)}async importKey(e,t,n){if(!validateKeyName(e)||e==="self")throw await randomDelay(),new CodeError$e(`Invalid key name '${e}'`,codes$a.ERR_INVALID_KEY_NAME);if(t==null)throw await randomDelay(),new CodeError$e("PEM encoded key is required",codes$a.ERR_PEM_REQUIRED);const i=DsName(e);if(await this.components.datastore.has(i))throw await randomDelay(),new CodeError$e(`Key '${e}' already exists`,codes$a.ERR_KEY_ALREADY_EXISTS);let a;try{a=await importKey(t,n)}catch{throw await randomDelay(),new CodeError$e("Cannot read the key, most likely the password is wrong",codes$a.ERR_CANNOT_READ_KEY)}let c;try{c=await a.id();const f=privates.get(this);if(f==null)throw new CodeError$e("dek missing",codes$a.ERR_INVALID_PARAMETERS);const g=f.dek;t=await a.export(g)}catch(f){throw await randomDelay(),f}const l={name:e,id:c},u=this.components.datastore.batch();return u.put(i,fromString$b(t)),u.put(DsInfoName(e),fromString$b(JSON.stringify(l))),await u.commit(),l}async importPeer(e,t){try{if(!validateKeyName(e))throw new CodeError$e(`Invalid key name '${e}'`,codes$a.ERR_INVALID_KEY_NAME);if(t==null)throw new CodeError$e("PeerId is required",codes$a.ERR_MISSING_PRIVATE_KEY);if(t.privateKey==null)throw new CodeError$e("PeerId.privKey is required",codes$a.ERR_MISSING_PRIVATE_KEY);const n=await unmarshalPrivateKey$b(t.privateKey),i=DsName(e);if(await this.components.datastore.has(i))throw await randomDelay(),new CodeError$e(`Key '${e}' already exists`,codes$a.ERR_KEY_ALREADY_EXISTS);const a=privates.get(this);if(a==null)throw new CodeError$e("dek missing",codes$a.ERR_INVALID_PARAMETERS);const c=a.dek,l=await n.export(c),u={name:e,id:t.toString()},f=this.components.datastore.batch();return f.put(i,fromString$b(l)),f.put(DsInfoName(e),fromString$b(JSON.stringify(u))),await f.commit(),u}catch(n){throw await randomDelay(),n}}async getPrivateKey(e){if(!validateKeyName(e))throw await randomDelay(),new CodeError$e(`Invalid key name '${e}'`,codes$a.ERR_INVALID_KEY_NAME);try{const t=DsName(e),n=await this.components.datastore.get(t);return toString$b(n)}catch(t){throw await randomDelay(),log$Y.error(t),new CodeError$e(`Key '${e}' does not exist.`,codes$a.ERR_KEY_NOT_FOUND)}}async rotateKeychainPass(e,t){if(typeof e!="string")throw await randomDelay(),new CodeError$e(`Invalid old pass type '${typeof e}'`,codes$a.ERR_INVALID_OLD_PASS_TYPE);if(typeof t!="string")throw await randomDelay(),new CodeError$e(`Invalid new pass type '${typeof t}'`,codes$a.ERR_INVALID_NEW_PASS_TYPE);if(t.length<20)throw await randomDelay(),new CodeError$e(`Invalid pass length ${t.length}`,codes$a.ERR_INVALID_PASS_LENGTH);log$Y("recreating keychain");const n=privates.get(this);if(n==null)throw new CodeError$e("dek missing",codes$a.ERR_INVALID_PARAMETERS);const i=n.dek;this.init.pass=t;const o=t!=null&&this.init.dek?.salt!=null?pbkdf2(t,this.init.dek.salt,this.init.dek?.iterationCount,this.init.dek?.keyLength,this.init.dek?.hash):"";privates.set(this,{dek:o});const a=await this.listKeys();for(const c of a){const l=await this.components.datastore.get(DsName(c.name)),u=toString$b(l),f=await importKey(u,i),g=o.toString(),$=await f.export(g),S=this.components.datastore.batch(),E={name:c.name,id:c.id};S.put(DsName(c.name),fromString$b($)),S.put(DsInfoName(c.name),fromString$b(JSON.stringify(E))),await S.commit()}log$Y("keychain reconstructed")}}const inspect$b=Symbol.for("nodejs.util.inspect.custom"),baseDecoder$9=Object.values(bases$2).map(r=>r.decoder).reduce((r,e)=>r.or(e),bases$2.identity.decoder),LIBP2P_KEY_CODE$9=114,MARSHALLED_ED225519_PUBLIC_KEY_LENGTH$9=36,MARSHALLED_SECP256K1_PUBLIC_KEY_LENGTH$9=37;var wr;let PeerIdImpl$9=class{constructor(e){_(this,"type");_(this,"multihash");_(this,"privateKey");_(this,"publicKey");_(this,"string");_(this,wr,!0);this.type=e.type,this.multihash=e.multihash,this.privateKey=e.privateKey,Object.defineProperty(this,"string",{enumerable:!1,writable:!0})}get[Symbol.toStringTag](){return`PeerId(${this.toString()})`}toString(){return this.string==null&&(this.string=base58btc$4.encode(this.multihash.bytes).slice(1)),this.string}toCID(){return CID$3.createV1(LIBP2P_KEY_CODE$9,this.multihash)}toBytes(){return this.multihash.bytes}toJSON(){return this.toString()}equals(e){if(e instanceof Uint8Array)return equals$4(this.multihash.bytes,e);if(typeof e=="string")return peerIdFromString$9(e).equals(this);if(e?.multihash?.bytes!=null)return equals$4(this.multihash.bytes,e.multihash.bytes);throw new Error("not valid Id")}[(wr=symbol$4,inspect$b)](){return`PeerId(${this.toString()})`}},RSAPeerIdImpl$9=class extends PeerIdImpl$9{constructor(t){super({...t,type:"RSA"});_(this,"type","RSA");_(this,"publicKey");this.publicKey=t.publicKey}},Ed25519PeerIdImpl$9=class extends PeerIdImpl$9{constructor(t){super({...t,type:"Ed25519"});_(this,"type","Ed25519");_(this,"publicKey");this.publicKey=t.multihash.digest}},Secp256k1PeerIdImpl$9=class extends PeerIdImpl$9{constructor(t){super({...t,type:"secp256k1"});_(this,"type","secp256k1");_(this,"publicKey");this.publicKey=t.multihash.digest}};function peerIdFromString$9(r,e){if(r.charAt(0)==="1"||r.charAt(0)==="Q"){const t=decode$n(base58btc$4.decode(`z${r}`));return r.startsWith("12D")?new Ed25519PeerIdImpl$9({multihash:t}):r.startsWith("16U")?new Secp256k1PeerIdImpl$9({multihash:t}):new RSAPeerIdImpl$9({multihash:t})}return peerIdFromBytes$9(baseDecoder$9.decode(r))}function peerIdFromBytes$9(r){try{const e=decode$n(r);if(e.code===identity$3.code){if(e.digest.length===MARSHALLED_ED225519_PUBLIC_KEY_LENGTH$9)return new Ed25519PeerIdImpl$9({multihash:e});if(e.digest.length===MARSHALLED_SECP256K1_PUBLIC_KEY_LENGTH$9)return new Secp256k1PeerIdImpl$9({multihash:e})}if(e.code===sha256$2.code)return new RSAPeerIdImpl$9({multihash:e})}catch{return peerIdFromCID$9(CID$3.decode(r))}throw new Error("Supplied PeerID CID is invalid")}function peerIdFromCID$9(r){if(r==null||r.multihash==null||r.version==null||r.version===1&&r.code!==LIBP2P_KEY_CODE$9)throw new Error("Supplied PeerID CID is invalid");const e=r.multihash;if(e.code===sha256$2.code)return new RSAPeerIdImpl$9({multihash:r.multihash});if(e.code===identity$3.code){if(e.digest.length===MARSHALLED_ED225519_PUBLIC_KEY_LENGTH$9)return new Ed25519PeerIdImpl$9({multihash:r.multihash});if(e.digest.length===MARSHALLED_SECP256K1_PUBLIC_KEY_LENGTH$9)return new Secp256k1PeerIdImpl$9({multihash:r.multihash})}throw new Error("Supplied PeerID CID is invalid")}function mapIterable$2(r,e){const t={[Symbol.iterator]:()=>t,next:()=>{const n=r.next(),i=n.value;return n.done===!0||i==null?{done:!0,value:void 0}:{done:!1,value:e(i)}}};return t}let PeerMap$2=class{constructor(e){_(this,"map");if(this.map=new Map,e!=null)for(const[t,n]of e.entries())this.map.set(t.toString(),n)}[Symbol.iterator](){return this.entries()}clear(){this.map.clear()}delete(e){this.map.delete(e.toString())}entries(){return mapIterable$2(this.map.entries(),e=>[peerIdFromString$9(e[0]),e[1]])}forEach(e){this.map.forEach((t,n)=>{e(t,peerIdFromString$9(n),this)})}get(e){return this.map.get(e.toString())}has(e){return this.map.has(e.toString())}set(e,t){this.map.set(e.toString(),t)}keys(){return mapIterable$2(this.map.keys(),e=>peerIdFromString$9(e))}values(){return this.map.values()}get size(){return this.map.size}},PeerSet$1=class dt{constructor(e){_(this,"set");if(this.set=new Set,e!=null)for(const t of e)this.set.add(t.toString())}get size(){return this.set.size}[Symbol.iterator](){return this.values()}add(e){this.set.add(e.toString())}clear(){this.set.clear()}delete(e){this.set.delete(e.toString())}entries(){return mapIterable$2(this.set.entries(),e=>{const t=peerIdFromString$9(e[0]);return[t,t]})}forEach(e){this.set.forEach(t=>{const n=peerIdFromString$9(t);e(n,n,this)})}has(e){return this.set.has(e.toString())}values(){return mapIterable$2(this.set.values(),e=>peerIdFromString$9(e))}intersection(e){const t=new dt;for(const n of e)this.has(n)&&t.add(n);return t}difference(e){const t=new dt;for(const n of this)e.has(n)||t.add(n);return t}union(e){const t=new dt;for(const n of e)t.add(n);for(const n of this)t.add(n);return t}};const inspect$a=Symbol.for("nodejs.util.inspect.custom"),baseDecoder$8=Object.values(bases$2).map(r=>r.decoder).reduce((r,e)=>r.or(e),bases$2.identity.decoder),LIBP2P_KEY_CODE$8=114,MARSHALLED_ED225519_PUBLIC_KEY_LENGTH$8=36,MARSHALLED_SECP256K1_PUBLIC_KEY_LENGTH$8=37;var vr;let PeerIdImpl$8=class{constructor(e){_(this,"type");_(this,"multihash");_(this,"privateKey");_(this,"publicKey");_(this,"string");_(this,vr,!0);this.type=e.type,this.multihash=e.multihash,this.privateKey=e.privateKey,Object.defineProperty(this,"string",{enumerable:!1,writable:!0})}get[Symbol.toStringTag](){return`PeerId(${this.toString()})`}toString(){return this.string==null&&(this.string=base58btc$4.encode(this.multihash.bytes).slice(1)),this.string}toCID(){return CID$3.createV1(LIBP2P_KEY_CODE$8,this.multihash)}toBytes(){return this.multihash.bytes}toJSON(){return this.toString()}equals(e){if(e instanceof Uint8Array)return equals$4(this.multihash.bytes,e);if(typeof e=="string")return peerIdFromString$8(e).equals(this);if(e?.multihash?.bytes!=null)return equals$4(this.multihash.bytes,e.multihash.bytes);throw new Error("not valid Id")}[(vr=symbol$4,inspect$a)](){return`PeerId(${this.toString()})`}},RSAPeerIdImpl$8=class extends PeerIdImpl$8{constructor(t){super({...t,type:"RSA"});_(this,"type","RSA");_(this,"publicKey");this.publicKey=t.publicKey}},Ed25519PeerIdImpl$8=class extends PeerIdImpl$8{constructor(t){super({...t,type:"Ed25519"});_(this,"type","Ed25519");_(this,"publicKey");this.publicKey=t.multihash.digest}},Secp256k1PeerIdImpl$8=class extends PeerIdImpl$8{constructor(t){super({...t,type:"secp256k1"});_(this,"type","secp256k1");_(this,"publicKey");this.publicKey=t.multihash.digest}};function peerIdFromPeerId$1(r){if(r.type==="RSA")return new RSAPeerIdImpl$8(r);if(r.type==="Ed25519")return new Ed25519PeerIdImpl$8(r);if(r.type==="secp256k1")return new Secp256k1PeerIdImpl$8(r);throw new CodeError$e("Not a PeerId","ERR_INVALID_PARAMETERS")}function peerIdFromString$8(r,e){if(r.charAt(0)==="1"||r.charAt(0)==="Q"){const t=decode$n(base58btc$4.decode(`z${r}`));return r.startsWith("12D")?new Ed25519PeerIdImpl$8({multihash:t}):r.startsWith("16U")?new Secp256k1PeerIdImpl$8({multihash:t}):new RSAPeerIdImpl$8({multihash:t})}return peerIdFromBytes$8(baseDecoder$8.decode(r))}function peerIdFromBytes$8(r){try{const e=decode$n(r);if(e.code===identity$3.code){if(e.digest.length===MARSHALLED_ED225519_PUBLIC_KEY_LENGTH$8)return new Ed25519PeerIdImpl$8({multihash:e});if(e.digest.length===MARSHALLED_SECP256K1_PUBLIC_KEY_LENGTH$8)return new Secp256k1PeerIdImpl$8({multihash:e})}if(e.code===sha256$2.code)return new RSAPeerIdImpl$8({multihash:e})}catch{return peerIdFromCID$8(CID$3.decode(r))}throw new Error("Supplied PeerID CID is invalid")}function peerIdFromCID$8(r){if(r==null||r.multihash==null||r.version==null||r.version===1&&r.code!==LIBP2P_KEY_CODE$8)throw new Error("Supplied PeerID CID is invalid");const e=r.multihash;if(e.code===sha256$2.code)return new RSAPeerIdImpl$8({multihash:r.multihash});if(e.code===identity$3.code){if(e.digest.length===MARSHALLED_ED225519_PUBLIC_KEY_LENGTH$8)return new Ed25519PeerIdImpl$8({multihash:r.multihash});if(e.digest.length===MARSHALLED_SECP256K1_PUBLIC_KEY_LENGTH$8)return new Secp256k1PeerIdImpl$8({multihash:r.multihash})}throw new Error("Supplied PeerID CID is invalid")}async function peerIdFromKeys$6(r,e){return r.length===MARSHALLED_ED225519_PUBLIC_KEY_LENGTH$8?new Ed25519PeerIdImpl$8({multihash:create$c(identity$3.code,r),privateKey:e}):r.length===MARSHALLED_SECP256K1_PUBLIC_KEY_LENGTH$8?new Secp256k1PeerIdImpl$8({multihash:create$c(identity$3.code,r),privateKey:e}):new RSAPeerIdImpl$8({multihash:await sha256$2.digest(r),publicKey:r,privateKey:e})}var PeerIdProto$1;(function(r){let e;r.codec=()=>(e==null&&(e=message((t,n,i={})=>{i.lengthDelimited!==!1&&n.fork(),t.id!=null&&(n.uint32(10),n.bytes(t.id)),t.pubKey!=null&&(n.uint32(18),n.bytes(t.pubKey)),t.privKey!=null&&(n.uint32(26),n.bytes(t.privKey)),i.lengthDelimited!==!1&&n.ldelim()},(t,n)=>{const i={},o=n==null?t.len:t.pos+n;for(;t.pos<o;){const a=t.uint32();switch(a>>>3){case 1:i.id=t.bytes();break;case 2:i.pubKey=t.bytes();break;case 3:i.privKey=t.bytes();break;default:t.skipType(a&7);break}}return i})),e),r.encode=t=>encodeMessage(t,r.codec()),r.decode=t=>decodeMessage$1(t,r.codec())})(PeerIdProto$1||(PeerIdProto$1={}));const createEd25519PeerId$1=async()=>{const r=await generateKeyPair$q("Ed25519"),e=await createFromPrivKey$1(r);if(e.type==="Ed25519")return e;throw new Error(`Generated unexpected PeerId type "${e.type}"`)};async function createFromPrivKey$1(r){return peerIdFromKeys$6(marshalPublicKey$3(r.public),marshalPrivateKey$1(r))}const N1$2=Math.pow(2,7),N2$2=Math.pow(2,14),N3$2=Math.pow(2,21),N4$2=Math.pow(2,28),N5$2=Math.pow(2,35),N6$2=Math.pow(2,42),N7$2=Math.pow(2,49),MSB$5=128,REST$5=127;function encodingLength$1(r){if(r<N1$2)return 1;if(r<N2$2)return 2;if(r<N3$2)return 3;if(r<N4$2)return 4;if(r<N5$2)return 5;if(r<N6$2)return 6;if(r<N7$2)return 7;if(Number.MAX_SAFE_INTEGER!=null&&r>Number.MAX_SAFE_INTEGER)throw new RangeError("Could not encode varint");return 8}function encodeUint8Array(r,e,t=0){switch(encodingLength$1(r)){case 8:e[t++]=r&255|MSB$5,r/=128;case 7:e[t++]=r&255|MSB$5,r/=128;case 6:e[t++]=r&255|MSB$5,r/=128;case 5:e[t++]=r&255|MSB$5,r/=128;case 4:e[t++]=r&255|MSB$5,r>>>=7;case 3:e[t++]=r&255|MSB$5,r>>>=7;case 2:e[t++]=r&255|MSB$5,r>>>=7;case 1:{e[t++]=r&255,r>>>=7;break}default:throw new Error("unreachable")}return e}function encodeUint8ArrayList(r,e,t=0){switch(encodingLength$1(r)){case 8:e.set(t++,r&255|MSB$5),r/=128;case 7:e.set(t++,r&255|MSB$5),r/=128;case 6:e.set(t++,r&255|MSB$5),r/=128;case 5:e.set(t++,r&255|MSB$5),r/=128;case 4:e.set(t++,r&255|MSB$5),r>>>=7;case 3:e.set(t++,r&255|MSB$5),r>>>=7;case 2:e.set(t++,r&255|MSB$5),r>>>=7;case 1:{e.set(t++,r&255),r>>>=7;break}default:throw new Error("unreachable")}return e}function decodeUint8Array(r,e){let t=r[e],n=0;if(n+=t&REST$5,t<MSB$5||(t=r[e+1],n+=(t&REST$5)<<7,t<MSB$5)||(t=r[e+2],n+=(t&REST$5)<<14,t<MSB$5)||(t=r[e+3],n+=(t&REST$5)<<21,t<MSB$5)||(t=r[e+4],n+=(t&REST$5)*N4$2,t<MSB$5)||(t=r[e+5],n+=(t&REST$5)*N5$2,t<MSB$5)||(t=r[e+6],n+=(t&REST$5)*N6$2,t<MSB$5)||(t=r[e+7],n+=(t&REST$5)*N7$2,t<MSB$5))return n;throw new RangeError("Could not decode varint")}function decodeUint8ArrayList(r,e){let t=r.get(e),n=0;if(n+=t&REST$5,t<MSB$5||(t=r.get(e+1),n+=(t&REST$5)<<7,t<MSB$5)||(t=r.get(e+2),n+=(t&REST$5)<<14,t<MSB$5)||(t=r.get(e+3),n+=(t&REST$5)<<21,t<MSB$5)||(t=r.get(e+4),n+=(t&REST$5)*N4$2,t<MSB$5)||(t=r.get(e+5),n+=(t&REST$5)*N5$2,t<MSB$5)||(t=r.get(e+6),n+=(t&REST$5)*N6$2,t<MSB$5)||(t=r.get(e+7),n+=(t&REST$5)*N7$2,t<MSB$5))return n;throw new RangeError("Could not decode varint")}function encode$a(r,e,t=0){return e==null&&(e=allocUnsafe$3(encodingLength$1(r))),e instanceof Uint8Array?encodeUint8Array(r,e,t):encodeUint8ArrayList(r,e,t)}function decode$b(r,e=0){return r instanceof Uint8Array?decodeUint8Array(r,e):decodeUint8ArrayList(r,e)}const codes$9={ERR_SIGNATURE_NOT_VALID:"ERR_SIGNATURE_NOT_VALID"};var Envelope$1;(function(r){let e;r.codec=()=>(e==null&&(e=message((t,n,i={})=>{i.lengthDelimited!==!1&&n.fork(),t.publicKey!=null&&t.publicKey.byteLength>0&&(n.uint32(10),n.bytes(t.publicKey)),t.payloadType!=null&&t.payloadType.byteLength>0&&(n.uint32(18),n.bytes(t.payloadType)),t.payload!=null&&t.payload.byteLength>0&&(n.uint32(26),n.bytes(t.payload)),t.signature!=null&&t.signature.byteLength>0&&(n.uint32(42),n.bytes(t.signature)),i.lengthDelimited!==!1&&n.ldelim()},(t,n)=>{const i={publicKey:new Uint8Array(0),payloadType:new Uint8Array(0),payload:new Uint8Array(0),signature:new Uint8Array(0)},o=n==null?t.len:t.pos+n;for(;t.pos<o;){const a=t.uint32();switch(a>>>3){case 1:i.publicKey=t.bytes();break;case 2:i.payloadType=t.bytes();break;case 3:i.payload=t.bytes();break;case 5:i.signature=t.bytes();break;default:t.skipType(a&7);break}}return i})),e),r.encode=t=>encodeMessage(t,r.codec()),r.decode=t=>decodeMessage$1(t,r.codec())})(Envelope$1||(Envelope$1={}));var Re;let RecordEnvelope$1=(Re=class{constructor(e){_(this,"peerId");_(this,"payloadType");_(this,"payload");_(this,"signature");_(this,"marshaled");const{peerId:t,payloadType:n,payload:i,signature:o}=e;this.peerId=t,this.payloadType=n,this.payload=i,this.signature=o}marshal(){if(this.peerId.publicKey==null)throw new Error("Missing public key");return this.marshaled==null&&(this.marshaled=Envelope$1.encode({publicKey:this.peerId.publicKey,payloadType:this.payloadType,payload:this.payload.subarray(),signature:this.signature})),this.marshaled}equals(e){return equals$4(this.marshal(),e.marshal())}async validate(e){const t=formatSignaturePayload$1(e,this.payloadType,this.payload);if(this.peerId.publicKey==null)throw new Error("Missing public key");return unmarshalPublicKey$6(this.peerId.publicKey).verify(t.subarray(),this.signature)}},_(Re,"createFromProtobuf",async e=>{const t=Envelope$1.decode(e),n=await peerIdFromKeys$6(t.publicKey);return new Re({peerId:n,payloadType:t.payloadType,payload:t.payload,signature:t.signature})}),_(Re,"seal",async(e,t)=>{if(t.privateKey==null)throw new Error("Missing private key");const n=e.domain,i=e.codec,o=e.marshal(),a=formatSignaturePayload$1(n,i,o),l=await(await unmarshalPrivateKey$d(t.privateKey)).sign(a.subarray());return new Re({peerId:t,payloadType:i,payload:o,signature:l})}),_(Re,"openAndCertify",async(e,t)=>{const n=await Re.createFromProtobuf(e);if(!await n.validate(t))throw new CodeError$e("envelope signature is not valid for the given domain",codes$9.ERR_SIGNATURE_NOT_VALID);return n}),Re);const formatSignaturePayload$1=(r,e,t)=>{const n=fromString$b(r),i=encode$a(n.byteLength),o=encode$a(e.length),a=encode$a(t.length);return new Uint8ArrayList(i,n,o,e,a,t)};function arrayEquals$2(r,e){const t=(n,i)=>n.toString().localeCompare(i.toString());return r.length!==e.length?!1:(e.sort(t),r.sort(t).every((n,i)=>e[i].equals(n)))}var TopicValidatorResult$b;(function(r){r.Accept="accept",r.Ignore="ignore",r.Reject="reject"})(TopicValidatorResult$b||(TopicValidatorResult$b={}));var FaultTolerance$b;(function(r){r[r.FATAL_ALL=0]="FATAL_ALL",r[r.NO_FATAL=1]="NO_FATAL"})(FaultTolerance$b||(FaultTolerance$b={}));let CodeError$d=class extends Error{constructor(t,n,i){super(t);_(this,"code");_(this,"props");this.code=n,this.name=i?.name??"CodeError",this.props=i??{}}};class Parser{constructor(){_(this,"index",0);_(this,"input","")}new(e){return this.index=0,this.input=e,this}readAtomically(e){const t=this.index,n=e();return n===void 0&&(this.index=t),n}parseWith(e){const t=e();if(this.index===this.input.length)return t}peekChar(){if(!(this.index>=this.input.length))return this.input[this.index]}readChar(){if(!(this.index>=this.input.length))return this.input[this.index++]}readGivenChar(e){return this.readAtomically(()=>{const t=this.readChar();if(t===e)return t})}readSeparator(e,t,n){return this.readAtomically(()=>{if(!(t>0&&this.readGivenChar(e)===void 0))return n()})}readNumber(e,t,n,i){return this.readAtomically(()=>{let o=0,a=0;const c=this.peekChar();if(c===void 0)return;const l=c==="0",u=2**(8*i)-1;for(;;){const f=this.readAtomically(()=>{const g=this.readChar();if(g===void 0)return;const $=Number.parseInt(g,e);if(!Number.isNaN($))return $});if(f===void 0)break;if(o*=e,o+=f,o>u||(a+=1,t!==void 0&&a>t))return}if(a!==0)return!n&&l&&a>1?void 0:o})}readIPv4Addr(){return this.readAtomically(()=>{const e=new Uint8Array(4);for(let t=0;t<e.length;t++){const n=this.readSeparator(".",t,()=>this.readNumber(10,3,!1,1));if(n===void 0)return;e[t]=n}return e})}readIPv6Addr(){const e=t=>{for(let n=0;n<t.length/2;n++){const i=n*2;if(n<t.length-3){const a=this.readSeparator(":",n,()=>this.readIPv4Addr());if(a!==void 0)return t[i]=a[0],t[i+1]=a[1],t[i+2]=a[2],t[i+3]=a[3],[i+4,!0]}const o=this.readSeparator(":",n,()=>this.readNumber(16,4,!0,2));if(o===void 0)return[i,!1];t[i]=o>>8,t[i+1]=o&255}return[t.length,!1]};return this.readAtomically(()=>{const t=new Uint8Array(16),[n,i]=e(t);if(n===16)return t;if(i||this.readGivenChar(":")===void 0||this.readGivenChar(":")===void 0)return;const o=new Uint8Array(14),a=16-(n+2),[c]=e(o.subarray(0,a));return t.set(o.subarray(0,c),16-c),t})}readIPAddr(){return this.readIPv4Addr()??this.readIPv6Addr()}}const MAX_IPV6_LENGTH=45,MAX_IPV4_LENGTH=15,parser=new Parser;function parseIPv4(r){if(!(r.length>MAX_IPV4_LENGTH))return parser.new(r).parseWith(()=>parser.readIPv4Addr())}function parseIPv6(r){if(r.includes("%")&&(r=r.split("%")[0]),!(r.length>MAX_IPV6_LENGTH))return parser.new(r).parseWith(()=>parser.readIPv6Addr())}function parseIP(r){if(r.includes("%")&&(r=r.split("%")[0]),!(r.length>MAX_IPV6_LENGTH))return parser.new(r).parseWith(()=>parser.readIPAddr())}function isIPv4(r){return!!parseIPv4(r)}function isIPv6(r){return!!parseIPv6(r)}function isIP$1(r){return!!parseIP(r)}const isV4$1=isIPv4,isV6$1=isIPv6,toBytes$2=function(r){let e=0;if(r=r.toString().trim(),isV4$1(r)){const t=new Uint8Array(e+4);return r.split(/\./g).forEach(n=>{t[e++]=parseInt(n,10)&255}),t}if(isV6$1(r)){const t=r.split(":",8);let n;for(n=0;n<t.length;n++){const o=isV4$1(t[n]);let a;o&&(a=toBytes$2(t[n]),t[n]=toString$b(a.slice(0,2),"base16")),a!=null&&++n<8&&t.splice(n,0,toString$b(a.slice(2,4),"base16"))}if(t[0]==="")for(;t.length<8;)t.unshift("0");else if(t[t.length-1]==="")for(;t.length<8;)t.push("0");else if(t.length<8){for(n=0;n<t.length&&t[n]!=="";n++);const o=[n,1];for(n=9-t.length;n>0;n--)o.push("0");t.splice.apply(t,o)}const i=new Uint8Array(e+16);for(n=0;n<t.length;n++){const o=parseInt(t[n],16);i[e++]=o>>8&255,i[e++]=o&255}return i}throw new Error("invalid ip address")},toString$8=function(r,e=0,t){e=~~e,t=t??r.length-e;const n=new DataView(r.buffer);if(t===4){const i=[];for(let o=0;o<t;o++)i.push(r[e+o]);return i.join(".")}if(t===16){const i=[];for(let o=0;o<t;o+=2)i.push(n.getUint16(e+o).toString(16));return i.join(":").replace(/(^|:)0(:0)*:0(:|$)/,"$1::$3").replace(/:{3,4}/,"::")}return""},V$1=-1,names$3={},codes$8={},table=[[4,32,"ip4"],[6,16,"tcp"],[33,16,"dccp"],[41,128,"ip6"],[42,V$1,"ip6zone"],[43,8,"ipcidr"],[53,V$1,"dns",!0],[54,V$1,"dns4",!0],[55,V$1,"dns6",!0],[56,V$1,"dnsaddr",!0],[132,16,"sctp"],[273,16,"udp"],[275,0,"p2p-webrtc-star"],[276,0,"p2p-webrtc-direct"],[277,0,"p2p-stardust"],[280,0,"webrtc-direct"],[281,0,"webrtc"],[290,0,"p2p-circuit"],[301,0,"udt"],[302,0,"utp"],[400,V$1,"unix",!1,!0],[421,V$1,"ipfs"],[421,V$1,"p2p"],[443,0,"https"],[444,96,"onion"],[445,296,"onion3"],[446,V$1,"garlic64"],[448,0,"tls"],[449,V$1,"sni"],[460,0,"quic"],[461,0,"quic-v1"],[465,0,"webtransport"],[466,V$1,"certhash"],[477,0,"ws"],[478,0,"wss"],[479,0,"p2p-websocket-star"],[480,0,"http"],[777,V$1,"memory"]];table.forEach(r=>{const e=createProtocol(...r);codes$8[e.code]=e,names$3[e.name]=e});function createProtocol(r,e,t,n,i){return{code:r,size:e,name:t,resolvable:!!n,path:!!i}}function getProtocol(r){if(typeof r=="number"){if(codes$8[r]!=null)return codes$8[r];throw new Error(`no protocol with code: ${r}`)}else if(typeof r=="string"){if(names$3[r]!=null)return names$3[r];throw new Error(`no protocol with name: ${r}`)}throw new Error(`invalid protocol id type: ${typeof r}`)}getProtocol("ip4");getProtocol("ip6");getProtocol("ipcidr");function convertToString(r,e){switch(getProtocol(r).code){case 4:case 41:return bytes2ip$1(e);case 42:return bytes2str$1(e);case 6:case 273:case 33:case 132:return bytes2port$1(e).toString();case 53:case 54:case 55:case 56:case 400:case 449:case 777:return bytes2str$1(e);case 421:return bytes2mh$1(e);case 444:return bytes2onion$1(e);case 445:return bytes2onion$1(e);case 466:return bytes2mb(e);default:return toString$b(e,"base16")}}function convertToBytes(r,e){switch(getProtocol(r).code){case 4:return ip2bytes$1(e);case 41:return ip2bytes$1(e);case 42:return str2bytes$1(e);case 6:case 273:case 33:case 132:return port2bytes$1(parseInt(e,10));case 53:case 54:case 55:case 56:case 400:case 449:case 777:return str2bytes$1(e);case 421:return mh2bytes$1(e);case 444:return onion2bytes$1(e);case 445:return onion32bytes$1(e);case 466:return mb2bytes(e);default:return fromString$b(e,"base16")}}const decoders=Object.values(bases$2).map(r=>r.decoder),anybaseDecoder=function(){let r=decoders[0].or(decoders[1]);return decoders.slice(2).forEach(e=>r=r.or(e)),r}();function ip2bytes$1(r){if(!isIP$1(r))throw new Error("invalid ip address");return toBytes$2(r)}function bytes2ip$1(r){const e=toString$8(r,0,r.length);if(e==null)throw new Error("ipBuff is required");if(!isIP$1(e))throw new Error("invalid ip address");return e}function port2bytes$1(r){const e=new ArrayBuffer(2);return new DataView(e).setUint16(0,r),new Uint8Array(e)}function bytes2port$1(r){return new DataView(r.buffer).getUint16(r.byteOffset)}function str2bytes$1(r){const e=fromString$b(r),t=Uint8Array.from(encode$e(e.length));return concat$6([t,e],t.length+e.length)}function bytes2str$1(r){const e=decode$i(r);if(r=r.slice(encodingLength$2(e)),r.length!==e)throw new Error("inconsistent lengths");return toString$b(r)}function mh2bytes$1(r){let e;r[0]==="Q"||r[0]==="1"?e=decode$n(base58btc$4.decode(`z${r}`)).bytes:e=CID$3.parse(r).multihash.bytes;const t=Uint8Array.from(encode$e(e.length));return concat$6([t,e],t.length+e.length)}function mb2bytes(r){const e=anybaseDecoder.decode(r),t=Uint8Array.from(encode$e(e.length));return concat$6([t,e],t.length+e.length)}function bytes2mb(r){const e=decode$i(r),t=r.slice(encodingLength$2(e));if(t.length!==e)throw new Error("inconsistent lengths");return"u"+toString$b(t,"base64url")}function bytes2mh$1(r){const e=decode$i(r),t=r.slice(encodingLength$2(e));if(t.length!==e)throw new Error("inconsistent lengths");return toString$b(t,"base58btc")}function onion2bytes$1(r){const e=r.split(":");if(e.length!==2)throw new Error(`failed to parse onion addr: ["'${e.join('", "')}'"]' does not contain a port number`);if(e[0].length!==16)throw new Error(`failed to parse onion addr: ${e[0]} not a Tor onion address.`);const t=base32$5.decode("b"+e[0]),n=parseInt(e[1],10);if(n<1||n>65536)throw new Error("Port number is not in range(1, 65536)");const i=port2bytes$1(n);return concat$6([t,i],t.length+i.length)}function onion32bytes$1(r){const e=r.split(":");if(e.length!==2)throw new Error(`failed to parse onion addr: ["'${e.join('", "')}'"]' does not contain a port number`);if(e[0].length!==56)throw new Error(`failed to parse onion addr: ${e[0]} not a Tor onion3 address.`);const t=base32$5.decode(`b${e[0]}`),n=parseInt(e[1],10);if(n<1||n>65536)throw new Error("Port number is not in range(1, 65536)");const i=port2bytes$1(n);return concat$6([t,i],t.length+i.length)}function bytes2onion$1(r){const e=r.slice(0,r.length-2),t=r.slice(r.length-2),n=toString$b(e,"base32"),i=bytes2port$1(t);return`${n}:${i}`}function stringToMultiaddrParts(r){r=cleanPath$1(r);const e=[],t=[];let n=null;const i=r.split("/").slice(1);if(i.length===1&&i[0]==="")return{bytes:new Uint8Array,string:"/",tuples:[],stringTuples:[],path:null};for(let o=0;o<i.length;o++){const a=i[o],c=getProtocol(a);if(c.size===0){e.push([c.code]),t.push([c.code]);continue}if(o++,o>=i.length)throw ParseError$1("invalid address: "+r);if(c.path===!0){n=cleanPath$1(i.slice(o).join("/")),e.push([c.code,convertToBytes(c.code,n)]),t.push([c.code,n]);break}const l=convertToBytes(c.code,i[o]);e.push([c.code,l]),t.push([c.code,convertToString(c.code,l)])}return{string:stringTuplesToString$1(t),bytes:tuplesToBytes$1(e),tuples:e,stringTuples:t,path:n}}function bytesToMultiaddrParts(r){const e=[],t=[];let n=null,i=0;for(;i<r.length;){const o=decode$i(r,i),a=encodingLength$2(o),c=getProtocol(o),l=sizeForAddr$1(c,r.slice(i+a));if(l===0){e.push([o]),t.push([o]),i+=a;continue}const u=r.slice(i+a,i+a+l);if(i+=l+a,i>r.length)throw ParseError$1("Invalid address Uint8Array: "+toString$b(r,"base16"));e.push([o,u]);const f=convertToString(o,u);if(t.push([o,f]),c.path===!0){n=f;break}}return{bytes:Uint8Array.from(r),string:stringTuplesToString$1(t),tuples:e,stringTuples:t,path:n}}function stringTuplesToString$1(r){const e=[];return r.map(t=>{const n=getProtocol(t[0]);return e.push(n.name),t.length>1&&t[1]!=null&&e.push(t[1]),null}),cleanPath$1(e.join("/"))}function tuplesToBytes$1(r){return concat$6(r.map(e=>{const t=getProtocol(e[0]);let n=Uint8Array.from(encode$e(t.code));return e.length>1&&e[1]!=null&&(n=concat$6([n,e[1]])),n}))}function sizeForAddr$1(r,e){if(r.size>0)return r.size/8;if(r.size===0)return 0;{const t=decode$i(e instanceof Uint8Array?e:Uint8Array.from(e));return t+encodingLength$2(t)}}function cleanPath$1(r){return"/"+r.trim().split("/").filter(e=>e).join("/")}function ParseError$1(r){return new Error("Error parsing address: "+r)}const inspect$9=Symbol.for("nodejs.util.inspect.custom"),symbol$3=Symbol.for("@multiformats/js-multiaddr/multiaddr"),DNS_CODES=[getProtocol("dns").code,getProtocol("dns4").code,getProtocol("dns6").code,getProtocol("dnsaddr").code];var ze,Ne,rt,nt,Sr,xe;let Multiaddr$1=(xe=class{constructor(e){_(this,"bytes");ne(this,ze,void 0);ne(this,Ne,void 0);ne(this,rt,void 0);ne(this,nt,void 0);_(this,Sr,!0);e==null&&(e="");let t;if(e instanceof Uint8Array)t=bytesToMultiaddrParts(e);else if(typeof e=="string"){if(e.length>0&&e.charAt(0)!=="/")throw new Error(`multiaddr "${e}" must start with a "/"`);t=stringToMultiaddrParts(e)}else if(isMultiaddr(e))t=bytesToMultiaddrParts(e.bytes);else throw new Error("addr must be a string, Buffer, or another Multiaddr");this.bytes=t.bytes,ye(this,ze,t.string),ye(this,Ne,t.tuples),ye(this,rt,t.stringTuples),ye(this,nt,t.path)}toString(){return F(this,ze)}toJSON(){return this.toString()}toOptions(){let e,t,n,i,o="";const a=getProtocol("tcp"),c=getProtocol("udp"),l=getProtocol("ip4"),u=getProtocol("ip6"),f=getProtocol("dns6"),g=getProtocol("ip6zone");for(const[S,E]of this.stringTuples())S===g.code&&(o=`%${E??""}`),DNS_CODES.includes(S)&&(t=a.name,i=443,n=`${E??""}${o}`,e=S===f.code?6:4),(S===a.code||S===c.code)&&(t=getProtocol(S).name,i=parseInt(E??"")),(S===l.code||S===u.code)&&(t=getProtocol(S).name,n=`${E??""}${o}`,e=S===u.code?6:4);if(e==null||t==null||n==null||i==null)throw new Error('multiaddr must have a valid format: "/{ip4, ip6, dns4, dns6, dnsaddr}/{address}/{tcp, udp}/{port}".');return{family:e,host:n,transport:t,port:i}}protos(){return F(this,Ne).map(([e])=>Object.assign({},getProtocol(e)))}protoCodes(){return F(this,Ne).map(([e])=>e)}protoNames(){return F(this,Ne).map(([e])=>getProtocol(e).name)}tuples(){return F(this,Ne)}stringTuples(){return F(this,rt)}encapsulate(e){return e=new xe(e),new xe(this.toString()+e.toString())}decapsulate(e){const t=e.toString(),n=this.toString(),i=n.lastIndexOf(t);if(i<0)throw new Error(`Address ${this.toString()} does not contain subaddress: ${e.toString()}`);return new xe(n.slice(0,i))}decapsulateCode(e){const t=this.tuples();for(let n=t.length-1;n>=0;n--)if(t[n][0]===e)return new xe(tuplesToBytes$1(t.slice(0,n)));return this}getPeerId(){try{let e=[];this.stringTuples().forEach(([n,i])=>{n===names$3.p2p.code&&e.push([n,i]),n===names$3["p2p-circuit"].code&&(e=[])});const t=e.pop();if(t?.[1]!=null){const n=t[1];return n[0]==="Q"||n[0]==="1"?toString$b(base58btc$4.decode(`z${n}`),"base58btc"):toString$b(CID$3.parse(n).multihash.bytes,"base58btc")}return null}catch{return null}}getPath(){return F(this,nt)}equals(e){return equals$4(this.bytes,e.bytes)}async resolve(e){const t=this.protos().find(o=>o.resolvable);if(t==null)return[this];const n=resolvers$2.get(t.name);if(n==null)throw new CodeError$d(`no available resolver for ${t.name}`,"ERR_NO_AVAILABLE_RESOLVER");return(await n(this,e)).map(o=>new xe(o))}nodeAddress(){const e=this.toOptions();if(e.transport!=="tcp"&&e.transport!=="udp")throw new Error(`multiaddr must have a valid format - no protocol with name: "${e.transport}". Must have a valid transport protocol: "{tcp, udp}"`);return{family:e.family,address:e.host,port:e.port}}isThinWaistAddress(e){const t=(e??this).protos();return!(t.length!==2||t[0].code!==4&&t[0].code!==41||t[1].code!==6&&t[1].code!==273)}[(Sr=symbol$3,inspect$9)](){return`Multiaddr(${F(this,ze)})`}},ze=new WeakMap,Ne=new WeakMap,rt=new WeakMap,nt=new WeakMap,xe);const resolvers$2=new Map;function isMultiaddr(r){return!!r?.[symbol$3]}function multiaddr$1(r){return new Multiaddr$1(r)}const ENVELOPE_DOMAIN_PEER_RECORD$1="libp2p-peer-record",ENVELOPE_PAYLOAD_TYPE_PEER_RECORD$1=Uint8Array.from([3,1]);var PeerRecord$3;(function(r){(function(t){let n;t.codec=()=>(n==null&&(n=message((i,o,a={})=>{a.lengthDelimited!==!1&&o.fork(),i.multiaddr!=null&&i.multiaddr.byteLength>0&&(o.uint32(10),o.bytes(i.multiaddr)),a.lengthDelimited!==!1&&o.ldelim()},(i,o)=>{const a={multiaddr:new Uint8Array(0)},c=o==null?i.len:i.pos+o;for(;i.pos<c;){const l=i.uint32();switch(l>>>3){case 1:a.multiaddr=i.bytes();break;default:i.skipType(l&7);break}}return a})),n),t.encode=i=>encodeMessage(i,t.codec()),t.decode=i=>decodeMessage$1(i,t.codec())})(r.AddressInfo||(r.AddressInfo={}));let e;r.codec=()=>(e==null&&(e=message((t,n,i={})=>{if(i.lengthDelimited!==!1&&n.fork(),t.peerId!=null&&t.peerId.byteLength>0&&(n.uint32(10),n.bytes(t.peerId)),t.seq!=null&&t.seq!==0n&&(n.uint32(16),n.uint64(t.seq)),t.addresses!=null)for(const o of t.addresses)n.uint32(26),r.AddressInfo.codec().encode(o,n);i.lengthDelimited!==!1&&n.ldelim()},(t,n)=>{const i={peerId:new Uint8Array(0),seq:0n,addresses:[]},o=n==null?t.len:t.pos+n;for(;t.pos<o;){const a=t.uint32();switch(a>>>3){case 1:i.peerId=t.bytes();break;case 2:i.seq=t.uint64();break;case 3:i.addresses.push(r.AddressInfo.codec().decode(t,t.uint32()));break;default:t.skipType(a&7);break}}return i})),e),r.encode=t=>encodeMessage(t,r.codec()),r.decode=t=>decodeMessage$1(t,r.codec())})(PeerRecord$3||(PeerRecord$3={}));var Se;let PeerRecord$2=(Se=class{constructor(e){_(this,"peerId");_(this,"multiaddrs");_(this,"seqNumber");_(this,"domain",Se.DOMAIN);_(this,"codec",Se.CODEC);_(this,"marshaled");const{peerId:t,multiaddrs:n,seqNumber:i}=e;this.peerId=t,this.multiaddrs=n??[],this.seqNumber=i??BigInt(Date.now())}marshal(){return this.marshaled==null&&(this.marshaled=PeerRecord$3.encode({peerId:this.peerId.toBytes(),seq:BigInt(this.seqNumber),addresses:this.multiaddrs.map(e=>({multiaddr:e.bytes}))})),this.marshaled}equals(e){return!(!(e instanceof Se)||!this.peerId.equals(e.peerId)||this.seqNumber!==e.seqNumber||!arrayEquals$2(this.multiaddrs,e.multiaddrs))}},_(Se,"createFromProtobuf",e=>{const t=PeerRecord$3.decode(e),n=peerIdFromBytes$8(t.peerId),i=(t.addresses??[]).map(a=>multiaddr$1(a.multiaddr)),o=t.seq;return new Se({peerId:n,multiaddrs:i,seqNumber:o})}),_(Se,"DOMAIN",ENVELOPE_DOMAIN_PEER_RECORD$1),_(Se,"CODEC",ENVELOPE_PAYLOAD_TYPE_PEER_RECORD$1),Se);const codes$7={ERR_INVALID_PARAMETERS:"ERR_INVALID_PARAMETERS"};var Peer$2;(function(r){(function(t){let n;t.codec=()=>(n==null&&(n=message((i,o,a={})=>{a.lengthDelimited!==!1&&o.fork(),i.key!=null&&i.key!==""&&(o.uint32(10),o.string(i.key)),i.value!=null&&i.value.byteLength>0&&(o.uint32(18),o.bytes(i.value)),a.lengthDelimited!==!1&&o.ldelim()},(i,o)=>{const a={key:"",value:new Uint8Array(0)},c=o==null?i.len:i.pos+o;for(;i.pos<c;){const l=i.uint32();switch(l>>>3){case 1:a.key=i.string();break;case 2:a.value=i.bytes();break;default:i.skipType(l&7);break}}return a})),n),t.encode=i=>encodeMessage(i,t.codec()),t.decode=i=>decodeMessage$1(i,t.codec())})(r.Peer$metadataEntry||(r.Peer$metadataEntry={})),function(t){let n;t.codec=()=>(n==null&&(n=message((i,o,a={})=>{a.lengthDelimited!==!1&&o.fork(),i.key!=null&&i.key!==""&&(o.uint32(10),o.string(i.key)),i.value!=null&&(o.uint32(18),Tag$1.codec().encode(i.value,o)),a.lengthDelimited!==!1&&o.ldelim()},(i,o)=>{const a={key:""},c=o==null?i.len:i.pos+o;for(;i.pos<c;){const l=i.uint32();switch(l>>>3){case 1:a.key=i.string();break;case 2:a.value=Tag$1.codec().decode(i,i.uint32());break;default:i.skipType(l&7);break}}return a})),n),t.encode=i=>encodeMessage(i,t.codec()),t.decode=i=>decodeMessage$1(i,t.codec())}(r.Peer$tagsEntry||(r.Peer$tagsEntry={}));let e;r.codec=()=>(e==null&&(e=message((t,n,i={})=>{if(i.lengthDelimited!==!1&&n.fork(),t.addresses!=null)for(const o of t.addresses)n.uint32(10),Address$1.codec().encode(o,n);if(t.protocols!=null)for(const o of t.protocols)n.uint32(18),n.string(o);if(t.publicKey!=null&&(n.uint32(34),n.bytes(t.publicKey)),t.peerRecordEnvelope!=null&&(n.uint32(42),n.bytes(t.peerRecordEnvelope)),t.metadata!=null&&t.metadata.size!==0)for(const[o,a]of t.metadata.entries())n.uint32(50),r.Peer$metadataEntry.codec().encode({key:o,value:a},n);if(t.tags!=null&&t.tags.size!==0)for(const[o,a]of t.tags.entries())n.uint32(58),r.Peer$tagsEntry.codec().encode({key:o,value:a},n);i.lengthDelimited!==!1&&n.ldelim()},(t,n)=>{const i={addresses:[],protocols:[],metadata:new Map,tags:new Map},o=n==null?t.len:t.pos+n;for(;t.pos<o;){const a=t.uint32();switch(a>>>3){case 1:i.addresses.push(Address$1.codec().decode(t,t.uint32()));break;case 2:i.protocols.push(t.string());break;case 4:i.publicKey=t.bytes();break;case 5:i.peerRecordEnvelope=t.bytes();break;case 6:{const c=r.Peer$metadataEntry.codec().decode(t,t.uint32());i.metadata.set(c.key,c.value);break}case 7:{const c=r.Peer$tagsEntry.codec().decode(t,t.uint32());i.tags.set(c.key,c.value);break}default:t.skipType(a&7);break}}return i})),e),r.encode=t=>encodeMessage(t,r.codec()),r.decode=t=>decodeMessage$1(t,r.codec())})(Peer$2||(Peer$2={}));var Address$1;(function(r){let e;r.codec=()=>(e==null&&(e=message((t,n,i={})=>{i.lengthDelimited!==!1&&n.fork(),t.multiaddr!=null&&t.multiaddr.byteLength>0&&(n.uint32(10),n.bytes(t.multiaddr)),t.isCertified!=null&&(n.uint32(16),n.bool(t.isCertified)),i.lengthDelimited!==!1&&n.ldelim()},(t,n)=>{const i={multiaddr:new Uint8Array(0)},o=n==null?t.len:t.pos+n;for(;t.pos<o;){const a=t.uint32();switch(a>>>3){case 1:i.multiaddr=t.bytes();break;case 2:i.isCertified=t.bool();break;default:t.skipType(a&7);break}}return i})),e),r.encode=t=>encodeMessage(t,r.codec()),r.decode=t=>decodeMessage$1(t,r.codec())})(Address$1||(Address$1={}));var Tag$1;(function(r){let e;r.codec=()=>(e==null&&(e=message((t,n,i={})=>{i.lengthDelimited!==!1&&n.fork(),t.value!=null&&t.value!==0&&(n.uint32(8),n.uint32(t.value)),t.expiry!=null&&(n.uint32(16),n.uint64(t.expiry)),i.lengthDelimited!==!1&&n.ldelim()},(t,n)=>{const i={value:0},o=n==null?t.len:t.pos+n;for(;t.pos<o;){const a=t.uint32();switch(a>>>3){case 1:i.value=t.uint32();break;case 2:i.expiry=t.uint64();break;default:t.skipType(a&7);break}}return i})),e),r.encode=t=>encodeMessage(t,r.codec()),r.decode=t=>decodeMessage$1(t,r.codec())})(Tag$1||(Tag$1={}));function bytesToPeer$1(r,e){const t=Peer$2.decode(e);t.publicKey!=null&&r.publicKey==null&&(r=peerIdFromPeerId$1({...r,publicKey:r.publicKey}));const n=new Map,i=BigInt(Date.now());for(const[o,a]of t.tags.entries())a.expiry!=null&&a.expiry<i||n.set(o,a);return{...t,id:r,addresses:t.addresses.map(({multiaddr:o,isCertified:a})=>({multiaddr:multiaddr$1(o),isCertified:a??!1})),metadata:t.metadata,peerRecordEnvelope:t.peerRecordEnvelope??void 0,tags:n}}const NAMESPACE_COMMON$1="/peers/";function peerIdToDatastoreKey$1(r){if(!isPeerId$2(r)||r.type==null)throw new CodeError$e("Invalid PeerId",codes$7.ERR_INVALID_PARAMETERS);const e=r.toCID().toString();return new Key(`${NAMESPACE_COMMON$1}${e}`)}async function dedupeFilterAndSortAddresses$1(r,e,t){const n=new Map;for(const i of t){if(i==null)continue;if(i.multiaddr instanceof Uint8Array&&(i.multiaddr=multiaddr$1(i.multiaddr)),!isMultiaddr(i.multiaddr))throw new CodeError$e("Multiaddr was invalid",codes$7.ERR_INVALID_PARAMETERS);if(!await e(r,i.multiaddr))continue;const o=i.isCertified??!1,a=i.multiaddr.toString(),c=n.get(a);c!=null?i.isCertified=c.isCertified||o:n.set(a,{multiaddr:i.multiaddr,isCertified:o})}return[...n.values()].sort((i,o)=>i.multiaddr.toString().localeCompare(o.multiaddr.toString())).map(({isCertified:i,multiaddr:o})=>({isCertified:i,multiaddr:o.bytes}))}async function toPeerPB$1(r,e,t,n){if(e==null)throw new CodeError$e("Invalid PeerData",codes$7.ERR_INVALID_PARAMETERS);if(e.publicKey!=null&&r.publicKey!=null&&!equals$4(e.publicKey,r.publicKey))throw new CodeError$e("publicKey bytes do not match peer id publicKey bytes",codes$7.ERR_INVALID_PARAMETERS);const i=n.existingPeer;if(i!=null&&!r.equals(i.id))throw new CodeError$e("peer id did not match existing peer id",codes$7.ERR_INVALID_PARAMETERS);let o=i?.addresses??[],a=new Set(i?.protocols??[]),c=i?.metadata??new Map,l=i?.tags??new Map,u=i?.peerRecordEnvelope;if(t==="patch"){if((e.multiaddrs!=null||e.addresses!=null)&&(o=[],e.multiaddrs!=null&&o.push(...e.multiaddrs.map(g=>({isCertified:!1,multiaddr:g}))),e.addresses!=null&&o.push(...e.addresses)),e.protocols!=null&&(a=new Set(e.protocols)),e.metadata!=null){const g=e.metadata instanceof Map?[...e.metadata.entries()]:Object.entries(e.metadata);c=createSortedMap$1(g,{validate:validateMetadata$1})}if(e.tags!=null){const g=e.tags instanceof Map?[...e.tags.entries()]:Object.entries(e.tags);l=createSortedMap$1(g,{validate:validateTag$1,map:mapTag$1})}e.peerRecordEnvelope!=null&&(u=e.peerRecordEnvelope)}if(t==="merge"){if(e.multiaddrs!=null&&o.push(...e.multiaddrs.map(g=>({isCertified:!1,multiaddr:g}))),e.addresses!=null&&o.push(...e.addresses),e.protocols!=null&&(a=new Set([...a,...e.protocols])),e.metadata!=null){const g=e.metadata instanceof Map?[...e.metadata.entries()]:Object.entries(e.metadata);for(const[$,S]of g)S==null?c.delete($):c.set($,S);c=createSortedMap$1([...c.entries()],{validate:validateMetadata$1})}if(e.tags!=null){const g=e.tags instanceof Map?[...e.tags.entries()]:Object.entries(e.tags),$=new Map(l);for(const[S,E]of g)E==null?$.delete(S):$.set(S,E);l=createSortedMap$1([...$.entries()],{validate:validateTag$1,map:mapTag$1})}e.peerRecordEnvelope!=null&&(u=e.peerRecordEnvelope)}const f={addresses:await dedupeFilterAndSortAddresses$1(r,n.addressFilter??(async()=>!0),o),protocols:[...a.values()].sort((g,$)=>g.localeCompare($)),metadata:c,tags:l,publicKey:i?.id.publicKey??e.publicKey??r.publicKey,peerRecordEnvelope:u};return r.type!=="RSA"&&delete f.publicKey,f}function createSortedMap$1(r,e){const t=new Map;for(const[n,i]of r)i!=null&&e.validate(n,i);for(const[n,i]of r.sort(([o],[a])=>o.localeCompare(a)))i!=null&&t.set(n,e.map?.(n,i)??i);return t}function validateMetadata$1(r,e){if(typeof r!="string")throw new CodeError$e("Metadata key must be a string",codes$7.ERR_INVALID_PARAMETERS);if(!(e instanceof Uint8Array))throw new CodeError$e("Metadata value must be a Uint8Array",codes$7.ERR_INVALID_PARAMETERS)}function validateTag$1(r,e){if(typeof r!="string")throw new CodeError$e("Tag name must be a string",codes$7.ERR_INVALID_PARAMETERS);if(e.value!=null){if(parseInt(`${e.value}`,10)!==e.value)throw new CodeError$e("Tag value must be an integer",codes$7.ERR_INVALID_PARAMETERS);if(e.value<0||e.value>100)throw new CodeError$e("Tag value must be between 0-100",codes$7.ERR_INVALID_PARAMETERS)}if(e.ttl!=null){if(parseInt(`${e.ttl}`,10)!==e.ttl)throw new CodeError$e("Tag ttl must be an integer",codes$7.ERR_INVALID_PARAMETERS);if(e.ttl<0)throw new CodeError$e("Tag ttl must be between greater than 0",codes$7.ERR_INVALID_PARAMETERS)}}function mapTag$1(r,e){let t;return e.expiry!=null&&(t=e.expiry),e.ttl!=null&&(t=BigInt(Date.now()+Number(e.ttl))),{value:e.value??0,expiry:t}}function decodePeer$1(r,e,t){const n=r.toString().split("/")[2],i=base32$5.decode(n),o=peerIdFromBytes$8(i),a=t.get(o);if(a!=null)return a;const c=bytesToPeer$1(o,e);return t.set(o,c),c}function mapQuery$1(r,e){return r==null?{}:{prefix:NAMESPACE_COMMON$1,filters:(r.filters??[]).map(t=>({key:n,value:i})=>t(decodePeer$1(n,i,e))),orders:(r.orders??[]).map(t=>(n,i)=>t(decodePeer$1(n.key,n.value,e),decodePeer$1(i.key,i.value,e)))}}var qe,ht,Ye,ft,Ut;let PersistentStore$1=(Ut=class{constructor(e,t={}){ne(this,qe);ne(this,Ye);_(this,"peerId");_(this,"datastore");_(this,"lock");_(this,"addressFilter");this.peerId=e.peerId,this.datastore=e.datastore,this.addressFilter=t.addressFilter,this.lock=createMortice({name:"peer-store",singleProcess:!0})}async has(e){return this.datastore.has(peerIdToDatastoreKey$1(e))}async delete(e){if(this.peerId.equals(e))throw new CodeError$e("Cannot delete self peer",codes$7.ERR_INVALID_PARAMETERS);await this.datastore.delete(peerIdToDatastoreKey$1(e))}async load(e){const t=await this.datastore.get(peerIdToDatastoreKey$1(e));return bytesToPeer$1(e,t)}async save(e,t){const{existingBuf:n,existingPeer:i}=await se(this,qe,ht).call(this,e),o=await toPeerPB$1(e,t,"patch",{addressFilter:this.addressFilter});return se(this,Ye,ft).call(this,e,o,n,i)}async patch(e,t){const{existingBuf:n,existingPeer:i}=await se(this,qe,ht).call(this,e),o=await toPeerPB$1(e,t,"patch",{addressFilter:this.addressFilter,existingPeer:i});return se(this,Ye,ft).call(this,e,o,n,i)}async merge(e,t){const{existingBuf:n,existingPeer:i}=await se(this,qe,ht).call(this,e),o=await toPeerPB$1(e,t,"merge",{addressFilter:this.addressFilter,existingPeer:i});return se(this,Ye,ft).call(this,e,o,n,i)}async*all(e){const t=new PeerMap$2;for await(const{key:n,value:i}of this.datastore.query(mapQuery$1(e??{},t))){const o=decodePeer$1(n,i,t);o.id.equals(this.peerId)||(yield o)}}},qe=new WeakSet,ht=async function(e){try{const t=await this.datastore.get(peerIdToDatastoreKey$1(e)),n=bytesToPeer$1(e,t);return{existingBuf:t,existingPeer:n}}catch(t){if(t.code!=="ERR_NOT_FOUND")throw t}return{}},Ye=new WeakSet,ft=async function(e,t,n,i){const o=Peer$2.encode(t);return n!=null&&equals$4(o,n)?{peer:bytesToPeer$1(e,o),previous:i,updated:!1}:(await this.datastore.put(peerIdToDatastoreKey$1(e),o),{peer:bytesToPeer$1(e,o),previous:i,updated:!0})},Ut);const log$X=logger$5("libp2p:peer-store");var Qe,pt,Vt;let PersistentPeerStore$1=(Vt=class{constructor(e,t={}){ne(this,Qe);_(this,"store");_(this,"events");_(this,"peerId");this.events=e.events,this.peerId=e.peerId,this.store=new PersistentStore$1(e,t)}async forEach(e,t){log$X.trace("forEach await read lock");const n=await this.store.lock.readLock();log$X.trace("forEach got read lock");try{for await(const i of this.store.all(t))e(i)}finally{log$X.trace("forEach release read lock"),n()}}async all(e){log$X.trace("all await read lock");const t=await this.store.lock.readLock();log$X.trace("all got read lock");try{return await all$2(this.store.all(e))}finally{log$X.trace("all release read lock"),t()}}async delete(e){log$X.trace("delete await write lock");const t=await this.store.lock.writeLock();log$X.trace("delete got write lock");try{await this.store.delete(e)}finally{log$X.trace("delete release write lock"),t()}}async has(e){log$X.trace("has await read lock");const t=await this.store.lock.readLock();log$X.trace("has got read lock");try{return await this.store.has(e)}finally{log$X.trace("has release read lock"),t()}}async get(e){log$X.trace("get await read lock");const t=await this.store.lock.readLock();log$X.trace("get got read lock");try{return await this.store.load(e)}finally{log$X.trace("get release read lock"),t()}}async save(e,t){log$X.trace("save await write lock");const n=await this.store.lock.writeLock();log$X.trace("save got write lock");try{const i=await this.store.save(e,t);return se(this,Qe,pt).call(this,e,i),i.peer}finally{log$X.trace("save release write lock"),n()}}async patch(e,t){log$X.trace("patch await write lock");const n=await this.store.lock.writeLock();log$X.trace("patch got write lock");try{const i=await this.store.patch(e,t);return se(this,Qe,pt).call(this,e,i),i.peer}finally{log$X.trace("patch release write lock"),n()}}async merge(e,t){log$X.trace("merge await write lock");const n=await this.store.lock.writeLock();log$X.trace("merge got write lock");try{const i=await this.store.merge(e,t);return se(this,Qe,pt).call(this,e,i),i.peer}finally{log$X.trace("merge release write lock"),n()}}async consumePeerRecord(e,t){const n=await RecordEnvelope$1.openAndCertify(e,PeerRecord$2.DOMAIN);if(t?.equals(n.peerId)===!1)return log$X("envelope peer id was not the expected peer id - expected: %p received: %p",t,n.peerId),!1;const i=PeerRecord$2.createFromProtobuf(n.payload);let o;try{o=await this.get(n.peerId)}catch(a){if(a.code!=="ERR_NOT_FOUND")throw a}if(o?.peerRecordEnvelope!=null){const a=await RecordEnvelope$1.createFromProtobuf(o.peerRecordEnvelope),c=PeerRecord$2.createFromProtobuf(a.payload);if(c.seqNumber>=i.seqNumber)return log$X("sequence number was lower or equal to existing sequence number - stored: %d received: %d",c.seqNumber,i.seqNumber),!1}return await this.patch(i.peerId,{peerRecordEnvelope:e,addresses:i.multiaddrs.map(a=>({isCertified:!0,multiaddr:a}))}),!0}},Qe=new WeakSet,pt=function(e,t){t.updated&&(this.peerId.equals(e)?this.events.safeDispatchEvent("self:peer:update",{detail:t}):this.events.safeDispatchEvent("peer:update",{detail:t}))},Vt);function debounce$2(r,e){let t;return function(){const n=function(){t=void 0,r()};clearTimeout(t),t=setTimeout(n,e)}}const log$W=logger$5("libp2p:address-manager"),defaultAddressFilter$1=r=>r;function stripPeerId$1(r,e){const t=r.getPeerId();return t!=null&&peerIdFromString$8(t).equals(e)&&(r=r.decapsulate(multiaddr$1(`/p2p/${e.toString()}`))),r}let DefaultAddressManager$1=class{constructor(e,t={}){_(this,"components");_(this,"listen");_(this,"announce");_(this,"observed");_(this,"announceFilter");const{listen:n=[],announce:i=[]}=t;this.components=e,this.listen=n.map(o=>o.toString()),this.announce=new Set(i.map(o=>o.toString())),this.observed=new Map,this.announceFilter=t.announceFilter??defaultAddressFilter$1,this._updatePeerStoreAddresses=debounce$2(this._updatePeerStoreAddresses.bind(this),1e3),e.events.addEventListener("transport:listening",()=>{this._updatePeerStoreAddresses()}),e.events.addEventListener("transport:close",()=>{this._updatePeerStoreAddresses()})}_updatePeerStoreAddresses(){const e=this.getAnnounceAddrs().concat(this.components.transportManager.getAddrs()).concat([...this.observed.entries()].filter(([t,n])=>n.confident).map(([t])=>multiaddr$1(t))).map(t=>t.getPeerId()===this.components.peerId.toString()?t.decapsulate(`/p2p/${this.components.peerId.toString()}`):t);this.components.peerStore.patch(this.components.peerId,{multiaddrs:e}).catch(t=>{log$W.error("error updating addresses",t)})}getListenAddrs(){return Array.from(this.listen).map(e=>multiaddr$1(e))}getAnnounceAddrs(){return Array.from(this.announce).map(e=>multiaddr$1(e))}getObservedAddrs(){return Array.from(this.observed).map(([e])=>multiaddr$1(e))}addObservedAddr(e){e=stripPeerId$1(e,this.components.peerId);const t=e.toString();this.observed.has(t)||this.observed.set(t,{confident:!1})}confirmObservedAddr(e){e=stripPeerId$1(e,this.components.peerId);const t=e.toString(),i=(this.observed.get(t)??{confident:!1}).confident;this.observed.set(t,{confident:!0}),i||this._updatePeerStoreAddresses()}removeObservedAddr(e){e=stripPeerId$1(e,this.components.peerId);const t=e.toString();this.observed.delete(t)}getAddresses(){let e=this.getAnnounceAddrs().map(n=>n.toString());e.length===0&&(e=this.components.transportManager.getAddrs().map(n=>n.toString())),e=e.concat(Array.from(this.observed).filter(([n,i])=>i.confident).map(([n])=>n));const t=new Set(e);return this.announceFilter(Array.from(t).map(n=>multiaddr$1(n))).map(n=>n.protos().pop()?.path===!0||n.getPeerId()===this.components.peerId.toString()?n:n.encapsulate(`/p2p/${this.components.peerId.toString()}`))}},DefaultComponents$1=class{constructor(e={}){_(this,"components",{});_(this,"_started",!1);this.components={};for(const[t,n]of Object.entries(e))this.components[t]=n;this.components.logger==null&&(this.components.logger=defaultLogger$1())}isStarted(){return this._started}async _invokeStartableMethod(e){await Promise.all(Object.values(this.components).filter(t=>isStartable$1(t)).map(async t=>{await t[e]?.()}))}async beforeStart(){await this._invokeStartableMethod("beforeStart")}async start(){await this._invokeStartableMethod("start"),this._started=!0}async afterStart(){await this._invokeStartableMethod("afterStart")}async beforeStop(){await this._invokeStartableMethod("beforeStop")}async stop(){await this._invokeStartableMethod("stop"),this._started=!1}async afterStop(){await this._invokeStartableMethod("afterStop")}};const OPTIONAL_SERVICES$1=["metrics","connectionProtector"],NON_SERVICE_PROPERTIES$1=["components","isStarted","beforeStart","start","afterStart","beforeStop","stop","afterStop","then","_invokeStartableMethod"];function defaultComponents$1(r={}){const e=new DefaultComponents$1(r);return new Proxy(e,{get(n,i,o){if(typeof i=="string"&&!NON_SERVICE_PROPERTIES$1.includes(i)){const a=e.components[i];if(a==null&&!OPTIONAL_SERVICES$1.includes(i))throw new CodeError$e(`${i} not set`,"ERR_SERVICE_MISSING");return a}return Reflect.get(n,i,o)},set(n,i,o){return typeof i=="string"?e.components[i]=o:Reflect.set(n,i,o),!0}})}var Netmask_1;(function(){var r,e,t,n,i,o,a,c;c=function(l){var u,f,g,$;return u=(l&255<<24)>>>24,f=(l&255<<16)>>>16,g=(l&65280)>>>8,$=l&255,[u,f,g,$].join(".")},a=function(l){var u,f,g,$,S,E;for(u=[],g=$=0;$<=3&&l.length!==0;g=++$){if(g>0){if(l[0]!==".")throw new Error("Invalid IP");l=l.substring(1)}E=e(l),S=E[0],f=E[1],l=l.substring(f),u.push(S)}if(l.length!==0)throw new Error("Invalid IP");switch(u.length){case 1:if(u[0]>4294967295)throw new Error("Invalid IP");return u[0]>>>0;case 2:if(u[0]>255||u[1]>16777215)throw new Error("Invalid IP");return(u[0]<<24|u[1])>>>0;case 3:if(u[0]>255||u[1]>255||u[2]>65535)throw new Error("Invalid IP");return(u[0]<<24|u[1]<<16|u[2])>>>0;case 4:if(u[0]>255||u[1]>255||u[2]>255||u[3]>255)throw new Error("Invalid IP");return(u[0]<<24|u[1]<<16|u[2]<<8|u[3])>>>0;default:throw new Error("Invalid IP")}},t=function(l){return l.charCodeAt(0)},n=t("0"),o=t("a"),i=t("A"),e=function(l){var u,f,g,$,S;for($=0,u=10,f="9",g=0,l.length>1&&l[g]==="0"&&(l[g+1]==="x"||l[g+1]==="X"?(g+=2,u=16):"0"<=l[g+1]&&l[g+1]<="9"&&(g++,u=8,f="7")),S=g;g<l.length;){if("0"<=l[g]&&l[g]<=f)$=$*u+(t(l[g])-n)>>>0;else if(u===16)if("a"<=l[g]&&l[g]<="f")$=$*u+(10+t(l[g])-o)>>>0;else if("A"<=l[g]&&l[g]<="F")$=$*u+(10+t(l[g])-i)>>>0;else break;else break;if($>4294967295)throw new Error("too large");g++}if(g===S)throw new Error("empty octet");return[$,g]},r=function(){function l(u,f){var g,$,S;if(typeof u!="string")throw new Error("Missing `net' parameter");if(f||(S=u.split("/",2),u=S[0],f=S[1]),f||(f=32),typeof f=="string"&&f.indexOf(".")>-1){try{this.maskLong=a(f)}catch{throw new Error("Invalid mask: "+f)}for(g=$=32;$>=0;g=--$)if(this.maskLong===4294967295<<32-g>>>0){this.bitmask=g;break}}else if(f||f===0)this.bitmask=parseInt(f,10),this.maskLong=0,this.bitmask>0&&(this.maskLong=4294967295<<32-this.bitmask>>>0);else throw new Error("Invalid mask: empty");try{this.netLong=(a(u)&this.maskLong)>>>0}catch{throw new Error("Invalid net address: "+u)}if(!(this.bitmask<=32))throw new Error("Invalid mask for ip4: "+f);this.size=Math.pow(2,32-this.bitmask),this.base=c(this.netLong),this.mask=c(this.maskLong),this.hostmask=c(~this.maskLong),this.first=this.bitmask<=30?c(this.netLong+1):this.base,this.last=this.bitmask<=30?c(this.netLong+this.size-2):c(this.netLong+this.size-1),this.broadcast=this.bitmask<=30?c(this.netLong+this.size-1):void 0}return l.prototype.contains=function(u){return typeof u=="string"&&(u.indexOf("/")>0||u.split(".").length!==4)&&(u=new l(u)),u instanceof l?this.contains(u.base)&&this.contains(u.broadcast||u.last):(a(u)&this.maskLong)>>>0===(this.netLong&this.maskLong)>>>0},l.prototype.next=function(u){return u==null&&(u=1),new l(c(this.netLong+this.size*u),this.mask)},l.prototype.forEach=function(u){var f,g,$;for($=a(this.first),g=a(this.last),f=0;$<=g;)u(c($),$,f),f++,$++},l.prototype.toString=function(){return this.base+"/"+this.bitmask},l}(),Netmask_1=r}).call(commonjsGlobal);const word$1="[a-fA-F\\d:]",boundry=r=>r&&r.includeBoundaries?`(?:(?<=\\s|^)(?=${word$1})|(?<=${word$1})(?=\\s|$))`:"",v4$1="(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}",v6segment="[a-fA-F\\d]{1,4}",v6$1=`
(?:
(?:${v6segment}:){7}(?:${v6segment}|:)|                                    // 1:2:3:4:5:6:7::  1:2:3:4:5:6:7:8
(?:${v6segment}:){6}(?:${v4$1}|:${v6segment}|:)|                             // 1:2:3:4:5:6::    1:2:3:4:5:6::8   1:2:3:4:5:6::8  1:2:3:4:5:6::1.2.3.4
(?:${v6segment}:){5}(?::${v4$1}|(?::${v6segment}){1,2}|:)|                   // 1:2:3:4:5::      1:2:3:4:5::7:8   1:2:3:4:5::8    1:2:3:4:5::7:1.2.3.4
(?:${v6segment}:){4}(?:(?::${v6segment}){0,1}:${v4$1}|(?::${v6segment}){1,3}|:)| // 1:2:3:4::        1:2:3:4::6:7:8   1:2:3:4::8      1:2:3:4::6:7:1.2.3.4
(?:${v6segment}:){3}(?:(?::${v6segment}){0,2}:${v4$1}|(?::${v6segment}){1,4}|:)| // 1:2:3::          1:2:3::5:6:7:8   1:2:3::8        1:2:3::5:6:7:1.2.3.4
(?:${v6segment}:){2}(?:(?::${v6segment}){0,3}:${v4$1}|(?::${v6segment}){1,5}|:)| // 1:2::            1:2::4:5:6:7:8   1:2::8          1:2::4:5:6:7:1.2.3.4
(?:${v6segment}:){1}(?:(?::${v6segment}){0,4}:${v4$1}|(?::${v6segment}){1,6}|:)| // 1::              1::3:4:5:6:7:8   1::8            1::3:4:5:6:7:1.2.3.4
(?::(?:(?::${v6segment}){0,5}:${v4$1}|(?::${v6segment}){1,7}|:))             // ::2:3:4:5:6:7:8  ::2:3:4:5:6:7:8  ::8             ::1.2.3.4
)(?:%[0-9a-zA-Z]{1,})?                                             // %eth0            %1
`.replace(/\s*\/\/.*$/gm,"").replace(/\n/g,"").trim(),v46Exact$1=new RegExp(`(?:^${v4$1}$)|(?:^${v6$1}$)`),v4exact$1=new RegExp(`^${v4$1}$`),v6exact$1=new RegExp(`^${v6$1}$`),ipRegex$2=r=>r&&r.exact?v46Exact$1:new RegExp(`(?:${boundry(r)}${v4$1}${boundry(r)})|(?:${boundry(r)}${v6$1}${boundry(r)})`,"g");ipRegex$2.v4=r=>r&&r.exact?v4exact$1:new RegExp(`${boundry(r)}${v4$1}${boundry(r)}`,"g");ipRegex$2.v6=r=>r&&r.exact?v6exact$1:new RegExp(`${boundry(r)}${v6$1}${boundry(r)}`,"g");var ipaddr$1={exports:{}};(function(r){(function(e){const t="(0?\\d+|0x[a-f0-9]+)",n={fourOctet:new RegExp(`^${t}\\.${t}\\.${t}\\.${t}$`,"i"),threeOctet:new RegExp(`^${t}\\.${t}\\.${t}$`,"i"),twoOctet:new RegExp(`^${t}\\.${t}$`,"i"),longValue:new RegExp(`^${t}$`,"i")},i=new RegExp("^0[0-7]+$","i"),o=new RegExp("^0x[a-f0-9]+$","i"),a="%[0-9a-z]{1,}",c="(?:[0-9a-f]+::?)+",l={zoneIndex:new RegExp(a,"i"),native:new RegExp(`^(::)?(${c})?([0-9a-f]+)?(::)?(${a})?$`,"i"),deprecatedTransitional:new RegExp(`^(?:::)(${t}\\.${t}\\.${t}\\.${t}(${a})?)$`,"i"),transitional:new RegExp(`^((?:${c})|(?:::)(?:${c})?)${t}\\.${t}\\.${t}\\.${t}(${a})?$`,"i")};function u(E,v){if(E.indexOf("::")!==E.lastIndexOf("::"))return null;let T=0,I=-1,A=(E.match(l.zoneIndex)||[])[0],P,x;for(A&&(A=A.substring(1),E=E.replace(/%.+$/,""));(I=E.indexOf(":",I+1))>=0;)T++;if(E.substr(0,2)==="::"&&T--,E.substr(-2,2)==="::"&&T--,T>v)return null;for(x=v-T,P=":";x--;)P+="0:";return E=E.replace("::",P),E[0]===":"&&(E=E.slice(1)),E[E.length-1]===":"&&(E=E.slice(0,-1)),v=function(){const D=E.split(":"),C=[];for(let k=0;k<D.length;k++)C.push(parseInt(D[k],16));return C}(),{parts:v,zoneId:A}}function f(E,v,T,I){if(E.length!==v.length)throw new Error("ipaddr: cannot match CIDR for objects with different lengths");let A=0,P;for(;I>0;){if(P=T-I,P<0&&(P=0),E[A]>>P!==v[A]>>P)return!1;I-=T,A+=1}return!0}function g(E){if(o.test(E))return parseInt(E,16);if(E[0]==="0"&&!isNaN(parseInt(E[1],10))){if(i.test(E))return parseInt(E,8);throw new Error(`ipaddr: cannot parse ${E} as octal`)}return parseInt(E,10)}function $(E,v){for(;E.length<v;)E=`0${E}`;return E}const S={};S.IPv4=function(){function E(v){if(v.length!==4)throw new Error("ipaddr: ipv4 octet count should be 4");let T,I;for(T=0;T<v.length;T++)if(I=v[T],!(0<=I&&I<=255))throw new Error("ipaddr: ipv4 octet should fit in 8 bits");this.octets=v}return E.prototype.SpecialRanges={unspecified:[[new E([0,0,0,0]),8]],broadcast:[[new E([255,255,255,255]),32]],multicast:[[new E([224,0,0,0]),4]],linkLocal:[[new E([169,254,0,0]),16]],loopback:[[new E([127,0,0,0]),8]],carrierGradeNat:[[new E([100,64,0,0]),10]],private:[[new E([10,0,0,0]),8],[new E([172,16,0,0]),12],[new E([192,168,0,0]),16]],reserved:[[new E([192,0,0,0]),24],[new E([192,0,2,0]),24],[new E([192,88,99,0]),24],[new E([198,18,0,0]),15],[new E([198,51,100,0]),24],[new E([203,0,113,0]),24],[new E([240,0,0,0]),4]]},E.prototype.kind=function(){return"ipv4"},E.prototype.match=function(v,T){let I;if(T===void 0&&(I=v,v=I[0],T=I[1]),v.kind()!=="ipv4")throw new Error("ipaddr: cannot match ipv4 address with non-ipv4 one");return f(this.octets,v.octets,8,T)},E.prototype.prefixLengthFromSubnetMask=function(){let v=0,T=!1;const I={0:8,128:7,192:6,224:5,240:4,248:3,252:2,254:1,255:0};let A,P,x;for(A=3;A>=0;A-=1)if(P=this.octets[A],P in I){if(x=I[P],T&&x!==0)return null;x!==8&&(T=!0),v+=x}else return null;return 32-v},E.prototype.range=function(){return S.subnetMatch(this,this.SpecialRanges)},E.prototype.toByteArray=function(){return this.octets.slice(0)},E.prototype.toIPv4MappedAddress=function(){return S.IPv6.parse(`::ffff:${this.toString()}`)},E.prototype.toNormalizedString=function(){return this.toString()},E.prototype.toString=function(){return this.octets.join(".")},E}(),S.IPv4.broadcastAddressFromCIDR=function(E){try{const v=this.parseCIDR(E),T=v[0].toByteArray(),I=this.subnetMaskFromPrefixLength(v[1]).toByteArray(),A=[];let P=0;for(;P<4;)A.push(parseInt(T[P],10)|parseInt(I[P],10)^255),P++;return new this(A)}catch{throw new Error("ipaddr: the address does not have IPv4 CIDR format")}},S.IPv4.isIPv4=function(E){return this.parser(E)!==null},S.IPv4.isValid=function(E){try{return new this(this.parser(E)),!0}catch{return!1}},S.IPv4.isValidFourPartDecimal=function(E){return!!(S.IPv4.isValid(E)&&E.match(/^(0|[1-9]\d*)(\.(0|[1-9]\d*)){3}$/))},S.IPv4.networkAddressFromCIDR=function(E){let v,T,I,A,P;try{for(v=this.parseCIDR(E),I=v[0].toByteArray(),P=this.subnetMaskFromPrefixLength(v[1]).toByteArray(),A=[],T=0;T<4;)A.push(parseInt(I[T],10)&parseInt(P[T],10)),T++;return new this(A)}catch{throw new Error("ipaddr: the address does not have IPv4 CIDR format")}},S.IPv4.parse=function(E){const v=this.parser(E);if(v===null)throw new Error("ipaddr: string is not formatted like an IPv4 Address");return new this(v)},S.IPv4.parseCIDR=function(E){let v;if(v=E.match(/^(.+)\/(\d+)$/)){const T=parseInt(v[2]);if(T>=0&&T<=32){const I=[this.parse(v[1]),T];return Object.defineProperty(I,"toString",{value:function(){return this.join("/")}}),I}}throw new Error("ipaddr: string is not formatted like an IPv4 CIDR range")},S.IPv4.parser=function(E){let v,T,I;if(v=E.match(n.fourOctet))return function(){const A=v.slice(1,6),P=[];for(let x=0;x<A.length;x++)T=A[x],P.push(g(T));return P}();if(v=E.match(n.longValue)){if(I=g(v[1]),I>4294967295||I<0)throw new Error("ipaddr: address outside defined range");return function(){const A=[];let P;for(P=0;P<=24;P+=8)A.push(I>>P&255);return A}().reverse()}else return(v=E.match(n.twoOctet))?function(){const A=v.slice(1,4),P=[];if(I=g(A[1]),I>16777215||I<0)throw new Error("ipaddr: address outside defined range");return P.push(g(A[0])),P.push(I>>16&255),P.push(I>>8&255),P.push(I&255),P}():(v=E.match(n.threeOctet))?function(){const A=v.slice(1,5),P=[];if(I=g(A[2]),I>65535||I<0)throw new Error("ipaddr: address outside defined range");return P.push(g(A[0])),P.push(g(A[1])),P.push(I>>8&255),P.push(I&255),P}():null},S.IPv4.subnetMaskFromPrefixLength=function(E){if(E=parseInt(E),E<0||E>32)throw new Error("ipaddr: invalid IPv4 prefix length");const v=[0,0,0,0];let T=0;const I=Math.floor(E/8);for(;T<I;)v[T]=255,T++;return I<4&&(v[I]=Math.pow(2,E%8)-1<<8-E%8),new this(v)},S.IPv6=function(){function E(v,T){let I,A;if(v.length===16)for(this.parts=[],I=0;I<=14;I+=2)this.parts.push(v[I]<<8|v[I+1]);else if(v.length===8)this.parts=v;else throw new Error("ipaddr: ipv6 part count should be 8 or 16");for(I=0;I<this.parts.length;I++)if(A=this.parts[I],!(0<=A&&A<=65535))throw new Error("ipaddr: ipv6 part should fit in 16 bits");T&&(this.zoneId=T)}return E.prototype.SpecialRanges={unspecified:[new E([0,0,0,0,0,0,0,0]),128],linkLocal:[new E([65152,0,0,0,0,0,0,0]),10],multicast:[new E([65280,0,0,0,0,0,0,0]),8],loopback:[new E([0,0,0,0,0,0,0,1]),128],uniqueLocal:[new E([64512,0,0,0,0,0,0,0]),7],ipv4Mapped:[new E([0,0,0,0,0,65535,0,0]),96],rfc6145:[new E([0,0,0,0,65535,0,0,0]),96],rfc6052:[new E([100,65435,0,0,0,0,0,0]),96],"6to4":[new E([8194,0,0,0,0,0,0,0]),16],teredo:[new E([8193,0,0,0,0,0,0,0]),32],reserved:[[new E([8193,3512,0,0,0,0,0,0]),32]],benchmarking:[new E([8193,2,0,0,0,0,0,0]),48],amt:[new E([8193,3,0,0,0,0,0,0]),32],as112v6:[new E([8193,4,274,0,0,0,0,0]),48],deprecated:[new E([8193,16,0,0,0,0,0,0]),28],orchid2:[new E([8193,32,0,0,0,0,0,0]),28]},E.prototype.isIPv4MappedAddress=function(){return this.range()==="ipv4Mapped"},E.prototype.kind=function(){return"ipv6"},E.prototype.match=function(v,T){let I;if(T===void 0&&(I=v,v=I[0],T=I[1]),v.kind()!=="ipv6")throw new Error("ipaddr: cannot match ipv6 address with non-ipv6 one");return f(this.parts,v.parts,16,T)},E.prototype.prefixLengthFromSubnetMask=function(){let v=0,T=!1;const I={0:16,32768:15,49152:14,57344:13,61440:12,63488:11,64512:10,65024:9,65280:8,65408:7,65472:6,65504:5,65520:4,65528:3,65532:2,65534:1,65535:0};let A,P;for(let x=7;x>=0;x-=1)if(A=this.parts[x],A in I){if(P=I[A],T&&P!==0)return null;P!==16&&(T=!0),v+=P}else return null;return 128-v},E.prototype.range=function(){return S.subnetMatch(this,this.SpecialRanges)},E.prototype.toByteArray=function(){let v;const T=[],I=this.parts;for(let A=0;A<I.length;A++)v=I[A],T.push(v>>8),T.push(v&255);return T},E.prototype.toFixedLengthString=function(){const v=function(){const I=[];for(let A=0;A<this.parts.length;A++)I.push($(this.parts[A].toString(16),4));return I}.call(this).join(":");let T="";return this.zoneId&&(T=`%${this.zoneId}`),v+T},E.prototype.toIPv4Address=function(){if(!this.isIPv4MappedAddress())throw new Error("ipaddr: trying to convert a generic ipv6 address to ipv4");const v=this.parts.slice(-2),T=v[0],I=v[1];return new S.IPv4([T>>8,T&255,I>>8,I&255])},E.prototype.toNormalizedString=function(){const v=function(){const I=[];for(let A=0;A<this.parts.length;A++)I.push(this.parts[A].toString(16));return I}.call(this).join(":");let T="";return this.zoneId&&(T=`%${this.zoneId}`),v+T},E.prototype.toRFC5952String=function(){const v=/((^|:)(0(:|$)){2,})/g,T=this.toNormalizedString();let I=0,A=-1,P;for(;P=v.exec(T);)P[0].length>A&&(I=P.index,A=P[0].length);return A<0?T:`${T.substring(0,I)}::${T.substring(I+A)}`},E.prototype.toString=function(){return this.toRFC5952String()},E}(),S.IPv6.broadcastAddressFromCIDR=function(E){try{const v=this.parseCIDR(E),T=v[0].toByteArray(),I=this.subnetMaskFromPrefixLength(v[1]).toByteArray(),A=[];let P=0;for(;P<16;)A.push(parseInt(T[P],10)|parseInt(I[P],10)^255),P++;return new this(A)}catch(v){throw new Error(`ipaddr: the address does not have IPv6 CIDR format (${v})`)}},S.IPv6.isIPv6=function(E){return this.parser(E)!==null},S.IPv6.isValid=function(E){if(typeof E=="string"&&E.indexOf(":")===-1)return!1;try{const v=this.parser(E);return new this(v.parts,v.zoneId),!0}catch{return!1}},S.IPv6.networkAddressFromCIDR=function(E){let v,T,I,A,P;try{for(v=this.parseCIDR(E),I=v[0].toByteArray(),P=this.subnetMaskFromPrefixLength(v[1]).toByteArray(),A=[],T=0;T<16;)A.push(parseInt(I[T],10)&parseInt(P[T],10)),T++;return new this(A)}catch(x){throw new Error(`ipaddr: the address does not have IPv6 CIDR format (${x})`)}},S.IPv6.parse=function(E){const v=this.parser(E);if(v.parts===null)throw new Error("ipaddr: string is not formatted like an IPv6 Address");return new this(v.parts,v.zoneId)},S.IPv6.parseCIDR=function(E){let v,T,I;if((T=E.match(/^(.+)\/(\d+)$/))&&(v=parseInt(T[2]),v>=0&&v<=128))return I=[this.parse(T[1]),v],Object.defineProperty(I,"toString",{value:function(){return this.join("/")}}),I;throw new Error("ipaddr: string is not formatted like an IPv6 CIDR range")},S.IPv6.parser=function(E){let v,T,I,A,P,x;if(I=E.match(l.deprecatedTransitional))return this.parser(`::ffff:${I[1]}`);if(l.native.test(E))return u(E,8);if((I=E.match(l.transitional))&&(x=I[6]||"",v=u(I[1].slice(0,-1)+x,6),v.parts)){for(P=[parseInt(I[2]),parseInt(I[3]),parseInt(I[4]),parseInt(I[5])],T=0;T<P.length;T++)if(A=P[T],!(0<=A&&A<=255))return null;return v.parts.push(P[0]<<8|P[1]),v.parts.push(P[2]<<8|P[3]),{parts:v.parts,zoneId:v.zoneId}}return null},S.IPv6.subnetMaskFromPrefixLength=function(E){if(E=parseInt(E),E<0||E>128)throw new Error("ipaddr: invalid IPv6 prefix length");const v=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];let T=0;const I=Math.floor(E/8);for(;T<I;)v[T]=255,T++;return I<16&&(v[I]=Math.pow(2,E%8)-1<<8-E%8),new this(v)},S.fromByteArray=function(E){const v=E.length;if(v===4)return new S.IPv4(E);if(v===16)return new S.IPv6(E);throw new Error("ipaddr: the binary input is neither an IPv6 nor IPv4 address")},S.isValid=function(E){return S.IPv6.isValid(E)||S.IPv4.isValid(E)},S.parse=function(E){if(S.IPv6.isValid(E))return S.IPv6.parse(E);if(S.IPv4.isValid(E))return S.IPv4.parse(E);throw new Error("ipaddr: the address has neither IPv6 nor IPv4 format")},S.parseCIDR=function(E){try{return S.IPv6.parseCIDR(E)}catch{try{return S.IPv4.parseCIDR(E)}catch{throw new Error("ipaddr: the address has neither IPv6 nor IPv4 CIDR format")}}},S.process=function(E){const v=this.parse(E);return v.kind()==="ipv6"&&v.isIPv4MappedAddress()?v.toIPv4Address():v},S.subnetMatch=function(E,v,T){let I,A,P,x;T==null&&(T="unicast");for(A in v)if(Object.prototype.hasOwnProperty.call(v,A)){for(P=v[A],P[0]&&!(P[0]instanceof Array)&&(P=[P]),I=0;I<P.length;I++)if(x=P[I],E.kind()===x[0].kind()&&E.match.apply(E,x))return A}return T},r.exports?r.exports=S:e.ipaddr=S})(commonjsGlobal)})(ipaddr$1);var ipaddrExports=ipaddr$1.exports;const ipaddr=getDefaultExportFromCjs(ipaddrExports),{isValid:is_valid,parse:parse$2}=ipaddr,PRIVATE_IP_RANGES=["0.0.0.0/8","10.0.0.0/8","100.64.0.0/10","127.0.0.0/8","169.254.0.0/16","172.16.0.0/12","192.0.0.0/24","192.0.0.0/29","192.0.0.8/32","192.0.0.9/32","192.0.0.10/32","192.0.0.170/32","192.0.0.171/32","192.0.2.0/24","192.31.196.0/24","192.52.193.0/24","192.88.99.0/24","192.168.0.0/16","192.175.48.0/24","198.18.0.0/15","198.51.100.0/24","203.0.113.0/24","240.0.0.0/4","255.255.255.255/32"],NETMASK_RANGES=PRIVATE_IP_RANGES.map(r=>new Netmask_1(r));function ipv4_check(r){for(let e of NETMASK_RANGES)if(e.contains(r))return!0;return!1}function ipv6_check(r){return/^::$/.test(r)||/^::1$/.test(r)||/^::f{4}:([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})$/.test(r)||/^::f{4}:0.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})$/.test(r)||/^64:ff9b::([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})$/.test(r)||/^100::([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4})$/.test(r)||/^2001::([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4})$/.test(r)||/^2001:2[0-9a-fA-F]:([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4})$/.test(r)||/^2001:db8:([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4})$/.test(r)||/^2002:([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4})$/.test(r)||/^f[c-d]([0-9a-fA-F]{2,2}):/i.test(r)||/^fe[8-9a-bA-B][0-9a-fA-F]:/i.test(r)||/^ff([0-9a-fA-F]{2,2}):/i.test(r)}const is_ip_private=r=>{if(is_valid(r)){const e=parse$2(r);if(e.kind()==="ipv4")return ipv4_check(e.toNormalizedString());if(e.kind()==="ipv6")return ipv6_check(r)}else if(isIP$1(r)&&ipRegex$2.v6().test(r))return ipv6_check(r)};function connectionGater$1(r={}){return{denyDialPeer:async()=>!1,denyDialMultiaddr:async e=>{const t=e.stringTuples();return t[0][0]===4||t[0][0]===41?!!is_ip_private(`${t[0][1]}`):!1},denyInboundConnection:async()=>!1,denyOutboundConnection:async()=>!1,denyInboundEncryptedConnection:async()=>!1,denyOutboundEncryptedConnection:async()=>!1,denyInboundUpgradedConnection:async()=>!1,denyOutboundUpgradedConnection:async()=>!1,filterMultiaddrForPeer:async()=>!0,...r}}const symbol$2=Symbol.for("@libp2p/transport");var FaultTolerance$a;(function(r){r[r.FATAL_ALL=0]="FATAL_ALL",r[r.NO_FATAL=1]="NO_FATAL"})(FaultTolerance$a||(FaultTolerance$a={}));const toParts=r=>r.toString().split("/").slice(1),func=r=>({match:e=>e.length<1?!1:r(e[0])?e.slice(1):!1,pattern:"fn"}),literal=r=>({match:e=>func(t=>t===r).match(e),pattern:r}),string$2=()=>({match:r=>func(e=>typeof e=="string").match(r),pattern:"{string}"}),number$1=()=>({match:r=>func(e=>!isNaN(parseInt(e))).match(r),pattern:"{number}"}),peerId=()=>({match:r=>{if(r.length<2||r[0]!=="p2p"&&r[0]!=="ipfs")return!1;if(r[1].startsWith("Q")||r[1].startsWith("1"))try{base58btc$4.decode(`z${r[1]}`)}catch{return!1}else return!1;return r.slice(2)},pattern:"/p2p/{peerid}"}),certhash$1=()=>({match:r=>{if(r.length<2||r[0]!=="certhash")return!1;try{base64url$2.decode(r[1])}catch{return!1}return r.slice(2)},pattern:"/certhash/{certhash}"}),optional=r=>({match:e=>{const t=r.match(e);return t===!1?e:t},pattern:`optional(${r.pattern})`}),or$3=(...r)=>({match:e=>{let t;for(const n of r){const i=n.match(e);i!==!1&&(t==null||i.length<t.length)&&(t=i)}return t??!1},pattern:`or(${r.map(e=>e.pattern).join(", ")})`}),and$1=(...r)=>({match:e=>{for(const t of r){const n=t.match(e);if(n===!1)return!1;e=n}return e},pattern:`and(${r.map(e=>e.pattern).join(", ")})`});function fmt(...r){function e(i){let o=toParts(i);for(const a of r){const c=a.match(o);if(c===!1)return!1;o=c}return o}function t(i){return e(i)!==!1}function n(i){const o=e(i);return o===!1?!1:o.length===0}return{matches:t,exactMatch:n}}const _DNS4=and$1(literal("dns4"),string$2()),_DNS6=and$1(literal("dns6"),string$2()),_DNSADDR=and$1(literal("dnsaddr"),string$2()),_DNS=and$1(literal("dns"),string$2()),DNS$1=fmt(or$3(_DNS,_DNSADDR,_DNS4,_DNS6)),_IP4=and$1(literal("ip4"),func(isIPv4)),_IP6=and$1(literal("ip6"),func(isIPv6)),_IP=or$3(_IP4,_IP6),_IP_OR_DOMAIN=or$3(_IP,_DNS,_DNS4,_DNS6,_DNSADDR),IP_OR_DOMAIN=fmt(_IP_OR_DOMAIN),IP$1=fmt(_IP),_TCP=and$1(_IP_OR_DOMAIN,literal("tcp"),number$1()),_UDP=and$1(_IP_OR_DOMAIN,literal("udp"),number$1()),TCP_OR_UDP=or$3(_TCP,_UDP),_QUIC=and$1(_UDP,literal("quic")),_QUICV1=and$1(_UDP,literal("quic-v1")),QUIC_V0_OR_V1=or$3(_QUIC,_QUICV1),_WEB=or$3(_IP_OR_DOMAIN,_TCP,_UDP,_QUIC,_QUICV1),_WebSockets$1=or$3(and$1(_WEB,literal("ws"),optional(peerId()))),_WebSocketsSecure$1=or$3(and$1(_WEB,literal("wss"),optional(peerId())),and$1(_WEB,literal("tls"),literal("ws"),optional(peerId()))),_WebRTCDirect$1=and$1(TCP_OR_UDP,literal("webrtc-direct"),certhash$1(),optional(certhash$1()),optional(peerId())),WebRTCDirect$1=fmt(_WebRTCDirect$1),_WebTransport$1=and$1(_QUICV1,literal("webtransport"),certhash$1(),certhash$1(),optional(peerId())),WebTransport$2=fmt(_WebTransport$1),_P2P$1=or$3(_WebSockets$1,_WebSocketsSecure$1,and$1(_TCP,optional(peerId())),and$1(QUIC_V0_OR_V1,optional(peerId())),and$1(_IP_OR_DOMAIN,optional(peerId())),_WebRTCDirect$1,_WebTransport$1,peerId()),_Circuit$1=and$1(_P2P$1,literal("p2p-circuit"),peerId()),Circuit$1=fmt(_Circuit$1),_WebRTC=or$3(and$1(_P2P$1,literal("p2p-circuit"),literal("webrtc"),peerId()),and$1(_P2P$1,literal("webrtc"),optional(peerId())),literal("webrtc")),WebRTC=fmt(_WebRTC);function isPrivate$1(r){try{const{address:e}=r.nodeAddress();return!!is_ip_private(e)}catch{return!0}}function publicAddressesFirst$1(r,e){const t=isPrivate$1(r.multiaddr),n=isPrivate$1(e.multiaddr);return t&&!n?1:!t&&n?-1:0}function certifiedAddressesFirst$1(r,e){return r.isCertified&&!e.isCertified?-1:!r.isCertified&&e.isCertified?1:0}function circuitRelayAddressesLast$1(r,e){const t=Circuit$1.exactMatch(r.multiaddr),n=Circuit$1.exactMatch(e.multiaddr);return t&&!n?1:!t&&n?-1:0}function defaultAddressSort$1(r,e){const t=publicAddressesFirst$1(r,e);if(t!==0)return t;const n=circuitRelayAddressesLast$1(r,e);return n!==0?n:certifiedAddressesFirst$1(r,e)}var browser$1={exports:{}},ms$1,hasRequiredMs;function requireMs(){if(hasRequiredMs)return ms$1;hasRequiredMs=1;var r=1e3,e=r*60,t=e*60,n=t*24,i=n*7,o=n*365.25;ms$1=function(f,g){g=g||{};var $=typeof f;if($==="string"&&f.length>0)return a(f);if($==="number"&&isFinite(f))return g.long?l(f):c(f);throw new Error("val is not a non-empty string or a valid number. val="+JSON.stringify(f))};function a(f){if(f=String(f),!(f.length>100)){var g=/^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(f);if(g){var $=parseFloat(g[1]),S=(g[2]||"ms").toLowerCase();switch(S){case"years":case"year":case"yrs":case"yr":case"y":return $*o;case"weeks":case"week":case"w":return $*i;case"days":case"day":case"d":return $*n;case"hours":case"hour":case"hrs":case"hr":case"h":return $*t;case"minutes":case"minute":case"mins":case"min":case"m":return $*e;case"seconds":case"second":case"secs":case"sec":case"s":return $*r;case"milliseconds":case"millisecond":case"msecs":case"msec":case"ms":return $;default:return}}}}function c(f){var g=Math.abs(f);return g>=n?Math.round(f/n)+"d":g>=t?Math.round(f/t)+"h":g>=e?Math.round(f/e)+"m":g>=r?Math.round(f/r)+"s":f+"ms"}function l(f){var g=Math.abs(f);return g>=n?u(f,g,n,"day"):g>=t?u(f,g,t,"hour"):g>=e?u(f,g,e,"minute"):g>=r?u(f,g,r,"second"):f+" ms"}function u(f,g,$,S){var E=g>=$*1.5;return Math.round(f/$)+" "+S+(E?"s":"")}return ms$1}function setup(r){t.debug=t,t.default=t,t.coerce=l,t.disable=o,t.enable=i,t.enabled=a,t.humanize=requireMs(),t.destroy=u,Object.keys(r).forEach(f=>{t[f]=r[f]}),t.names=[],t.skips=[],t.formatters={};function e(f){let g=0;for(let $=0;$<f.length;$++)g=(g<<5)-g+f.charCodeAt($),g|=0;return t.colors[Math.abs(g)%t.colors.length]}t.selectColor=e;function t(f){let g,$=null,S,E;function v(...T){if(!v.enabled)return;const I=v,A=Number(new Date),P=A-(g||A);I.diff=P,I.prev=g,I.curr=A,g=A,T[0]=t.coerce(T[0]),typeof T[0]!="string"&&T.unshift("%O");let x=0;T[0]=T[0].replace(/%([a-zA-Z%])/g,(C,k)=>{if(C==="%%")return"%";x++;const N=t.formatters[k];if(typeof N=="function"){const L=T[x];C=N.call(I,L),T.splice(x,1),x--}return C}),t.formatArgs.call(I,T),(I.log||t.log).apply(I,T)}return v.namespace=f,v.useColors=t.useColors(),v.color=t.selectColor(f),v.extend=n,v.destroy=t.destroy,Object.defineProperty(v,"enabled",{enumerable:!0,configurable:!1,get:()=>$!==null?$:(S!==t.namespaces&&(S=t.namespaces,E=t.enabled(f)),E),set:T=>{$=T}}),typeof t.init=="function"&&t.init(v),v}function n(f,g){const $=t(this.namespace+(typeof g>"u"?":":g)+f);return $.log=this.log,$}function i(f){t.save(f),t.namespaces=f,t.names=[],t.skips=[];let g;const $=(typeof f=="string"?f:"").split(/[\s,]+/),S=$.length;for(g=0;g<S;g++)$[g]&&(f=$[g].replace(/\*/g,".*?"),f[0]==="-"?t.skips.push(new RegExp("^"+f.slice(1)+"$")):t.names.push(new RegExp("^"+f+"$")))}function o(){const f=[...t.names.map(c),...t.skips.map(c).map(g=>"-"+g)].join(",");return t.enable(""),f}function a(f){if(f[f.length-1]==="*")return!0;let g,$;for(g=0,$=t.skips.length;g<$;g++)if(t.skips[g].test(f))return!1;for(g=0,$=t.names.length;g<$;g++)if(t.names[g].test(f))return!0;return!1}function c(f){return f.toString().substring(2,f.toString().length-2).replace(/\.\*\?$/,"*")}function l(f){return f instanceof Error?f.stack||f.message:f}function u(){console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.")}return t.enable(t.load()),t}var common=setup;(function(r,e){var t={};e.formatArgs=i,e.save=o,e.load=a,e.useColors=n,e.storage=c(),e.destroy=(()=>{let u=!1;return()=>{u||(u=!0,console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`."))}})(),e.colors=["#0000CC","#0000FF","#0033CC","#0033FF","#0066CC","#0066FF","#0099CC","#0099FF","#00CC00","#00CC33","#00CC66","#00CC99","#00CCCC","#00CCFF","#3300CC","#3300FF","#3333CC","#3333FF","#3366CC","#3366FF","#3399CC","#3399FF","#33CC00","#33CC33","#33CC66","#33CC99","#33CCCC","#33CCFF","#6600CC","#6600FF","#6633CC","#6633FF","#66CC00","#66CC33","#9900CC","#9900FF","#9933CC","#9933FF","#99CC00","#99CC33","#CC0000","#CC0033","#CC0066","#CC0099","#CC00CC","#CC00FF","#CC3300","#CC3333","#CC3366","#CC3399","#CC33CC","#CC33FF","#CC6600","#CC6633","#CC9900","#CC9933","#CCCC00","#CCCC33","#FF0000","#FF0033","#FF0066","#FF0099","#FF00CC","#FF00FF","#FF3300","#FF3333","#FF3366","#FF3399","#FF33CC","#FF33FF","#FF6600","#FF6633","#FF9900","#FF9933","#FFCC00","#FFCC33"];function n(){return typeof window<"u"&&window.process&&(window.process.type==="renderer"||window.process.__nwjs)?!0:typeof navigator<"u"&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/)?!1:typeof document<"u"&&document.documentElement&&document.documentElement.style&&document.documentElement.style.WebkitAppearance||typeof window<"u"&&window.console&&(window.console.firebug||window.console.exception&&window.console.table)||typeof navigator<"u"&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/)&&parseInt(RegExp.$1,10)>=31||typeof navigator<"u"&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/)}function i(u){if(u[0]=(this.useColors?"%c":"")+this.namespace+(this.useColors?" %c":" ")+u[0]+(this.useColors?"%c ":" ")+"+"+r.exports.humanize(this.diff),!this.useColors)return;const f="color: "+this.color;u.splice(1,0,f,"color: inherit");let g=0,$=0;u[0].replace(/%[a-zA-Z%]/g,S=>{S!=="%%"&&(g++,S==="%c"&&($=g))}),u.splice($,0,f)}e.log=console.debug||console.log||(()=>{});function o(u){try{u?e.storage.setItem("debug",u):e.storage.removeItem("debug")}catch{}}function a(){let u;try{u=e.storage.getItem("debug")}catch{}return!u&&typeof process<"u"&&"env"in process&&(u=t.DEBUG),u}function c(){try{return localStorage}catch{}}r.exports=common(e);const{formatters:l}=r.exports;l.j=function(u){try{return JSON.stringify(u)}catch(f){return"[UnexpectedJSONParseError]: "+f.message}}})(browser$1,browser$1.exports);var browserExports=browser$1.exports;const debug=getDefaultExportFromCjs(browserExports);var s=1e3,m=s*60,h=m*60,d=h*24,w=d*7,y=d*365.25,ms=function(r,e){e=e||{};var t=typeof r;if(t==="string"&&r.length>0)return parse$1(r);if(t==="number"&&isFinite(r))return e.long?fmtLong(r):fmtShort(r);throw new Error("val is not a non-empty string or a valid number. val="+JSON.stringify(r))};function parse$1(r){if(r=String(r),!(r.length>100)){var e=/^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(r);if(e){var t=parseFloat(e[1]),n=(e[2]||"ms").toLowerCase();switch(n){case"years":case"year":case"yrs":case"yr":case"y":return t*y;case"weeks":case"week":case"w":return t*w;case"days":case"day":case"d":return t*d;case"hours":case"hour":case"hrs":case"hr":case"h":return t*h;case"minutes":case"minute":case"mins":case"min":case"m":return t*m;case"seconds":case"second":case"secs":case"sec":case"s":return t*s;case"milliseconds":case"millisecond":case"msecs":case"msec":case"ms":return t;default:return}}}}function fmtShort(r){var e=Math.abs(r);return e>=d?Math.round(r/d)+"d":e>=h?Math.round(r/h)+"h":e>=m?Math.round(r/m)+"m":e>=s?Math.round(r/s)+"s":r+"ms"}function fmtLong(r){var e=Math.abs(r);return e>=d?plural(r,e,d,"day"):e>=h?plural(r,e,h,"hour"):e>=m?plural(r,e,m,"minute"):e>=s?plural(r,e,s,"second"):r+" ms"}function plural(r,e,t,n){var i=e>=t*1.5;return Math.round(r/t)+" "+n+(i?"s":"")}var receptacle=Receptacle,toMS=ms,cache$1=Receptacle.prototype,counter=new Date%1e9;function getUID(){return(Math.random()*1e9>>>0)+counter++}function Receptacle(r){r=r||{},this.id=r.id||getUID(),this.max=r.max||1/0,this.items=r.items||[],this._lookup={},this.size=this.items.length,this.lastModified=new Date(r.lastModified||new Date);for(var e,t,n=this.items.length;n--;)e=this.items[n],t=new Date(e.expires)-new Date,this._lookup[e.key]=e,t>0?this.expire(e.key,t):t<=0&&this.delete(e.key)}cache$1.has=function(r){return r in this._lookup};cache$1.get=function(r){if(!this.has(r))return null;var e=this._lookup[r];return e.refresh&&this.expire(r,e.refresh),this.items.splice(this.items.indexOf(e),1),this.items.push(e),e.value};cache$1.meta=function(r){if(!this.has(r))return null;var e=this._lookup[r];return"meta"in e?e.meta:null};cache$1.set=function(r,e,t){var n=this._lookup[r],i=this._lookup[r]={key:r,value:e};return this.lastModified=new Date,n?(clearTimeout(n.timeout),this.items.splice(this.items.indexOf(n),1,i)):(this.size>=this.max&&this.delete(this.items[0].key),this.items.push(i),this.size++),t&&("ttl"in t&&this.expire(r,t.ttl),"meta"in t&&(i.meta=t.meta),t.refresh&&(i.refresh=t.ttl)),this};cache$1.delete=function(r){var e=this._lookup[r];return e?(this.lastModified=new Date,this.items.splice(this.items.indexOf(e),1),clearTimeout(e.timeout),delete this._lookup[r],this.size--,this):!1};cache$1.expire=function(r,e){var t=e||0,n=this._lookup[r];if(!n)return this;if(typeof t=="string"&&(t=toMS(e)),typeof t!="number")throw new TypeError("Expiration time must be a string or number.");return clearTimeout(n.timeout),n.timeout=setTimeout(this.delete.bind(this,n.key),t),n.expires=Number(new Date)+t,this};cache$1.clear=function(){for(var r=this.items.length;r--;)this.delete(this.items[r].key);return this};cache$1.toJSON=function(){for(var r=new Array(this.items.length),e,t=r.length;t--;)e=this.items[t],r[t]={key:e.key,meta:e.meta,value:e.value,expires:e.expires,refresh:e.refresh};return{id:this.id,max:isFinite(this.max)?this.max:void 0,lastModified:this.lastModified,items:r}};const Receptacle$1=getDefaultExportFromCjs(receptacle);function buildResource(r,e,t){return`${r}?name=${e}&type=${t}`}async function request(r,e){return await(await fetch(r,{headers:new Headers({accept:"application/dns-json"}),signal:e})).json()}function getCacheKey(r,e){return`${e}_${r}`}const log$V=Object.assign(debug("dns-over-http-resolver"),{error:debug("dns-over-http-resolver:error")});class Resolver{constructor(e={}){_(this,"_cache");_(this,"_TXTcache");_(this,"_servers");_(this,"_request");_(this,"_abortControllers");this._cache=new Receptacle$1({max:e?.maxCache??100}),this._TXTcache=new Receptacle$1({max:e?.maxCache??100}),this._servers=["https://cloudflare-dns.com/dns-query","https://dns.google/resolve"],this._request=e.request??request,this._abortControllers=[]}cancel(){this._abortControllers.forEach(e=>{e.abort()})}getServers(){return this._servers}_getShuffledServers(){const e=[...this._servers];for(let t=e.length-1;t>0;t--){const n=Math.floor(Math.random()*t),i=e[t];e[t]=e[n],e[n]=i}return e}setServers(e){this._servers=e}async resolve(e,t="A"){switch(t){case"A":return this.resolve4(e);case"AAAA":return this.resolve6(e);case"TXT":return this.resolveTxt(e);default:throw new Error(`${t} is not supported`)}}async resolve4(e){const t="A",n=this._cache.get(getCacheKey(e,t));if(n!=null)return n;let i=!1;for(const o of this._getShuffledServers()){const a=new AbortController;this._abortControllers.push(a);try{const c=await this._request(buildResource(o,e,t),a.signal),l=c.Answer.map(f=>f.data),u=Math.min(...c.Answer.map(f=>f.TTL));return this._cache.set(getCacheKey(e,t),l,{ttl:u}),l}catch{a.signal.aborted&&(i=!0),log$V.error(`${o} could not resolve ${e} record ${t}`)}finally{this._abortControllers=this._abortControllers.filter(c=>c!==a)}}throw i?Object.assign(new Error("queryA ECANCELLED"),{code:"ECANCELLED"}):new Error(`Could not resolve ${e} record ${t}`)}async resolve6(e){const t="AAAA",n=this._cache.get(getCacheKey(e,t));if(n!=null)return n;let i=!1;for(const o of this._getShuffledServers()){const a=new AbortController;this._abortControllers.push(a);try{const c=await this._request(buildResource(o,e,t),a.signal),l=c.Answer.map(f=>f.data),u=Math.min(...c.Answer.map(f=>f.TTL));return this._cache.set(getCacheKey(e,t),l,{ttl:u}),l}catch{a.signal.aborted&&(i=!0),log$V.error(`${o} could not resolve ${e} record ${t}`)}finally{this._abortControllers=this._abortControllers.filter(c=>c!==a)}}throw i?Object.assign(new Error("queryAaaa ECANCELLED"),{code:"ECANCELLED"}):new Error(`Could not resolve ${e} record ${t}`)}async resolveTxt(e){const t="TXT",n=this._TXTcache.get(getCacheKey(e,t));if(n!=null)return n;let i=!1;for(const o of this._getShuffledServers()){const a=new AbortController;this._abortControllers.push(a);try{const c=await this._request(buildResource(o,e,t),a.signal),l=c.Answer.map(f=>[f.data.replace(/['"]+/g,"")]),u=Math.min(...c.Answer.map(f=>f.TTL));return this._TXTcache.set(getCacheKey(e,t),l,{ttl:u}),l}catch{a.signal.aborted&&(i=!0),log$V.error(`${o} could not resolve ${e} record ${t}`)}finally{this._abortControllers=this._abortControllers.filter(c=>c!==a)}}throw i?Object.assign(new Error("queryTxt ECANCELLED"),{code:"ECANCELLED"}):new Error(`Could not resolve ${e} record ${t}`)}clearCache(){this._cache.clear(),this._TXTcache.clear()}}const{code:dnsaddrCode}=getProtocol("dnsaddr");async function dnsaddrResolver(r,e={}){const t=new Resolver;e.signal!=null&&e.signal.addEventListener("abort",()=>{t.cancel()});const n=r.getPeerId(),[,i]=r.stringTuples().find(([c])=>c===dnsaddrCode)??[];if(i==null)throw new Error("No hostname found in multiaddr");let a=(await t.resolveTxt(`_dnsaddr.${i}`)).flat().map(c=>c.split("=")[1]).filter(Boolean);return n!=null&&(a=a.filter(c=>c.includes(n))),a}var messages$1;(function(r){r.NOT_STARTED_YET="The libp2p node is not started yet",r.DHT_DISABLED="DHT is not available",r.PUBSUB_DISABLED="PubSub is not available",r.CONN_ENCRYPTION_REQUIRED="At least one connection encryption module is required",r.ERR_TRANSPORTS_REQUIRED="At least one transport module is required",r.ERR_PROTECTOR_REQUIRED="Private network is enforced, but no protector was provided",r.NOT_FOUND="Not found"})(messages$1||(messages$1={}));var codes$6;(function(r){r.DHT_DISABLED="ERR_DHT_DISABLED",r.ERR_PUBSUB_DISABLED="ERR_PUBSUB_DISABLED",r.PUBSUB_NOT_STARTED="ERR_PUBSUB_NOT_STARTED",r.DHT_NOT_STARTED="ERR_DHT_NOT_STARTED",r.CONN_ENCRYPTION_REQUIRED="ERR_CONN_ENCRYPTION_REQUIRED",r.ERR_TRANSPORTS_REQUIRED="ERR_TRANSPORTS_REQUIRED",r.ERR_PROTECTOR_REQUIRED="ERR_PROTECTOR_REQUIRED",r.ERR_PEER_DIAL_INTERCEPTED="ERR_PEER_DIAL_INTERCEPTED",r.ERR_CONNECTION_INTERCEPTED="ERR_CONNECTION_INTERCEPTED",r.ERR_INVALID_PROTOCOLS_FOR_STREAM="ERR_INVALID_PROTOCOLS_FOR_STREAM",r.ERR_CONNECTION_ENDED="ERR_CONNECTION_ENDED",r.ERR_CONNECTION_FAILED="ERR_CONNECTION_FAILED",r.ERR_NODE_NOT_STARTED="ERR_NODE_NOT_STARTED",r.ERR_ALREADY_ABORTED="ERR_ALREADY_ABORTED",r.ERR_TOO_MANY_ADDRESSES="ERR_TOO_MANY_ADDRESSES",r.ERR_NO_VALID_ADDRESSES="ERR_NO_VALID_ADDRESSES",r.ERR_RELAYED_DIAL="ERR_RELAYED_DIAL",r.ERR_DIALED_SELF="ERR_DIALED_SELF",r.ERR_DISCOVERED_SELF="ERR_DISCOVERED_SELF",r.ERR_DUPLICATE_TRANSPORT="ERR_DUPLICATE_TRANSPORT",r.ERR_ENCRYPTION_FAILED="ERR_ENCRYPTION_FAILED",r.ERR_HOP_REQUEST_FAILED="ERR_HOP_REQUEST_FAILED",r.ERR_INVALID_KEY="ERR_INVALID_KEY",r.ERR_INVALID_MESSAGE="ERR_INVALID_MESSAGE",r.ERR_INVALID_PARAMETERS="ERR_INVALID_PARAMETERS",r.ERR_INVALID_PEER="ERR_INVALID_PEER",r.ERR_MUXER_UNAVAILABLE="ERR_MUXER_UNAVAILABLE",r.ERR_NOT_FOUND="ERR_NOT_FOUND",r.ERR_TIMEOUT="ERR_TIMEOUT",r.ERR_TRANSPORT_UNAVAILABLE="ERR_TRANSPORT_UNAVAILABLE",r.ERR_TRANSPORT_DIAL_FAILED="ERR_TRANSPORT_DIAL_FAILED",r.ERR_UNSUPPORTED_PROTOCOL="ERR_UNSUPPORTED_PROTOCOL",r.ERR_PROTOCOL_HANDLER_ALREADY_REGISTERED="ERR_PROTOCOL_HANDLER_ALREADY_REGISTERED",r.ERR_INVALID_MULTIADDR="ERR_INVALID_MULTIADDR",r.ERR_SIGNATURE_NOT_VALID="ERR_SIGNATURE_NOT_VALID",r.ERR_FIND_SELF="ERR_FIND_SELF",r.ERR_NO_ROUTERS_AVAILABLE="ERR_NO_ROUTERS_AVAILABLE",r.ERR_CONNECTION_NOT_MULTIPLEXED="ERR_CONNECTION_NOT_MULTIPLEXED",r.ERR_NO_DIAL_TOKENS="ERR_NO_DIAL_TOKENS",r.ERR_KEYCHAIN_REQUIRED="ERR_KEYCHAIN_REQUIRED",r.ERR_INVALID_CMS="ERR_INVALID_CMS",r.ERR_MISSING_KEYS="ERR_MISSING_KEYS",r.ERR_NO_KEY="ERR_NO_KEY",r.ERR_INVALID_KEY_NAME="ERR_INVALID_KEY_NAME",r.ERR_INVALID_KEY_TYPE="ERR_INVALID_KEY_TYPE",r.ERR_KEY_ALREADY_EXISTS="ERR_KEY_ALREADY_EXISTS",r.ERR_INVALID_KEY_SIZE="ERR_INVALID_KEY_SIZE",r.ERR_KEY_NOT_FOUND="ERR_KEY_NOT_FOUND",r.ERR_OLD_KEY_NAME_INVALID="ERR_OLD_KEY_NAME_INVALID",r.ERR_NEW_KEY_NAME_INVALID="ERR_NEW_KEY_NAME_INVALID",r.ERR_PASSWORD_REQUIRED="ERR_PASSWORD_REQUIRED",r.ERR_PEM_REQUIRED="ERR_PEM_REQUIRED",r.ERR_CANNOT_READ_KEY="ERR_CANNOT_READ_KEY",r.ERR_MISSING_PRIVATE_KEY="ERR_MISSING_PRIVATE_KEY",r.ERR_MISSING_PUBLIC_KEY="ERR_MISSING_PUBLIC_KEY",r.ERR_INVALID_OLD_PASS_TYPE="ERR_INVALID_OLD_PASS_TYPE",r.ERR_INVALID_NEW_PASS_TYPE="ERR_INVALID_NEW_PASS_TYPE",r.ERR_INVALID_PASS_LENGTH="ERR_INVALID_PASS_LENGTH",r.ERR_NOT_IMPLEMENTED="ERR_NOT_IMPLEMENTED",r.ERR_WRONG_PING_ACK="ERR_WRONG_PING_ACK",r.ERR_INVALID_RECORD="ERR_INVALID_RECORD",r.ERR_ALREADY_SUCCEEDED="ERR_ALREADY_SUCCEEDED",r.ERR_NO_HANDLER_FOR_PROTOCOL="ERR_NO_HANDLER_FOR_PROTOCOL",r.ERR_TOO_MANY_OUTBOUND_PROTOCOL_STREAMS="ERR_TOO_MANY_OUTBOUND_PROTOCOL_STREAMS",r.ERR_TOO_MANY_INBOUND_PROTOCOL_STREAMS="ERR_TOO_MANY_INBOUND_PROTOCOL_STREAMS",r.ERR_CONNECTION_DENIED="ERR_CONNECTION_DENIED",r.ERR_TRANSFER_LIMIT_EXCEEDED="ERR_TRANSFER_LIMIT_EXCEEDED"})(codes$6||(codes$6={}));const DefaultConfig$1={addresses:{listen:[],announce:[],noAnnounce:[],announceFilter:r=>r},connectionManager:{resolvers:{dnsaddr:dnsaddrResolver},addressSorter:defaultAddressSort$1},transportManager:{faultTolerance:FaultTolerance$a.FATAL_ALL}};function validateConfig$1(r){const e=mergeOptions$9(DefaultConfig$1,r);if(e.transports==null||e.transports.length<1)throw new CodeError$e(messages$1.ERR_TRANSPORTS_REQUIRED,codes$6.ERR_TRANSPORTS_REQUIRED);if(e.connectionProtector===null&&globalThis.process?.env?.LIBP2P_FORCE_PNET!=null)throw new CodeError$e(messages$1.ERR_PROTECTOR_REQUIRED,codes$6.ERR_PROTECTOR_REQUIRED);return e}const KEEP_ALIVE$1="keep-alive";var RateLimiterAbstract_1=class{constructor(e={}){this.points=e.points,this.duration=e.duration,this.blockDuration=e.blockDuration,this.execEvenly=e.execEvenly,this.execEvenlyMinDelayMs=e.execEvenlyMinDelayMs,this.keyPrefix=e.keyPrefix}get points(){return this._points}set points(e){this._points=e>=0?e:4}get duration(){return this._duration}set duration(e){this._duration=typeof e>"u"?1:e}get msDuration(){return this.duration*1e3}get blockDuration(){return this._blockDuration}set blockDuration(e){this._blockDuration=typeof e>"u"?0:e}get msBlockDuration(){return this.blockDuration*1e3}get execEvenly(){return this._execEvenly}set execEvenly(e){this._execEvenly=typeof e>"u"?!1:!!e}get execEvenlyMinDelayMs(){return this._execEvenlyMinDelayMs}set execEvenlyMinDelayMs(e){this._execEvenlyMinDelayMs=typeof e>"u"?Math.ceil(this.msDuration/this.points):e}get keyPrefix(){return this._keyPrefix}set keyPrefix(e){if(typeof e>"u"&&(e="rlflx"),typeof e!="string")throw new Error("keyPrefix must be string");this._keyPrefix=e}_getKeySecDuration(e={}){return e&&e.customDuration>=0?e.customDuration:this.duration}getKey(e){return this.keyPrefix.length>0?`${this.keyPrefix}:${e}`:e}parseKey(e){return e.substring(this.keyPrefix.length)}consume(){throw new Error("You have to implement the method 'consume'!")}penalty(){throw new Error("You have to implement the method 'penalty'!")}reward(){throw new Error("You have to implement the method 'reward'!")}get(){throw new Error("You have to implement the method 'get'!")}set(){throw new Error("You have to implement the method 'set'!")}block(){throw new Error("You have to implement the method 'block'!")}delete(){throw new Error("You have to implement the method 'delete'!")}},BlockedKeys_1$1=class{constructor(){this._keys={},this._addedKeysAmount=0}collectExpired(){const e=Date.now();Object.keys(this._keys).forEach(t=>{this._keys[t]<=e&&delete this._keys[t]}),this._addedKeysAmount=Object.keys(this._keys).length}add(e,t){this.addMs(e,t*1e3)}addMs(e,t){this._keys[e]=Date.now()+t,this._addedKeysAmount++,this._addedKeysAmount>999&&this.collectExpired()}msBeforeExpire(e){const t=this._keys[e];if(t&&t>=Date.now()){this.collectExpired();const n=Date.now();return t>=n?t-n:0}return 0}delete(e){e?delete this._keys[e]:Object.keys(this._keys).forEach(t=>{delete this._keys[t]})}};const BlockedKeys$1=BlockedKeys_1$1;var BlockedKeys_1=BlockedKeys$1,RateLimiterRes_1=class{constructor(e,t,n,i){this.remainingPoints=typeof e>"u"?0:e,this.msBeforeNext=typeof t>"u"?0:t,this.consumedPoints=typeof n>"u"?0:n,this.isFirstInDuration=typeof i>"u"?!1:i}get msBeforeNext(){return this._msBeforeNext}set msBeforeNext(e){return this._msBeforeNext=e,this}get remainingPoints(){return this._remainingPoints}set remainingPoints(e){return this._remainingPoints=e,this}get consumedPoints(){return this._consumedPoints}set consumedPoints(e){return this._consumedPoints=e,this}get isFirstInDuration(){return this._isFirstInDuration}set isFirstInDuration(e){this._isFirstInDuration=!!e}_getDecoratedProperties(){return{remainingPoints:this.remainingPoints,msBeforeNext:this.msBeforeNext,consumedPoints:this.consumedPoints,isFirstInDuration:this.isFirstInDuration}}[Symbol.for("nodejs.util.inspect.custom")](){return this._getDecoratedProperties()}toString(){return JSON.stringify(this._getDecoratedProperties())}toJSON(){return this._getDecoratedProperties()}};const RateLimiterAbstract$3=RateLimiterAbstract_1,BlockedKeys=BlockedKeys_1,RateLimiterRes$b=RateLimiterRes_1;var RateLimiterStoreAbstract_1=class extends RateLimiterAbstract$3{constructor(e={}){super(e),this.inMemoryBlockOnConsumed=e.inMemoryBlockOnConsumed,this.inMemoryBlockDuration=e.inMemoryBlockDuration,this.insuranceLimiter=e.insuranceLimiter,this._inMemoryBlockedKeys=new BlockedKeys}get client(){return this._client}set client(e){if(typeof e>"u")throw new Error("storeClient is not set");this._client=e}_afterConsume(e,t,n,i,o,a={}){const c=this._getRateLimiterRes(n,i,o);if(this.inMemoryBlockOnConsumed>0&&!(this.inMemoryBlockDuration>0)&&c.consumedPoints>=this.inMemoryBlockOnConsumed)return this._inMemoryBlockedKeys.addMs(n,c.msBeforeNext),c.consumedPoints>this.points?t(c):e(c);if(c.consumedPoints>this.points){let l=Promise.resolve();this.blockDuration>0&&c.consumedPoints<=this.points+i&&(c.msBeforeNext=this.msBlockDuration,l=this._block(n,c.consumedPoints,this.msBlockDuration,a)),this.inMemoryBlockOnConsumed>0&&c.consumedPoints>=this.inMemoryBlockOnConsumed&&(this._inMemoryBlockedKeys.add(n,this.inMemoryBlockDuration),c.msBeforeNext=this.msInMemoryBlockDuration),l.then(()=>{t(c)}).catch(u=>{t(u)})}else if(this.execEvenly&&c.msBeforeNext>0&&!c.isFirstInDuration){let l=Math.ceil(c.msBeforeNext/(c.remainingPoints+2));l<this.execEvenlyMinDelayMs&&(l=c.consumedPoints*this.execEvenlyMinDelayMs),setTimeout(e,l,c)}else e(c)}_handleError(e,t,n,i,o,a=!1,c={}){this.insuranceLimiter instanceof RateLimiterAbstract$3?this.insuranceLimiter[t](o,a,c).then(l=>{n(l)}).catch(l=>{i(l)}):i(e)}getInMemoryBlockMsBeforeExpire(e){return this.inMemoryBlockOnConsumed>0?this._inMemoryBlockedKeys.msBeforeExpire(e):0}get inMemoryBlockOnConsumed(){return this._inMemoryBlockOnConsumed}set inMemoryBlockOnConsumed(e){if(this._inMemoryBlockOnConsumed=e?parseInt(e):0,this.inMemoryBlockOnConsumed>0&&this.points>this.inMemoryBlockOnConsumed)throw new Error('inMemoryBlockOnConsumed option must be greater or equal "points" option')}get inMemoryBlockDuration(){return this._inMemoryBlockDuration}set inMemoryBlockDuration(e){if(this._inMemoryBlockDuration=e?parseInt(e):0,this.inMemoryBlockDuration>0&&this.inMemoryBlockOnConsumed===0)throw new Error("inMemoryBlockOnConsumed option must be set up")}get msInMemoryBlockDuration(){return this._inMemoryBlockDuration*1e3}get insuranceLimiter(){return this._insuranceLimiter}set insuranceLimiter(e){if(typeof e<"u"&&!(e instanceof RateLimiterAbstract$3))throw new Error("insuranceLimiter must be instance of RateLimiterAbstract");this._insuranceLimiter=e,this._insuranceLimiter&&(this._insuranceLimiter.blockDuration=this.blockDuration,this._insuranceLimiter.execEvenly=this.execEvenly)}block(e,t,n={}){const i=t*1e3;return this._block(this.getKey(e),this.points+1,i,n)}set(e,t,n,i={}){const o=(n>=0?n:this.duration)*1e3;return this._block(this.getKey(e),t,o,i)}consume(e,t=1,n={}){return new Promise((i,o)=>{const a=this.getKey(e),c=this.getInMemoryBlockMsBeforeExpire(a);if(c>0)return o(new RateLimiterRes$b(0,c));this._upsert(a,t,this._getKeySecDuration(n)*1e3,!1,n).then(l=>{this._afterConsume(i,o,a,t,l)}).catch(l=>{this._handleError(l,"consume",i,o,e,t,n)})})}penalty(e,t=1,n={}){const i=this.getKey(e);return new Promise((o,a)=>{this._upsert(i,t,this._getKeySecDuration(n)*1e3,!1,n).then(c=>{o(this._getRateLimiterRes(i,t,c))}).catch(c=>{this._handleError(c,"penalty",o,a,e,t,n)})})}reward(e,t=1,n={}){const i=this.getKey(e);return new Promise((o,a)=>{this._upsert(i,-t,this._getKeySecDuration(n)*1e3,!1,n).then(c=>{o(this._getRateLimiterRes(i,-t,c))}).catch(c=>{this._handleError(c,"reward",o,a,e,t,n)})})}get(e,t={}){const n=this.getKey(e);return new Promise((i,o)=>{this._get(n,t).then(a=>{i(a===null||typeof a>"u"?null:this._getRateLimiterRes(n,0,a))}).catch(a=>{this._handleError(a,"get",i,o,e,t)})})}delete(e,t={}){const n=this.getKey(e);return new Promise((i,o)=>{this._delete(n,t).then(a=>{this._inMemoryBlockedKeys.delete(n),i(a)}).catch(a=>{this._handleError(a,"delete",i,o,e,t)})})}deleteInMemoryBlockedAll(){this._inMemoryBlockedKeys.delete()}_getRateLimiterRes(e,t,n){throw new Error("You have to implement the method '_getRateLimiterRes'!")}_block(e,t,n,i={}){return new Promise((o,a)=>{this._upsert(e,t,n,!0,i).then(()=>{o(new RateLimiterRes$b(0,n>0?n:-1,t))}).catch(c=>{this._handleError(c,"block",o,a,this.parseKey(e),n/1e3,i)})})}_get(e,t={}){throw new Error("You have to implement the method '_get'!")}_delete(e,t={}){throw new Error("You have to implement the method '_delete'!")}_upsert(e,t,n,i=!1,o={}){throw new Error("You have to implement the method '_upsert'!")}};const RateLimiterStoreAbstract$4=RateLimiterStoreAbstract_1,RateLimiterRes$a=RateLimiterRes_1,incrTtlLuaScript="redis.call('set', KEYS[1], 0, 'EX', ARGV[2], 'NX') local consumed = redis.call('incrby', KEYS[1], ARGV[1]) local ttl = redis.call('pttl', KEYS[1]) if ttl == -1 then   redis.call('expire', KEYS[1], ARGV[2])   ttl = 1000 * ARGV[2] end return {consumed, ttl} ";let RateLimiterRedis$1=class extends RateLimiterStoreAbstract$4{constructor(e){super(e),this.client=e.storeClient,this._rejectIfRedisNotReady=!!e.rejectIfRedisNotReady,this.useRedisPackage=e.useRedisPackage||this.client.constructor.name==="Commander"||!1,this.useRedis3AndLowerPackage=e.useRedis3AndLowerPackage,typeof this.client.defineCommand=="function"&&this.client.defineCommand("rlflxIncr",{numberOfKeys:1,lua:incrTtlLuaScript})}_isRedisReady(){return this._rejectIfRedisNotReady?!(this.client.status&&this.client.status!=="ready"||typeof this.client.isReady=="function"&&!this.client.isReady()):!0}_getRateLimiterRes(e,t,n){let[i,o]=n;Array.isArray(i)&&([,i]=i,[,o]=o);const a=new RateLimiterRes$a;return a.consumedPoints=parseInt(i),a.isFirstInDuration=a.consumedPoints===t,a.remainingPoints=Math.max(this.points-a.consumedPoints,0),a.msBeforeNext=o,a}async _upsert(e,t,n,i=!1){if(!this._isRedisReady())throw new Error("Redis connection is not ready");const o=Math.floor(n/1e3),a=this.client.multi();return i?(o>0?!this.useRedisPackage&&!this.useRedis3AndLowerPackage?a.set(e,t,"EX",o):a.set(e,t,{EX:o}):a.set(e,t),!this.useRedisPackage&&!this.useRedis3AndLowerPackage?a.pttl(e).exec(!0):a.pTTL(e).exec(!0)):o>0?!this.useRedisPackage&&!this.useRedis3AndLowerPackage?this.client.rlflxIncr([e].concat([String(t),String(o)])):this.useRedis3AndLowerPackage?new Promise((c,l)=>{const u=function(f,g){return f?l(f):c(g)};typeof this.client.rlflxIncr=="function"?this.client.rlflxIncr(e,t,o,u):this.client.eval(incrTtlLuaScript,1,e,t,o,u)}):this.client.eval(incrTtlLuaScript,{keys:[e],arguments:[String(t),String(o)]}):!this.useRedisPackage&&!this.useRedis3AndLowerPackage?a.incrby(e,t).pttl(e).exec(!0):a.incrBy(e,t).pTTL(e).exec(!0)}async _get(e){if(!this._isRedisReady())throw new Error("Redis connection is not ready");return!this.useRedisPackage&&!this.useRedis3AndLowerPackage?this.client.multi().get(e).pttl(e).exec().then(t=>{const[[,n]]=t;return n===null?null:t}):this.client.multi().get(e).pTTL(e).exec(!0).then(t=>{const[n]=t;return n===null?null:t})}_delete(e){return this.client.del(e).then(t=>t>0)}};var RateLimiterRedis_1=RateLimiterRedis$1;const RateLimiterStoreAbstract$3=RateLimiterStoreAbstract_1,RateLimiterRes$9=RateLimiterRes_1;function getDriverVersion(r){try{const e=r.client?r.client:r,{version:t}=e.topology.s.options.metadata.driver,n=t.split(".").map(i=>parseInt(i));return{major:n[0],feature:n[1],patch:n[2]}}catch{return{major:0,feature:0,patch:0}}}let RateLimiterMongo$1=class nr extends RateLimiterStoreAbstract$3{constructor(e){super(e),this.dbName=e.dbName,this.tableName=e.tableName,this.indexKeyPrefix=e.indexKeyPrefix,e.mongo?this.client=e.mongo:this.client=e.storeClient,typeof this.client.then=="function"?this.client.then(t=>{this.client=t,this._initCollection(),this._driverVersion=getDriverVersion(this.client)}):(this._initCollection(),this._driverVersion=getDriverVersion(this.client))}get dbName(){return this._dbName}set dbName(e){this._dbName=typeof e>"u"?nr.getDbName():e}static getDbName(){return"node-rate-limiter-flexible"}get tableName(){return this._tableName}set tableName(e){this._tableName=typeof e>"u"?this.keyPrefix:e}get client(){return this._client}set client(e){if(typeof e>"u")throw new Error("mongo is not set");this._client=e}get indexKeyPrefix(){return this._indexKeyPrefix}set indexKeyPrefix(e){this._indexKeyPrefix=e||{}}_initCollection(){const t=(typeof this.client.db=="function"?this.client.db(this.dbName):this.client).collection(this.tableName);t.createIndex({expire:-1},{expireAfterSeconds:0}),t.createIndex(Object.assign({},this.indexKeyPrefix,{key:1}),{unique:!0}),this._collection=t}_getRateLimiterRes(e,t,n){const i=new RateLimiterRes$9;let o;return typeof n.value>"u"?o=n:o=n.value,i.isFirstInDuration=o.points===t,i.consumedPoints=o.points,i.remainingPoints=Math.max(this.points-i.consumedPoints,0),i.msBeforeNext=o.expire!==null?Math.max(new Date(o.expire).getTime()-Date.now(),0):-1,i}_upsert(e,t,n,i=!1,o={}){if(!this._collection)return Promise.reject(Error("Mongo connection is not established"));const a=o.attrs||{};let c,l;i?(c={key:e},c=Object.assign(c,a),l={$set:{key:e,points:t,expire:n>0?new Date(Date.now()+n):null}},l.$set=Object.assign(l.$set,a)):(c={$or:[{expire:{$gt:new Date}},{expire:{$eq:null}}],key:e},c=Object.assign(c,a),l={$setOnInsert:{key:e,expire:n>0?new Date(Date.now()+n):null},$inc:{points:t}},l.$setOnInsert=Object.assign(l.$setOnInsert,a));const u={upsert:!0};return this._driverVersion.major>=4||this._driverVersion.major===3&&this._driverVersion.feature>=7||this._driverVersion.feature>=6&&this._driverVersion.patch>=7?u.returnDocument="after":u.returnOriginal=!1,new Promise((f,g)=>{this._collection.findOneAndUpdate(c,l,u).then($=>{f($)}).catch($=>{if($&&$.code===11e3){const S=Object.assign({$or:[{expire:{$lte:new Date}},{expire:{$eq:null}}],key:e},a),E={$set:Object.assign({key:e,points:t,expire:n>0?new Date(Date.now()+n):null},a)};this._collection.findOneAndUpdate(S,E,u).then(v=>{f(v)}).catch(v=>{v&&v.code===11e3?this._upsert(e,t,n,i).then(T=>f(T)).catch(T=>g(T)):g(v)})}else g($)})})}_get(e,t={}){if(!this._collection)return Promise.reject(Error("Mongo connection is not established"));const n=t.attrs||{},i=Object.assign({key:e,$or:[{expire:{$gt:new Date}},{expire:{$eq:null}}]},n);return this._collection.findOne(i)}_delete(e,t={}){if(!this._collection)return Promise.reject(Error("Mongo connection is not established"));const n=t.attrs||{},i=Object.assign({key:e},n);return this._collection.deleteOne(i).then(o=>o.deletedCount>0)}};var RateLimiterMongo_1=RateLimiterMongo$1;const RateLimiterStoreAbstract$2=RateLimiterStoreAbstract_1,RateLimiterRes$8=RateLimiterRes_1;let RateLimiterMySQL$1=class extends RateLimiterStoreAbstract$2{constructor(e,t=null){super(e),this.client=e.storeClient,this.clientType=e.storeType,this.dbName=e.dbName,this.tableName=e.tableName,this.clearExpiredByTimeout=e.clearExpiredByTimeout,this.tableCreated=e.tableCreated,this.tableCreated?(this.clearExpiredByTimeout&&this._clearExpiredHourAgo(),typeof t=="function"&&t()):this._createDbAndTable().then(()=>{this.tableCreated=!0,this.clearExpiredByTimeout&&this._clearExpiredHourAgo(),typeof t=="function"&&t()}).catch(n=>{if(typeof t=="function")t(n);else throw n})}clearExpired(e){return new Promise(t=>{this._getConnection().then(n=>{n.query("DELETE FROM ??.?? WHERE expire < ?",[this.dbName,this.tableName,e],()=>{this._releaseConnection(n),t()})}).catch(()=>{t()})})}_clearExpiredHourAgo(){this._clearExpiredTimeoutId&&clearTimeout(this._clearExpiredTimeoutId),this._clearExpiredTimeoutId=setTimeout(()=>{this.clearExpired(Date.now()-36e5).then(()=>{this._clearExpiredHourAgo()})},3e5),this._clearExpiredTimeoutId.unref()}_getConnection(){switch(this.clientType){case"pool":return new Promise((e,t)=>{this.client.getConnection((n,i)=>{if(n)return t(n);e(i)})});case"sequelize":return this.client.connectionManager.getConnection();case"knex":return this.client.client.acquireConnection();default:return Promise.resolve(this.client)}}_releaseConnection(e){switch(this.clientType){case"pool":return e.release();case"sequelize":return this.client.connectionManager.releaseConnection(e);case"knex":return this.client.client.releaseConnection(e);default:return!0}}_createDbAndTable(){return new Promise((e,t)=>{this._getConnection().then(n=>{n.query(`CREATE DATABASE IF NOT EXISTS \`${this.dbName}\`;`,i=>{if(i)return this._releaseConnection(n),t(i);n.query(this._getCreateTableStmt(),o=>{if(o)return this._releaseConnection(n),t(o);this._releaseConnection(n),e()})})}).catch(n=>{t(n)})})}_getCreateTableStmt(){return`CREATE TABLE IF NOT EXISTS \`${this.dbName}\`.\`${this.tableName}\` (\`key\` VARCHAR(255) CHARACTER SET utf8 NOT NULL,\`points\` INT(9) NOT NULL default 0,\`expire\` BIGINT UNSIGNED,PRIMARY KEY (\`key\`)) ENGINE = INNODB;`}get clientType(){return this._clientType}set clientType(e){if(typeof e>"u")if(this.client.constructor.name==="Connection")e="connection";else if(this.client.constructor.name==="Pool")e="pool";else if(this.client.constructor.name==="Sequelize")e="sequelize";else throw new Error("storeType is not defined");this._clientType=e.toLowerCase()}get dbName(){return this._dbName}set dbName(e){this._dbName=typeof e>"u"?"rtlmtrflx":e}get tableName(){return this._tableName}set tableName(e){this._tableName=typeof e>"u"?this.keyPrefix:e}get tableCreated(){return this._tableCreated}set tableCreated(e){this._tableCreated=typeof e>"u"?!1:!!e}get clearExpiredByTimeout(){return this._clearExpiredByTimeout}set clearExpiredByTimeout(e){this._clearExpiredByTimeout=typeof e>"u"?!0:!!e}_getRateLimiterRes(e,t,n){const i=new RateLimiterRes$8,[o]=n;return i.isFirstInDuration=t===o.points,i.consumedPoints=i.isFirstInDuration?t:o.points,i.remainingPoints=Math.max(this.points-i.consumedPoints,0),i.msBeforeNext=o.expire?Math.max(o.expire-Date.now(),0):-1,i}_upsertTransaction(e,t,n,i,o){return new Promise((a,c)=>{e.query("BEGIN",l=>{if(l)return e.rollback(),c(l);const u=Date.now(),f=i>0?u+i:null;let g,$;o?(g=`INSERT INTO ??.?? VALUES (?, ?, ?)
          ON DUPLICATE KEY UPDATE 
            points = ?, 
            expire = ?;`,$=[this.dbName,this.tableName,t,n,f,n,f]):(g=`INSERT INTO ??.?? VALUES (?, ?, ?)
          ON DUPLICATE KEY UPDATE 
            points = IF(expire <= ?, ?, points + (?)), 
            expire = IF(expire <= ?, ?, expire);`,$=[this.dbName,this.tableName,t,n,f,u,n,n,u,f]),e.query(g,$,S=>{if(S)return e.rollback(),c(S);e.query("SELECT points, expire FROM ??.?? WHERE `key` = ?;",[this.dbName,this.tableName,t],(E,v)=>{if(E)return e.rollback(),c(E);e.query("COMMIT",T=>{if(T)return e.rollback(),c(T);a(v)})})})})})}_upsert(e,t,n,i=!1){return this.tableCreated?new Promise((o,a)=>{this._getConnection().then(c=>{this._upsertTransaction(c,e,t,n,i).then(l=>{o(l),this._releaseConnection(c)}).catch(l=>{a(l),this._releaseConnection(c)})}).catch(c=>{a(c)})}):Promise.reject(Error("Table is not created yet"))}_get(e){return this.tableCreated?new Promise((t,n)=>{this._getConnection().then(i=>{i.query("SELECT points, expire FROM ??.?? WHERE `key` = ? AND (`expire` > ? OR `expire` IS NULL)",[this.dbName,this.tableName,e,Date.now()],(o,a)=>{o?n(o):a.length===0?t(null):t(a),this._releaseConnection(i)})}).catch(i=>{n(i)})}):Promise.reject(Error("Table is not created yet"))}_delete(e){return this.tableCreated?new Promise((t,n)=>{this._getConnection().then(i=>{i.query("DELETE FROM ??.?? WHERE `key` = ?",[this.dbName,this.tableName,e],(o,a)=>{o?n(o):t(a.affectedRows>0),this._releaseConnection(i)})}).catch(i=>{n(i)})}):Promise.reject(Error("Table is not created yet"))}};var RateLimiterMySQL_1=RateLimiterMySQL$1;const RateLimiterStoreAbstract$1=RateLimiterStoreAbstract_1,RateLimiterRes$7=RateLimiterRes_1;let RateLimiterPostgres$1=class extends RateLimiterStoreAbstract$1{constructor(e,t=null){super(e),this.client=e.storeClient,this.clientType=e.storeType,this.tableName=e.tableName,this.schemaName=e.schemaName,this.clearExpiredByTimeout=e.clearExpiredByTimeout,this.tableCreated=e.tableCreated,this.tableCreated?(this.clearExpiredByTimeout&&this._clearExpiredHourAgo(),typeof t=="function"&&t()):this._createTable().then(()=>{this.tableCreated=!0,this.clearExpiredByTimeout&&this._clearExpiredHourAgo(),typeof t=="function"&&t()}).catch(n=>{if(typeof t=="function")t(n);else throw n})}_getTableIdentifier(){return this.schemaName?`"${this.schemaName}"."${this.tableName}"`:`"${this.tableName}"`}clearExpired(e){return new Promise(t=>{const n={name:"rlflx-clear-expired",text:`DELETE FROM ${this._getTableIdentifier()} WHERE expire < $1`,values:[e]};this._query(n).then(()=>{t()}).catch(()=>{t()})})}_clearExpiredHourAgo(){this._clearExpiredTimeoutId&&clearTimeout(this._clearExpiredTimeoutId),this._clearExpiredTimeoutId=setTimeout(()=>{this.clearExpired(Date.now()-36e5).then(()=>{this._clearExpiredHourAgo()})},3e5),this._clearExpiredTimeoutId.unref()}_getConnection(){switch(this.clientType){case"pool":return Promise.resolve(this.client);case"sequelize":return this.client.connectionManager.getConnection();case"knex":return this.client.client.acquireConnection();case"typeorm":return Promise.resolve(this.client.driver.master);default:return Promise.resolve(this.client)}}_releaseConnection(e){switch(this.clientType){case"pool":return!0;case"sequelize":return this.client.connectionManager.releaseConnection(e);case"knex":return this.client.client.releaseConnection(e);case"typeorm":return!0;default:return!0}}_createTable(){return new Promise((e,t)=>{this._query({text:this._getCreateTableStmt()}).then(()=>{e()}).catch(n=>{n.code==="23505"?e():t(n)})})}_getCreateTableStmt(){return`CREATE TABLE IF NOT EXISTS ${this._getTableIdentifier()} (
      key varchar(255) PRIMARY KEY,
      points integer NOT NULL DEFAULT 0,
      expire bigint
    );`}get clientType(){return this._clientType}set clientType(e){const t=this.client.constructor.name;if(typeof e>"u")if(t==="Client")e="client";else if(t==="Pool"||t==="BoundPool")e="pool";else if(t==="Sequelize")e="sequelize";else throw new Error("storeType is not defined");this._clientType=e.toLowerCase()}get tableName(){return this._tableName}set tableName(e){this._tableName=typeof e>"u"?this.keyPrefix:e}get schemaName(){return this._schemaName}set schemaName(e){this._schemaName=e}get tableCreated(){return this._tableCreated}set tableCreated(e){this._tableCreated=typeof e>"u"?!1:!!e}get clearExpiredByTimeout(){return this._clearExpiredByTimeout}set clearExpiredByTimeout(e){this._clearExpiredByTimeout=typeof e>"u"?!0:!!e}_getRateLimiterRes(e,t,n){const i=new RateLimiterRes$7,o=n.rows[0];return i.isFirstInDuration=t===o.points,i.consumedPoints=i.isFirstInDuration?t:o.points,i.remainingPoints=Math.max(this.points-i.consumedPoints,0),i.msBeforeNext=o.expire?Math.max(o.expire-Date.now(),0):-1,i}_query(e){const n={name:`${this.tableName.toLowerCase()}:${e.name}`,text:e.text,values:e.values};return new Promise((i,o)=>{this._getConnection().then(a=>{a.query(n).then(c=>{i(c),this._releaseConnection(a)}).catch(c=>{o(c),this._releaseConnection(a)})}).catch(a=>{o(a)})})}_upsert(e,t,n,i=!1){if(!this.tableCreated)return Promise.reject(Error("Table is not created yet"));const o=n>0?Date.now()+n:null,a=i?" $3 ":` CASE
             WHEN ${this._getTableIdentifier()}.expire <= $4 THEN $3
             ELSE ${this._getTableIdentifier()}.expire
            END `;return this._query({name:i?"rlflx-upsert-force":"rlflx-upsert",text:`
            INSERT INTO ${this._getTableIdentifier()} VALUES ($1, $2, $3)
              ON CONFLICT(key) DO UPDATE SET
                points = CASE
                          WHEN (${this._getTableIdentifier()}.expire <= $4 OR 1=${i?1:0}) THEN $2
                          ELSE ${this._getTableIdentifier()}.points + ($2)
                         END,
                expire = ${a}
            RETURNING points, expire;`,values:[e,t,o,Date.now()]})}_get(e){return this.tableCreated?new Promise((t,n)=>{this._query({name:"rlflx-get",text:`
            SELECT points, expire FROM ${this._getTableIdentifier()} WHERE key = $1 AND (expire > $2 OR expire IS NULL);`,values:[e,Date.now()]}).then(i=>{i.rowCount===0&&(i=null),t(i)}).catch(i=>{n(i)})}):Promise.reject(Error("Table is not created yet"))}_delete(e){return this.tableCreated?this._query({name:"rlflx-delete",text:`DELETE FROM ${this._getTableIdentifier()} WHERE key = $1`,values:[e]}).then(t=>t.rowCount>0):Promise.reject(Error("Table is not created yet"))}};var RateLimiterPostgres_1=RateLimiterPostgres$1,Record_1=class{constructor(e,t,n=null){this.value=e,this.expiresAt=t,this.timeoutId=n}get value(){return this._value}set value(e){this._value=parseInt(e)}get expiresAt(){return this._expiresAt}set expiresAt(e){!(e instanceof Date)&&Number.isInteger(e)&&(e=new Date(e)),this._expiresAt=e}get timeoutId(){return this._timeoutId}set timeoutId(e){this._timeoutId=e}};const Record$2=Record_1,RateLimiterRes$6=RateLimiterRes_1;var MemoryStorage_1=class{constructor(){this._storage={}}incrby(e,t,n){if(this._storage[e]){const i=this._storage[e].expiresAt?this._storage[e].expiresAt.getTime()-new Date().getTime():-1;return i!==0?(this._storage[e].value=this._storage[e].value+t,new RateLimiterRes$6(0,i,this._storage[e].value,!1)):this.set(e,t,n)}return this.set(e,t,n)}set(e,t,n){const i=n*1e3;return this._storage[e]&&this._storage[e].timeoutId&&clearTimeout(this._storage[e].timeoutId),this._storage[e]=new Record$2(t,i>0?new Date(Date.now()+i):null),i>0&&(this._storage[e].timeoutId=setTimeout(()=>{delete this._storage[e]},i),this._storage[e].timeoutId.unref&&this._storage[e].timeoutId.unref()),new RateLimiterRes$6(0,i===0?-1:i,this._storage[e].value,!0)}get(e){if(this._storage[e]){const t=this._storage[e].expiresAt?this._storage[e].expiresAt.getTime()-new Date().getTime():-1;return new RateLimiterRes$6(0,t,this._storage[e].value,!1)}return null}delete(e){return this._storage[e]?(this._storage[e].timeoutId&&clearTimeout(this._storage[e].timeoutId),delete this._storage[e],!0):!1}};const RateLimiterAbstract$2=RateLimiterAbstract_1,MemoryStorage=MemoryStorage_1,RateLimiterRes$5=RateLimiterRes_1;let RateLimiterMemory$2=class extends RateLimiterAbstract$2{constructor(e={}){super(e),this._memoryStorage=new MemoryStorage}consume(e,t=1,n={}){return new Promise((i,o)=>{const a=this.getKey(e),c=this._getKeySecDuration(n);let l=this._memoryStorage.incrby(a,t,c);if(l.remainingPoints=Math.max(this.points-l.consumedPoints,0),l.consumedPoints>this.points)this.blockDuration>0&&l.consumedPoints<=this.points+t&&(l=this._memoryStorage.set(a,l.consumedPoints,this.blockDuration)),o(l);else if(this.execEvenly&&l.msBeforeNext>0&&!l.isFirstInDuration){let u=Math.ceil(l.msBeforeNext/(l.remainingPoints+2));u<this.execEvenlyMinDelayMs&&(u=l.consumedPoints*this.execEvenlyMinDelayMs),setTimeout(i,u,l)}else i(l)})}penalty(e,t=1,n={}){const i=this.getKey(e);return new Promise(o=>{const a=this._getKeySecDuration(n),c=this._memoryStorage.incrby(i,t,a);c.remainingPoints=Math.max(this.points-c.consumedPoints,0),o(c)})}reward(e,t=1,n={}){const i=this.getKey(e);return new Promise(o=>{const a=this._getKeySecDuration(n),c=this._memoryStorage.incrby(i,-t,a);c.remainingPoints=Math.max(this.points-c.consumedPoints,0),o(c)})}block(e,t){const n=t*1e3,i=this.points+1;return this._memoryStorage.set(this.getKey(e),i,t),Promise.resolve(new RateLimiterRes$5(0,n===0?-1:n,i))}set(e,t,n){const i=(n>=0?n:this.duration)*1e3;return this._memoryStorage.set(this.getKey(e),t,n),Promise.resolve(new RateLimiterRes$5(0,i===0?-1:i,t))}get(e){const t=this._memoryStorage.get(this.getKey(e));return t!==null&&(t.remainingPoints=Math.max(this.points-t.consumedPoints,0)),Promise.resolve(t)}delete(e){return Promise.resolve(this._memoryStorage.delete(this.getKey(e)))}};var RateLimiterMemory_1=RateLimiterMemory$2;const cluster=require$$1,crypto$1=require$$1,RateLimiterAbstract$1=RateLimiterAbstract_1,RateLimiterMemory$1=RateLimiterMemory_1,RateLimiterRes$4=RateLimiterRes_1,channel="rate_limiter_flexible";let masterInstance=null;const masterSendToWorker=function(r,e,t,n){let i;n===null||n===!0||n===!1?i=n:i={remainingPoints:n.remainingPoints,msBeforeNext:n.msBeforeNext,consumedPoints:n.consumedPoints,isFirstInDuration:n.isFirstInDuration},r.send({channel,keyPrefix:e.keyPrefix,promiseId:e.promiseId,type:t,data:i})},workerWaitInit=function(r){setTimeout(()=>{this._initiated?process.send(r):typeof this._promises[r.promiseId]<"u"&&workerWaitInit.call(this,r)},30)},workerSendToMaster=function(r,e,t,n,i){const o={channel,keyPrefix:this.keyPrefix,func:r,promiseId:e,data:{key:t,arg:n,opts:i}};this._initiated?process.send(o):workerWaitInit.call(this,o)},masterProcessMsg=function(r,e){if(!e||e.channel!==channel||typeof this._rateLimiters[e.keyPrefix]>"u")return!1;let t;switch(e.func){case"consume":t=this._rateLimiters[e.keyPrefix].consume(e.data.key,e.data.arg,e.data.opts);break;case"penalty":t=this._rateLimiters[e.keyPrefix].penalty(e.data.key,e.data.arg,e.data.opts);break;case"reward":t=this._rateLimiters[e.keyPrefix].reward(e.data.key,e.data.arg,e.data.opts);break;case"block":t=this._rateLimiters[e.keyPrefix].block(e.data.key,e.data.arg,e.data.opts);break;case"get":t=this._rateLimiters[e.keyPrefix].get(e.data.key,e.data.opts);break;case"delete":t=this._rateLimiters[e.keyPrefix].delete(e.data.key,e.data.opts);break;default:return!1}t&&t.then(n=>{masterSendToWorker(r,e,"resolve",n)}).catch(n=>{masterSendToWorker(r,e,"reject",n)})},workerProcessMsg=function(r){if(!r||r.channel!==channel||r.keyPrefix!==this.keyPrefix)return!1;if(this._promises[r.promiseId]){clearTimeout(this._promises[r.promiseId].timeoutId);let e;switch(r.data===null||r.data===!0||r.data===!1?e=r.data:e=new RateLimiterRes$4(r.data.remainingPoints,r.data.msBeforeNext,r.data.consumedPoints,r.data.isFirstInDuration),r.type){case"resolve":this._promises[r.promiseId].resolve(e);break;case"reject":this._promises[r.promiseId].reject(e);break;default:throw new Error(`RateLimiterCluster: no such message type '${r.type}'`)}delete this._promises[r.promiseId]}},getOpts=function(){return{points:this.points,duration:this.duration,blockDuration:this.blockDuration,execEvenly:this.execEvenly,execEvenlyMinDelayMs:this.execEvenlyMinDelayMs,keyPrefix:this.keyPrefix}},savePromise=function(r,e){const t=process.hrtime();let n=t[0].toString()+t[1].toString();return typeof this._promises[n]<"u"&&(n+=crypto$1.randomBytes(12).toString("base64")),this._promises[n]={resolve:r,reject:e,timeoutId:setTimeout(()=>{delete this._promises[n],e(new Error("RateLimiterCluster timeout: no answer from master in time"))},this.timeoutMs)},n};let RateLimiterClusterMaster$1=class{constructor(){if(masterInstance)return masterInstance;this._rateLimiters={},cluster.setMaxListeners(0),cluster.on("message",(e,t)=>{t&&t.channel===channel&&t.type==="init"?(typeof this._rateLimiters[t.opts.keyPrefix]>"u"&&(this._rateLimiters[t.opts.keyPrefix]=new RateLimiterMemory$1(t.opts)),e.send({channel,type:"init",keyPrefix:t.opts.keyPrefix})):masterProcessMsg.call(this,e,t)}),masterInstance=this}},RateLimiterClusterMasterPM2$1=class{constructor(e){if(masterInstance)return masterInstance;this._rateLimiters={},e.launchBus((t,n)=>{n.on("process:msg",i=>{const o=i.raw;if(o&&o.channel===channel&&o.type==="init")typeof this._rateLimiters[o.opts.keyPrefix]>"u"&&(this._rateLimiters[o.opts.keyPrefix]=new RateLimiterMemory$1(o.opts)),e.sendDataToProcessId(i.process.pm_id,{data:{},topic:channel,channel,type:"init",keyPrefix:o.opts.keyPrefix},(a,c)=>{a&&console.log(a,c)});else{const a={send:c=>{const l=c;l.topic=channel,typeof l.data>"u"&&(l.data={}),e.sendDataToProcessId(i.process.pm_id,l,(u,f)=>{u&&console.log(u,f)})}};masterProcessMsg.call(this,a,o)}})}),masterInstance=this}};class RateLimiterClusterWorker extends RateLimiterAbstract$1{get timeoutMs(){return this._timeoutMs}set timeoutMs(e){this._timeoutMs=typeof e>"u"?5e3:Math.abs(parseInt(e))}constructor(e={}){super(e),process.setMaxListeners(0),this.timeoutMs=e.timeoutMs,this._initiated=!1,process.on("message",t=>{t&&t.channel===channel&&t.type==="init"&&t.keyPrefix===this.keyPrefix?this._initiated=!0:workerProcessMsg.call(this,t)}),process.send({channel,type:"init",opts:getOpts.call(this)}),this._promises={}}consume(e,t=1,n={}){return new Promise((i,o)=>{const a=savePromise.call(this,i,o);workerSendToMaster.call(this,"consume",a,e,t,n)})}penalty(e,t=1,n={}){return new Promise((i,o)=>{const a=savePromise.call(this,i,o);workerSendToMaster.call(this,"penalty",a,e,t,n)})}reward(e,t=1,n={}){return new Promise((i,o)=>{const a=savePromise.call(this,i,o);workerSendToMaster.call(this,"reward",a,e,t,n)})}block(e,t,n={}){return new Promise((i,o)=>{const a=savePromise.call(this,i,o);workerSendToMaster.call(this,"block",a,e,t,n)})}get(e,t={}){return new Promise((n,i)=>{const o=savePromise.call(this,n,i);workerSendToMaster.call(this,"get",o,e,t)})}delete(e,t={}){return new Promise((n,i)=>{const o=savePromise.call(this,n,i);workerSendToMaster.call(this,"delete",o,e,t)})}}var RateLimiterCluster$1={RateLimiterClusterMaster:RateLimiterClusterMaster$1,RateLimiterClusterMasterPM2:RateLimiterClusterMasterPM2$1,RateLimiterCluster:RateLimiterClusterWorker};const RateLimiterStoreAbstract=RateLimiterStoreAbstract_1,RateLimiterRes$3=RateLimiterRes_1;let RateLimiterMemcache$1=class extends RateLimiterStoreAbstract{constructor(e){super(e),this.client=e.storeClient}_getRateLimiterRes(e,t,n){const i=new RateLimiterRes$3;return i.consumedPoints=parseInt(n.consumedPoints),i.isFirstInDuration=n.consumedPoints===t,i.remainingPoints=Math.max(this.points-i.consumedPoints,0),i.msBeforeNext=n.msBeforeNext,i}_upsert(e,t,n,i=!1,o={}){return new Promise((a,c)=>{const l=Date.now(),u=Math.floor(n/1e3);i?this.client.set(e,t,u,f=>{f?c(f):this.client.set(`${e}_expire`,u>0?l+u*1e3:-1,u,()=>{const g={consumedPoints:t,msBeforeNext:u>0?u*1e3:-1};a(g)})}):this.client.incr(e,t,(f,g)=>{f||g===!1?this.client.add(e,t,u,($,S)=>{if($||!S)if(typeof o.attemptNumber>"u"||o.attemptNumber<3){const E=Object.assign({},o);E.attemptNumber=E.attemptNumber?E.attemptNumber+1:1,this._upsert(e,t,n,i,E).then(v=>a(v)).catch(v=>c(v))}else c(new Error("Can not add key"));else this.client.add(`${e}_expire`,u>0?l+u*1e3:-1,u,()=>{const E={consumedPoints:t,msBeforeNext:u>0?u*1e3:-1};a(E)})}):this.client.get(`${e}_expire`,($,S)=>{if($)c($);else{const E=S===!1?0:S,v={consumedPoints:g,msBeforeNext:E>=0?Math.max(E-l,0):-1};a(v)}})})})}_get(e){return new Promise((t,n)=>{const i=Date.now();this.client.get(e,(o,a)=>{a?this.client.get(`${e}_expire`,(c,l)=>{if(c)n(c);else{const u=l===!1?0:l,f={consumedPoints:a,msBeforeNext:u>=0?Math.max(u-i,0):-1};t(f)}}):t(null)})})}_delete(e){return new Promise((t,n)=>{this.client.del(e,(i,o)=>{i?n(i):o===!1?t(o):this.client.del(`${e}_expire`,a=>{a?n(a):t(o)})})})}};var RateLimiterMemcache_1=RateLimiterMemcache$1;const RateLimiterRes$2=RateLimiterRes_1;var RLWrapperBlackAndWhite_1=class{constructor(e={}){this.limiter=e.limiter,this.blackList=e.blackList,this.whiteList=e.whiteList,this.isBlackListed=e.isBlackListed,this.isWhiteListed=e.isWhiteListed,this.runActionAnyway=e.runActionAnyway}get limiter(){return this._limiter}set limiter(e){if(typeof e>"u")throw new Error("limiter is not set");this._limiter=e}get runActionAnyway(){return this._runActionAnyway}set runActionAnyway(e){this._runActionAnyway=typeof e>"u"?!1:e}get blackList(){return this._blackList}set blackList(e){this._blackList=Array.isArray(e)?e:[]}get isBlackListed(){return this._isBlackListed}set isBlackListed(e){if(typeof e>"u"&&(e=()=>!1),typeof e!="function")throw new Error("isBlackListed must be function");this._isBlackListed=e}get whiteList(){return this._whiteList}set whiteList(e){this._whiteList=Array.isArray(e)?e:[]}get isWhiteListed(){return this._isWhiteListed}set isWhiteListed(e){if(typeof e>"u"&&(e=()=>!1),typeof e!="function")throw new Error("isWhiteListed must be function");this._isWhiteListed=e}isBlackListedSomewhere(e){return this.blackList.indexOf(e)>=0||this.isBlackListed(e)}isWhiteListedSomewhere(e){return this.whiteList.indexOf(e)>=0||this.isWhiteListed(e)}getBlackRes(){return new RateLimiterRes$2(0,Number.MAX_SAFE_INTEGER,0,!1)}getWhiteRes(){return new RateLimiterRes$2(Number.MAX_SAFE_INTEGER,0,0,!1)}rejectBlack(){return Promise.reject(this.getBlackRes())}resolveBlack(){return Promise.resolve(this.getBlackRes())}resolveWhite(){return Promise.resolve(this.getWhiteRes())}consume(e,t=1){let n;return this.isWhiteListedSomewhere(e)?n=this.resolveWhite():this.isBlackListedSomewhere(e)&&(n=this.rejectBlack()),typeof n>"u"?this.limiter.consume(e,t):(this.runActionAnyway&&this.limiter.consume(e,t).catch(()=>{}),n)}block(e,t){let n;return this.isWhiteListedSomewhere(e)?n=this.resolveWhite():this.isBlackListedSomewhere(e)&&(n=this.resolveBlack()),typeof n>"u"?this.limiter.block(e,t):(this.runActionAnyway&&this.limiter.block(e,t).catch(()=>{}),n)}penalty(e,t){let n;return this.isWhiteListedSomewhere(e)?n=this.resolveWhite():this.isBlackListedSomewhere(e)&&(n=this.resolveBlack()),typeof n>"u"?this.limiter.penalty(e,t):(this.runActionAnyway&&this.limiter.penalty(e,t).catch(()=>{}),n)}reward(e,t){let n;return this.isWhiteListedSomewhere(e)?n=this.resolveWhite():this.isBlackListedSomewhere(e)&&(n=this.resolveBlack()),typeof n>"u"?this.limiter.reward(e,t):(this.runActionAnyway&&this.limiter.reward(e,t).catch(()=>{}),n)}get(e){let t;return this.isWhiteListedSomewhere(e)?t=this.resolveWhite():this.isBlackListedSomewhere(e)&&(t=this.resolveBlack()),typeof t>"u"||this.runActionAnyway?this.limiter.get(e):t}delete(e){return this.limiter.delete(e)}};const RateLimiterAbstract=RateLimiterAbstract_1;var RateLimiterUnion_1=class{constructor(...e){if(e.length<1)throw new Error("RateLimiterUnion: at least one limiter have to be passed");e.forEach(t=>{if(!(t instanceof RateLimiterAbstract))throw new Error("RateLimiterUnion: all limiters have to be instance of RateLimiterAbstract")}),this._limiters=e}consume(e,t=1){return new Promise((n,i)=>{const o=[];this._limiters.forEach(a=>{o.push(a.consume(e,t).catch(c=>({rejected:!0,rej:c})))}),Promise.all(o).then(a=>{const c={};let l=!1;a.forEach(u=>{u.rejected===!0&&(l=!0)});for(let u=0;u<a.length;u++)l&&a[u].rejected===!0?c[this._limiters[u].keyPrefix]=a[u].rej:l||(c[this._limiters[u].keyPrefix]=a[u]);l?i(c):n(c)})})}},RateLimiterQueueError_1=class extends Error{constructor(e,t){super(),Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor),this.name="CustomError",this.message=e,t&&(this.extra=t)}};const RateLimiterQueueError=RateLimiterQueueError_1,MAX_QUEUE_SIZE=4294967295,KEY_DEFAULT="limiter";var RateLimiterQueue_1=class{constructor(e,t={maxQueueSize:MAX_QUEUE_SIZE}){this._queueLimiters={KEY_DEFAULT:new RateLimiterQueueInternal(e,t)},this._limiterFlexible=e,this._maxQueueSize=t.maxQueueSize}getTokensRemaining(e=KEY_DEFAULT){return this._queueLimiters[e]?this._queueLimiters[e].getTokensRemaining():Promise.resolve(this._limiterFlexible.points)}removeTokens(e,t=KEY_DEFAULT){return this._queueLimiters[t]||(this._queueLimiters[t]=new RateLimiterQueueInternal(this._limiterFlexible,{key:t,maxQueueSize:this._maxQueueSize})),this._queueLimiters[t].removeTokens(e)}};class RateLimiterQueueInternal{constructor(e,t={maxQueueSize:MAX_QUEUE_SIZE,key:KEY_DEFAULT}){this._key=t.key,this._waitTimeout=null,this._queue=[],this._limiterFlexible=e,this._maxQueueSize=t.maxQueueSize}getTokensRemaining(){return this._limiterFlexible.get(this._key).then(e=>e!==null?e.remainingPoints:this._limiterFlexible.points)}removeTokens(e){const t=this;return new Promise((n,i)=>{if(e>t._limiterFlexible.points){i(new RateLimiterQueueError(`Requested tokens ${e} exceeds maximum ${t._limiterFlexible.points} tokens per interval`));return}t._queue.length>0?t._queueRequest.call(t,n,i,e):t._limiterFlexible.consume(t._key,e).then(o=>{n(o.remainingPoints)}).catch(o=>{o instanceof Error?i(o):(t._queueRequest.call(t,n,i,e),t._waitTimeout===null&&(t._waitTimeout=setTimeout(t._processFIFO.bind(t),o.msBeforeNext)))})})}_queueRequest(e,t,n){const i=this;i._queue.length<i._maxQueueSize?i._queue.push({resolve:e,reject:t,tokens:n}):t(new RateLimiterQueueError(`Number of requests reached it's maximum ${i._maxQueueSize}`))}_processFIFO(){const e=this;if(e._waitTimeout!==null&&(clearTimeout(e._waitTimeout),e._waitTimeout=null),e._queue.length===0)return;const t=e._queue.shift();e._limiterFlexible.consume(e._key,t.tokens).then(n=>{t.resolve(n.remainingPoints),e._processFIFO.call(e)}).catch(n=>{n instanceof Error?(t.reject(n),e._processFIFO.call(e)):(e._queue.unshift(t),e._waitTimeout===null&&(e._waitTimeout=setTimeout(e._processFIFO.bind(e),n.msBeforeNext)))})}}const RateLimiterRes$1=RateLimiterRes_1;var BurstyRateLimiter_1=class{constructor(e,t){this._rateLimiter=e,this._burstLimiter=t}_combineRes(e,t){return e?new RateLimiterRes$1(e.remainingPoints,Math.min(e.msBeforeNext,t?t.msBeforeNext:0),e.consumedPoints,e.isFirstInDuration):null}consume(e,t=1,n={}){return this._rateLimiter.consume(e,t,n).catch(i=>i instanceof RateLimiterRes$1?this._burstLimiter.consume(e,t,n).then(o=>Promise.resolve(this._combineRes(i,o))).catch(o=>o instanceof RateLimiterRes$1?Promise.reject(this._combineRes(i,o)):Promise.reject(o)):Promise.reject(i))}get(e){return Promise.all([this._rateLimiter.get(e),this._burstLimiter.get(e)]).then(([t,n])=>this._combineRes(t,n))}get points(){return this._rateLimiter.points}};const RateLimiterRedis=RateLimiterRedis_1,RateLimiterMongo=RateLimiterMongo_1,RateLimiterMySQL=RateLimiterMySQL_1,RateLimiterPostgres=RateLimiterPostgres_1,{RateLimiterClusterMaster,RateLimiterClusterMasterPM2,RateLimiterCluster}=RateLimiterCluster$1,RateLimiterMemory=RateLimiterMemory_1,RateLimiterMemcache=RateLimiterMemcache_1,RLWrapperBlackAndWhite=RLWrapperBlackAndWhite_1,RateLimiterUnion=RateLimiterUnion_1,RateLimiterQueue=RateLimiterQueue_1,BurstyRateLimiter=BurstyRateLimiter_1,RateLimiterRes=RateLimiterRes_1;var rateLimiterFlexible={RateLimiterRedis,RateLimiterMongo,RateLimiterMySQL,RateLimiterPostgres,RateLimiterMemory,RateLimiterMemcache,RateLimiterClusterMaster,RateLimiterClusterMasterPM2,RateLimiterCluster,RLWrapperBlackAndWhite,RateLimiterUnion,RateLimiterQueue,BurstyRateLimiter,RateLimiterRes};const log$U=logger$5("libp2p:get-peer");function getPeerAddress$1(r){if(isPeerId$2(r))return{peerId:r,multiaddrs:[]};Array.isArray(r)||(r=[r]);let e;if(r.length>0){const t=r[0].getPeerId();e=t==null?void 0:peerIdFromString$8(t),r.forEach(n=>{if(!isMultiaddr(n))throw log$U.error("multiaddr %s was invalid",n),new CodeError$e("Invalid Multiaddr",codes$6.ERR_INVALID_MULTIADDR);const i=n.getPeerId();if(i==null){if(e!=null)throw new CodeError$e("Multiaddrs must all have the same peer id or have no peer id",codes$6.ERR_INVALID_PARAMETERS)}else{const o=peerIdFromString$8(i);if(e==null||!e.equals(o))throw new CodeError$e("Multiaddrs must all have the same peer id or have no peer id",codes$6.ERR_INVALID_PARAMETERS)}})}return{peerId:e,multiaddrs:r}}function lowerBound$3(r,e,t){let n=0,i=r.length;for(;i>0;){const o=Math.trunc(i/2);let a=n+o;t(r[a],e)<=0?(n=++a,i-=o+1):i=o}return n}var Ee,Gt;let PeerPriorityQueue$1=(Gt=class{constructor(){ne(this,Ee,[])}enqueue(e,t){const n=t?.peerId,i=t?.priority??0;if(n==null)throw new CodeError$e("missing peer id",codes$6.ERR_INVALID_PARAMETERS);const o={priority:i,peerId:n,run:e};if(this.size>0&&F(this,Ee)[this.size-1].priority>=i){F(this,Ee).push(o);return}const a=lowerBound$3(F(this,Ee),o,(c,l)=>l.priority-c.priority);F(this,Ee).splice(a,0,o)}dequeue(){return F(this,Ee).shift()?.run}filter(e){if(e.peerId!=null){const t=e.peerId;return F(this,Ee).filter(n=>t.equals(n.peerId)).map(n=>n.run)}return F(this,Ee).filter(t=>t.priority===e.priority).map(t=>t.run)}get size(){return F(this,Ee).length}},Ee=new WeakMap,Gt),PeerJobQueue$1=class extends PQueue$3{constructor(e={}){super({...e,queueClass:PeerPriorityQueue$1})}hasJob(e){return this.sizeBy({peerId:e})>0}};const DIAL_TIMEOUT$1=3e4,INBOUND_UPGRADE_TIMEOUT$1=3e4,MAX_PEER_ADDRS_TO_DIAL$1=25,MAX_PARALLEL_DIALS_PER_PEER=1,AUTO_DIAL_INTERVAL$1=5e3,AUTO_DIAL_CONCURRENCY$1=25,AUTO_DIAL_PRIORITY$1=0,AUTO_DIAL_MAX_QUEUE_LENGTH$1=100,AUTO_DIAL_DISCOVERED_PEERS_DEBOUNCE$1=10,INBOUND_CONNECTION_THRESHOLD$1=5,MAX_INCOMING_PENDING_CONNECTIONS$1=10,LAST_DIAL_FAILURE_KEY$1="last-dial-failure",MIN_CONNECTIONS$1=5,MAX_CONNECTIONS$1=100,MAX_PARALLEL_DIALS$1=50,AUTO_DIAL_PEER_RETRY_THRESHOLD$1=1e3*60*7,defaultOptions$f={minConnections:MIN_CONNECTIONS$1,maxQueueLength:AUTO_DIAL_MAX_QUEUE_LENGTH$1,autoDialConcurrency:AUTO_DIAL_CONCURRENCY$1,autoDialPriority:AUTO_DIAL_PRIORITY$1,autoDialInterval:AUTO_DIAL_INTERVAL$1,autoDialPeerRetryThreshold:AUTO_DIAL_PEER_RETRY_THRESHOLD$1,autoDialDiscoveredPeersDebounce:AUTO_DIAL_DISCOVERED_PEERS_DEBOUNCE$1};var le,Ht;let AutoDial$1=(Ht=class{constructor(e,t){_(this,"connectionManager");_(this,"peerStore");_(this,"queue");_(this,"minConnections");_(this,"autoDialPriority");_(this,"autoDialIntervalMs");_(this,"autoDialMaxQueueLength");_(this,"autoDialPeerRetryThresholdMs");_(this,"autoDialDiscoveredPeersDebounce");_(this,"autoDialInterval");_(this,"started");_(this,"running");ne(this,le,void 0);this.connectionManager=e.connectionManager,this.peerStore=e.peerStore,this.minConnections=t.minConnections??defaultOptions$f.minConnections,this.autoDialPriority=t.autoDialPriority??defaultOptions$f.autoDialPriority,this.autoDialIntervalMs=t.autoDialInterval??defaultOptions$f.autoDialInterval,this.autoDialMaxQueueLength=t.maxQueueLength??defaultOptions$f.maxQueueLength,this.autoDialPeerRetryThresholdMs=t.autoDialPeerRetryThreshold??defaultOptions$f.autoDialPeerRetryThreshold,this.autoDialDiscoveredPeersDebounce=t.autoDialDiscoveredPeersDebounce??defaultOptions$f.autoDialDiscoveredPeersDebounce,ye(this,le,e.logger.forComponent("libp2p:connection-manager:auto-dial")),this.started=!1,this.running=!1,this.queue=new PeerJobQueue$1({concurrency:t.autoDialConcurrency??defaultOptions$f.autoDialConcurrency}),this.queue.addListener("error",i=>{F(this,le).error("error during auto-dial",i)}),e.events.addEventListener("connection:close",()=>{this.autoDial().catch(i=>{F(this,le).error(i)})});let n;e.events.addEventListener("peer:discovery",()=>{clearTimeout(n),n=setTimeout(()=>{this.autoDial().catch(i=>{F(this,le).error(i)})},this.autoDialDiscoveredPeersDebounce)})}isStarted(){return this.started}start(){this.autoDialInterval=setTimeout(()=>{this.autoDial().catch(e=>{F(this,le).error("error while autodialing",e)})},this.autoDialIntervalMs),this.started=!0}afterStart(){this.autoDial().catch(e=>{F(this,le).error("error while autodialing",e)})}stop(){this.queue.clear(),clearTimeout(this.autoDialInterval),this.started=!1,this.running=!1}async autoDial(){if(!this.started)return;const e=this.connectionManager.getConnectionsMap(),t=e.size;if(t>=this.minConnections){this.minConnections>0&&F(this,le).trace("have enough connections %d/%d",t,this.minConnections);return}if(this.queue.size>this.autoDialMaxQueueLength){F(this,le).call(this,"not enough connections %d/%d but auto dial queue is full",t,this.minConnections);return}if(this.running){F(this,le).call(this,"not enough connections %d/%d - but skipping autodial as it is already running",t,this.minConnections);return}this.running=!0,F(this,le).call(this,"not enough connections %d/%d - will dial peers to increase the number of connections",t,this.minConnections);const n=new PeerSet$1(this.connectionManager.getDialQueue().map(u=>u.peerId).filter(Boolean)),i=await this.peerStore.all({filters:[u=>u.addresses.length===0?(F(this,le).trace("not autodialing %p because they have no addresses",u.id),!1):e.has(u.id)?(F(this,le).trace("not autodialing %p because they are already connected",u.id),!1):n.has(u.id)?(F(this,le).trace("not autodialing %p because they are already being dialed",u.id),!1):this.queue.hasJob(u.id)?(F(this,le).trace("not autodialing %p because they are already being autodialed",u.id),!1):!0]}),o=i.sort(()=>Math.random()>.5?1:-1),a=new PeerMap$2;for(const u of o)a.has(u.id)||a.set(u.id,[...u.tags.values()].reduce((f,g)=>f+g.value,0));const l=o.sort((u,f)=>{const g=a.get(u.id)??0,$=a.get(f.id)??0;return g>$?-1:g<$?1:0}).filter(u=>{const f=u.metadata.get(LAST_DIAL_FAILURE_KEY$1);if(f==null)return!0;const g=parseInt(toString$b(f));return isNaN(g)?!0:Date.now()-g>this.autoDialPeerRetryThresholdMs});F(this,le).call(this,"selected %d/%d peers to dial",l.length,i.length);for(const u of l)this.queue.add(async()=>{const f=this.connectionManager.getConnectionsMap().size;if(f>=this.minConnections){F(this,le).call(this,"got enough connections now %d/%d",f,this.minConnections),this.queue.clear();return}F(this,le).call(this,"connecting to a peerStore stored peer %p",u.id),await this.connectionManager.openConnection(u.id,{priority:this.autoDialPriority})},{peerId:u.id}).catch(f=>{F(this,le).error("could not connect to peerStore stored peer",f)});this.running=!1,this.started&&(this.autoDialInterval=setTimeout(()=>{this.autoDial().catch(u=>{F(this,le).error("error while autodialing",u)})},this.autoDialIntervalMs))}},le=new WeakMap,Ht);const defaultOptions$e={maxConnections:MAX_CONNECTIONS$1,allow:[]};var Ie,zt;let ConnectionPruner$1=(zt=class{constructor(e,t={}){_(this,"maxConnections");_(this,"connectionManager");_(this,"peerStore");_(this,"allow");_(this,"events");ne(this,Ie,void 0);this.maxConnections=t.maxConnections??defaultOptions$e.maxConnections,this.allow=t.allow??defaultOptions$e.allow,this.connectionManager=e.connectionManager,this.peerStore=e.peerStore,this.events=e.events,ye(this,Ie,e.logger.forComponent("libp2p:connection-manager:connection-pruner")),e.events.addEventListener("connection:open",()=>{this.maybePruneConnections().catch(n=>{F(this,Ie).error(n)})})}async maybePruneConnections(){const e=this.connectionManager.getConnections(),t=e.length,n=Math.max(t-this.maxConnections,0);if(F(this,Ie).call(this,"checking max connections limit %d/%d",t,this.maxConnections),t<=this.maxConnections)return;F(this,Ie).call(this,"max connections limit exceeded %d/%d, pruning %d connection(s)",t,this.maxConnections,n);const i=new PeerMap$2;for(const c of e){const l=c.remotePeer;if(!i.has(l)){i.set(l,0);try{const u=await this.peerStore.get(l);i.set(l,[...u.tags.values()].reduce((f,g)=>f+g.value,0))}catch(u){u.code!=="ERR_NOT_FOUND"&&F(this,Ie).error("error loading peer tags",u)}}}const o=e.sort((c,l)=>{const u=i.get(c.remotePeer)??0,f=i.get(l.remotePeer)??0;if(u>f)return 1;if(u<f)return-1;const g=c.timeline.open,$=l.timeline.open;return g<$?1:g>$?-1:0}),a=[];for(const c of o)if(F(this,Ie).call(this,"too many connections open - closing a connection to %p",c.remotePeer),this.allow.some(u=>c.remoteAddr.toString().startsWith(u.toString()))||a.push(c),a.length===n)break;await Promise.all(a.map(async c=>{try{await c.close()}catch(l){F(this,Ie).error(l)}})),this.events.safeDispatchEvent("connection:prune",{detail:a})}},Ie=new WeakMap,zt);async function resolveMultiaddrs$1(r,e){if(!r.protoNames().includes("dnsaddr"))return[r];const n=await resolveRecord$1(r,e),a=(await Promise.all(n.map(async c=>resolveMultiaddrs$1(c,e)))).flat().reduce((c,l)=>(c.find(u=>u.equals(l))==null&&c.push(l),c),[]);return e.log("resolved %s to",r,a.map(c=>c.toString())),a}async function resolveRecord$1(r,e){try{return r=multiaddr$1(r.toString()),await r.resolve(e)}catch(t){return e.log.error(`multiaddr ${r.toString()} could not be resolved`,t),[]}}function combineSignals$1(...r){const e=[];for(const n of r)n!=null&&(setMaxListeners$4(1/0,n),e.push(n));const t=anySignal(e);return setMaxListeners$4(1/0,t),t}const defaultOptions$d={addressSorter:defaultAddressSort$1,maxParallelDials:MAX_PARALLEL_DIALS$1,maxPeerAddrsToDial:MAX_PEER_ADDRS_TO_DIAL$1,maxParallelDialsPerPeer:MAX_PARALLEL_DIALS_PER_PEER,dialTimeout:DIAL_TIMEOUT$1,resolvers:{dnsaddr:dnsaddrResolver}};var ce,qt;let DialQueue$1=(qt=class{constructor(e,t={}){_(this,"pendingDials");_(this,"queue");_(this,"peerId");_(this,"peerStore");_(this,"connectionGater");_(this,"transportManager");_(this,"addressSorter");_(this,"maxPeerAddrsToDial");_(this,"maxParallelDialsPerPeer");_(this,"dialTimeout");_(this,"inProgressDialCount");_(this,"pendingDialCount");_(this,"shutDownController");_(this,"connections");ne(this,ce,void 0);this.addressSorter=t.addressSorter??defaultOptions$d.addressSorter,this.maxPeerAddrsToDial=t.maxPeerAddrsToDial??defaultOptions$d.maxPeerAddrsToDial,this.maxParallelDialsPerPeer=t.maxParallelDialsPerPeer??defaultOptions$d.maxParallelDialsPerPeer,this.dialTimeout=t.dialTimeout??defaultOptions$d.dialTimeout,this.connections=t.connections??new PeerMap$2,ye(this,ce,e.logger.forComponent("libp2p:connection-manager:dial-queue")),this.peerId=e.peerId,this.peerStore=e.peerStore,this.connectionGater=e.connectionGater,this.transportManager=e.transportManager,this.shutDownController=new AbortController,setMaxListeners$4(1/0,this.shutDownController.signal),this.pendingDialCount=e.metrics?.registerMetric("libp2p_dialler_pending_dials"),this.inProgressDialCount=e.metrics?.registerMetric("libp2p_dialler_in_progress_dials"),this.pendingDials=[];for(const[n,i]of Object.entries(t.resolvers??{}))resolvers$2.set(n,i);this.queue=new PQueue$3({concurrency:t.maxParallelDials??defaultOptions$d.maxParallelDials}),this.queue.on("add",()=>{this.pendingDialCount?.update(this.queue.size),this.inProgressDialCount?.update(this.queue.pending)}),this.queue.on("active",()=>{this.pendingDialCount?.update(this.queue.size),this.inProgressDialCount?.update(this.queue.pending)}),this.queue.on("completed",()=>{this.pendingDialCount?.update(this.queue.size),this.inProgressDialCount?.update(this.queue.pending)}),this.queue.on("error",n=>{F(this,ce).error("error in dial queue",n),this.pendingDialCount?.update(this.queue.size),this.inProgressDialCount?.update(this.queue.pending)}),this.queue.on("empty",()=>{this.pendingDialCount?.update(this.queue.size),this.inProgressDialCount?.update(this.queue.pending)}),this.queue.on("idle",()=>{this.pendingDialCount?.update(this.queue.size),this.inProgressDialCount?.update(this.queue.pending)})}stop(){this.shutDownController.abort()}async dial(e,t={}){const{peerId:n,multiaddrs:i}=getPeerAddress$1(e),o=i.map($=>({multiaddr:$,isCertified:!1})),a=this.createDialAbortControllers(t.signal);let c;try{c=await this.calculateMultiaddrs(n,o,{...t,signal:a})}catch($){throw a.clear(),$}let l=Array.from(this.connections.values()).flat().find($=>t.force===!0?!1:c.find(S=>S.multiaddr.equals($.remoteAddr)));if(l!=null)return F(this,ce).call(this,"already connected to %a",l.remoteAddr),l;const u=this.pendingDials.find($=>!!($.peerId!=null&&n!=null&&$.peerId.equals(n)||c.map(({multiaddr:S})=>S.toString()).join()===$.multiaddrs.map(S=>S.toString()).join()));if(u!=null)return F(this,ce).call(this,"joining existing dial target for %p",n),a.clear(),u.promise;F(this,ce).call(this,"creating dial target for",c.map(({multiaddr:$})=>$.toString()));const f={id:randomId$1(),status:"queued",peerId:n,multiaddrs:c.map(({multiaddr:$})=>$)};f.promise=this.performDial(f,{...t,signal:a}).finally(()=>{this.pendingDials=this.pendingDials.filter($=>$.id!==f.id),a.clear()}).catch(async $=>{if(F(this,ce).error("dial failed to %s",f.multiaddrs.map(S=>S.toString()).join(", "),$),n!=null)try{await this.peerStore.patch(n,{metadata:{[LAST_DIAL_FAILURE_KEY$1]:fromString$b(Date.now().toString())}})}catch(S){F(this,ce).error("could not update last dial failure key for %p",n,S)}throw a.aborted?new CodeError$e($.message,codes$6.ERR_TIMEOUT):$}),this.pendingDials.push(f);const g=await f.promise;return l=Array.from(this.connections.values()).flat().find($=>t.force===!0?!1:$.id!==g.id&&$.remoteAddr.equals(g.remoteAddr)),l!=null?(F(this,ce).call(this,"already connected to %a",l.remoteAddr),await g.close(),l):(F(this,ce).call(this,"connection opened to %a",g.remoteAddr),g)}createDialAbortControllers(e){const t=anySignal([AbortSignal.timeout(this.dialTimeout),this.shutDownController.signal,e]);try{setMaxListeners$4?.(1/0,t)}catch{}return t}async calculateMultiaddrs(e,t=[],n={}){if(e!=null){if(this.peerId.equals(e))throw new CodeError$e("Tried to dial self",codes$6.ERR_DIALED_SELF);if(await this.connectionGater.denyDialPeer?.(e)===!0)throw new CodeError$e("The dial request is blocked by gater.allowDialPeer",codes$6.ERR_PEER_DIAL_INTERCEPTED);if(t.length===0){F(this,ce).call(this,"loading multiaddrs for %p",e);try{const f=await this.peerStore.get(e);t.push(...f.addresses),F(this,ce).call(this,"loaded multiaddrs for %p",e,t.map(({multiaddr:g})=>g.toString()))}catch(f){if(f.code!==codes$6.ERR_NOT_FOUND)throw f}}}let i=(await Promise.all(t.map(async f=>{const g=await resolveMultiaddrs$1(f.multiaddr,{...n,log:F(this,ce)});return g.length===1&&g[0].equals(f.multiaddr)?f:g.map($=>({multiaddr:$,isCertified:!1}))}))).flat();if(e!=null){const f=`/p2p/${e.toString()}`;i=i.map(g=>g.multiaddr.protos().pop()?.path===!0?g:g.multiaddr.getPeerId()==null?{multiaddr:g.multiaddr.encapsulate(f),isCertified:g.isCertified}:g)}const o=i.filter(f=>{if(this.transportManager.transportForMultiaddr(f.multiaddr)==null)return!1;const g=f.multiaddr.getPeerId();return e!=null&&g!=null?e.equals(g):!0}),a=new Map;for(const f of o){const g=f.multiaddr.toString(),$=a.get(g);if($!=null){$.isCertified=$.isCertified||f.isCertified||!1;continue}a.set(g,f)}const c=[...a.values()];if((c.length===0||c.length>this.maxPeerAddrsToDial)&&(F(this,ce).call(this,"addresses for %p before filtering",e??"unknown peer",i.map(({multiaddr:f})=>f.toString())),F(this,ce).call(this,"addresses for %p after filtering",e??"unknown peer",c.map(({multiaddr:f})=>f.toString()))),c.length===0)throw new CodeError$e("The dial request has no valid addresses",codes$6.ERR_NO_VALID_ADDRESSES);if(c.length>this.maxPeerAddrsToDial)throw new CodeError$e("dial with more addresses than allowed",codes$6.ERR_TOO_MANY_ADDRESSES);const l=[];for(const f of c)this.connectionGater.denyDialMultiaddr!=null&&await this.connectionGater.denyDialMultiaddr(f.multiaddr)||l.push(f);const u=l.sort(this.addressSorter);if(u.length===0)throw new CodeError$e("The connection gater denied all addresses in the dial request",codes$6.ERR_NO_VALID_ADDRESSES);return u}async performDial(e,t={}){const n=e.multiaddrs.map(()=>new AbortController);try{const i=new PQueue$3({concurrency:this.maxParallelDialsPerPeer});i.on("error",a=>{F(this,ce).error("error dialling",a)});const o=await Promise.any(e.multiaddrs.map(async(a,c)=>{const l=n[c];if(l==null)throw new CodeError$e("dialAction did not come with an AbortController",codes$6.ERR_INVALID_PARAMETERS);const u=combineSignals$1(l.signal,t.signal);u.addEventListener("abort",()=>{F(this,ce).call(this,"dial to %a aborted",a)});const f=pDefer();return await i.add(async()=>{if(u.aborted){F(this,ce).call(this,"dial to %a was aborted before reaching the head of the peer dial queue",a),f.reject(new AbortError$g);return}await this.queue.add(async()=>{try{if(u.aborted){F(this,ce).call(this,"dial to %a was aborted before reaching the head of the dial queue",a),f.reject(new AbortError$g);return}e.status="active";const g=await this.transportManager.dial(a,{...t,signal:u});if(l.signal.aborted){F(this,ce).call(this,"multiple dials succeeded, closing superfluous connection"),g.close().catch($=>{F(this,ce).error("error closing superfluous connection",$)}),f.reject(new AbortError$g);return}n[c]=void 0,n.forEach($=>{$!==void 0&&$.abort()}),F(this,ce).call(this,"dial to %a succeeded",a),f.resolve(g)}catch(g){F(this,ce).error("error during dial of %a",a,g),f.reject(g)}},{...t,signal:u}).catch(g=>{f.reject(g)})},{signal:u}).catch(g=>{f.reject(g)}).finally(()=>{u.clear()}),f.promise}));if(o==null)throw new CodeError$e("successful dial led to empty object returned from peer dial queue",codes$6.ERR_TRANSPORT_DIAL_FAILED);return e.status="success",o}catch(i){throw e.status="error",e.multiaddrs.length===1&&i.name==="AggregateError"?i.errors[0]:i}}},ce=new WeakMap,qt);function randomId$1(){return`${parseInt(String(Math.random()*1e9),10).toString()}${Date.now()}`}const DEFAULT_DIAL_PRIORITY$1=50,defaultOptions$c={minConnections:MIN_CONNECTIONS$1,maxConnections:MAX_CONNECTIONS$1,inboundConnectionThreshold:INBOUND_CONNECTION_THRESHOLD$1,maxIncomingPendingConnections:MAX_INCOMING_PENDING_CONNECTIONS$1,autoDialConcurrency:AUTO_DIAL_CONCURRENCY$1,autoDialPriority:AUTO_DIAL_PRIORITY$1,autoDialMaxQueueLength:AUTO_DIAL_MAX_QUEUE_LENGTH$1};var ge,Yt;let DefaultConnectionManager$1=(Yt=class{constructor(e,t={}){_(this,"started");_(this,"connections");_(this,"allow");_(this,"deny");_(this,"maxIncomingPendingConnections");_(this,"incomingPendingConnections");_(this,"maxConnections");_(this,"dialQueue");_(this,"autoDial");_(this,"connectionPruner");_(this,"inboundConnectionRateLimiter");_(this,"peerStore");_(this,"metrics");_(this,"events");ne(this,ge,void 0);this.maxConnections=t.maxConnections??defaultOptions$c.maxConnections;const n=t.minConnections??defaultOptions$c.minConnections;if(this.maxConnections<n)throw new CodeError$e("Connection Manager maxConnections must be greater than minConnections",codes$6.ERR_INVALID_PARAMETERS);this.connections=new PeerMap$2,this.started=!1,this.peerStore=e.peerStore,this.metrics=e.metrics,this.events=e.events,ye(this,ge,e.logger.forComponent("libp2p:connection-manager")),this.onConnect=this.onConnect.bind(this),this.onDisconnect=this.onDisconnect.bind(this),this.events.addEventListener("connection:open",this.onConnect),this.events.addEventListener("connection:close",this.onDisconnect),this.allow=(t.allow??[]).map(i=>multiaddr$1(i)),this.deny=(t.deny??[]).map(i=>multiaddr$1(i)),this.incomingPendingConnections=0,this.maxIncomingPendingConnections=t.maxIncomingPendingConnections??defaultOptions$c.maxIncomingPendingConnections,this.inboundConnectionRateLimiter=new rateLimiterFlexible.RateLimiterMemory({points:t.inboundConnectionThreshold??defaultOptions$c.inboundConnectionThreshold,duration:1}),this.autoDial=new AutoDial$1({connectionManager:this,peerStore:e.peerStore,events:e.events,logger:e.logger},{minConnections:n,autoDialConcurrency:t.autoDialConcurrency??defaultOptions$c.autoDialConcurrency,autoDialPriority:t.autoDialPriority??defaultOptions$c.autoDialPriority,maxQueueLength:t.autoDialMaxQueueLength??defaultOptions$c.autoDialMaxQueueLength}),this.connectionPruner=new ConnectionPruner$1({connectionManager:this,peerStore:e.peerStore,events:e.events,logger:e.logger},{maxConnections:this.maxConnections,allow:this.allow}),this.dialQueue=new DialQueue$1({peerId:e.peerId,metrics:e.metrics,peerStore:e.peerStore,transportManager:e.transportManager,connectionGater:e.connectionGater,logger:e.logger},{addressSorter:t.addressSorter??defaultAddressSort$1,maxParallelDials:t.maxParallelDials??MAX_PARALLEL_DIALS$1,maxPeerAddrsToDial:t.maxPeerAddrsToDial??MAX_PEER_ADDRS_TO_DIAL$1,maxParallelDialsPerPeer:t.maxParallelDialsPerPeer??MAX_PARALLEL_DIALS_PER_PEER,dialTimeout:t.dialTimeout??DIAL_TIMEOUT$1,resolvers:t.resolvers??{dnsaddr:dnsaddrResolver},connections:this.connections})}isStarted(){return this.started}async start(){this.metrics?.registerMetricGroup("libp2p_connection_manager_connections",{calculate:()=>{const e={inbound:0,outbound:0};for(const t of this.connections.values())for(const n of t)n.direction==="inbound"?e.inbound++:e.outbound++;return e}}),this.metrics?.registerMetricGroup("libp2p_protocol_streams_total",{label:"protocol",calculate:()=>{const e={};for(const t of this.connections.values())for(const n of t)for(const i of n.streams){const o=`${i.direction} ${i.protocol??"unnegotiated"}`;e[o]=(e[o]??0)+1}return e}}),this.metrics?.registerMetricGroup("libp2p_connection_manager_protocol_streams_per_connection_90th_percentile",{label:"protocol",calculate:()=>{const e={};for(const n of this.connections.values())for(const i of n){const o={};for(const a of i.streams){const c=`${a.direction} ${a.protocol??"unnegotiated"}`;o[c]=(o[c]??0)+1}for(const[a,c]of Object.entries(o))e[a]=e[a]??[],e[a].push(c)}const t={};for(let[n,i]of Object.entries(e)){i=i.sort((a,c)=>a-c);const o=Math.floor(i.length*.9);t[n]=i[o]}return t}}),this.autoDial.start(),this.started=!0,F(this,ge).call(this,"started")}async afterStart(){Promise.resolve().then(async()=>{const e=await this.peerStore.all({filters:[t=>t.tags.has(KEEP_ALIVE$1)]});await Promise.all(e.map(async t=>{await this.openConnection(t.id).catch(n=>{F(this,ge).error(n)})}))}).catch(e=>{F(this,ge).error(e)}),this.autoDial.afterStart()}async stop(){this.dialQueue.stop(),this.autoDial.stop();const e=[];for(const t of this.connections.values())for(const n of t)e.push((async()=>{try{await n.close()}catch(i){F(this,ge).error(i)}})());F(this,ge).call(this,"closing %d connections",e.length),await Promise.all(e),this.connections.clear(),F(this,ge).call(this,"stopped")}onConnect(e){this._onConnect(e).catch(t=>{F(this,ge).error(t)})}async _onConnect(e){const{detail:t}=e;if(!this.started){await t.close();return}const n=t.remotePeer,i=this.connections.get(n);let o=!1;i!=null?i.push(t):(o=!0,this.connections.set(n,[t])),n.publicKey!=null&&n.type==="RSA"&&await this.peerStore.patch(n,{publicKey:n.publicKey}),o&&this.events.safeDispatchEvent("peer:connect",{detail:t.remotePeer})}onDisconnect(e){const{detail:t}=e;if(!this.started)return;const n=t.remotePeer;let i=this.connections.get(n);i!=null&&i.length>1?(i=i.filter(o=>o.id!==t.id),this.connections.set(n,i)):i!=null&&(this.connections.delete(n),this.events.safeDispatchEvent("peer:disconnect",{detail:t.remotePeer}))}getConnections(e){if(e!=null)return this.connections.get(e)??[];let t=[];for(const n of this.connections.values())t=t.concat(n);return t}getConnectionsMap(){return this.connections}async openConnection(e,t={}){if(!this.isStarted())throw new CodeError$e("Not started",codes$6.ERR_NODE_NOT_STARTED);t.signal?.throwIfAborted();const{peerId:n}=getPeerAddress$1(e);if(n!=null&&t.force!==!0){F(this,ge).call(this,"dial %p",n);const c=this.getConnections(n).find(l=>!l.transient);if(c!=null)return F(this,ge).call(this,"had an existing non-transient connection to %p",n),c}const i=await this.dialQueue.dial(e,{...t,priority:t.priority??DEFAULT_DIAL_PRIORITY$1});let o=this.connections.get(i.remotePeer);o==null&&(o=[],this.connections.set(i.remotePeer,o));let a=!1;for(const c of o)c.id===i.id&&(a=!0);return a||o.push(i),i}async closeConnections(e,t={}){const n=this.connections.get(e)??[];await Promise.all(n.map(async i=>{try{await i.close(t)}catch(o){i.abort(o)}}))}async acceptIncomingConnection(e){if(this.deny.some(i=>e.remoteAddr.toString().startsWith(i.toString())))return F(this,ge).call(this,"connection from %a refused - connection remote address was in deny list",e.remoteAddr),!1;if(this.allow.some(i=>e.remoteAddr.toString().startsWith(i.toString())))return this.incomingPendingConnections++,!0;if(this.incomingPendingConnections===this.maxIncomingPendingConnections)return F(this,ge).call(this,"connection from %a refused - incomingPendingConnections exceeded by host",e.remoteAddr),!1;if(e.remoteAddr.isThinWaistAddress()){const i=e.remoteAddr.nodeAddress().address;try{await this.inboundConnectionRateLimiter.consume(i,1)}catch{return F(this,ge).call(this,"connection from %a refused - inboundConnectionThreshold exceeded by host %s",e.remoteAddr,i),!1}}return this.getConnections().length<this.maxConnections?(this.incomingPendingConnections++,!0):(F(this,ge).call(this,"connection from %a refused - maxConnections exceeded",e.remoteAddr),!1)}afterUpgradeInbound(){this.incomingPendingConnections--}getDialQueue(){return this.dialQueue.pendingDials}},ge=new WeakMap,Yt);async function*storeAddresses$1(r,e){yield*map$1(r,async t=>(await e.merge(t.id,{multiaddrs:t.multiaddrs}),t))}function uniquePeers$1(r){const e=new Set;return filter(r,t=>e.has(t.id.toString())?!1:(e.add(t.id.toString()),!0))}async function*requirePeers$1(r,e=1){let t=0;for await(const n of r)t++,yield n;if(t<e)throw new CodeError$e(`more peers required, seen: ${t}  min: ${e}`,"NOT_FOUND")}let CompoundContentRouting$1=class{constructor(e,t){_(this,"routers");_(this,"started");_(this,"components");this.routers=t.routers??[],this.started=!1,this.components=e}isStarted(){return this.started}async start(){this.started=!0}async stop(){this.started=!1}async*findProviders(e,t={}){if(this.routers.length===0)throw new CodeError$e("No content routers available",codes$6.ERR_NO_ROUTERS_AVAILABLE);yield*pipe(merge$1(...this.routers.map(n=>n.findProviders(e,t))),n=>storeAddresses$1(n,this.components.peerStore),n=>uniquePeers$1(n),n=>requirePeers$1(n))}async provide(e,t={}){if(this.routers.length===0)throw new CodeError$e("No content routers available",codes$6.ERR_NO_ROUTERS_AVAILABLE);await Promise.all(this.routers.map(async n=>{await n.provide(e,t)}))}async put(e,t,n){if(!this.isStarted())throw new CodeError$e(messages$1.NOT_STARTED_YET,codes$6.DHT_NOT_STARTED);await Promise.all(this.routers.map(async i=>{await i.put(e,t,n)}))}async get(e,t){if(!this.isStarted())throw new CodeError$e(messages$1.NOT_STARTED_YET,codes$6.DHT_NOT_STARTED);return Promise.any(this.routers.map(async n=>n.get(e,t)))}};function isAsyncIterable$5(r){return r[Symbol.asyncIterator]!=null}function first(r){if(isAsyncIterable$5(r))return(async()=>{for await(const e of r)return e})();for(const e of r)return e}const log$T=logger$5("libp2p:peer-routing");let DefaultPeerRouting$1=class{constructor(e,t){_(this,"components");_(this,"routers");this.components=e,this.routers=t.routers??[]}async findPeer(e,t){if(this.routers.length===0)throw new CodeError$e("No peer routers available",codes$6.ERR_NO_ROUTERS_AVAILABLE);if(e.toString()===this.components.peerId.toString())throw new CodeError$e("Should not try to find self",codes$6.ERR_FIND_SELF);const n=await pipe(merge$1(...this.routers.map(i=>async function*(){try{yield await i.findPeer(e,t)}catch(o){log$T.error(o)}}())),i=>filter(i,Boolean),i=>storeAddresses$1(i,this.components.peerStore),async i=>first(i));if(n!=null)return n;throw new CodeError$e(messages$1.NOT_FOUND,codes$6.ERR_NOT_FOUND)}async*getClosestPeers(e,t){if(this.routers.length===0)throw new CodeError$e("No peer routers available",codes$6.ERR_NO_ROUTERS_AVAILABLE);yield*pipe(merge$1(...this.routers.map(n=>n.getClosestPeers(e,t))),n=>storeAddresses$1(n,this.components.peerStore),n=>uniquePeers$1(n),n=>requirePeers$1(n))}};const log$S=logger$5("libp2p:registrar"),DEFAULT_MAX_INBOUND_STREAMS$2=32,DEFAULT_MAX_OUTBOUND_STREAMS$2=64;let DefaultRegistrar$1=class{constructor(e){_(this,"topologies");_(this,"handlers");_(this,"components");this.topologies=new Map,this.handlers=new Map,this.components=e,this._onDisconnect=this._onDisconnect.bind(this),this._onPeerUpdate=this._onPeerUpdate.bind(this),this._onPeerIdentify=this._onPeerIdentify.bind(this),this.components.events.addEventListener("peer:disconnect",this._onDisconnect),this.components.events.addEventListener("peer:update",this._onPeerUpdate),this.components.events.addEventListener("peer:identify",this._onPeerIdentify)}getProtocols(){return Array.from(new Set([...this.handlers.keys()])).sort()}getHandler(e){const t=this.handlers.get(e);if(t==null)throw new CodeError$e(`No handler registered for protocol ${e}`,codes$6.ERR_NO_HANDLER_FOR_PROTOCOL);return t}getTopologies(e){const t=this.topologies.get(e);return t==null?[]:[...t.values()]}async handle(e,t,n){if(this.handlers.has(e))throw new CodeError$e(`Handler already registered for protocol ${e}`,codes$6.ERR_PROTOCOL_HANDLER_ALREADY_REGISTERED);const i=mergeOptions$9.bind({ignoreUndefined:!0})({maxInboundStreams:DEFAULT_MAX_INBOUND_STREAMS$2,maxOutboundStreams:DEFAULT_MAX_OUTBOUND_STREAMS$2},n);this.handlers.set(e,{handler:t,options:i}),await this.components.peerStore.merge(this.components.peerId,{protocols:[e]})}async unhandle(e){(Array.isArray(e)?e:[e]).forEach(n=>{this.handlers.delete(n)}),await this.components.peerStore.patch(this.components.peerId,{protocols:this.getProtocols()})}async register(e,t){if(t==null)throw new CodeError$e("invalid topology",codes$6.ERR_INVALID_PARAMETERS);const n=`${(Math.random()*1e9).toString(36)}${Date.now()}`;let i=this.topologies.get(e);return i==null&&(i=new Map,this.topologies.set(e,i)),i.set(n,t),n}unregister(e){for(const[t,n]of this.topologies.entries())n.has(e)&&(n.delete(e),n.size===0&&this.topologies.delete(t))}_onDisconnect(e){const t=e.detail;this.components.peerStore.get(t).then(n=>{for(const i of n.protocols){const o=this.topologies.get(i);if(o!=null)for(const a of o.values())a.onDisconnect?.(t)}}).catch(n=>{n.code!==codes$6.ERR_NOT_FOUND&&log$S.error("could not inform topologies of disconnecting peer %p",t,n)})}_onPeerUpdate(e){const{peer:t,previous:n}=e.detail,i=(n?.protocols??[]).filter(o=>!t.protocols.includes(o));for(const o of i){const a=this.topologies.get(o);if(a!=null)for(const c of a.values())c.onDisconnect?.(t.id)}}_onPeerIdentify(e){const t=e.detail.protocols,n=e.detail.connection,i=e.detail.peerId;for(const o of t){const a=this.topologies.get(o);if(a!=null)for(const c of a.values())n.transient&&c.notifyOnTransient!==!0||c.onConnect?.(i,n)}}};const log$R=logger$5("libp2p:transports");let DefaultTransportManager$1=class{constructor(e,t={}){_(this,"components");_(this,"transports");_(this,"listeners");_(this,"faultTolerance");_(this,"started");this.components=e,this.started=!1,this.transports=new Map,this.listeners=trackedMap$1({name:"libp2p_transport_manager_listeners",metrics:this.components.metrics}),this.faultTolerance=t.faultTolerance??FaultTolerance$a.FATAL_ALL}add(e){const t=e[Symbol.toStringTag];if(t==null)throw new CodeError$e("Transport must have a valid tag",codes$6.ERR_INVALID_KEY);if(this.transports.has(t))throw new CodeError$e(`There is already a transport with the tag ${t}`,codes$6.ERR_DUPLICATE_TRANSPORT);log$R("adding transport %s",t),this.transports.set(t,e),this.listeners.has(t)||this.listeners.set(t,[])}isStarted(){return this.started}start(){this.started=!0}async afterStart(){const e=this.components.addressManager.getListenAddrs();await this.listen(e)}async stop(){const e=[];for(const[t,n]of this.listeners)for(log$R("closing listeners for %s",t);n.length>0;){const i=n.pop();i!=null&&e.push(i.close())}await Promise.all(e),log$R("all listeners closed");for(const t of this.listeners.keys())this.listeners.set(t,[]);this.started=!1}async dial(e,t){const n=this.transportForMultiaddr(e);if(n==null)throw new CodeError$e(`No transport available for address ${String(e)}`,codes$6.ERR_TRANSPORT_UNAVAILABLE);try{return await n.dial(e,{...t,upgrader:this.components.upgrader})}catch(i){throw i.code==null&&(i.code=codes$6.ERR_TRANSPORT_DIAL_FAILED),i}}getAddrs(){let e=[];for(const t of this.listeners.values())for(const n of t)e=[...e,...n.getAddrs()];return e}getTransports(){return Array.of(...this.transports.values())}getListeners(){return Array.of(...this.listeners.values()).flat()}transportForMultiaddr(e){for(const t of this.transports.values())if(t.filter([e]).length>0)return t}async listen(e){if(!this.isStarted())throw new CodeError$e("Not started",codes$6.ERR_NODE_NOT_STARTED);if(e==null||e.length===0){log$R("no addresses were provided for listening, this node is dial only");return}const t=[];for(const[n,i]of this.transports.entries()){const o=i.filter(e),a=[];for(const u of o){log$R("creating listener for %s on %a",n,u);const f=i.createListener({upgrader:this.components.upgrader});let g=this.listeners.get(n)??[];g==null&&(g=[],this.listeners.set(n,g)),g.push(f),f.addEventListener("listening",()=>{this.components.events.safeDispatchEvent("transport:listening",{detail:f})}),f.addEventListener("close",()=>{const $=g.findIndex(S=>S===f);g.splice($,1),this.components.events.safeDispatchEvent("transport:close",{detail:f})}),a.push(f.listen(u))}if(a.length===0){t.push(n);continue}if((await Promise.allSettled(a)).find(u=>u.status==="fulfilled")==null&&this.faultTolerance!==FaultTolerance$a.NO_FATAL)throw new CodeError$e(`Transport (${n}) could not listen on any available address`,codes$6.ERR_NO_VALID_ADDRESSES)}if(t.length===this.transports.size){const n=`no valid addresses were provided for transports [${t.join(", ")}]`;if(this.faultTolerance===FaultTolerance$a.FATAL_ALL)throw new CodeError$e(n,codes$6.ERR_NO_VALID_ADDRESSES);log$R(`libp2p in dial mode only: ${n}`)}}async remove(e){const t=this.listeners.get(e)??[];log$R.trace("removing transport %s",e);const n=[];for(log$R.trace("closing listeners for %s",e);t.length>0;){const i=t.pop();i!=null&&n.push(i.close())}await Promise.all(n),this.transports.delete(e),this.listeners.delete(e)}async removeAll(){const e=[];for(const t of this.transports.keys())e.push(this.remove(t));await Promise.all(e)}};const PROTOCOL_ID$1="/multistream/1.0.0",MAX_PROTOCOL_LENGTH$1=1024;function reader(r){const e=async function*(){let t=yield,n=new Uint8ArrayList;for await(const i of r){if(t==null){n.append(i),t=yield n,n=new Uint8ArrayList;continue}for(n.append(i);n.length>=t;){const o=n.sublist(0,t);if(n.consume(t),t=yield o,t==null){n.length>0&&(t=yield n,n=new Uint8ArrayList);break}}}if(t!=null)throw Object.assign(new Error(`stream ended before ${t} bytes became available`),{code:"ERR_UNDER_READ",buffer:n})}();return e.next(),e}function handshake(r){const e=pushable$1(),t=reader(r.source),n=pDefer();let i;const o=r.sink(async function*(){yield*e,yield*await n.promise}());return o.catch(c=>{i=c}),{reader:t,writer:e,stream:{sink:async c=>{if(i!=null){await Promise.reject(i);return}n.resolve(c),await o},source:t},rest:()=>e.end(),write:e.push,read:async()=>{const c=await t.next();if(c.value!=null)return c.value}}}let AbortError$a=class extends Error{constructor(e,t){super(e??"The operation was aborted"),this.type="aborted",this.code=t??"ABORT_ERR"}};function getIterator(r){if(r!=null){if(typeof r[Symbol.iterator]=="function")return r[Symbol.iterator]();if(typeof r[Symbol.asyncIterator]=="function")return r[Symbol.asyncIterator]();if(typeof r.next=="function")return r}throw new Error("argument is not an iterator or iterable")}function abortableSource(r,e,t){const n=t??{},i=getIterator(r);async function*o(){let a;const c=()=>{a?.()};for(e.addEventListener("abort",c);;){let l;try{if(e.aborted){const{abortMessage:f,abortCode:g}=n;throw new AbortError$a(f,g)}const u=new Promise((f,g)=>{a=()=>{const{abortMessage:$,abortCode:S}=n;g(new AbortError$a($,S))}});l=await Promise.race([u,i.next()]),a=null}catch(u){e.removeEventListener("abort",c);const f=u.type==="aborted"&&e.aborted;if(f&&n.onAbort!=null&&n.onAbort(r),typeof i.return=="function")try{const g=i.return();g instanceof Promise&&g.catch($=>{n.onReturnError!=null&&n.onReturnError($)})}catch(g){n.onReturnError!=null&&n.onReturnError(g)}if(f&&n.returnOnAbort===!0)return;throw u}if(l.done===!0)break;yield l.value}e.removeEventListener("abort",c)}return o()}function abortableSink(r,e,t){return n=>r(abortableSource(n,e,t))}function abortableDuplex(r,e,t){return{sink:abortableSink(r.sink,e,{...t,onAbort:void 0}),source:abortableSource(r.source,e,t)}}const log$Q=logger$5("libp2p:mss"),NewLine$1=fromString$b(`
`);function encode$9(r){const e=new Uint8ArrayList(r,NewLine$1);return encode$d.single(e)}function write$1(r,e,t={}){const n=encode$9(e);t.writeBytes===!0?r.push(n.subarray()):r.push(n)}function writeAll$1(r,e,t={}){const n=new Uint8ArrayList;for(const i of e)n.append(encode$9(i));t.writeBytes===!0?r.push(n.subarray()):r.push(n)}async function read$3(r,e){let t=1;const n={[Symbol.asyncIterator]:()=>n,next:async()=>r.next(t)};let i=n;e?.signal!=null&&(i=abortableSource(n,e.signal));const o=c=>{t=c},a=await pipe(i,c=>decode$h(c,{onLength:o,maxDataLength:MAX_PROTOCOL_LENGTH$1}),async c=>first(c));if(a==null||a.length===0)throw new CodeError$e("no buffer returned","ERR_INVALID_MULTISTREAM_SELECT_MESSAGE");if(a.get(a.byteLength-1)!==NewLine$1[0])throw log$Q.error("Invalid mss message - missing newline - %s",a.subarray()),new CodeError$e("missing newline","ERR_INVALID_MULTISTREAM_SELECT_MESSAGE");return a.sublist(0,-1)}async function readString$1(r,e){const t=await read$3(r,e);return toString$b(t.subarray())}const log$P=logger$5("libp2p:mss:select");async function select$1(r,e,t={}){e=Array.isArray(e)?[...e]:[e];const{reader:n,writer:i,rest:o,stream:a}=handshake(r),c=e.shift();if(c==null)throw new Error("At least one protocol must be specified");log$P.trace('select: write ["%s", "%s"]',PROTOCOL_ID$1,c);const l=fromString$b(PROTOCOL_ID$1),u=fromString$b(c);writeAll$1(i,[l,u],t);let f=await readString$1(n,t);if(log$P.trace('select: read "%s"',f),f===PROTOCOL_ID$1&&(f=await readString$1(n,t),log$P.trace('select: read "%s"',f)),f===c)return o(),{stream:a,protocol:c};for(const g of e){log$P.trace('select: write "%s"',g),write$1(i,fromString$b(g),t);const $=await readString$1(n,t);if(log$P.trace('select: read "%s" for "%s"',$,g),$===g)return o(),{stream:a,protocol:g}}throw o(),new CodeError$e("protocol selection failed","ERR_UNSUPPORTED_PROTOCOL")}const log$O=logger$5("libp2p:mss:handle");async function handle$1(r,e,t){e=Array.isArray(e)?e:[e];const{writer:n,reader:i,rest:o,stream:a}=handshake(r);for(;;){const c=await readString$1(i,t);if(log$O.trace('read "%s"',c),c===PROTOCOL_ID$1){log$O.trace('respond with "%s" for "%s"',PROTOCOL_ID$1,c),write$1(n,fromString$b(PROTOCOL_ID$1),t);continue}if(e.includes(c))return write$1(n,fromString$b(c),t),log$O.trace('respond with "%s" for "%s"',c,c),o(),{stream:a,protocol:c};if(c==="ls"){write$1(n,new Uint8ArrayList(...e.map(l=>encode$9(fromString$b(l)))),t),log$O.trace('respond with "%s" for %s',e,c);continue}write$1(n,fromString$b("na"),t),log$O('respond with "na" for "%s"',c)}}const symbol$1=Symbol.for("@libp2p/connection"),CLOSE_TIMEOUT$6=500;var we,Tr,Ir,Qt;let ConnectionImpl$1=(Qt=class{constructor(e){_(this,"id");_(this,"remoteAddr");_(this,"remotePeer");_(this,"direction");_(this,"timeline");_(this,"multiplexer");_(this,"encryption");_(this,"status");_(this,"transient");_(this,"tags");_(this,"_newStream");_(this,"_close");_(this,"_abort");_(this,"_getStreams");ne(this,we,void 0);_(this,Tr,"Connection");_(this,Ir,!0);const{remoteAddr:t,remotePeer:n,newStream:i,close:o,abort:a,getStreams:c}=e;this.id=`${parseInt(String(Math.random()*1e9)).toString(36)}${Date.now()}`,this.remoteAddr=t,this.remotePeer=n,this.direction=e.direction,this.status="open",this.timeline=e.timeline,this.multiplexer=e.multiplexer,this.encryption=e.encryption,this.transient=e.transient??!1,ye(this,we,e.logger.forComponent("libp2p:connection")),this.remoteAddr.getPeerId()==null&&(this.remoteAddr=this.remoteAddr.encapsulate(`/p2p/${this.remotePeer}`)),this._newStream=i,this._close=o,this._abort=a,this._getStreams=c,this.tags=[]}get streams(){return this._getStreams()}async newStream(e,t){if(this.status==="closing")throw new CodeError$e("the connection is being closed","ERR_CONNECTION_BEING_CLOSED");if(this.status==="closed")throw new CodeError$e("the connection is closed","ERR_CONNECTION_CLOSED");if(Array.isArray(e)||(e=[e]),this.transient&&t?.runOnTransientConnection!==!0)throw new CodeError$e("Cannot open protocol stream on transient connection","ERR_TRANSIENT_CONNECTION");const n=await this._newStream(e,t);return n.direction="outbound",n}async close(e={}){if(!(this.status==="closed"||this.status==="closing")){if(F(this,we).call(this,"closing connection to %a",this.remoteAddr),this.status="closing",e.signal==null){const t=AbortSignal.timeout(CLOSE_TIMEOUT$6);setMaxListeners$4(1/0,t),e={...e,signal:t}}try{F(this,we).trace("closing all streams"),await Promise.all(this.streams.map(async t=>t.close(e))),F(this,we).trace("closing underlying transport"),await this._close(e),F(this,we).trace("updating timeline with close time"),this.status="closed",this.timeline.close=Date.now()}catch(t){F(this,we).error("error encountered during graceful close of connection to %a",this.remoteAddr,t),this.abort(t)}}}abort(e){F(this,we).error("aborting connection to %a due to error",this.remoteAddr,e),this.status="closing",this.streams.forEach(t=>{t.abort(e)}),F(this,we).error("all streams aborted",this.streams.length),this._abort(e),this.timeline.close=Date.now(),this.status="closed"}},Tr=Symbol.toStringTag,Ir=symbol$1,we=new WeakMap,Qt);function createConnection$1(r){return new ConnectionImpl$1(r)}const DEFAULT_PROTOCOL_SELECT_TIMEOUT$1=3e4;function findIncomingStreamLimit$1(r,e){try{const{options:t}=e.getHandler(r);return t.maxInboundStreams}catch(t){if(t.code!==codes$6.ERR_NO_HANDLER_FOR_PROTOCOL)throw t}return DEFAULT_MAX_INBOUND_STREAMS$2}function findOutgoingStreamLimit$1(r,e,t={}){try{const{options:n}=e.getHandler(r);if(n.maxOutboundStreams!=null)return n.maxOutboundStreams}catch(n){if(n.code!==codes$6.ERR_NO_HANDLER_FOR_PROTOCOL)throw n}return t.maxOutboundStreams??DEFAULT_MAX_OUTBOUND_STREAMS$2}function countStreams$1(r,e,t){let n=0;return t.streams.forEach(i=>{i.direction===e&&i.protocol===r&&n++}),n}var ie,Wt;let DefaultUpgrader$1=(Wt=class{constructor(e,t){_(this,"components");_(this,"connectionEncryption");_(this,"muxers");_(this,"inboundUpgradeTimeout");_(this,"events");ne(this,ie,void 0);this.components=e,this.connectionEncryption=new Map,ye(this,ie,e.logger.forComponent("libp2p:upgrader")),t.connectionEncryption.forEach(n=>{this.connectionEncryption.set(n.protocol,n)}),this.muxers=new Map,t.muxers.forEach(n=>{this.muxers.set(n.protocol,n)}),this.inboundUpgradeTimeout=t.inboundUpgradeTimeout??INBOUND_UPGRADE_TIMEOUT$1,this.events=e.events}async shouldBlockConnection(e,t,n){const i=this.components.connectionGater[n];if(i!==void 0&&await i(e,t))throw new CodeError$e(`The multiaddr connection is blocked by gater.${n}`,codes$6.ERR_CONNECTION_INTERCEPTED)}async upgradeInbound(e,t){if(!await this.components.connectionManager.acceptIncomingConnection(e))throw new CodeError$e("connection denied",codes$6.ERR_CONNECTION_DENIED);let i,o,a,c,l;const u=AbortSignal.timeout(this.inboundUpgradeTimeout),f=()=>{e.abort(new CodeError$e("inbound upgrade timeout",codes$6.ERR_TIMEOUT))};u.addEventListener("abort",f,{once:!0}),setMaxListeners$4(1/0,u);try{if(await this.components.connectionGater.denyInboundConnection?.(e)===!0)throw new CodeError$e("The multiaddr connection is blocked by gater.acceptConnection",codes$6.ERR_CONNECTION_INTERCEPTED);this.components.metrics?.trackMultiaddrConnection(e),F(this,ie).call(this,"starting the inbound connection upgrade");let g=e;if(t?.skipProtection!==!0){const $=this.components.connectionProtector;$!=null&&(F(this,ie).call(this,"protecting the inbound connection"),g=await $.protect(e))}try{if(i=g,t?.skipEncryption!==!0){({conn:i,remotePeer:o,protocol:l}=await this._encryptInbound(g));const $={...g,...i};await this.shouldBlockConnection(o,$,"denyInboundEncryptedConnection")}else{const $=e.remoteAddr.getPeerId();if($==null)throw new CodeError$e("inbound connection that skipped encryption must have a peer id",codes$6.ERR_INVALID_MULTIADDR);const S=peerIdFromString$8($);l="native",o=S}if(a=i,t?.muxerFactory!=null)c=t.muxerFactory;else if(this.muxers.size>0){const $=await this._multiplexInbound({...g,...i},this.muxers);c=$.muxerFactory,a=$.stream}}catch($){throw F(this,ie).error("Failed to upgrade inbound connection",$),$}return await this.shouldBlockConnection(o,e,"denyInboundUpgradedConnection"),F(this,ie).call(this,"Successfully upgraded inbound connection"),this._createConnection({cryptoProtocol:l,direction:"inbound",maConn:e,upgradedConn:a,muxerFactory:c,remotePeer:o,transient:t?.transient})}finally{u.removeEventListener("abort",f),this.components.connectionManager.afterUpgradeInbound()}}async upgradeOutbound(e,t){const n=e.remoteAddr.getPeerId();let i;n!=null&&(i=peerIdFromString$8(n),await this.shouldBlockConnection(i,e,"denyOutboundConnection"));let o,a,c,l,u;this.components.metrics?.trackMultiaddrConnection(e),F(this,ie).call(this,"Starting the outbound connection upgrade");let f=e;if(t?.skipProtection!==!0){const g=this.components.connectionProtector;g!=null&&(f=await g.protect(e))}try{if(o=f,t?.skipEncryption!==!0){({conn:o,remotePeer:a,protocol:l}=await this._encryptOutbound(f,i));const g={...f,...o};await this.shouldBlockConnection(a,g,"denyOutboundEncryptedConnection")}else{if(i==null)throw new CodeError$e("Encryption was skipped but no peer id was passed",codes$6.ERR_INVALID_PEER);l="native",a=i}if(c=o,t?.muxerFactory!=null)u=t.muxerFactory;else if(this.muxers.size>0){const g=await this._multiplexOutbound({...f,...o},this.muxers);u=g.muxerFactory,c=g.stream}}catch(g){throw F(this,ie).error("Failed to upgrade outbound connection",g),await e.close(g),g}return await this.shouldBlockConnection(a,e,"denyOutboundUpgradedConnection"),F(this,ie).call(this,"Successfully upgraded outbound connection"),this._createConnection({cryptoProtocol:l,direction:"outbound",maConn:e,upgradedConn:c,muxerFactory:u,remotePeer:a,transient:t?.transient})}_createConnection(e){const{cryptoProtocol:t,direction:n,maConn:i,upgradedConn:o,remotePeer:a,muxerFactory:c,transient:l}=e;let u,f,g;c!=null&&(u=c.createStreamMuxer({direction:n,onIncomingStream:E=>{g!=null&&Promise.resolve().then(async()=>{const v=this.components.registrar.getProtocols(),{stream:T,protocol:I}=await handle$1(E,v);if(F(this,ie).call(this,"%s: incoming stream opened on %s",n,I),g==null)return;const A=findIncomingStreamLimit$1(I,this.components.registrar);if(countStreams$1(I,"inbound",g)===A){const x=new CodeError$e(`Too many inbound protocol streams for protocol "${I}" - limit ${A}`,codes$6.ERR_TOO_MANY_INBOUND_PROTOCOL_STREAMS);throw E.abort(x),x}E.source=T.source,E.sink=T.sink,E.protocol=I,await this.components.peerStore.merge(a,{protocols:[I]}),this.components.metrics?.trackProtocolStream(E,g),this._onStream({connection:g,stream:E,protocol:I})}).catch(async v=>{F(this,ie).error(v),E.timeline.close==null&&await E.close()})}}),f=async(E,v={})=>{if(u==null)throw new CodeError$e("Stream is not multiplexed",codes$6.ERR_MUXER_UNAVAILABLE);F(this,ie).call(this,"%s-%s: starting new stream on %s",g.id,n,E);const T=await u.newStream();try{if(v.signal==null){F(this,ie).call(this,"No abort signal was passed while trying to negotiate protocols %s falling back to default timeout",E);const D=AbortSignal.timeout(DEFAULT_PROTOCOL_SELECT_TIMEOUT$1);setMaxListeners$4(1/0,D),v={...v,signal:D}}const{stream:I,protocol:A}=await select$1(T,E,v),P=findOutgoingStreamLimit$1(A,this.components.registrar,v);if(countStreams$1(A,"outbound",g)>=P){const D=new CodeError$e(`Too many outbound protocol streams for protocol "${A}" - limit ${P}`,codes$6.ERR_TOO_MANY_OUTBOUND_PROTOCOL_STREAMS);throw T.abort(D),D}return await this.components.peerStore.merge(a,{protocols:[A]}),T.source=I.source,T.sink=I.sink,T.protocol=A,this.components.metrics?.trackProtocolStream(T,g),T}catch(I){throw F(this,ie).error("could not create new stream for protocols %s on connection with address %a",E,g.remoteAddr,I),T.timeline.close==null&&T.abort(I),I.code!=null?I:new CodeError$e(String(I),codes$6.ERR_UNSUPPORTED_PROTOCOL)}},Promise.all([u.sink(o.source),o.sink(u.source)]).catch(E=>{F(this,ie).error(E)}));const $=i.timeline;i.timeline=new Proxy($,{set:(...E)=>(g!=null&&E[1]==="close"&&E[2]!=null&&$.close==null&&(async()=>{try{g.status==="open"&&await g.close()}catch(v){F(this,ie).error(v)}finally{this.events.safeDispatchEvent("connection:close",{detail:g})}})().catch(v=>{F(this,ie).error(v)}),Reflect.set(...E))}),i.timeline.upgraded=Date.now();const S=()=>{throw new CodeError$e("connection is not multiplexed",codes$6.ERR_CONNECTION_NOT_MULTIPLEXED)};return g=createConnection$1({remoteAddr:i.remoteAddr,remotePeer:a,status:"open",direction:n,timeline:i.timeline,multiplexer:u?.protocol,encryption:t,transient:l,logger:this.components.logger,newStream:f??S,getStreams:()=>u!=null?u.streams:[],close:async E=>{u!=null&&(F(this,ie).trace("close muxer"),await u.close(E)),F(this,ie).trace("close maconn"),await i.close(E),F(this,ie).trace("closed maconn")},abort:E=>{i.abort(E),u?.abort(E)}}),this.events.safeDispatchEvent("connection:open",{detail:g}),g}_onStream(e){const{connection:t,stream:n,protocol:i}=e,{handler:o,options:a}=this.components.registrar.getHandler(i);if(t.transient&&a.runOnTransientConnection!==!0)throw new CodeError$e("Cannot open protocol stream on transient connection","ERR_TRANSIENT_CONNECTION");o({connection:t,stream:n})}async _encryptInbound(e){const t=Array.from(this.connectionEncryption.keys());F(this,ie).call(this,"handling inbound crypto protocol selection",t);try{const{stream:n,protocol:i}=await handle$1(e,t,{writeBytes:!0}),o=this.connectionEncryption.get(i);if(o==null)throw new Error(`no crypto module found for ${i}`);return F(this,ie).call(this,"encrypting inbound connection..."),{...await o.secureInbound(this.components.peerId,n),protocol:i}}catch(n){throw new CodeError$e(String(n),codes$6.ERR_ENCRYPTION_FAILED)}}async _encryptOutbound(e,t){const n=Array.from(this.connectionEncryption.keys());F(this,ie).call(this,"selecting outbound crypto protocol",n);try{const{stream:i,protocol:o}=await select$1(e,n,{writeBytes:!0}),a=this.connectionEncryption.get(o);if(a==null)throw new Error(`no crypto module found for ${o}`);return F(this,ie).call(this,"encrypting outbound connection to %p",t),{...await a.secureOutbound(this.components.peerId,i,t),protocol:o}}catch(i){throw new CodeError$e(String(i),codes$6.ERR_ENCRYPTION_FAILED)}}async _multiplexOutbound(e,t){const n=Array.from(t.keys());F(this,ie).call(this,"outbound selecting muxer %s",n);try{const{stream:i,protocol:o}=await select$1(e,n,{writeBytes:!0});F(this,ie).call(this,"%s selected as muxer protocol",o);const a=t.get(o);return{stream:i,muxerFactory:a}}catch(i){throw F(this,ie).error("error multiplexing outbound stream",i),new CodeError$e(String(i),codes$6.ERR_MUXER_UNAVAILABLE)}}async _multiplexInbound(e,t){const n=Array.from(t.keys());F(this,ie).call(this,"inbound handling muxers %s",n);try{const{stream:i,protocol:o}=await handle$1(e,n,{writeBytes:!0}),a=t.get(o);return{stream:i,muxerFactory:a}}catch(i){throw F(this,ie).error("error multiplexing inbound stream",i),new CodeError$e(String(i),codes$6.ERR_MUXER_UNAVAILABLE)}}},ie=new WeakMap,Wt);var Ce,he,st,Pt,jt;let Libp2pNode$1=(jt=class extends TypedEventEmitter$1{constructor(t){super();ne(this,st);_(this,"peerId");_(this,"peerStore");_(this,"contentRouting");_(this,"peerRouting");_(this,"keychain");_(this,"metrics");_(this,"services");_(this,"logger");_(this,"components");ne(this,Ce,void 0);ne(this,he,void 0);const n=new TypedEventEmitter$1,i=n.dispatchEvent.bind(n);n.dispatchEvent=u=>{const f=i(u),g=this.dispatchEvent(new CustomEvent$2(u.type,{detail:u.detail}));return f||g},setMaxListeners$4(1/0,n),ye(this,Ce,!1),this.peerId=t.peerId,this.logger=t.logger??defaultLogger$1(),ye(this,he,this.logger.forComponent("libp2p")),this.services={};const o=this.components=defaultComponents$1({peerId:t.peerId,logger:this.logger,events:n,datastore:t.datastore??new MemoryDatastore,connectionGater:connectionGater$1(t.connectionGater)});this.peerStore=this.configureComponent("peerStore",new PersistentPeerStore$1(o,{addressFilter:this.components.connectionGater.filterMultiaddrForPeer,...t.peerStore})),t.metrics!=null&&(this.metrics=this.configureComponent("metrics",t.metrics(this.components))),o.events.addEventListener("peer:update",u=>{if(u.detail.previous==null){const f={id:u.detail.peer.id,multiaddrs:u.detail.peer.addresses.map(g=>g.multiaddr),protocols:u.detail.peer.protocols};o.events.safeDispatchEvent("peer:discovery",{detail:f})}}),t.connectionProtector!=null&&this.configureComponent("connectionProtector",t.connectionProtector(o)),this.components.upgrader=new DefaultUpgrader$1(this.components,{connectionEncryption:(t.connectionEncryption??[]).map((u,f)=>this.configureComponent(`connection-encryption-${f}`,u(this.components))),muxers:(t.streamMuxers??[]).map((u,f)=>this.configureComponent(`stream-muxers-${f}`,u(this.components))),inboundUpgradeTimeout:t.connectionManager.inboundUpgradeTimeout}),this.configureComponent("transportManager",new DefaultTransportManager$1(this.components,t.transportManager)),this.configureComponent("connectionManager",new DefaultConnectionManager$1(this.components,t.connectionManager)),this.configureComponent("registrar",new DefaultRegistrar$1(this.components)),this.configureComponent("addressManager",new DefaultAddressManager$1(this.components,t.addresses));const a=DefaultKeyChain.generateOptions();this.keychain=this.configureComponent("keyChain",new DefaultKeyChain(this.components,{...a,...t.keychain}));const c=(t.peerRouters??[]).map((u,f)=>this.configureComponent(`peer-router-${f}`,u(this.components)));this.peerRouting=this.components.peerRouting=this.configureComponent("peerRouting",new DefaultPeerRouting$1(this.components,{routers:c}));const l=(t.contentRouters??[]).map((u,f)=>this.configureComponent(`content-router-${f}`,u(this.components)));if(this.contentRouting=this.components.contentRouting=this.configureComponent("contentRouting",new CompoundContentRouting$1(this.components,{routers:l})),(t.peerDiscovery??[]).forEach((u,f)=>{this.configureComponent(`peer-discovery-${f}`,u(this.components)).addEventListener("peer",$=>{se(this,st,Pt).call(this,$)})}),t.transports.forEach((u,f)=>{this.components.transportManager.add(this.configureComponent(`transport-${f}`,u(this.components)))}),t.services!=null)for(const u of Object.keys(t.services)){const f=t.services[u],g=f(this.components);if(g==null){F(this,he).error("service factory %s returned null or undefined instance",u);continue}this.services[u]=g,this.configureComponent(u,g),g[contentRouting]!=null&&(F(this,he).call(this,"registering service %s for content routing",u),l.push(g[contentRouting])),g[peerRouting]!=null&&(F(this,he).call(this,"registering service %s for peer routing",u),c.push(g[peerRouting])),g[peerDiscovery]!=null&&(F(this,he).call(this,"registering service %s for peer discovery",u),g[peerDiscovery].addEventListener("peer",$=>{se(this,st,Pt).call(this,$)}))}}configureComponent(t,n){return n==null&&F(this,he).error("component %s was null or undefined",t),this.components[t]=n,n}async start(){if(F(this,Ce))return;ye(this,Ce,!0),F(this,he).call(this,"libp2p is starting"),(await this.keychain.listKeys()).find(n=>n.name==="self")==null&&(F(this,he).call(this,"importing self key into keychain"),await this.keychain.importPeer("self",this.components.peerId));try{await this.components.beforeStart?.(),await this.components.start(),await this.components.afterStart?.(),this.safeDispatchEvent("start",{detail:this}),F(this,he).call(this,"libp2p has started")}catch(n){throw F(this,he).error("An error occurred starting libp2p",n),await this.stop(),n}}async stop(){F(this,Ce)&&(F(this,he).call(this,"libp2p is stopping"),ye(this,Ce,!1),await this.components.beforeStop?.(),await this.components.stop(),await this.components.afterStop?.(),this.safeDispatchEvent("stop",{detail:this}),F(this,he).call(this,"libp2p has stopped"))}isStarted(){return F(this,Ce)}getConnections(t){return this.components.connectionManager.getConnections(t)}getDialQueue(){return this.components.connectionManager.getDialQueue()}getPeers(){const t=new PeerSet$1;for(const n of this.components.connectionManager.getConnections())t.add(n.remotePeer);return Array.from(t)}async dial(t,n={}){return this.components.connectionManager.openConnection(t,n)}async dialProtocol(t,n,i={}){if(n==null)throw new CodeError$e("no protocols were provided to open a stream",codes$6.ERR_INVALID_PROTOCOLS_FOR_STREAM);if(n=Array.isArray(n)?n:[n],n.length===0)throw new CodeError$e("no protocols were provided to open a stream",codes$6.ERR_INVALID_PROTOCOLS_FOR_STREAM);return(await this.dial(t,i)).newStream(n,i)}getMultiaddrs(){return this.components.addressManager.getAddresses()}getProtocols(){return this.components.registrar.getProtocols()}async hangUp(t,n={}){isMultiaddr(t)&&(t=peerIdFromString$8(t.getPeerId()??"")),await this.components.connectionManager.closeConnections(t,n)}async getPublicKey(t,n={}){if(F(this,he).call(this,"getPublicKey %p",t),t.publicKey!=null)return t.publicKey;const i=await this.peerStore.get(t);if(i.id.publicKey!=null)return i.id.publicKey;const o=concat$6([fromString$b("/pk/"),t.multihash.digest]),a=await this.contentRouting.get(o,n);return unmarshalPublicKey$6(a),await this.peerStore.patch(t,{publicKey:a}),a}async handle(t,n,i){Array.isArray(t)||(t=[t]),await Promise.all(t.map(async o=>{await this.components.registrar.handle(o,n,i)}))}async unhandle(t){Array.isArray(t)||(t=[t]),await Promise.all(t.map(async n=>{await this.components.registrar.unhandle(n)}))}async register(t,n){return this.components.registrar.register(t,n)}unregister(t){this.components.registrar.unregister(t)}},Ce=new WeakMap,he=new WeakMap,st=new WeakSet,Pt=function(t){const{detail:n}=t;if(n.id.toString()===this.peerId.toString()){F(this,he).error(new Error(codes$6.ERR_DISCOVERED_SELF));return}this.components.peerStore.merge(n.id,{multiaddrs:n.multiaddrs,protocols:n.protocols}).catch(i=>{F(this,he).error(i)})},jt);async function createLibp2pNode$1(r){if(r.peerId==null){const e=r.datastore;if(e!=null)try{const t=new DefaultKeyChain({datastore:e},mergeOptions$9(DefaultKeyChain.generateOptions(),r.keychain));r.peerId=await t.exportPeerId("self")}catch(t){if(t.code!=="ERR_NOT_FOUND")throw t}}return r.peerId==null&&(r.peerId=await createEd25519PeerId$1()),new Libp2pNode$1(validateConfig$1(r))}async function createLibp2p$2(r){const e=await createLibp2pNode$1(r);return r.start!==!1&&await e.start(),e}const StrictSign="StrictSign",StrictNoSign="StrictNoSign";var TopicValidatorResult$a;(function(r){r.Accept="accept",r.Ignore="ignore",r.Reject="reject"})(TopicValidatorResult$a||(TopicValidatorResult$a={}));const inspect$8=Symbol.for("nodejs.util.inspect.custom"),baseDecoder$7=Object.values(bases$2).map(r=>r.decoder).reduce((r,e)=>r.or(e),bases$2.identity.decoder),LIBP2P_KEY_CODE$7=114,MARSHALLED_ED225519_PUBLIC_KEY_LENGTH$7=36,MARSHALLED_SECP256K1_PUBLIC_KEY_LENGTH$7=37;var Pr;let PeerIdImpl$7=class{constructor(e){_(this,"type");_(this,"multihash");_(this,"privateKey");_(this,"publicKey");_(this,"string");_(this,Pr,!0);this.type=e.type,this.multihash=e.multihash,this.privateKey=e.privateKey,Object.defineProperty(this,"string",{enumerable:!1,writable:!0})}get[Symbol.toStringTag](){return`PeerId(${this.toString()})`}toString(){return this.string==null&&(this.string=base58btc$4.encode(this.multihash.bytes).slice(1)),this.string}toCID(){return CID$3.createV1(LIBP2P_KEY_CODE$7,this.multihash)}toBytes(){return this.multihash.bytes}toJSON(){return this.toString()}equals(e){if(e instanceof Uint8Array)return equals$4(this.multihash.bytes,e);if(typeof e=="string")return peerIdFromString$7(e).equals(this);if(e?.multihash?.bytes!=null)return equals$4(this.multihash.bytes,e.multihash.bytes);throw new Error("not valid Id")}[(Pr=symbol$4,inspect$8)](){return`PeerId(${this.toString()})`}},RSAPeerIdImpl$7=class extends PeerIdImpl$7{constructor(t){super({...t,type:"RSA"});_(this,"type","RSA");_(this,"publicKey");this.publicKey=t.publicKey}},Ed25519PeerIdImpl$7=class extends PeerIdImpl$7{constructor(t){super({...t,type:"Ed25519"});_(this,"type","Ed25519");_(this,"publicKey");this.publicKey=t.multihash.digest}},Secp256k1PeerIdImpl$7=class extends PeerIdImpl$7{constructor(t){super({...t,type:"secp256k1"});_(this,"type","secp256k1");_(this,"publicKey");this.publicKey=t.multihash.digest}};function peerIdFromString$7(r,e){if(r.charAt(0)==="1"||r.charAt(0)==="Q"){const t=decode$n(base58btc$4.decode(`z${r}`));return r.startsWith("12D")?new Ed25519PeerIdImpl$7({multihash:t}):r.startsWith("16U")?new Secp256k1PeerIdImpl$7({multihash:t}):new RSAPeerIdImpl$7({multihash:t})}return peerIdFromBytes$7(baseDecoder$7.decode(r))}function peerIdFromBytes$7(r){try{const e=decode$n(r);if(e.code===identity$3.code){if(e.digest.length===MARSHALLED_ED225519_PUBLIC_KEY_LENGTH$7)return new Ed25519PeerIdImpl$7({multihash:e});if(e.digest.length===MARSHALLED_SECP256K1_PUBLIC_KEY_LENGTH$7)return new Secp256k1PeerIdImpl$7({multihash:e})}if(e.code===sha256$2.code)return new RSAPeerIdImpl$7({multihash:e})}catch{return peerIdFromCID$7(CID$3.decode(r))}throw new Error("Supplied PeerID CID is invalid")}function peerIdFromCID$7(r){if(r==null||r.multihash==null||r.version==null||r.version===1&&r.code!==LIBP2P_KEY_CODE$7)throw new Error("Supplied PeerID CID is invalid");const e=r.multihash;if(e.code===sha256$2.code)return new RSAPeerIdImpl$7({multihash:r.multihash});if(e.code===identity$3.code){if(e.digest.length===MARSHALLED_ED225519_PUBLIC_KEY_LENGTH$7)return new Ed25519PeerIdImpl$7({multihash:r.multihash});if(e.digest.length===MARSHALLED_SECP256K1_PUBLIC_KEY_LENGTH$7)return new Secp256k1PeerIdImpl$7({multihash:r.multihash})}throw new Error("Supplied PeerID CID is invalid")}const second$1=1e3,minute$1=60*second$1,FloodsubID="/floodsub/1.0.0",GossipsubIDv10="/meshsub/1.0.0",GossipsubIDv11="/meshsub/1.1.0",GossipsubD=6,GossipsubDlo=4,GossipsubDhi=12,GossipsubDscore=4,GossipsubDout=2,GossipsubHistoryLength=5,GossipsubHistoryGossip=3,GossipsubDlazy=6,GossipsubGossipFactor=.25,GossipsubGossipRetransmission=3,GossipsubHeartbeatInitialDelay=100,GossipsubHeartbeatInterval=second$1,GossipsubFanoutTTL=minute$1,GossipsubPrunePeers=16,GossipsubPruneBackoff=minute$1,GossipsubUnsubscribeBackoff=10*second$1,GossipsubPruneBackoffTicks=15,GossipsubDirectConnectTicks=300,GossipsubDirectConnectInitialDelay=second$1,GossipsubOpportunisticGraftTicks=60,GossipsubOpportunisticGraftPeers=2,GossipsubGraftFloodThreshold=10*second$1,GossipsubMaxIHaveLength=5e3,GossipsubMaxIHaveMessages=10,GossipsubIWantFollowupTime=3*second$1,GossipsubSeenTTL=2*minute$1,TimeCacheDuration=120*1e3,ERR_TOPIC_VALIDATOR_REJECT="ERR_TOPIC_VALIDATOR_REJECT",ERR_TOPIC_VALIDATOR_IGNORE="ERR_TOPIC_VALIDATOR_IGNORE",ACCEPT_FROM_WHITELIST_THRESHOLD_SCORE=0,ACCEPT_FROM_WHITELIST_MAX_MESSAGES=128,ACCEPT_FROM_WHITELIST_DURATION_MS=1e3,DEFAULT_METRIC_MESH_MESSAGE_DELIVERIES_WINDOWS=1e3,BACKOFF_SLACK=1;var indexMinimal={},rpc$1={},service=Service,util$1=requireMinimal();(Service.prototype=Object.create(util$1.EventEmitter.prototype)).constructor=Service;function Service(r,e,t){if(typeof r!="function")throw TypeError("rpcImpl must be a function");util$1.EventEmitter.call(this),this.rpcImpl=r,this.requestDelimited=!!e,this.responseDelimited=!!t}Service.prototype.rpcCall=function r(e,t,n,i,o){if(!i)throw TypeError("request must be specified");var a=this;if(!o)return util$1.asPromise(r,a,e,t,n,i);if(!a.rpcImpl){setTimeout(function(){o(Error("already ended"))},0);return}try{return a.rpcImpl(e,t[a.requestDelimited?"encodeDelimited":"encode"](i).finish(),function(l,u){if(l)return a.emit("error",l,e),o(l);if(u===null){a.end(!0);return}if(!(u instanceof n))try{u=n[a.responseDelimited?"decodeDelimited":"decode"](u)}catch(f){return a.emit("error",f,e),o(f)}return a.emit("data",u,e),o(null,u)})}catch(c){a.emit("error",c,e),setTimeout(function(){o(c)},0);return}};Service.prototype.end=function r(e){return this.rpcImpl&&(e||this.rpcImpl(null,null,null),this.rpcImpl=null,this.emit("end").off()),this};(function(r){var e=r;e.Service=service})(rpc$1);var roots={};(function(r){var e=r;e.build="minimal",e.Writer=writer$1,e.BufferWriter=writer_buffer,e.Reader=reader$2,e.BufferReader=reader_buffer,e.util=requireMinimal(),e.rpc=rpc$1,e.roots=roots,e.configure=t;function t(){e.util._configure(),e.Writer._configure(e.BufferWriter),e.Reader._configure(e.BufferReader)}t()})(indexMinimal);var minimal=indexMinimal;const protobuf=getDefaultExportFromCjs(minimal),defaultDecodeRpcLimits={maxSubscriptions:1/0,maxMessages:1/0,maxIhaveMessageIDs:1/0,maxIwantMessageIDs:1/0,maxControlMessages:1/0,maxPeerInfos:1/0};function decodeRpc(r,e){e={...e};const t=protobuf.Reader.create(r),n=r.length,i=n===void 0?t.len:t.pos+n,o={};for(;t.pos<i;){const a=t.uint32();switch(a>>>3){case 1:o.subscriptions!=null&&o.subscriptions.length>0||(o.subscriptions=[]),o.subscriptions.length<e.maxSubscriptions?o.subscriptions.push(decodeSubOpts(t,t.uint32())):t.skipType(a&7);break;case 2:o.messages!=null&&o.messages.length>0||(o.messages=[]),o.messages.length<e.maxMessages?o.messages.push(decodeMessage(t,t.uint32())):t.skipType(a&7);break;case 3:o.control=decodeControlMessage(t,t.uint32(),e);break;default:t.skipType(a&7);break}}return o}function decodeSubOpts(r,e){const t=e===void 0?r.len:r.pos+e,n={};for(;r.pos<t;){const i=r.uint32();switch(i>>>3){case 1:n.subscribe=r.bool();break;case 2:n.topic=r.string();break;default:r.skipType(i&7);break}}return n}function decodeMessage(r,e){const t=e===void 0?r.len:r.pos+e,n={};for(;r.pos<t;){const i=r.uint32();switch(i>>>3){case 1:n.from=r.bytes();break;case 2:n.data=r.bytes();break;case 3:n.seqno=r.bytes();break;case 4:n.topic=r.string();break;case 5:n.signature=r.bytes();break;case 6:n.key=r.bytes();break;default:r.skipType(i&7);break}}if(!n.topic)throw Error("missing required 'topic'");return n}function decodeControlMessage(r,e,t){const n=e===void 0?r.len:r.pos+e,i={};for(;r.pos<n;){const o=r.uint32();switch(o>>>3){case 1:i.ihave!=null&&i.ihave.length>0||(i.ihave=[]),i.ihave.length<t.maxControlMessages?i.ihave.push(decodeControlIHave(r,r.uint32(),t)):r.skipType(o&7);break;case 2:i.iwant!=null&&i.iwant.length>0||(i.iwant=[]),i.iwant.length<t.maxControlMessages?i.iwant.push(decodeControlIWant(r,r.uint32(),t)):r.skipType(o&7);break;case 3:i.graft!=null&&i.graft.length>0||(i.graft=[]),i.graft.length<t.maxControlMessages?i.graft.push(decodeControlGraft(r,r.uint32())):r.skipType(o&7);break;case 4:i.prune!=null&&i.prune.length>0||(i.prune=[]),i.prune.length<t.maxControlMessages?i.prune.push(decodeControlPrune(r,r.uint32(),t)):r.skipType(o&7);break;default:r.skipType(o&7);break}}return i}function decodeControlIHave(r,e,t){const n=e===void 0?r.len:r.pos+e,i={};for(;r.pos<n;){const o=r.uint32();switch(o>>>3){case 1:i.topicID=r.string();break;case 2:i.messageIDs!=null&&i.messageIDs.length>0||(i.messageIDs=[]),t.maxIhaveMessageIDs-- >0?i.messageIDs.push(r.bytes()):r.skipType(o&7);break;default:r.skipType(o&7);break}}return i}function decodeControlIWant(r,e,t){const n=e===void 0?r.len:r.pos+e,i={};for(;r.pos<n;){const o=r.uint32();switch(o>>>3){case 1:i.messageIDs!=null&&i.messageIDs.length>0||(i.messageIDs=[]),t.maxIwantMessageIDs-- >0?i.messageIDs.push(r.bytes()):r.skipType(o&7);break;default:r.skipType(o&7);break}}return i}function decodeControlGraft(r,e){const t=e===void 0?r.len:r.pos+e,n={};for(;r.pos<t;){const i=r.uint32();switch(i>>>3){case 1:n.topicID=r.string();break;default:r.skipType(i&7);break}}return n}function decodeControlPrune(r,e,t){const n=e===void 0?r.len:r.pos+e,i={};for(;r.pos<n;){const o=r.uint32();switch(o>>>3){case 1:i.topicID=r.string();break;case 2:i.peers!=null&&i.peers.length>0||(i.peers=[]),t.maxPeerInfos-- >0?i.peers.push(decodePeerInfo(r,r.uint32())):r.skipType(o&7);break;case 3:i.backoff=r.uint64();break;default:r.skipType(o&7);break}}return i}function decodePeerInfo(r,e){const t=e===void 0?r.len:r.pos+e,n={};for(;r.pos<t;){const i=r.uint32();switch(i>>>3){case 1:n.peerID=r.bytes();break;case 2:n.signedPeerRecord=r.bytes();break;default:r.skipType(i&7);break}}return n}function commonjsRequire(r){throw new Error('Could not dynamically require "'+r+'". Please configure the dynamicRequireTargets or/and ignoreDynamicRequires option of @rollup/plugin-commonjs appropriately for this require call to work.')}var rpc={exports:{}};(function(r){(function(e,t){typeof commonjsRequire=="function"&&r&&r.exports&&(r.exports=t(minimal))})(commonjsGlobal,function(e){var t=e.Reader,n=e.Writer,i=e.util,o=e.roots.default||(e.roots.default={});return o.RPC=function(){function a(l){if(this.subscriptions=[],this.messages=[],l)for(var u=Object.keys(l),f=0;f<u.length;++f)l[u[f]]!=null&&(this[u[f]]=l[u[f]])}a.prototype.subscriptions=i.emptyArray,a.prototype.messages=i.emptyArray,a.prototype.control=null;var c;return Object.defineProperty(a.prototype,"_control",{get:i.oneOfGetter(c=["control"]),set:i.oneOfSetter(c)}),a.encode=function(u,f){if(f||(f=n.create()),u.subscriptions!=null&&u.subscriptions.length)for(var g=0;g<u.subscriptions.length;++g)o.RPC.SubOpts.encode(u.subscriptions[g],f.uint32(10).fork()).ldelim();if(u.messages!=null&&u.messages.length)for(var g=0;g<u.messages.length;++g)o.RPC.Message.encode(u.messages[g],f.uint32(18).fork()).ldelim();return u.control!=null&&Object.hasOwnProperty.call(u,"control")&&o.RPC.ControlMessage.encode(u.control,f.uint32(26).fork()).ldelim(),f},a.decode=function(u,f){u instanceof t||(u=t.create(u));for(var g=f===void 0?u.len:u.pos+f,$=new o.RPC;u.pos<g;){var S=u.uint32();switch(S>>>3){case 1:$.subscriptions&&$.subscriptions.length||($.subscriptions=[]),$.subscriptions.push(o.RPC.SubOpts.decode(u,u.uint32()));break;case 2:$.messages&&$.messages.length||($.messages=[]),$.messages.push(o.RPC.Message.decode(u,u.uint32()));break;case 3:$.control=o.RPC.ControlMessage.decode(u,u.uint32());break;default:u.skipType(S&7);break}}return $},a.fromObject=function(u){if(u instanceof o.RPC)return u;var f=new o.RPC;if(u.subscriptions){if(!Array.isArray(u.subscriptions))throw TypeError(".RPC.subscriptions: array expected");f.subscriptions=[];for(var g=0;g<u.subscriptions.length;++g){if(typeof u.subscriptions[g]!="object")throw TypeError(".RPC.subscriptions: object expected");f.subscriptions[g]=o.RPC.SubOpts.fromObject(u.subscriptions[g])}}if(u.messages){if(!Array.isArray(u.messages))throw TypeError(".RPC.messages: array expected");f.messages=[];for(var g=0;g<u.messages.length;++g){if(typeof u.messages[g]!="object")throw TypeError(".RPC.messages: object expected");f.messages[g]=o.RPC.Message.fromObject(u.messages[g])}}if(u.control!=null){if(typeof u.control!="object")throw TypeError(".RPC.control: object expected");f.control=o.RPC.ControlMessage.fromObject(u.control)}return f},a.toObject=function(u,f){f||(f={});var g={};if((f.arrays||f.defaults)&&(g.subscriptions=[],g.messages=[]),u.subscriptions&&u.subscriptions.length){g.subscriptions=[];for(var $=0;$<u.subscriptions.length;++$)g.subscriptions[$]=o.RPC.SubOpts.toObject(u.subscriptions[$],f)}if(u.messages&&u.messages.length){g.messages=[];for(var $=0;$<u.messages.length;++$)g.messages[$]=o.RPC.Message.toObject(u.messages[$],f)}return u.control!=null&&u.hasOwnProperty("control")&&(g.control=o.RPC.ControlMessage.toObject(u.control,f),f.oneofs&&(g._control="control")),g},a.prototype.toJSON=function(){return this.constructor.toObject(this,e.util.toJSONOptions)},a.SubOpts=function(){function l(f){if(f)for(var g=Object.keys(f),$=0;$<g.length;++$)f[g[$]]!=null&&(this[g[$]]=f[g[$]])}l.prototype.subscribe=null,l.prototype.topic=null;var u;return Object.defineProperty(l.prototype,"_subscribe",{get:i.oneOfGetter(u=["subscribe"]),set:i.oneOfSetter(u)}),Object.defineProperty(l.prototype,"_topic",{get:i.oneOfGetter(u=["topic"]),set:i.oneOfSetter(u)}),l.encode=function(g,$){return $||($=n.create()),g.subscribe!=null&&Object.hasOwnProperty.call(g,"subscribe")&&$.uint32(8).bool(g.subscribe),g.topic!=null&&Object.hasOwnProperty.call(g,"topic")&&$.uint32(18).string(g.topic),$},l.decode=function(g,$){g instanceof t||(g=t.create(g));for(var S=$===void 0?g.len:g.pos+$,E=new o.RPC.SubOpts;g.pos<S;){var v=g.uint32();switch(v>>>3){case 1:E.subscribe=g.bool();break;case 2:E.topic=g.string();break;default:g.skipType(v&7);break}}return E},l.fromObject=function(g){if(g instanceof o.RPC.SubOpts)return g;var $=new o.RPC.SubOpts;return g.subscribe!=null&&($.subscribe=!!g.subscribe),g.topic!=null&&($.topic=String(g.topic)),$},l.toObject=function(g,$){$||($={});var S={};return g.subscribe!=null&&g.hasOwnProperty("subscribe")&&(S.subscribe=g.subscribe,$.oneofs&&(S._subscribe="subscribe")),g.topic!=null&&g.hasOwnProperty("topic")&&(S.topic=g.topic,$.oneofs&&(S._topic="topic")),S},l.prototype.toJSON=function(){return this.constructor.toObject(this,e.util.toJSONOptions)},l}(),a.Message=function(){function l(f){if(f)for(var g=Object.keys(f),$=0;$<g.length;++$)f[g[$]]!=null&&(this[g[$]]=f[g[$]])}l.prototype.from=null,l.prototype.data=null,l.prototype.seqno=null,l.prototype.topic="",l.prototype.signature=null,l.prototype.key=null;var u;return Object.defineProperty(l.prototype,"_from",{get:i.oneOfGetter(u=["from"]),set:i.oneOfSetter(u)}),Object.defineProperty(l.prototype,"_data",{get:i.oneOfGetter(u=["data"]),set:i.oneOfSetter(u)}),Object.defineProperty(l.prototype,"_seqno",{get:i.oneOfGetter(u=["seqno"]),set:i.oneOfSetter(u)}),Object.defineProperty(l.prototype,"_signature",{get:i.oneOfGetter(u=["signature"]),set:i.oneOfSetter(u)}),Object.defineProperty(l.prototype,"_key",{get:i.oneOfGetter(u=["key"]),set:i.oneOfSetter(u)}),l.encode=function(g,$){return $||($=n.create()),g.from!=null&&Object.hasOwnProperty.call(g,"from")&&$.uint32(10).bytes(g.from),g.data!=null&&Object.hasOwnProperty.call(g,"data")&&$.uint32(18).bytes(g.data),g.seqno!=null&&Object.hasOwnProperty.call(g,"seqno")&&$.uint32(26).bytes(g.seqno),$.uint32(34).string(g.topic),g.signature!=null&&Object.hasOwnProperty.call(g,"signature")&&$.uint32(42).bytes(g.signature),g.key!=null&&Object.hasOwnProperty.call(g,"key")&&$.uint32(50).bytes(g.key),$},l.decode=function(g,$){g instanceof t||(g=t.create(g));for(var S=$===void 0?g.len:g.pos+$,E=new o.RPC.Message;g.pos<S;){var v=g.uint32();switch(v>>>3){case 1:E.from=g.bytes();break;case 2:E.data=g.bytes();break;case 3:E.seqno=g.bytes();break;case 4:E.topic=g.string();break;case 5:E.signature=g.bytes();break;case 6:E.key=g.bytes();break;default:g.skipType(v&7);break}}if(!E.hasOwnProperty("topic"))throw i.ProtocolError("missing required 'topic'",{instance:E});return E},l.fromObject=function(g){if(g instanceof o.RPC.Message)return g;var $=new o.RPC.Message;return g.from!=null&&(typeof g.from=="string"?i.base64.decode(g.from,$.from=i.newBuffer(i.base64.length(g.from)),0):g.from.length&&($.from=g.from)),g.data!=null&&(typeof g.data=="string"?i.base64.decode(g.data,$.data=i.newBuffer(i.base64.length(g.data)),0):g.data.length&&($.data=g.data)),g.seqno!=null&&(typeof g.seqno=="string"?i.base64.decode(g.seqno,$.seqno=i.newBuffer(i.base64.length(g.seqno)),0):g.seqno.length&&($.seqno=g.seqno)),g.topic!=null&&($.topic=String(g.topic)),g.signature!=null&&(typeof g.signature=="string"?i.base64.decode(g.signature,$.signature=i.newBuffer(i.base64.length(g.signature)),0):g.signature.length&&($.signature=g.signature)),g.key!=null&&(typeof g.key=="string"?i.base64.decode(g.key,$.key=i.newBuffer(i.base64.length(g.key)),0):g.key.length&&($.key=g.key)),$},l.toObject=function(g,$){$||($={});var S={};return $.defaults&&(S.topic=""),g.from!=null&&g.hasOwnProperty("from")&&(S.from=$.bytes===String?i.base64.encode(g.from,0,g.from.length):$.bytes===Array?Array.prototype.slice.call(g.from):g.from,$.oneofs&&(S._from="from")),g.data!=null&&g.hasOwnProperty("data")&&(S.data=$.bytes===String?i.base64.encode(g.data,0,g.data.length):$.bytes===Array?Array.prototype.slice.call(g.data):g.data,$.oneofs&&(S._data="data")),g.seqno!=null&&g.hasOwnProperty("seqno")&&(S.seqno=$.bytes===String?i.base64.encode(g.seqno,0,g.seqno.length):$.bytes===Array?Array.prototype.slice.call(g.seqno):g.seqno,$.oneofs&&(S._seqno="seqno")),g.topic!=null&&g.hasOwnProperty("topic")&&(S.topic=g.topic),g.signature!=null&&g.hasOwnProperty("signature")&&(S.signature=$.bytes===String?i.base64.encode(g.signature,0,g.signature.length):$.bytes===Array?Array.prototype.slice.call(g.signature):g.signature,$.oneofs&&(S._signature="signature")),g.key!=null&&g.hasOwnProperty("key")&&(S.key=$.bytes===String?i.base64.encode(g.key,0,g.key.length):$.bytes===Array?Array.prototype.slice.call(g.key):g.key,$.oneofs&&(S._key="key")),S},l.prototype.toJSON=function(){return this.constructor.toObject(this,e.util.toJSONOptions)},l}(),a.ControlMessage=function(){function l(u){if(this.ihave=[],this.iwant=[],this.graft=[],this.prune=[],u)for(var f=Object.keys(u),g=0;g<f.length;++g)u[f[g]]!=null&&(this[f[g]]=u[f[g]])}return l.prototype.ihave=i.emptyArray,l.prototype.iwant=i.emptyArray,l.prototype.graft=i.emptyArray,l.prototype.prune=i.emptyArray,l.encode=function(f,g){if(g||(g=n.create()),f.ihave!=null&&f.ihave.length)for(var $=0;$<f.ihave.length;++$)o.RPC.ControlIHave.encode(f.ihave[$],g.uint32(10).fork()).ldelim();if(f.iwant!=null&&f.iwant.length)for(var $=0;$<f.iwant.length;++$)o.RPC.ControlIWant.encode(f.iwant[$],g.uint32(18).fork()).ldelim();if(f.graft!=null&&f.graft.length)for(var $=0;$<f.graft.length;++$)o.RPC.ControlGraft.encode(f.graft[$],g.uint32(26).fork()).ldelim();if(f.prune!=null&&f.prune.length)for(var $=0;$<f.prune.length;++$)o.RPC.ControlPrune.encode(f.prune[$],g.uint32(34).fork()).ldelim();return g},l.decode=function(f,g){f instanceof t||(f=t.create(f));for(var $=g===void 0?f.len:f.pos+g,S=new o.RPC.ControlMessage;f.pos<$;){var E=f.uint32();switch(E>>>3){case 1:S.ihave&&S.ihave.length||(S.ihave=[]),S.ihave.push(o.RPC.ControlIHave.decode(f,f.uint32()));break;case 2:S.iwant&&S.iwant.length||(S.iwant=[]),S.iwant.push(o.RPC.ControlIWant.decode(f,f.uint32()));break;case 3:S.graft&&S.graft.length||(S.graft=[]),S.graft.push(o.RPC.ControlGraft.decode(f,f.uint32()));break;case 4:S.prune&&S.prune.length||(S.prune=[]),S.prune.push(o.RPC.ControlPrune.decode(f,f.uint32()));break;default:f.skipType(E&7);break}}return S},l.fromObject=function(f){if(f instanceof o.RPC.ControlMessage)return f;var g=new o.RPC.ControlMessage;if(f.ihave){if(!Array.isArray(f.ihave))throw TypeError(".RPC.ControlMessage.ihave: array expected");g.ihave=[];for(var $=0;$<f.ihave.length;++$){if(typeof f.ihave[$]!="object")throw TypeError(".RPC.ControlMessage.ihave: object expected");g.ihave[$]=o.RPC.ControlIHave.fromObject(f.ihave[$])}}if(f.iwant){if(!Array.isArray(f.iwant))throw TypeError(".RPC.ControlMessage.iwant: array expected");g.iwant=[];for(var $=0;$<f.iwant.length;++$){if(typeof f.iwant[$]!="object")throw TypeError(".RPC.ControlMessage.iwant: object expected");g.iwant[$]=o.RPC.ControlIWant.fromObject(f.iwant[$])}}if(f.graft){if(!Array.isArray(f.graft))throw TypeError(".RPC.ControlMessage.graft: array expected");g.graft=[];for(var $=0;$<f.graft.length;++$){if(typeof f.graft[$]!="object")throw TypeError(".RPC.ControlMessage.graft: object expected");g.graft[$]=o.RPC.ControlGraft.fromObject(f.graft[$])}}if(f.prune){if(!Array.isArray(f.prune))throw TypeError(".RPC.ControlMessage.prune: array expected");g.prune=[];for(var $=0;$<f.prune.length;++$){if(typeof f.prune[$]!="object")throw TypeError(".RPC.ControlMessage.prune: object expected");g.prune[$]=o.RPC.ControlPrune.fromObject(f.prune[$])}}return g},l.toObject=function(f,g){g||(g={});var $={};if((g.arrays||g.defaults)&&($.ihave=[],$.iwant=[],$.graft=[],$.prune=[]),f.ihave&&f.ihave.length){$.ihave=[];for(var S=0;S<f.ihave.length;++S)$.ihave[S]=o.RPC.ControlIHave.toObject(f.ihave[S],g)}if(f.iwant&&f.iwant.length){$.iwant=[];for(var S=0;S<f.iwant.length;++S)$.iwant[S]=o.RPC.ControlIWant.toObject(f.iwant[S],g)}if(f.graft&&f.graft.length){$.graft=[];for(var S=0;S<f.graft.length;++S)$.graft[S]=o.RPC.ControlGraft.toObject(f.graft[S],g)}if(f.prune&&f.prune.length){$.prune=[];for(var S=0;S<f.prune.length;++S)$.prune[S]=o.RPC.ControlPrune.toObject(f.prune[S],g)}return $},l.prototype.toJSON=function(){return this.constructor.toObject(this,e.util.toJSONOptions)},l}(),a.ControlIHave=function(){function l(f){if(this.messageIDs=[],f)for(var g=Object.keys(f),$=0;$<g.length;++$)f[g[$]]!=null&&(this[g[$]]=f[g[$]])}l.prototype.topicID=null,l.prototype.messageIDs=i.emptyArray;var u;return Object.defineProperty(l.prototype,"_topicID",{get:i.oneOfGetter(u=["topicID"]),set:i.oneOfSetter(u)}),l.encode=function(g,$){if($||($=n.create()),g.topicID!=null&&Object.hasOwnProperty.call(g,"topicID")&&$.uint32(10).string(g.topicID),g.messageIDs!=null&&g.messageIDs.length)for(var S=0;S<g.messageIDs.length;++S)$.uint32(18).bytes(g.messageIDs[S]);return $},l.decode=function(g,$){g instanceof t||(g=t.create(g));for(var S=$===void 0?g.len:g.pos+$,E=new o.RPC.ControlIHave;g.pos<S;){var v=g.uint32();switch(v>>>3){case 1:E.topicID=g.string();break;case 2:E.messageIDs&&E.messageIDs.length||(E.messageIDs=[]),E.messageIDs.push(g.bytes());break;default:g.skipType(v&7);break}}return E},l.fromObject=function(g){if(g instanceof o.RPC.ControlIHave)return g;var $=new o.RPC.ControlIHave;if(g.topicID!=null&&($.topicID=String(g.topicID)),g.messageIDs){if(!Array.isArray(g.messageIDs))throw TypeError(".RPC.ControlIHave.messageIDs: array expected");$.messageIDs=[];for(var S=0;S<g.messageIDs.length;++S)typeof g.messageIDs[S]=="string"?i.base64.decode(g.messageIDs[S],$.messageIDs[S]=i.newBuffer(i.base64.length(g.messageIDs[S])),0):g.messageIDs[S].length&&($.messageIDs[S]=g.messageIDs[S])}return $},l.toObject=function(g,$){$||($={});var S={};if(($.arrays||$.defaults)&&(S.messageIDs=[]),g.topicID!=null&&g.hasOwnProperty("topicID")&&(S.topicID=g.topicID,$.oneofs&&(S._topicID="topicID")),g.messageIDs&&g.messageIDs.length){S.messageIDs=[];for(var E=0;E<g.messageIDs.length;++E)S.messageIDs[E]=$.bytes===String?i.base64.encode(g.messageIDs[E],0,g.messageIDs[E].length):$.bytes===Array?Array.prototype.slice.call(g.messageIDs[E]):g.messageIDs[E]}return S},l.prototype.toJSON=function(){return this.constructor.toObject(this,e.util.toJSONOptions)},l}(),a.ControlIWant=function(){function l(u){if(this.messageIDs=[],u)for(var f=Object.keys(u),g=0;g<f.length;++g)u[f[g]]!=null&&(this[f[g]]=u[f[g]])}return l.prototype.messageIDs=i.emptyArray,l.encode=function(f,g){if(g||(g=n.create()),f.messageIDs!=null&&f.messageIDs.length)for(var $=0;$<f.messageIDs.length;++$)g.uint32(10).bytes(f.messageIDs[$]);return g},l.decode=function(f,g){f instanceof t||(f=t.create(f));for(var $=g===void 0?f.len:f.pos+g,S=new o.RPC.ControlIWant;f.pos<$;){var E=f.uint32();switch(E>>>3){case 1:S.messageIDs&&S.messageIDs.length||(S.messageIDs=[]),S.messageIDs.push(f.bytes());break;default:f.skipType(E&7);break}}return S},l.fromObject=function(f){if(f instanceof o.RPC.ControlIWant)return f;var g=new o.RPC.ControlIWant;if(f.messageIDs){if(!Array.isArray(f.messageIDs))throw TypeError(".RPC.ControlIWant.messageIDs: array expected");g.messageIDs=[];for(var $=0;$<f.messageIDs.length;++$)typeof f.messageIDs[$]=="string"?i.base64.decode(f.messageIDs[$],g.messageIDs[$]=i.newBuffer(i.base64.length(f.messageIDs[$])),0):f.messageIDs[$].length&&(g.messageIDs[$]=f.messageIDs[$])}return g},l.toObject=function(f,g){g||(g={});var $={};if((g.arrays||g.defaults)&&($.messageIDs=[]),f.messageIDs&&f.messageIDs.length){$.messageIDs=[];for(var S=0;S<f.messageIDs.length;++S)$.messageIDs[S]=g.bytes===String?i.base64.encode(f.messageIDs[S],0,f.messageIDs[S].length):g.bytes===Array?Array.prototype.slice.call(f.messageIDs[S]):f.messageIDs[S]}return $},l.prototype.toJSON=function(){return this.constructor.toObject(this,e.util.toJSONOptions)},l}(),a.ControlGraft=function(){function l(f){if(f)for(var g=Object.keys(f),$=0;$<g.length;++$)f[g[$]]!=null&&(this[g[$]]=f[g[$]])}l.prototype.topicID=null;var u;return Object.defineProperty(l.prototype,"_topicID",{get:i.oneOfGetter(u=["topicID"]),set:i.oneOfSetter(u)}),l.encode=function(g,$){return $||($=n.create()),g.topicID!=null&&Object.hasOwnProperty.call(g,"topicID")&&$.uint32(10).string(g.topicID),$},l.decode=function(g,$){g instanceof t||(g=t.create(g));for(var S=$===void 0?g.len:g.pos+$,E=new o.RPC.ControlGraft;g.pos<S;){var v=g.uint32();switch(v>>>3){case 1:E.topicID=g.string();break;default:g.skipType(v&7);break}}return E},l.fromObject=function(g){if(g instanceof o.RPC.ControlGraft)return g;var $=new o.RPC.ControlGraft;return g.topicID!=null&&($.topicID=String(g.topicID)),$},l.toObject=function(g,$){$||($={});var S={};return g.topicID!=null&&g.hasOwnProperty("topicID")&&(S.topicID=g.topicID,$.oneofs&&(S._topicID="topicID")),S},l.prototype.toJSON=function(){return this.constructor.toObject(this,e.util.toJSONOptions)},l}(),a.ControlPrune=function(){function l(f){if(this.peers=[],f)for(var g=Object.keys(f),$=0;$<g.length;++$)f[g[$]]!=null&&(this[g[$]]=f[g[$]])}l.prototype.topicID=null,l.prototype.peers=i.emptyArray,l.prototype.backoff=null;var u;return Object.defineProperty(l.prototype,"_topicID",{get:i.oneOfGetter(u=["topicID"]),set:i.oneOfSetter(u)}),Object.defineProperty(l.prototype,"_backoff",{get:i.oneOfGetter(u=["backoff"]),set:i.oneOfSetter(u)}),l.encode=function(g,$){if($||($=n.create()),g.topicID!=null&&Object.hasOwnProperty.call(g,"topicID")&&$.uint32(10).string(g.topicID),g.peers!=null&&g.peers.length)for(var S=0;S<g.peers.length;++S)o.RPC.PeerInfo.encode(g.peers[S],$.uint32(18).fork()).ldelim();return g.backoff!=null&&Object.hasOwnProperty.call(g,"backoff")&&$.uint32(24).uint64(g.backoff),$},l.decode=function(g,$){g instanceof t||(g=t.create(g));for(var S=$===void 0?g.len:g.pos+$,E=new o.RPC.ControlPrune;g.pos<S;){var v=g.uint32();switch(v>>>3){case 1:E.topicID=g.string();break;case 2:E.peers&&E.peers.length||(E.peers=[]),E.peers.push(o.RPC.PeerInfo.decode(g,g.uint32()));break;case 3:E.backoff=g.uint64();break;default:g.skipType(v&7);break}}return E},l.fromObject=function(g){if(g instanceof o.RPC.ControlPrune)return g;var $=new o.RPC.ControlPrune;if(g.topicID!=null&&($.topicID=String(g.topicID)),g.peers){if(!Array.isArray(g.peers))throw TypeError(".RPC.ControlPrune.peers: array expected");$.peers=[];for(var S=0;S<g.peers.length;++S){if(typeof g.peers[S]!="object")throw TypeError(".RPC.ControlPrune.peers: object expected");$.peers[S]=o.RPC.PeerInfo.fromObject(g.peers[S])}}return g.backoff!=null&&(i.Long?($.backoff=i.Long.fromValue(g.backoff)).unsigned=!0:typeof g.backoff=="string"?$.backoff=parseInt(g.backoff,10):typeof g.backoff=="number"?$.backoff=g.backoff:typeof g.backoff=="object"&&($.backoff=new i.LongBits(g.backoff.low>>>0,g.backoff.high>>>0).toNumber(!0))),$},l.toObject=function(g,$){$||($={});var S={};if(($.arrays||$.defaults)&&(S.peers=[]),g.topicID!=null&&g.hasOwnProperty("topicID")&&(S.topicID=g.topicID,$.oneofs&&(S._topicID="topicID")),g.peers&&g.peers.length){S.peers=[];for(var E=0;E<g.peers.length;++E)S.peers[E]=o.RPC.PeerInfo.toObject(g.peers[E],$)}return g.backoff!=null&&g.hasOwnProperty("backoff")&&(typeof g.backoff=="number"?S.backoff=$.longs===String?String(g.backoff):g.backoff:S.backoff=$.longs===String?i.Long.prototype.toString.call(g.backoff):$.longs===Number?new i.LongBits(g.backoff.low>>>0,g.backoff.high>>>0).toNumber(!0):g.backoff,$.oneofs&&(S._backoff="backoff")),S},l.prototype.toJSON=function(){return this.constructor.toObject(this,e.util.toJSONOptions)},l}(),a.PeerInfo=function(){function l(f){if(f)for(var g=Object.keys(f),$=0;$<g.length;++$)f[g[$]]!=null&&(this[g[$]]=f[g[$]])}l.prototype.peerID=null,l.prototype.signedPeerRecord=null;var u;return Object.defineProperty(l.prototype,"_peerID",{get:i.oneOfGetter(u=["peerID"]),set:i.oneOfSetter(u)}),Object.defineProperty(l.prototype,"_signedPeerRecord",{get:i.oneOfGetter(u=["signedPeerRecord"]),set:i.oneOfSetter(u)}),l.encode=function(g,$){return $||($=n.create()),g.peerID!=null&&Object.hasOwnProperty.call(g,"peerID")&&$.uint32(10).bytes(g.peerID),g.signedPeerRecord!=null&&Object.hasOwnProperty.call(g,"signedPeerRecord")&&$.uint32(18).bytes(g.signedPeerRecord),$},l.decode=function(g,$){g instanceof t||(g=t.create(g));for(var S=$===void 0?g.len:g.pos+$,E=new o.RPC.PeerInfo;g.pos<S;){var v=g.uint32();switch(v>>>3){case 1:E.peerID=g.bytes();break;case 2:E.signedPeerRecord=g.bytes();break;default:g.skipType(v&7);break}}return E},l.fromObject=function(g){if(g instanceof o.RPC.PeerInfo)return g;var $=new o.RPC.PeerInfo;return g.peerID!=null&&(typeof g.peerID=="string"?i.base64.decode(g.peerID,$.peerID=i.newBuffer(i.base64.length(g.peerID)),0):g.peerID.length&&($.peerID=g.peerID)),g.signedPeerRecord!=null&&(typeof g.signedPeerRecord=="string"?i.base64.decode(g.signedPeerRecord,$.signedPeerRecord=i.newBuffer(i.base64.length(g.signedPeerRecord)),0):g.signedPeerRecord.length&&($.signedPeerRecord=g.signedPeerRecord)),$},l.toObject=function(g,$){$||($={});var S={};return g.peerID!=null&&g.hasOwnProperty("peerID")&&(S.peerID=$.bytes===String?i.base64.encode(g.peerID,0,g.peerID.length):$.bytes===Array?Array.prototype.slice.call(g.peerID):g.peerID,$.oneofs&&(S._peerID="peerID")),g.signedPeerRecord!=null&&g.hasOwnProperty("signedPeerRecord")&&(S.signedPeerRecord=$.bytes===String?i.base64.encode(g.signedPeerRecord,0,g.signedPeerRecord.length):$.bytes===Array?Array.prototype.slice.call(g.signedPeerRecord):g.signedPeerRecord,$.oneofs&&(S._signedPeerRecord="signedPeerRecord")),S},l.prototype.toJSON=function(){return this.constructor.toObject(this,e.util.toJSONOptions)},l}(),a}(),o})})(rpc);var rpcExports=rpc.exports;const cjs=getDefaultExportFromCjs(rpcExports),{RPC:RPC$1}=cjs;class MessageCache{constructor(e,t,n){_(this,"gossip");_(this,"msgs",new Map);_(this,"msgIdToStrFn");_(this,"history",[]);_(this,"notValidatedCount",0);this.gossip=e,this.msgIdToStrFn=n;for(let i=0;i<t;i++)this.history[i]=[]}get size(){return this.msgs.size}put(e,t,n=!1){const{msgIdStr:i}=e;return this.msgs.has(i)?!1:(this.msgs.set(i,{message:t,validated:n,originatingPeers:new Set,iwantCounts:new Map}),this.history[0].push({...e,topic:t.topic}),n||this.notValidatedCount++,!0)}observeDuplicate(e,t){const n=this.msgs.get(e);n!=null&&!n.validated&&n.originatingPeers.add(t)}get(e){return this.msgs.get(this.msgIdToStrFn(e))?.message}getWithIWantCount(e,t){const n=this.msgs.get(e);if(n==null)return null;const i=(n.iwantCounts.get(t)??0)+1;return n.iwantCounts.set(t,i),{msg:n.message,count:i}}getGossipIDs(e){const t=new Map;for(let n=0;n<this.gossip;n++)this.history[n].forEach(i=>{if((this.msgs.get(i.msgIdStr)?.validated??!1)&&e.has(i.topic)){let a=t.get(i.topic);a==null&&(a=[],t.set(i.topic,a)),a.push(i.msgId)}});return t}validate(e){const t=this.msgs.get(e);if(t==null)return null;t.validated||this.notValidatedCount--;const{message:n,originatingPeers:i}=t;return t.validated=!0,t.originatingPeers=new Set,{message:n,originatingPeers:i}}shift(){this.history[this.history.length-1].forEach(t=>{const n=this.msgs.get(t.msgIdStr);n!=null&&(this.msgs.delete(t.msgIdStr),n.validated||this.notValidatedCount--)}),this.history.pop(),this.history.unshift([])}remove(e){const t=this.msgs.get(e);return t==null?null:(this.msgs.delete(e),t)}}var SignaturePolicy;(function(r){r.StrictSign="StrictSign",r.StrictNoSign="StrictNoSign"})(SignaturePolicy||(SignaturePolicy={}));var PublishConfigType;(function(r){r[r.Signing=0]="Signing",r[r.Anonymous=1]="Anonymous"})(PublishConfigType||(PublishConfigType={}));var RejectReason;(function(r){r.Error="error",r.Ignore="ignore",r.Reject="reject",r.Blacklisted="blacklisted"})(RejectReason||(RejectReason={}));var ValidateError;(function(r){r.InvalidSignature="invalid_signature",r.InvalidSeqno="invalid_seqno",r.InvalidPeerId="invalid_peerid",r.SignaturePresent="signature_present",r.SeqnoPresent="seqno_present",r.FromPresent="from_present",r.TransformFailed="transform_failed"})(ValidateError||(ValidateError={}));var MessageStatus;(function(r){r.duplicate="duplicate",r.invalid="invalid",r.valid="valid"})(MessageStatus||(MessageStatus={}));function rejectReasonFromAcceptance(r){switch(r){case TopicValidatorResult$a.Ignore:return RejectReason.Ignore;case TopicValidatorResult$a.Reject:return RejectReason.Reject;default:throw new Error("Unreachable")}}var MessageSource;(function(r){r.forward="forward",r.publish="publish"})(MessageSource||(MessageSource={}));var InclusionReason;(function(r){r.Fanout="fanout",r.Random="random",r.Subscribed="subscribed",r.Outbound="outbound",r.NotEnough="not_enough",r.Opportunistic="opportunistic"})(InclusionReason||(InclusionReason={}));var ChurnReason;(function(r){r.Dc="disconnected",r.BadScore="bad_score",r.Prune="prune",r.Excess="excess"})(ChurnReason||(ChurnReason={}));var ScorePenalty;(function(r){r.GraftBackoff="graft_backoff",r.BrokenPromise="broken_promise",r.MessageDeficit="message_deficit",r.IPColocation="IP_colocation"})(ScorePenalty||(ScorePenalty={}));var IHaveIgnoreReason;(function(r){r.LowScore="low_score",r.MaxIhave="max_ihave",r.MaxIasked="max_iasked"})(IHaveIgnoreReason||(IHaveIgnoreReason={}));var ScoreThreshold;(function(r){r.graylist="graylist",r.publish="publish",r.gossip="gossip",r.mesh="mesh"})(ScoreThreshold||(ScoreThreshold={}));function getMetrics(r,e,t){return{protocolsEnabled:r.gauge({name:"gossipsub_protocol",help:"Status of enabled protocols",labelNames:["protocol"]}),topicSubscriptionStatus:r.gauge({name:"gossipsub_topic_subscription_status",help:"Status of our subscription to this topic",labelNames:["topicStr"]}),topicPeersCount:r.gauge({name:"gossipsub_topic_peer_count",help:"Number of peers subscribed to each topic",labelNames:["topicStr"]}),meshPeerCounts:r.gauge({name:"gossipsub_mesh_peer_count",help:"Number of peers in our mesh",labelNames:["topicStr"]}),meshPeerInclusionEventsFanout:r.gauge({name:"gossipsub_mesh_peer_inclusion_events_fanout_total",help:"Number of times we include peers in a topic mesh for fanout reasons",labelNames:["topic"]}),meshPeerInclusionEventsRandom:r.gauge({name:"gossipsub_mesh_peer_inclusion_events_random_total",help:"Number of times we include peers in a topic mesh for random reasons",labelNames:["topic"]}),meshPeerInclusionEventsSubscribed:r.gauge({name:"gossipsub_mesh_peer_inclusion_events_subscribed_total",help:"Number of times we include peers in a topic mesh for subscribed reasons",labelNames:["topic"]}),meshPeerInclusionEventsOutbound:r.gauge({name:"gossipsub_mesh_peer_inclusion_events_outbound_total",help:"Number of times we include peers in a topic mesh for outbound reasons",labelNames:["topic"]}),meshPeerInclusionEventsNotEnough:r.gauge({name:"gossipsub_mesh_peer_inclusion_events_not_enough_total",help:"Number of times we include peers in a topic mesh for not_enough reasons",labelNames:["topic"]}),meshPeerInclusionEventsOpportunistic:r.gauge({name:"gossipsub_mesh_peer_inclusion_events_opportunistic_total",help:"Number of times we include peers in a topic mesh for opportunistic reasons",labelNames:["topic"]}),meshPeerInclusionEventsUnknown:r.gauge({name:"gossipsub_mesh_peer_inclusion_events_unknown_total",help:"Number of times we include peers in a topic mesh for unknown reasons",labelNames:["topic"]}),meshPeerChurnEventsDisconnected:r.gauge({name:"gossipsub_peer_churn_events_disconnected_total",help:"Number of times we remove peers in a topic mesh for disconnected reasons",labelNames:["topic"]}),meshPeerChurnEventsBadScore:r.gauge({name:"gossipsub_peer_churn_events_bad_score_total",help:"Number of times we remove peers in a topic mesh for bad_score reasons",labelNames:["topic"]}),meshPeerChurnEventsPrune:r.gauge({name:"gossipsub_peer_churn_events_prune_total",help:"Number of times we remove peers in a topic mesh for prune reasons",labelNames:["topic"]}),meshPeerChurnEventsExcess:r.gauge({name:"gossipsub_peer_churn_events_excess_total",help:"Number of times we remove peers in a topic mesh for excess reasons",labelNames:["topic"]}),meshPeerChurnEventsUnknown:r.gauge({name:"gossipsub_peer_churn_events_unknown_total",help:"Number of times we remove peers in a topic mesh for unknown reasons",labelNames:["topic"]}),peersPerProtocol:r.gauge({name:"gossipsub_peers_per_protocol_count",help:"Peers connected for each topic",labelNames:["protocol"]}),heartbeatDuration:r.histogram({name:"gossipsub_heartbeat_duration_seconds",help:"The time it takes to complete one iteration of the heartbeat",buckets:[.01,.1,1]}),heartbeatSkipped:r.gauge({name:"gossipsub_heartbeat_skipped",help:"Heartbeat run took longer than heartbeat interval so next is skipped"}),acceptedMessagesTotal:r.gauge({name:"gossipsub_accepted_messages_total",help:"Total accepted messages for each topic",labelNames:["topic"]}),ignoredMessagesTotal:r.gauge({name:"gossipsub_ignored_messages_total",help:"Total ignored messages for each topic",labelNames:["topic"]}),rejectedMessagesTotal:r.gauge({name:"gossipsub_rejected_messages_total",help:"Total rejected messages for each topic",labelNames:["topic"]}),unknownValidationResultsTotal:r.gauge({name:"gossipsub_unknown_validation_results_total",help:"Total unknown validation results for each topic",labelNames:["topic"]}),asyncValidationMcacheHit:r.gauge({name:"gossipsub_async_validation_mcache_hit_total",help:"Async validation result reported by the user layer",labelNames:["hit"]}),asyncValidationDelayFromFirstSeenSec:r.histogram({name:"gossipsub_async_validation_delay_from_first_seen",help:"Async validation report delay from first seen in second",labelNames:["topic"],buckets:[.01,.03,.1,.3,1,3,10]}),asyncValidationUnknownFirstSeen:r.gauge({name:"gossipsub_async_validation_unknown_first_seen_count_total",help:"Async validation report unknown first seen value for message"}),peerReadStreamError:r.gauge({name:"gossipsub_peer_read_stream_err_count_total",help:"Peer read stream error"}),rpcRecvBytes:r.gauge({name:"gossipsub_rpc_recv_bytes_total",help:"RPC recv"}),rpcRecvCount:r.gauge({name:"gossipsub_rpc_recv_count_total",help:"RPC recv"}),rpcRecvSubscription:r.gauge({name:"gossipsub_rpc_recv_subscription_total",help:"RPC recv"}),rpcRecvMessage:r.gauge({name:"gossipsub_rpc_recv_message_total",help:"RPC recv"}),rpcRecvControl:r.gauge({name:"gossipsub_rpc_recv_control_total",help:"RPC recv"}),rpcRecvIHave:r.gauge({name:"gossipsub_rpc_recv_ihave_total",help:"RPC recv"}),rpcRecvIWant:r.gauge({name:"gossipsub_rpc_recv_iwant_total",help:"RPC recv"}),rpcRecvGraft:r.gauge({name:"gossipsub_rpc_recv_graft_total",help:"RPC recv"}),rpcRecvPrune:r.gauge({name:"gossipsub_rpc_recv_prune_total",help:"RPC recv"}),rpcDataError:r.gauge({name:"gossipsub_rpc_data_err_count_total",help:"RPC data error"}),rpcRecvError:r.gauge({name:"gossipsub_rpc_recv_err_count_total",help:"RPC recv error"}),rpcRecvNotAccepted:r.gauge({name:"gossipsub_rpc_rcv_not_accepted_total",help:"Total count of RPC dropped because acceptFrom() == false"}),rpcSentBytes:r.gauge({name:"gossipsub_rpc_sent_bytes_total",help:"RPC sent"}),rpcSentCount:r.gauge({name:"gossipsub_rpc_sent_count_total",help:"RPC sent"}),rpcSentSubscription:r.gauge({name:"gossipsub_rpc_sent_subscription_total",help:"RPC sent"}),rpcSentMessage:r.gauge({name:"gossipsub_rpc_sent_message_total",help:"RPC sent"}),rpcSentControl:r.gauge({name:"gossipsub_rpc_sent_control_total",help:"RPC sent"}),rpcSentIHave:r.gauge({name:"gossipsub_rpc_sent_ihave_total",help:"RPC sent"}),rpcSentIWant:r.gauge({name:"gossipsub_rpc_sent_iwant_total",help:"RPC sent"}),rpcSentGraft:r.gauge({name:"gossipsub_rpc_sent_graft_total",help:"RPC sent"}),rpcSentPrune:r.gauge({name:"gossipsub_rpc_sent_prune_total",help:"RPC sent"}),msgPublishCount:r.gauge({name:"gossipsub_msg_publish_count_total",help:"Total count of msg published by topic",labelNames:["topic"]}),msgPublishPeersByTopic:r.gauge({name:"gossipsub_msg_publish_peers_total",help:"Total count of peers that we publish a msg to",labelNames:["topic"]}),directPeersPublishedTotal:r.gauge({name:"gossipsub_direct_peers_published_total",help:"Total direct peers that we publish a msg to",labelNames:["topic"]}),floodsubPeersPublishedTotal:r.gauge({name:"gossipsub_floodsub_peers_published_total",help:"Total floodsub peers that we publish a msg to",labelNames:["topic"]}),meshPeersPublishedTotal:r.gauge({name:"gossipsub_mesh_peers_published_total",help:"Total mesh peers that we publish a msg to",labelNames:["topic"]}),fanoutPeersPublishedTotal:r.gauge({name:"gossipsub_fanout_peers_published_total",help:"Total fanout peers that we publish a msg to",labelNames:["topic"]}),msgPublishBytes:r.gauge({name:"gossipsub_msg_publish_bytes_total",help:"Total count of msg publish data.length bytes",labelNames:["topic"]}),msgPublishTime:r.histogram({name:"gossipsub_msg_publish_seconds",help:"Total time in seconds to publish a message",buckets:[.001,.002,.005,.01,.1,.5,1],labelNames:["topic"]}),msgForwardCount:r.gauge({name:"gossipsub_msg_forward_count_total",help:"Total count of msg forwarded by topic",labelNames:["topic"]}),msgForwardPeers:r.gauge({name:"gossipsub_msg_forward_peers_total",help:"Total count of peers that we forward a msg to",labelNames:["topic"]}),msgReceivedPreValidation:r.gauge({name:"gossipsub_msg_received_prevalidation_total",help:"Total count of recv msgs before any validation",labelNames:["topic"]}),msgReceivedError:r.gauge({name:"gossipsub_msg_received_error_total",help:"Total count of recv msgs error",labelNames:["topic"]}),prevalidationInvalidTotal:r.gauge({name:"gossipsub_pre_validation_invalid_total",help:"Total count of invalid messages received",labelNames:["topic"]}),prevalidationValidTotal:r.gauge({name:"gossipsub_pre_validation_valid_total",help:"Total count of valid messages received",labelNames:["topic"]}),prevalidationDuplicateTotal:r.gauge({name:"gossipsub_pre_validation_duplicate_total",help:"Total count of duplicate messages received",labelNames:["topic"]}),prevalidationUnknownTotal:r.gauge({name:"gossipsub_pre_validation_unknown_status_total",help:"Total count of unknown_status messages received",labelNames:["topic"]}),msgReceivedInvalid:r.gauge({name:"gossipsub_msg_received_invalid_total",help:"Tracks specific reason of invalid",labelNames:["error"]}),msgReceivedInvalidByTopic:r.gauge({name:"gossipsub_msg_received_invalid_by_topic_total",help:"Tracks specific invalid message by topic",labelNames:["topic"]}),duplicateMsgDeliveryDelay:r.histogram({name:"gossisub_duplicate_msg_delivery_delay_seconds",help:"Time since the 1st duplicated message validated",labelNames:["topic"],buckets:[.25*t.maxMeshMessageDeliveriesWindowSec,.5*t.maxMeshMessageDeliveriesWindowSec,Number(t.maxMeshMessageDeliveriesWindowSec),2*t.maxMeshMessageDeliveriesWindowSec,4*t.maxMeshMessageDeliveriesWindowSec]}),duplicateMsgLateDelivery:r.gauge({name:"gossisub_duplicate_msg_late_delivery_total",help:"Total count of late duplicate message delivery by topic, which triggers P3 penalty",labelNames:["topic"]}),duplicateMsgIgnored:r.gauge({name:"gossisub_ignored_published_duplicate_msgs_total",help:"Total count of published duplicate message ignored by topic",labelNames:["topic"]}),scoreFnCalls:r.gauge({name:"gossipsub_score_fn_calls_total",help:"Total times score() is called"}),scoreFnRuns:r.gauge({name:"gossipsub_score_fn_runs_total",help:"Total times score() call actually computed computeScore(), no cache"}),scoreCachedDelta:r.histogram({name:"gossipsub_score_cache_delta",help:"Delta of score between cached values that expired",buckets:[10,100,1e3]}),peersByScoreThreshold:r.gauge({name:"gossipsub_peers_by_score_threshold_count",help:"Current count of peers by score threshold",labelNames:["threshold"]}),score:r.avgMinMax({name:"gossipsub_score",help:"Avg min max of gossip scores"}),scoreWeights:r.avgMinMax({name:"gossipsub_score_weights",help:"Separate score weights",labelNames:["topic","p"]}),scorePerMesh:r.avgMinMax({name:"gossipsub_score_per_mesh",help:"Histogram of the scores for each mesh topic",labelNames:["topic"]}),scoringPenalties:r.gauge({name:"gossipsub_scoring_penalties_total",help:"A counter of the kind of penalties being applied to peers",labelNames:["penalty"]}),behaviourPenalty:r.histogram({name:"gossipsub_peer_stat_behaviour_penalty",help:"Current peer stat behaviour_penalty at each scrape",buckets:[.25*t.behaviourPenaltyThreshold,.5*t.behaviourPenaltyThreshold,Number(t.behaviourPenaltyThreshold),2*t.behaviourPenaltyThreshold,4*t.behaviourPenaltyThreshold]}),ihaveRcvIgnored:r.gauge({name:"gossipsub_ihave_rcv_ignored_total",help:"Total received IHAVE messages that we ignore for some reason",labelNames:["reason"]}),ihaveRcvMsgids:r.gauge({name:"gossipsub_ihave_rcv_msgids_total",help:"Total received IHAVE messages by topic",labelNames:["topic"]}),ihaveRcvNotSeenMsgids:r.gauge({name:"gossipsub_ihave_rcv_not_seen_msgids_total",help:"Total messages per topic we do not have, not actual requests",labelNames:["topic"]}),iwantRcvMsgids:r.gauge({name:"gossipsub_iwant_rcv_msgids_total",help:"Total received IWANT messages by topic",labelNames:["topic"]}),iwantRcvDonthaveMsgids:r.gauge({name:"gossipsub_iwant_rcv_dont_have_msgids_total",help:"Total requested messageIDs that we do not have"}),iwantPromiseStarted:r.gauge({name:"gossipsub_iwant_promise_sent_total",help:"Total count of started IWANT promises"}),iwantPromiseResolved:r.gauge({name:"gossipsub_iwant_promise_resolved_total",help:"Total count of resolved IWANT promises"}),iwantPromiseResolvedFromDuplicate:r.gauge({name:"gossipsub_iwant_promise_resolved_from_duplicate_total",help:"Total count of resolved IWANT promises from duplicate messages"}),iwantPromiseResolvedPeers:r.gauge({name:"gossipsub_iwant_promise_resolved_peers",help:"Total count of peers we have asked IWANT promises that are resolved"}),iwantPromiseBroken:r.gauge({name:"gossipsub_iwant_promise_broken",help:"Total count of broken IWANT promises"}),iwantMessagePruned:r.gauge({name:"gossipsub_iwant_message_pruned",help:"Total count of pruned IWANT messages"}),iwantPromiseDeliveryTime:r.histogram({name:"gossipsub_iwant_promise_delivery_seconds",help:"Histogram of delivery time of resolved IWANT promises",buckets:[.5*t.gossipPromiseExpireSec,Number(t.gossipPromiseExpireSec),2*t.gossipPromiseExpireSec,4*t.gossipPromiseExpireSec]}),iwantPromiseUntracked:r.gauge({name:"gossip_iwant_promise_untracked",help:"Total count of untracked IWANT promise"}),connectedPeersBackoffSec:r.histogram({name:"gossipsub_connected_peers_backoff_seconds",help:"Backoff time in seconds",buckets:[1,2,4,10,20,60,120]}),cacheSize:r.gauge({name:"gossipsub_cache_size",help:"Unbounded cache sizes",labelNames:["cache"]}),mcacheSize:r.gauge({name:"gossipsub_mcache_size",help:"Current mcache msg count"}),mcacheNotValidatedCount:r.gauge({name:"gossipsub_mcache_not_validated_count",help:"Current mcache msg count not validated"}),fastMsgIdCacheCollision:r.gauge({name:"gossipsub_fastmsgid_cache_collision_total",help:"Total count of key collisions on fastmsgid cache put"}),newConnectionCount:r.gauge({name:"gossipsub_new_connection_total",help:"Total new connection by status",labelNames:["status"]}),topicStrToLabel:e,toTopic(n){return this.topicStrToLabel.get(n)??n},onJoin(n){this.topicSubscriptionStatus.set({topicStr:n},1),this.meshPeerCounts.set({topicStr:n},0)},onLeave(n){this.topicSubscriptionStatus.set({topicStr:n},0),this.meshPeerCounts.set({topicStr:n},0)},onAddToMesh(n,i,o){const a=this.toTopic(n);switch(i){case InclusionReason.Fanout:this.meshPeerInclusionEventsFanout.inc({topic:a},o);break;case InclusionReason.Random:this.meshPeerInclusionEventsRandom.inc({topic:a},o);break;case InclusionReason.Subscribed:this.meshPeerInclusionEventsSubscribed.inc({topic:a},o);break;case InclusionReason.Outbound:this.meshPeerInclusionEventsOutbound.inc({topic:a},o);break;case InclusionReason.NotEnough:this.meshPeerInclusionEventsNotEnough.inc({topic:a},o);break;case InclusionReason.Opportunistic:this.meshPeerInclusionEventsOpportunistic.inc({topic:a},o);break;default:this.meshPeerInclusionEventsUnknown.inc({topic:a},o);break}},onRemoveFromMesh(n,i,o){const a=this.toTopic(n);switch(i){case ChurnReason.Dc:this.meshPeerChurnEventsDisconnected.inc({topic:a},o);break;case ChurnReason.BadScore:this.meshPeerChurnEventsBadScore.inc({topic:a},o);break;case ChurnReason.Prune:this.meshPeerChurnEventsPrune.inc({topic:a},o);break;case ChurnReason.Excess:this.meshPeerChurnEventsExcess.inc({topic:a},o);break;default:this.meshPeerChurnEventsUnknown.inc({topic:a},o);break}},onReportValidation(n,i,o){if(this.asyncValidationMcacheHit.inc({hit:n!=null?"hit":"miss"}),n!=null){const a=this.toTopic(n.message.topic);switch(i){case TopicValidatorResult$a.Accept:this.acceptedMessagesTotal.inc({topic:a});break;case TopicValidatorResult$a.Ignore:this.ignoredMessagesTotal.inc({topic:a});break;case TopicValidatorResult$a.Reject:this.rejectedMessagesTotal.inc({topic:a});break;default:this.unknownValidationResultsTotal.inc({topic:a});break}}o!=null?this.asyncValidationDelayFromFirstSeenSec.observe((Date.now()-o)/1e3):this.asyncValidationUnknownFirstSeen.inc()},onScorePenalty(n){this.scoringPenalties.inc({penalty:n},1)},onIhaveRcv(n,i,o){const a=this.toTopic(n);this.ihaveRcvMsgids.inc({topic:a},i),this.ihaveRcvNotSeenMsgids.inc({topic:a},o)},onIwantRcv(n,i){for(const[o,a]of n){const c=this.toTopic(o);this.iwantRcvMsgids.inc({topic:c},a)}this.iwantRcvDonthaveMsgids.inc(i)},onForwardMsg(n,i){const o=this.toTopic(n);this.msgForwardCount.inc({topic:o},1),this.msgForwardPeers.inc({topic:o},i)},onPublishMsg(n,i,o,a,c){const l=this.toTopic(n);this.msgPublishCount.inc({topic:l},1),this.msgPublishBytes.inc({topic:l},o*a),this.msgPublishPeersByTopic.inc({topic:l},o),this.directPeersPublishedTotal.inc({topic:l},i.direct),this.floodsubPeersPublishedTotal.inc({topic:l},i.floodsub),this.meshPeersPublishedTotal.inc({topic:l},i.mesh),this.fanoutPeersPublishedTotal.inc({topic:l},i.fanout),this.msgPublishTime.observe({topic:l},c/1e3)},onMsgRecvPreValidation(n){const i=this.toTopic(n);this.msgReceivedPreValidation.inc({topic:i},1)},onMsgRecvError(n){const i=this.toTopic(n);this.msgReceivedError.inc({topic:i},1)},onPrevalidationResult(n,i){const o=this.toTopic(n);switch(i){case MessageStatus.duplicate:this.prevalidationDuplicateTotal.inc({topic:o});break;case MessageStatus.invalid:this.prevalidationInvalidTotal.inc({topic:o});break;case MessageStatus.valid:this.prevalidationValidTotal.inc({topic:o});break;default:this.prevalidationUnknownTotal.inc({topic:o});break}},onMsgRecvInvalid(n,i){const o=this.toTopic(n),a=i.reason===RejectReason.Error?i.error:i.reason;this.msgReceivedInvalid.inc({error:a},1),this.msgReceivedInvalidByTopic.inc({topic:o},1)},onDuplicateMsgDelivery(n,i,o){if(this.duplicateMsgDeliveryDelay.observe(i/1e3),o){const a=this.toTopic(n);this.duplicateMsgLateDelivery.inc({topic:a},1)}},onPublishDuplicateMsg(n){const i=this.toTopic(n);this.duplicateMsgIgnored.inc({topic:i},1)},onPeerReadStreamError(){this.peerReadStreamError.inc(1)},onRpcRecvError(){this.rpcRecvError.inc(1)},onRpcDataError(){this.rpcDataError.inc(1)},onRpcRecv(n,i){this.rpcRecvBytes.inc(i),this.rpcRecvCount.inc(1),n.subscriptions!=null&&this.rpcRecvSubscription.inc(n.subscriptions.length),n.messages!=null&&this.rpcRecvMessage.inc(n.messages.length),n.control!=null&&(this.rpcRecvControl.inc(1),n.control.ihave!=null&&this.rpcRecvIHave.inc(n.control.ihave.length),n.control.iwant!=null&&this.rpcRecvIWant.inc(n.control.iwant.length),n.control.graft!=null&&this.rpcRecvGraft.inc(n.control.graft.length),n.control.prune!=null&&this.rpcRecvPrune.inc(n.control.prune.length))},onRpcSent(n,i){if(this.rpcSentBytes.inc(i),this.rpcSentCount.inc(1),n.subscriptions!=null&&this.rpcSentSubscription.inc(n.subscriptions.length),n.messages!=null&&this.rpcSentMessage.inc(n.messages.length),n.control!=null){const o=n.control.ihave?.length??0,a=n.control.iwant?.length??0,c=n.control.graft?.length??0,l=n.control.prune?.length??0;o>0&&this.rpcSentIHave.inc(o),a>0&&this.rpcSentIWant.inc(a),c>0&&this.rpcSentGraft.inc(c),l>0&&this.rpcSentPrune.inc(l),(o>0||a>0||c>0||l>0)&&this.rpcSentControl.inc(1)}},registerScores(n,i){let o=0,a=0,c=0,l=0;for(const u of n)u>=i.graylistThreshold&&o++,u>=i.publishThreshold&&a++,u>=i.gossipThreshold&&c++,u>=0&&l++;this.peersByScoreThreshold.set({threshold:ScoreThreshold.graylist},o),this.peersByScoreThreshold.set({threshold:ScoreThreshold.publish},a),this.peersByScoreThreshold.set({threshold:ScoreThreshold.gossip},c),this.peersByScoreThreshold.set({threshold:ScoreThreshold.mesh},l),this.score.set(n)},registerScoreWeights(n){for(const[i,o]of n.byTopic)this.scoreWeights.set({topic:i,p:"p1"},o.p1w),this.scoreWeights.set({topic:i,p:"p2"},o.p2w),this.scoreWeights.set({topic:i,p:"p3"},o.p3w),this.scoreWeights.set({topic:i,p:"p3b"},o.p3bw),this.scoreWeights.set({topic:i,p:"p4"},o.p4w);this.scoreWeights.set({p:"p5"},n.p5w),this.scoreWeights.set({p:"p6"},n.p6w),this.scoreWeights.set({p:"p7"},n.p7w)},registerScorePerMesh(n,i){const o=new Map;n.forEach((a,c)=>{const l=this.topicStrToLabel.get(c)??"unknown";let u=o.get(l);u==null&&(u=new Set,o.set(l,u)),a.forEach(f=>u?.add(f))});for(const[a,c]of o){const l=[];c.forEach(u=>{l.push(i.get(u)??0)}),this.scorePerMesh.set({topic:a},l)}}}}const ERR_INVALID_PEER_SCORE_PARAMS="ERR_INVALID_PEER_SCORE_PARAMS",defaultPeerScoreParams={topics:{},topicScoreCap:10,appSpecificScore:()=>0,appSpecificWeight:10,IPColocationFactorWeight:-5,IPColocationFactorThreshold:10,IPColocationFactorWhitelist:new Set,behaviourPenaltyWeight:-10,behaviourPenaltyThreshold:0,behaviourPenaltyDecay:.2,decayInterval:1e3,decayToZero:.1,retainScore:3600*1e3},defaultTopicScoreParams={topicWeight:.5,timeInMeshWeight:1,timeInMeshQuantum:1,timeInMeshCap:3600,firstMessageDeliveriesWeight:1,firstMessageDeliveriesDecay:.5,firstMessageDeliveriesCap:2e3,meshMessageDeliveriesWeight:-1,meshMessageDeliveriesDecay:.5,meshMessageDeliveriesCap:100,meshMessageDeliveriesThreshold:20,meshMessageDeliveriesWindow:10,meshMessageDeliveriesActivation:5e3,meshFailurePenaltyWeight:-1,meshFailurePenaltyDecay:.5,invalidMessageDeliveriesWeight:-1,invalidMessageDeliveriesDecay:.3};function createPeerScoreParams(r={}){return{...defaultPeerScoreParams,...r,topics:r.topics!=null?Object.entries(r.topics).reduce((e,[t,n])=>(e[t]=createTopicScoreParams(n),e),{}):{}}}function createTopicScoreParams(r={}){return{...defaultTopicScoreParams,...r}}function validatePeerScoreParams(r){for(const[e,t]of Object.entries(r.topics))try{validateTopicScoreParams(t)}catch(n){throw new CodeError$e(`invalid score parameters for topic ${e}: ${n.message}`,ERR_INVALID_PEER_SCORE_PARAMS)}if(r.topicScoreCap<0)throw new CodeError$e("invalid topic score cap; must be positive (or 0 for no cap)",ERR_INVALID_PEER_SCORE_PARAMS);if(r.appSpecificScore===null||r.appSpecificScore===void 0)throw new CodeError$e("missing application specific score function",ERR_INVALID_PEER_SCORE_PARAMS);if(r.IPColocationFactorWeight>0)throw new CodeError$e("invalid IPColocationFactorWeight; must be negative (or 0 to disable)",ERR_INVALID_PEER_SCORE_PARAMS);if(r.IPColocationFactorWeight!==0&&r.IPColocationFactorThreshold<1)throw new CodeError$e("invalid IPColocationFactorThreshold; must be at least 1",ERR_INVALID_PEER_SCORE_PARAMS);if(r.behaviourPenaltyWeight>0)throw new CodeError$e("invalid BehaviourPenaltyWeight; must be negative (or 0 to disable)",ERR_INVALID_PEER_SCORE_PARAMS);if(r.behaviourPenaltyWeight!==0&&(r.behaviourPenaltyDecay<=0||r.behaviourPenaltyDecay>=1))throw new CodeError$e("invalid BehaviourPenaltyDecay; must be between 0 and 1",ERR_INVALID_PEER_SCORE_PARAMS);if(r.decayInterval<1e3)throw new CodeError$e("invalid DecayInterval; must be at least 1s",ERR_INVALID_PEER_SCORE_PARAMS);if(r.decayToZero<=0||r.decayToZero>=1)throw new CodeError$e("invalid DecayToZero; must be between 0 and 1",ERR_INVALID_PEER_SCORE_PARAMS)}function validateTopicScoreParams(r){if(r.topicWeight<0)throw new CodeError$e("invalid topic weight; must be >= 0",ERR_INVALID_PEER_SCORE_PARAMS);if(r.timeInMeshQuantum===0)throw new CodeError$e("invalid TimeInMeshQuantum; must be non zero",ERR_INVALID_PEER_SCORE_PARAMS);if(r.timeInMeshWeight<0)throw new CodeError$e("invalid TimeInMeshWeight; must be positive (or 0 to disable)",ERR_INVALID_PEER_SCORE_PARAMS);if(r.timeInMeshWeight!==0&&r.timeInMeshQuantum<=0)throw new CodeError$e("invalid TimeInMeshQuantum; must be positive",ERR_INVALID_PEER_SCORE_PARAMS);if(r.timeInMeshWeight!==0&&r.timeInMeshCap<=0)throw new CodeError$e("invalid TimeInMeshCap; must be positive",ERR_INVALID_PEER_SCORE_PARAMS);if(r.firstMessageDeliveriesWeight<0)throw new CodeError$e("invallid FirstMessageDeliveriesWeight; must be positive (or 0 to disable)",ERR_INVALID_PEER_SCORE_PARAMS);if(r.firstMessageDeliveriesWeight!==0&&(r.firstMessageDeliveriesDecay<=0||r.firstMessageDeliveriesDecay>=1))throw new CodeError$e("invalid FirstMessageDeliveriesDecay; must be between 0 and 1",ERR_INVALID_PEER_SCORE_PARAMS);if(r.firstMessageDeliveriesWeight!==0&&r.firstMessageDeliveriesCap<=0)throw new CodeError$e("invalid FirstMessageDeliveriesCap; must be positive",ERR_INVALID_PEER_SCORE_PARAMS);if(r.meshMessageDeliveriesWeight>0)throw new CodeError$e("invalid MeshMessageDeliveriesWeight; must be negative (or 0 to disable)",ERR_INVALID_PEER_SCORE_PARAMS);if(r.meshMessageDeliveriesWeight!==0&&(r.meshMessageDeliveriesDecay<=0||r.meshMessageDeliveriesDecay>=1))throw new CodeError$e("invalid MeshMessageDeliveriesDecay; must be between 0 and 1",ERR_INVALID_PEER_SCORE_PARAMS);if(r.meshMessageDeliveriesWeight!==0&&r.meshMessageDeliveriesCap<=0)throw new CodeError$e("invalid MeshMessageDeliveriesCap; must be positive",ERR_INVALID_PEER_SCORE_PARAMS);if(r.meshMessageDeliveriesWeight!==0&&r.meshMessageDeliveriesThreshold<=0)throw new CodeError$e("invalid MeshMessageDeliveriesThreshold; must be positive",ERR_INVALID_PEER_SCORE_PARAMS);if(r.meshMessageDeliveriesWindow<0)throw new CodeError$e("invalid MeshMessageDeliveriesWindow; must be non-negative",ERR_INVALID_PEER_SCORE_PARAMS);if(r.meshMessageDeliveriesWeight!==0&&r.meshMessageDeliveriesActivation<1e3)throw new CodeError$e("invalid MeshMessageDeliveriesActivation; must be at least 1s",ERR_INVALID_PEER_SCORE_PARAMS);if(r.meshFailurePenaltyWeight>0)throw new CodeError$e("invalid MeshFailurePenaltyWeight; must be negative (or 0 to disable)",ERR_INVALID_PEER_SCORE_PARAMS);if(r.meshFailurePenaltyWeight!==0&&(r.meshFailurePenaltyDecay<=0||r.meshFailurePenaltyDecay>=1))throw new CodeError$e("invalid MeshFailurePenaltyDecay; must be between 0 and 1",ERR_INVALID_PEER_SCORE_PARAMS);if(r.invalidMessageDeliveriesWeight>0)throw new CodeError$e("invalid InvalidMessageDeliveriesWeight; must be negative (or 0 to disable)",ERR_INVALID_PEER_SCORE_PARAMS);if(r.invalidMessageDeliveriesDecay<=0||r.invalidMessageDeliveriesDecay>=1)throw new CodeError$e("invalid InvalidMessageDeliveriesDecay; must be between 0 and 1",ERR_INVALID_PEER_SCORE_PARAMS)}const defaultPeerScoreThresholds={gossipThreshold:-10,publishThreshold:-50,graylistThreshold:-80,acceptPXThreshold:10,opportunisticGraftThreshold:20};function createPeerScoreThresholds(r={}){return{...defaultPeerScoreThresholds,...r}}function removeItemsFromSet(r,e,t=()=>!0){const n=new Set;if(e<=0)return n;for(const i of r){if(n.size>=e)break;t(i)&&(n.add(i),r.delete(i))}return n}function removeFirstNItemsFromSet(r,e){return removeItemsFromSet(r,e,()=>!0)}class MapDef extends Map{constructor(t){super();_(this,"getDefault");this.getDefault=t}getOrDefault(t){let n=super.get(t);return n===void 0&&(n=this.getDefault(),this.set(t,n)),n}}function computeScore(r,e,t,n){let i=0;Object.entries(e.topics).forEach(([a,c])=>{const l=t.topics[a];if(l===void 0)return;let u=0;if(c.inMesh){let S=c.meshTime/l.timeInMeshQuantum;S>l.timeInMeshCap&&(S=l.timeInMeshCap),u+=S*l.timeInMeshWeight}let f=c.firstMessageDeliveries;if(f>l.firstMessageDeliveriesCap&&(f=l.firstMessageDeliveriesCap),u+=f*l.firstMessageDeliveriesWeight,c.meshMessageDeliveriesActive&&c.meshMessageDeliveries<l.meshMessageDeliveriesThreshold){const S=l.meshMessageDeliveriesThreshold-c.meshMessageDeliveries,E=S*S;u+=E*l.meshMessageDeliveriesWeight}const g=c.meshFailurePenalty;u+=g*l.meshFailurePenaltyWeight;const $=c.invalidMessageDeliveries*c.invalidMessageDeliveries;u+=$*l.invalidMessageDeliveriesWeight,i+=u*l.topicWeight}),t.topicScoreCap>0&&i>t.topicScoreCap&&(i=t.topicScoreCap);const o=t.appSpecificScore(r);if(i+=o*t.appSpecificWeight,e.knownIPs.forEach(a=>{if(t.IPColocationFactorWhitelist.has(a))return;const c=n.get(a),l=c!=null?c.size:0;if(l>t.IPColocationFactorThreshold){const u=l-t.IPColocationFactorThreshold,f=u*u;i+=f*t.IPColocationFactorWeight}}),e.behaviourPenalty>t.behaviourPenaltyThreshold){const a=e.behaviourPenalty-t.behaviourPenaltyThreshold,c=a*a;i+=c*t.behaviourPenaltyWeight}return i}function Denque(r,t){var t=t||{};this._capacity=t.capacity,this._head=0,this._tail=0,Array.isArray(r)?this._fromArray(r):(this._capacityMask=3,this._list=new Array(4))}Denque.prototype.peekAt=function r(e){var t=e;if(t===(t|0)){var n=this.size();if(!(t>=n||t<-n))return t<0&&(t+=n),t=this._head+t&this._capacityMask,this._list[t]}};Denque.prototype.get=function r(e){return this.peekAt(e)};Denque.prototype.peek=function r(){if(this._head!==this._tail)return this._list[this._head]};Denque.prototype.peekFront=function r(){return this.peek()};Denque.prototype.peekBack=function r(){return this.peekAt(-1)};Object.defineProperty(Denque.prototype,"length",{get:function r(){return this.size()}});Denque.prototype.size=function r(){return this._head===this._tail?0:this._head<this._tail?this._tail-this._head:this._capacityMask+1-(this._head-this._tail)};Denque.prototype.unshift=function r(e){if(arguments.length===0)return this.size();var t=this._list.length;return this._head=this._head-1+t&this._capacityMask,this._list[this._head]=e,this._tail===this._head&&this._growArray(),this._capacity&&this.size()>this._capacity&&this.pop(),this._head<this._tail?this._tail-this._head:this._capacityMask+1-(this._head-this._tail)};Denque.prototype.shift=function r(){var e=this._head;if(e!==this._tail){var t=this._list[e];return this._list[e]=void 0,this._head=e+1&this._capacityMask,e<2&&this._tail>1e4&&this._tail<=this._list.length>>>2&&this._shrinkArray(),t}};Denque.prototype.push=function r(e){if(arguments.length===0)return this.size();var t=this._tail;return this._list[t]=e,this._tail=t+1&this._capacityMask,this._tail===this._head&&this._growArray(),this._capacity&&this.size()>this._capacity&&this.shift(),this._head<this._tail?this._tail-this._head:this._capacityMask+1-(this._head-this._tail)};Denque.prototype.pop=function r(){var e=this._tail;if(e!==this._head){var t=this._list.length;this._tail=e-1+t&this._capacityMask;var n=this._list[this._tail];return this._list[this._tail]=void 0,this._head<2&&e>1e4&&e<=t>>>2&&this._shrinkArray(),n}};Denque.prototype.removeOne=function r(e){var t=e;if(t===(t|0)&&this._head!==this._tail){var n=this.size(),i=this._list.length;if(!(t>=n||t<-n)){t<0&&(t+=n),t=this._head+t&this._capacityMask;var o=this._list[t],a;if(e<n/2){for(a=e;a>0;a--)this._list[t]=this._list[t=t-1+i&this._capacityMask];this._list[t]=void 0,this._head=this._head+1+i&this._capacityMask}else{for(a=n-1-e;a>0;a--)this._list[t]=this._list[t=t+1+i&this._capacityMask];this._list[t]=void 0,this._tail=this._tail-1+i&this._capacityMask}return o}}};Denque.prototype.remove=function r(e,t){var n=e,i,o=t;if(n===(n|0)&&this._head!==this._tail){var a=this.size(),c=this._list.length;if(!(n>=a||n<-a||t<1)){if(n<0&&(n+=a),t===1||!t)return i=new Array(1),i[0]=this.removeOne(n),i;if(n===0&&n+t>=a)return i=this.toArray(),this.clear(),i;n+t>a&&(t=a-n);var l;for(i=new Array(t),l=0;l<t;l++)i[l]=this._list[this._head+n+l&this._capacityMask];if(n=this._head+n&this._capacityMask,e+t===a){for(this._tail=this._tail-t+c&this._capacityMask,l=t;l>0;l--)this._list[n=n+1+c&this._capacityMask]=void 0;return i}if(e===0){for(this._head=this._head+t+c&this._capacityMask,l=t-1;l>0;l--)this._list[n=n+1+c&this._capacityMask]=void 0;return i}if(n<a/2){for(this._head=this._head+e+t+c&this._capacityMask,l=e;l>0;l--)this.unshift(this._list[n=n-1+c&this._capacityMask]);for(n=this._head-1+c&this._capacityMask;o>0;)this._list[n=n-1+c&this._capacityMask]=void 0,o--;e<0&&(this._tail=n)}else{for(this._tail=n,n=n+t+c&this._capacityMask,l=a-(t+e);l>0;l--)this.push(this._list[n++]);for(n=this._tail;o>0;)this._list[n=n+1+c&this._capacityMask]=void 0,o--}return this._head<2&&this._tail>1e4&&this._tail<=c>>>2&&this._shrinkArray(),i}}};Denque.prototype.splice=function r(e,t){var n=e;if(n===(n|0)){var i=this.size();if(n<0&&(n+=i),!(n>i))if(arguments.length>2){var o,a,c,l=arguments.length,u=this._list.length,f=2;if(!i||n<i/2){for(a=new Array(n),o=0;o<n;o++)a[o]=this._list[this._head+o&this._capacityMask];for(t===0?(c=[],n>0&&(this._head=this._head+n+u&this._capacityMask)):(c=this.remove(n,t),this._head=this._head+n+u&this._capacityMask);l>f;)this.unshift(arguments[--l]);for(o=n;o>0;o--)this.unshift(a[o-1])}else{a=new Array(i-(n+t));var g=a.length;for(o=0;o<g;o++)a[o]=this._list[this._head+n+t+o&this._capacityMask];for(t===0?(c=[],n!=i&&(this._tail=this._head+n+u&this._capacityMask)):(c=this.remove(n,t),this._tail=this._tail-g+u&this._capacityMask);f<l;)this.push(arguments[f++]);for(o=0;o<g;o++)this.push(a[o])}return c}else return this.remove(n,t)}};Denque.prototype.clear=function r(){this._list=new Array(this._list.length),this._head=0,this._tail=0};Denque.prototype.isEmpty=function r(){return this._head===this._tail};Denque.prototype.toArray=function r(){return this._copyArray(!1)};Denque.prototype._fromArray=function r(e){var t=e.length,n=this._nextPowerOf2(t);this._list=new Array(n),this._capacityMask=n-1,this._tail=t;for(var i=0;i<t;i++)this._list[i]=e[i]};Denque.prototype._copyArray=function r(e,t){var n=this._list,i=n.length,o=this.length;if(t=t|o,t==o&&this._head<this._tail)return this._list.slice(this._head,this._tail);var a=new Array(t),c=0,l;if(e||this._head>this._tail){for(l=this._head;l<i;l++)a[c++]=n[l];for(l=0;l<this._tail;l++)a[c++]=n[l]}else for(l=this._head;l<this._tail;l++)a[c++]=n[l];return a};Denque.prototype._growArray=function r(){if(this._head!=0){var e=this._copyArray(!0,this._list.length<<1);this._tail=this._list.length,this._head=0,this._list=e}else this._tail=this._list.length,this._list.length<<=1;this._capacityMask=this._capacityMask<<1|1};Denque.prototype._shrinkArray=function r(){this._list.length>>>=1,this._capacityMask>>>=1};Denque.prototype._nextPowerOf2=function r(e){var t=Math.log(e)/Math.log(2),n=1<<t+1;return Math.max(n,4)};var denque=Denque;const Denque$1=getDefaultExportFromCjs(denque);var DeliveryRecordStatus;(function(r){r[r.unknown=0]="unknown",r[r.valid=1]="valid",r[r.invalid=2]="invalid",r[r.ignored=3]="ignored"})(DeliveryRecordStatus||(DeliveryRecordStatus={}));class MessageDeliveries{constructor(){_(this,"records");_(this,"queue");this.records=new Map,this.queue=new Denque$1}getRecord(e){return this.records.get(e)}ensureRecord(e){let t=this.records.get(e);if(t!=null)return t;t={status:DeliveryRecordStatus.unknown,firstSeenTsMs:Date.now(),validated:0,peers:new Set},this.records.set(e,t);const n={msgId:e,expire:Date.now()+TimeCacheDuration};return this.queue.push(n),t}gc(){const e=Date.now();let t=this.queue.peekFront();for(;t!=null&&t.expire<e;)this.records.delete(t.msgId),this.queue.shift(),t=this.queue.peekFront()}clear(){this.records.clear(),this.queue.clear()}}const log$N=logger$5("libp2p:gossipsub:score");class PeerScore{constructor(e,t,n){_(this,"params");_(this,"metrics");_(this,"peerStats",new Map);_(this,"peerIPs",new MapDef(()=>new Set));_(this,"scoreCache",new Map);_(this,"deliveryRecords",new MessageDeliveries);_(this,"_backgroundInterval");_(this,"scoreCacheValidityMs");_(this,"computeScore");this.params=e,this.metrics=t,validatePeerScoreParams(e),this.scoreCacheValidityMs=n.scoreCacheValidityMs,this.computeScore=n.computeScore??computeScore}get size(){return this.peerStats.size}start(){if(this._backgroundInterval!=null){log$N("Peer score already running");return}this._backgroundInterval=setInterval(()=>{this.background()},this.params.decayInterval),log$N("started")}stop(){if(this._backgroundInterval==null){log$N("Peer score already stopped");return}clearInterval(this._backgroundInterval),delete this._backgroundInterval,this.peerIPs.clear(),this.peerStats.clear(),this.deliveryRecords.clear(),log$N("stopped")}background(){this.refreshScores(),this.deliveryRecords.gc()}dumpPeerScoreStats(){return Object.fromEntries(Array.from(this.peerStats.entries()).map(([e,t])=>[e,t]))}messageFirstSeenTimestampMs(e){const t=this.deliveryRecords.getRecord(e);return t!=null?t.firstSeenTsMs:null}refreshScores(){const e=Date.now(),t=this.params.decayToZero;this.peerStats.forEach((n,i)=>{if(!n.connected){e>n.expire&&(this.removeIPsForPeer(i,n.knownIPs),this.peerStats.delete(i),this.scoreCache.delete(i));return}Object.entries(n.topics).forEach(([o,a])=>{const c=this.params.topics[o];c!==void 0&&(a.firstMessageDeliveries*=c.firstMessageDeliveriesDecay,a.firstMessageDeliveries<t&&(a.firstMessageDeliveries=0),a.meshMessageDeliveries*=c.meshMessageDeliveriesDecay,a.meshMessageDeliveries<t&&(a.meshMessageDeliveries=0),a.meshFailurePenalty*=c.meshFailurePenaltyDecay,a.meshFailurePenalty<t&&(a.meshFailurePenalty=0),a.invalidMessageDeliveries*=c.invalidMessageDeliveriesDecay,a.invalidMessageDeliveries<t&&(a.invalidMessageDeliveries=0),a.inMesh&&(a.meshTime=e-a.graftTime,a.meshTime>c.meshMessageDeliveriesActivation&&(a.meshMessageDeliveriesActive=!0)))}),n.behaviourPenalty*=this.params.behaviourPenaltyDecay,n.behaviourPenalty<t&&(n.behaviourPenalty=0)})}score(e){this.metrics?.scoreFnCalls.inc();const t=this.peerStats.get(e);if(t==null)return 0;const n=Date.now(),i=this.scoreCache.get(e);if(i!=null&&i.cacheUntil>n)return i.score;this.metrics?.scoreFnRuns.inc();const o=this.computeScore(e,t,this.params,this.peerIPs),a=n+this.scoreCacheValidityMs;return i!=null?(this.metrics?.scoreCachedDelta.observe(Math.abs(o-i.score)),i.score=o,i.cacheUntil=a):this.scoreCache.set(e,{score:o,cacheUntil:a}),o}addPenalty(e,t,n){const i=this.peerStats.get(e);i!=null&&(i.behaviourPenalty+=t,this.metrics?.onScorePenalty(n))}addPeer(e){const t={connected:!0,expire:0,topics:{},knownIPs:new Set,behaviourPenalty:0};this.peerStats.set(e,t)}addIP(e,t){const n=this.peerStats.get(e);n?.knownIPs.add(t),this.peerIPs.getOrDefault(t).add(e)}removeIP(e,t){const n=this.peerStats.get(e);n?.knownIPs.delete(t);const i=this.peerIPs.get(t);i!=null&&(i.delete(e),i.size===0&&this.peerIPs.delete(t))}removePeer(e){const t=this.peerStats.get(e);if(t!=null){if(this.score(e)>0){this.removeIPsForPeer(e,t.knownIPs),this.peerStats.delete(e);return}Object.entries(t.topics).forEach(([n,i])=>{i.firstMessageDeliveries=0;const o=this.params.topics[n].meshMessageDeliveriesThreshold;if(i.inMesh&&i.meshMessageDeliveriesActive&&i.meshMessageDeliveries<o){const a=o-i.meshMessageDeliveries;i.meshFailurePenalty+=a*a}i.inMesh=!1,i.meshMessageDeliveriesActive=!1}),t.connected=!1,t.expire=Date.now()+this.params.retainScore}}graft(e,t){const n=this.peerStats.get(e);if(n!=null){const i=this.getPtopicStats(n,t);i!=null&&(i.inMesh=!0,i.graftTime=Date.now(),i.meshTime=0,i.meshMessageDeliveriesActive=!1)}}prune(e,t){const n=this.peerStats.get(e);if(n!=null){const i=this.getPtopicStats(n,t);if(i!=null){const o=this.params.topics[t].meshMessageDeliveriesThreshold;if(i.meshMessageDeliveriesActive&&i.meshMessageDeliveries<o){const a=o-i.meshMessageDeliveries;i.meshFailurePenalty+=a*a}i.meshMessageDeliveriesActive=!1,i.inMesh=!1}}}validateMessage(e){this.deliveryRecords.ensureRecord(e)}deliverMessage(e,t,n){this.markFirstMessageDelivery(e,n);const i=this.deliveryRecords.ensureRecord(t),o=Date.now();if(i.status!==DeliveryRecordStatus.unknown){log$N("unexpected delivery: message from %s was first seen %s ago and has delivery status %s",e,o-i.firstSeenTsMs,DeliveryRecordStatus[i.status]);return}i.status=DeliveryRecordStatus.valid,i.validated=o,i.peers.forEach(a=>{a!==e.toString()&&this.markDuplicateMessageDelivery(a,n)})}rejectInvalidMessage(e,t){this.markInvalidMessageDelivery(e,t)}rejectMessage(e,t,n,i){switch(i){case RejectReason.Error:this.markInvalidMessageDelivery(e,n);return;case RejectReason.Blacklisted:return}const o=this.deliveryRecords.ensureRecord(t);if(o.status!==DeliveryRecordStatus.unknown){log$N("unexpected rejection: message from %s was first seen %s ago and has delivery status %d",e,Date.now()-o.firstSeenTsMs,DeliveryRecordStatus[o.status]);return}if(i===RejectReason.Ignore){o.status=DeliveryRecordStatus.ignored,o.peers.clear();return}o.status=DeliveryRecordStatus.invalid,this.markInvalidMessageDelivery(e,n),o.peers.forEach(a=>{this.markInvalidMessageDelivery(a,n)}),o.peers.clear()}duplicateMessage(e,t,n){const i=this.deliveryRecords.ensureRecord(t);if(!i.peers.has(e))switch(i.status){case DeliveryRecordStatus.unknown:i.peers.add(e);break;case DeliveryRecordStatus.valid:i.peers.add(e),this.markDuplicateMessageDelivery(e,n,i.validated);break;case DeliveryRecordStatus.invalid:this.markInvalidMessageDelivery(e,n);break;case DeliveryRecordStatus.ignored:break}}markInvalidMessageDelivery(e,t){const n=this.peerStats.get(e);if(n!=null){const i=this.getPtopicStats(n,t);i!=null&&(i.invalidMessageDeliveries+=1)}}markFirstMessageDelivery(e,t){const n=this.peerStats.get(e);if(n!=null){const i=this.getPtopicStats(n,t);if(i!=null){let o=this.params.topics[t].firstMessageDeliveriesCap;i.firstMessageDeliveries=Math.min(o,i.firstMessageDeliveries+1),i.inMesh&&(o=this.params.topics[t].meshMessageDeliveriesCap,i.meshMessageDeliveries=Math.min(o,i.meshMessageDeliveries+1))}}}markDuplicateMessageDelivery(e,t,n){const i=this.peerStats.get(e);if(i!=null){const o=n!==void 0?Date.now():0,a=this.getPtopicStats(i,t);if(a!=null&&a.inMesh){const c=this.params.topics[t];if(n!==void 0){const u=o-n,f=u>c.meshMessageDeliveriesWindow;if(this.metrics?.onDuplicateMsgDelivery(t,u,f),f)return}const l=c.meshMessageDeliveriesCap;a.meshMessageDeliveries=Math.min(l,a.meshMessageDeliveries+1)}}}removeIPsForPeer(e,t){for(const n of t){const i=this.peerIPs.get(n);i!=null&&(i.delete(e),i.size===0&&this.peerIPs.delete(n))}}getPtopicStats(e,t){let n=e.topics[t];return n!==void 0?n:this.params.topics[t]!==void 0?(n={inMesh:!1,graftTime:0,meshTime:0,firstMessageDeliveries:0,meshMessageDeliveries:0,meshMessageDeliveriesActive:!1,meshFailurePenalty:0,invalidMessageDeliveries:0},e.topics[t]=n,n):null}}function computeScoreWeights(r,e,t,n,i){let o=0;const a=new Map;if(Object.entries(e.topics).forEach(([$,S])=>{const E=i.get($)??"unknown",v=t.topics[$];if(v===void 0)return;let T=a.get(E);T==null&&(T={p1w:0,p2w:0,p3w:0,p3bw:0,p4w:0},a.set(E,T));let I=0,A=0,P=0,x=0,D=0;if(S.inMesh){const L=Math.max(S.meshTime/v.timeInMeshQuantum,v.timeInMeshCap);I+=L*v.timeInMeshWeight}let C=S.firstMessageDeliveries;if(C>v.firstMessageDeliveriesCap&&(C=v.firstMessageDeliveriesCap),A+=C*v.firstMessageDeliveriesWeight,S.meshMessageDeliveriesActive&&S.meshMessageDeliveries<v.meshMessageDeliveriesThreshold){const L=v.meshMessageDeliveriesThreshold-S.meshMessageDeliveries,M=L*L;P+=M*v.meshMessageDeliveriesWeight}const k=S.meshFailurePenalty;x+=k*v.meshFailurePenaltyWeight;const N=S.invalidMessageDeliveries*S.invalidMessageDeliveries;D+=N*v.invalidMessageDeliveriesWeight,o+=(I+A+P+x+D)*v.topicWeight,T.p1w+=I,T.p2w+=A,T.p3w+=P,T.p3bw+=x,T.p4w+=D}),t.topicScoreCap>0&&o>t.topicScoreCap){o=t.topicScoreCap;const $=t.topicScoreCap/o;for(const S of a.values())S.p1w*=$,S.p2w*=$,S.p3w*=$,S.p3bw*=$,S.p4w*=$}let c=0,l=0,u=0;const f=t.appSpecificScore(r);c+=f*t.appSpecificWeight,e.knownIPs.forEach($=>{if(t.IPColocationFactorWhitelist.has($))return;const S=n.get($),E=S!=null?S.size:0;if(E>t.IPColocationFactorThreshold){const v=E-t.IPColocationFactorThreshold,T=v*v;l+=T*t.IPColocationFactorWeight}});const g=e.behaviourPenalty*e.behaviourPenalty;return u+=g*t.behaviourPenaltyWeight,o+=c+l+u,{byTopic:a,p5w:c,p6w:l,p7w:u,score:o}}function computeAllPeersScoreWeights(r,e,t,n,i){const o={byTopic:new Map,p5w:[],p6w:[],p7w:[],score:[]};for(const a of r){const c=e.get(a);if(c!=null){const l=computeScoreWeights(a,c,t,n,i);for(const[u,f]of l.byTopic){let g=o.byTopic.get(u);g==null&&(g={p1w:[],p2w:[],p3w:[],p3bw:[],p4w:[]},o.byTopic.set(u,g)),g.p1w.push(f.p1w),g.p2w.push(f.p2w),g.p3w.push(f.p3w),g.p3bw.push(f.p3bw),g.p4w.push(f.p4w)}o.p5w.push(l.p5w),o.p6w.push(l.p6w),o.p7w.push(l.p7w),o.score.push(l.score)}else o.p5w.push(0),o.p6w.push(0),o.p7w.push(0),o.score.push(0)}return o}class OutboundStream{constructor(e,t,n){_(this,"rawStream");_(this,"pushable");_(this,"closeController");_(this,"maxBufferSize");this.rawStream=e,this.pushable=pushable({objectMode:!1}),this.closeController=new AbortController,this.maxBufferSize=n.maxBufferSize??1/0,pipe(abortableSource(this.pushable,this.closeController.signal,{returnOnAbort:!0}),i=>encode$d(i),this.rawStream).catch(t)}get protocol(){return this.rawStream.protocol}push(e){if(this.pushable.readableLength>this.maxBufferSize)throw Error(`OutboundStream buffer full, size > ${this.maxBufferSize}`);this.pushable.push(e)}async close(){this.closeController.abort(),await this.pushable.return(),await this.rawStream.close()}}class InboundStream{constructor(e,t={}){_(this,"source");_(this,"rawStream");_(this,"closeController");this.rawStream=e,this.closeController=new AbortController,this.source=abortableSource(pipe(this.rawStream,n=>decode$h(n,t)),this.closeController.signal,{returnOnAbort:!0})}async close(){this.closeController.abort(),await this.rawStream.close()}}class IWantTracer{constructor(e,t,n){_(this,"gossipsubIWantFollowupMs");_(this,"msgIdToStrFn");_(this,"metrics");_(this,"promises",new Map);_(this,"requestMsByMsg",new Map);_(this,"requestMsByMsgExpire");this.gossipsubIWantFollowupMs=e,this.msgIdToStrFn=t,this.metrics=n,this.requestMsByMsgExpire=10*e}get size(){return this.promises.size}get requestMsByMsgSize(){return this.requestMsByMsg.size}addPromise(e,t){const n=Math.floor(Math.random()*t.length),i=t[n],o=this.msgIdToStrFn(i);let a=this.promises.get(o);a==null&&(a=new Map,this.promises.set(o,a));const c=Date.now();a.has(e)||(a.set(e,c+this.gossipsubIWantFollowupMs),this.metrics!=null&&(this.metrics.iwantPromiseStarted.inc(1),this.requestMsByMsg.has(o)||this.requestMsByMsg.set(o,c)))}getBrokenPromises(){const e=Date.now(),t=new Map;let n=0;return this.promises.forEach((i,o)=>{i.forEach((a,c)=>{a<e&&(t.set(c,(t.get(c)??0)+1),i.delete(c),n++)}),i.size===0&&this.promises.delete(o)}),this.metrics?.iwantPromiseBroken.inc(n),t}deliverMessage(e,t=!1){this.trackMessage(e);const n=this.promises.get(e);n!=null&&(this.promises.delete(e),this.metrics!=null&&(this.metrics.iwantPromiseResolved.inc(1),t&&this.metrics.iwantPromiseResolvedFromDuplicate.inc(1),this.metrics.iwantPromiseResolvedPeers.inc(n.size)))}rejectMessage(e,t){switch(this.trackMessage(e),t){case RejectReason.Error:return}this.promises.delete(e)}clear(){this.promises.clear()}prune(){const e=Date.now()-this.requestMsByMsgExpire;let t=0;for(const[n,i]of this.requestMsByMsg.entries())if(i<e)this.requestMsByMsg.delete(n),t++;else break;this.metrics?.iwantMessagePruned.inc(t)}trackMessage(e){if(this.metrics!=null){const t=this.requestMsByMsg.get(e);t!==void 0&&(this.metrics.iwantPromiseDeliveryTime.observe((Date.now()-t)/1e3),this.requestMsByMsg.delete(e))}}}const webcrypto$6={get(r=globalThis){const e=r.crypto;if(e==null||e.subtle==null)throw Object.assign(new Error("Missing Web Crypto API. The most likely cause of this error is that this page is being accessed from an insecure context (i.e. not HTTPS). For more information and possible resolutions see https://github.com/libp2p/js-libp2p-crypto/blob/master/README.md#web-crypto-api"),{code:"ERR_MISSING_WEB_CRYPTO"});return e}},PUBLIC_KEY_BYTE_LENGTH$6=32,PRIVATE_KEY_BYTE_LENGTH$6=64,KEYS_BYTE_LENGTH$6=32;async function generateKey$k(){const r=ed25519.utils.randomPrivateKey(),e=ed25519.getPublicKey(r);return{privateKey:concatKeys$6(r,e),publicKey:e}}async function generateKeyFromSeed$6(r){if(r.length!==KEYS_BYTE_LENGTH$6)throw new TypeError('"seed" must be 32 bytes in length.');if(!(r instanceof Uint8Array))throw new TypeError('"seed" must be a node.js Buffer, or Uint8Array.');const e=r,t=ed25519.getPublicKey(e);return{privateKey:concatKeys$6(e,t),publicKey:t}}async function hashAndSign$k(r,e){const t=r.subarray(0,KEYS_BYTE_LENGTH$6);return ed25519.sign(e,t)}async function hashAndVerify$k(r,e,t){return ed25519.verify(e,t,r)}function concatKeys$6(r,e){const t=new Uint8Array(PRIVATE_KEY_BYTE_LENGTH$6);for(let n=0;n<KEYS_BYTE_LENGTH$6;n++)t[n]=r[n],t[KEYS_BYTE_LENGTH$6+n]=e[n];return t}const derivedEmptyPasswordKey$6={alg:"A128GCM",ext:!0,k:"scm9jmO_4BJAgdwWGVulLg",key_ops:["encrypt","decrypt"],kty:"oct"};function create$7(r){const e=r?.algorithm??"AES-GCM";let t=r?.keyLength??16;const n=r?.nonceLength??12,i=r?.digest??"SHA-256",o=r?.saltLength??16,a=r?.iterations??32767,c=webcrypto$6.get();t*=8;async function l(g,$){const S=c.getRandomValues(new Uint8Array(o)),E=c.getRandomValues(new Uint8Array(n)),v={name:e,iv:E};typeof $=="string"&&($=fromString$b($));let T;if($.length===0){T=await c.subtle.importKey("jwk",derivedEmptyPasswordKey$6,{name:"AES-GCM"},!0,["encrypt"]);try{const A={name:"PBKDF2",salt:S,iterations:a,hash:{name:i}},P=await c.subtle.importKey("raw",$,{name:"PBKDF2"},!1,["deriveKey"]);T=await c.subtle.deriveKey(A,P,{name:e,length:t},!0,["encrypt"])}catch{T=await c.subtle.importKey("jwk",derivedEmptyPasswordKey$6,{name:"AES-GCM"},!0,["encrypt"])}}else{const A={name:"PBKDF2",salt:S,iterations:a,hash:{name:i}},P=await c.subtle.importKey("raw",$,{name:"PBKDF2"},!1,["deriveKey"]);T=await c.subtle.deriveKey(A,P,{name:e,length:t},!0,["encrypt"])}const I=await c.subtle.encrypt(v,T,g);return concat$6([S,v.iv,new Uint8Array(I)])}async function u(g,$){const S=g.subarray(0,o),E=g.subarray(o,o+n),v=g.subarray(o+n),T={name:e,iv:E};typeof $=="string"&&($=fromString$b($));let I;if($.length===0)try{const P={name:"PBKDF2",salt:S,iterations:a,hash:{name:i}},x=await c.subtle.importKey("raw",$,{name:"PBKDF2"},!1,["deriveKey"]);I=await c.subtle.deriveKey(P,x,{name:e,length:t},!0,["decrypt"])}catch{I=await c.subtle.importKey("jwk",derivedEmptyPasswordKey$6,{name:"AES-GCM"},!0,["decrypt"])}else{const P={name:"PBKDF2",salt:S,iterations:a,hash:{name:i}},x=await c.subtle.importKey("raw",$,{name:"PBKDF2"},!1,["deriveKey"]);I=await c.subtle.deriveKey(P,x,{name:e,length:t},!0,["decrypt"])}const A=await c.subtle.decrypt(T,I,v);return new Uint8Array(A)}return{encrypt:l,decrypt:u}}async function exporter$7(r,e){const n=await create$7().encrypt(r,e);return base64$6.encode(n)}var KeyType$8;(function(r){r.RSA="RSA",r.Ed25519="Ed25519",r.Secp256k1="Secp256k1"})(KeyType$8||(KeyType$8={}));var __KeyTypeValues$8;(function(r){r[r.RSA=0]="RSA",r[r.Ed25519=1]="Ed25519",r[r.Secp256k1=2]="Secp256k1"})(__KeyTypeValues$8||(__KeyTypeValues$8={}));(function(r){r.codec=()=>enumeration(__KeyTypeValues$8)})(KeyType$8||(KeyType$8={}));var PublicKey$8;(function(r){let e;r.codec=()=>(e==null&&(e=message((t,n,i={})=>{i.lengthDelimited!==!1&&n.fork(),t.Type!=null&&(n.uint32(8),KeyType$8.codec().encode(t.Type,n)),t.Data!=null&&(n.uint32(18),n.bytes(t.Data)),i.lengthDelimited!==!1&&n.ldelim()},(t,n)=>{const i={},o=n==null?t.len:t.pos+n;for(;t.pos<o;){const a=t.uint32();switch(a>>>3){case 1:i.Type=KeyType$8.codec().decode(t);break;case 2:i.Data=t.bytes();break;default:t.skipType(a&7);break}}return i})),e),r.encode=t=>encodeMessage(t,r.codec()),r.decode=t=>decodeMessage$1(t,r.codec())})(PublicKey$8||(PublicKey$8={}));var PrivateKey$8;(function(r){let e;r.codec=()=>(e==null&&(e=message((t,n,i={})=>{i.lengthDelimited!==!1&&n.fork(),t.Type!=null&&(n.uint32(8),KeyType$8.codec().encode(t.Type,n)),t.Data!=null&&(n.uint32(18),n.bytes(t.Data)),i.lengthDelimited!==!1&&n.ldelim()},(t,n)=>{const i={},o=n==null?t.len:t.pos+n;for(;t.pos<o;){const a=t.uint32();switch(a>>>3){case 1:i.Type=KeyType$8.codec().decode(t);break;case 2:i.Data=t.bytes();break;default:t.skipType(a&7);break}}return i})),e),r.encode=t=>encodeMessage(t,r.codec()),r.decode=t=>decodeMessage$1(t,r.codec())})(PrivateKey$8||(PrivateKey$8={}));let Ed25519PublicKey$6=class{constructor(e){_(this,"_key");this._key=ensureKey$6(e,PUBLIC_KEY_BYTE_LENGTH$6)}async verify(e,t){return hashAndVerify$k(this._key,t,e)}marshal(){return this._key}get bytes(){return PublicKey$8.encode({Type:KeyType$8.Ed25519,Data:this.marshal()}).subarray()}equals(e){return equals$4(this.bytes,e.bytes)}async hash(){const{bytes:e}=await sha256$2.digest(this.bytes);return e}},Ed25519PrivateKey$6=class{constructor(e,t){_(this,"_key");_(this,"_publicKey");this._key=ensureKey$6(e,PRIVATE_KEY_BYTE_LENGTH$6),this._publicKey=ensureKey$6(t,PUBLIC_KEY_BYTE_LENGTH$6)}async sign(e){return hashAndSign$k(this._key,e)}get public(){return new Ed25519PublicKey$6(this._publicKey)}marshal(){return this._key}get bytes(){return PrivateKey$8.encode({Type:KeyType$8.Ed25519,Data:this.marshal()}).subarray()}equals(e){return equals$4(this.bytes,e.bytes)}async hash(){const{bytes:e}=await sha256$2.digest(this.bytes);return e}async id(){const e=identity$3.digest(this.public.bytes);return base58btc$4.encode(e.bytes).substring(1)}async export(e,t="libp2p-key"){if(t==="libp2p-key")return exporter$7(this.bytes,e);throw new CodeError$e(`export format '${t}' is not supported`,"ERR_INVALID_EXPORT_FORMAT")}};function unmarshalEd25519PrivateKey$6(r){if(r.length>PRIVATE_KEY_BYTE_LENGTH$6){r=ensureKey$6(r,PRIVATE_KEY_BYTE_LENGTH$6+PUBLIC_KEY_BYTE_LENGTH$6);const n=r.subarray(0,PRIVATE_KEY_BYTE_LENGTH$6),i=r.subarray(PRIVATE_KEY_BYTE_LENGTH$6,r.length);return new Ed25519PrivateKey$6(n,i)}r=ensureKey$6(r,PRIVATE_KEY_BYTE_LENGTH$6);const e=r.subarray(0,PRIVATE_KEY_BYTE_LENGTH$6),t=r.subarray(PUBLIC_KEY_BYTE_LENGTH$6);return new Ed25519PrivateKey$6(e,t)}function unmarshalEd25519PublicKey$6(r){return r=ensureKey$6(r,PUBLIC_KEY_BYTE_LENGTH$6),new Ed25519PublicKey$6(r)}async function generateKeyPair$l(){const{privateKey:r,publicKey:e}=await generateKey$k();return new Ed25519PrivateKey$6(r,e)}async function generateKeyPairFromSeed$6(r){const{privateKey:e,publicKey:t}=await generateKeyFromSeed$6(r);return new Ed25519PrivateKey$6(e,t)}function ensureKey$6(r,e){if(r=Uint8Array.from(r??[]),r.length!==e)throw new CodeError$e(`Key must be a Uint8Array of length ${e}, got ${r.length}`,"ERR_INVALID_KEY_TYPE");return r}const Ed25519$6=Object.freeze(Object.defineProperty({__proto__:null,Ed25519PrivateKey:Ed25519PrivateKey$6,Ed25519PublicKey:Ed25519PublicKey$6,generateKeyPair:generateKeyPair$l,generateKeyPairFromSeed:generateKeyPairFromSeed$6,unmarshalEd25519PrivateKey:unmarshalEd25519PrivateKey$6,unmarshalEd25519PublicKey:unmarshalEd25519PublicKey$6},Symbol.toStringTag,{value:"Module"}));function bigIntegerToUintBase64url$6(r,e){let t=Uint8Array.from(r.abs().toByteArray());if(t=t[0]===0?t.subarray(1):t,e!=null){if(t.length>e)throw new Error("byte array longer than desired length");t=concat$6([new Uint8Array(e-t.length),t])}return toString$b(t,"base64url")}function base64urlToBigInteger$6(r){const e=base64urlToBuffer$6(r);return new forge$n.jsbn.BigInteger(toString$b(e,"base16"),16)}function base64urlToBuffer$6(r,e){let t=fromString$b(r,"base64urlpad");if(e!=null){if(t.length>e)throw new Error("byte array longer than desired length");t=concat$6([new Uint8Array(e-t.length),t])}return t}const bits$8={"P-256":256,"P-384":384,"P-521":521},curveTypes$8=Object.keys(bits$8);curveTypes$8.join(" / ");function randomBytes$7(r){if(isNaN(r)||r<=0)throw new CodeError$e("random bytes length must be a Number bigger than 0","ERR_INVALID_LENGTH");return randomBytes$a(r)}function convert$8(r,e){return e.map(t=>base64urlToBigInteger$6(r[t]))}function jwk2priv$6(r){return forge$n.pki.setRsaPrivateKey(...convert$8(r,["n","e","d","p","q","dp","dq","qi"]))}function jwk2pub$6(r){return forge$n.pki.setRsaPublicKey(...convert$8(r,["n","e"]))}function pkcs1ToJwk$6(r){const e=forge$n.asn1.fromDer(toString$b(r,"ascii")),t=forge$n.pki.privateKeyFromAsn1(e);return{kty:"RSA",n:bigIntegerToUintBase64url$6(t.n),e:bigIntegerToUintBase64url$6(t.e),d:bigIntegerToUintBase64url$6(t.d),p:bigIntegerToUintBase64url$6(t.p),q:bigIntegerToUintBase64url$6(t.q),dp:bigIntegerToUintBase64url$6(t.dP),dq:bigIntegerToUintBase64url$6(t.dQ),qi:bigIntegerToUintBase64url$6(t.qInv),alg:"RS256"}}function jwkToPkcs1$6(r){if(r.n==null||r.e==null||r.d==null||r.p==null||r.q==null||r.dp==null||r.dq==null||r.qi==null)throw new CodeError$e("JWK was missing components","ERR_INVALID_PARAMETERS");const e=forge$n.pki.privateKeyToAsn1({n:base64urlToBigInteger$6(r.n),e:base64urlToBigInteger$6(r.e),d:base64urlToBigInteger$6(r.d),p:base64urlToBigInteger$6(r.p),q:base64urlToBigInteger$6(r.q),dP:base64urlToBigInteger$6(r.dp),dQ:base64urlToBigInteger$6(r.dq),qInv:base64urlToBigInteger$6(r.qi)});return fromString$b(forge$n.asn1.toDer(e).getBytes(),"ascii")}function pkixToJwk$6(r){const e=forge$n.asn1.fromDer(toString$b(r,"ascii")),t=forge$n.pki.publicKeyFromAsn1(e);return{kty:"RSA",n:bigIntegerToUintBase64url$6(t.n),e:bigIntegerToUintBase64url$6(t.e)}}function jwkToPkix$6(r){if(r.n==null||r.e==null)throw new CodeError$e("JWK was missing components","ERR_INVALID_PARAMETERS");const e=forge$n.pki.publicKeyToAsn1({n:base64urlToBigInteger$6(r.n),e:base64urlToBigInteger$6(r.e)});return fromString$b(forge$n.asn1.toDer(e).getBytes(),"ascii")}async function generateKey$j(r){const e=await webcrypto$6.get().subtle.generateKey({name:"RSASSA-PKCS1-v1_5",modulusLength:r,publicExponent:new Uint8Array([1,0,1]),hash:{name:"SHA-256"}},!0,["sign","verify"]),t=await exportKey$6(e);return{privateKey:t[0],publicKey:t[1]}}async function unmarshalPrivateKey$a(r){const t=[await webcrypto$6.get().subtle.importKey("jwk",r,{name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-256"}},!0,["sign"]),await derivePublicFromPrivate$6(r)],n=await exportKey$6({privateKey:t[0],publicKey:t[1]});return{privateKey:n[0],publicKey:n[1]}}async function hashAndSign$j(r,e){const t=await webcrypto$6.get().subtle.importKey("jwk",r,{name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-256"}},!1,["sign"]),n=await webcrypto$6.get().subtle.sign({name:"RSASSA-PKCS1-v1_5"},t,Uint8Array.from(e));return new Uint8Array(n,0,n.byteLength)}async function hashAndVerify$j(r,e,t){const n=await webcrypto$6.get().subtle.importKey("jwk",r,{name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-256"}},!1,["verify"]);return webcrypto$6.get().subtle.verify({name:"RSASSA-PKCS1-v1_5"},n,e,t)}async function exportKey$6(r){if(r.privateKey==null||r.publicKey==null)throw new CodeError$e("Private and public key are required","ERR_INVALID_PARAMETERS");return Promise.all([webcrypto$6.get().subtle.exportKey("jwk",r.privateKey),webcrypto$6.get().subtle.exportKey("jwk",r.publicKey)])}async function derivePublicFromPrivate$6(r){return webcrypto$6.get().subtle.importKey("jwk",{kty:r.kty,n:r.n,e:r.e},{name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-256"}},!0,["verify"])}function convertKey$6(r,e,t,n){const i=e?jwk2pub$6(r):jwk2priv$6(r),o=toString$b(Uint8Array.from(t),"ascii"),a=n(o,i);return fromString$b(a,"ascii")}function encrypt$6(r,e){return convertKey$6(r,!0,e,(t,n)=>n.encrypt(t))}function decrypt$6(r,e){return convertKey$6(r,!1,e,(t,n)=>n.decrypt(t))}function keySize$6(r){if(r.kty!=="RSA")throw new CodeError$e("invalid key type","ERR_INVALID_KEY_TYPE");if(r.n==null)throw new CodeError$e("invalid key modulus","ERR_INVALID_KEY_MODULUS");return fromString$b(r.n,"base64url").length*8}const MAX_KEY_SIZE$6=8192;let RsaPublicKey$6=class{constructor(e){_(this,"_key");this._key=e}async verify(e,t){return hashAndVerify$j(this._key,t,e)}marshal(){return jwkToPkix$6(this._key)}get bytes(){return PublicKey$8.encode({Type:KeyType$8.RSA,Data:this.marshal()}).subarray()}encrypt(e){return encrypt$6(this._key,e)}equals(e){return equals$4(this.bytes,e.bytes)}async hash(){const{bytes:e}=await sha256$2.digest(this.bytes);return e}},RsaPrivateKey$6=class{constructor(e,t){_(this,"_key");_(this,"_publicKey");this._key=e,this._publicKey=t}genSecret(){return randomBytes$7(16)}async sign(e){return hashAndSign$j(this._key,e)}get public(){if(this._publicKey==null)throw new CodeError$e("public key not provided","ERR_PUBKEY_NOT_PROVIDED");return new RsaPublicKey$6(this._publicKey)}decrypt(e){return decrypt$6(this._key,e)}marshal(){return jwkToPkcs1$6(this._key)}get bytes(){return PrivateKey$8.encode({Type:KeyType$8.RSA,Data:this.marshal()}).subarray()}equals(e){return equals$4(this.bytes,e.bytes)}async hash(){const{bytes:e}=await sha256$2.digest(this.bytes);return e}async id(){const e=await this.public.hash();return toString$b(e,"base58btc")}async export(e,t="pkcs-8"){if(t==="pkcs-8"){const n=new forge$n.util.ByteBuffer(this.marshal()),i=forge$n.asn1.fromDer(n),o=forge$n.pki.privateKeyFromAsn1(i),a={algorithm:"aes256",count:1e4,saltSize:128/8,prfAlgorithm:"sha512"};return forge$n.pki.encryptRsaPrivateKey(o,e,a)}else{if(t==="libp2p-key")return exporter$7(this.bytes,e);throw new CodeError$e(`export format '${t}' is not supported`,"ERR_INVALID_EXPORT_FORMAT")}}};async function unmarshalRsaPrivateKey$6(r){const e=pkcs1ToJwk$6(r);if(keySize$6(e)>MAX_KEY_SIZE$6)throw new CodeError$e("key size is too large","ERR_KEY_SIZE_TOO_LARGE");const t=await unmarshalPrivateKey$a(e);return new RsaPrivateKey$6(t.privateKey,t.publicKey)}function unmarshalRsaPublicKey$6(r){const e=pkixToJwk$6(r);if(keySize$6(e)>MAX_KEY_SIZE$6)throw new CodeError$e("key size is too large","ERR_KEY_SIZE_TOO_LARGE");return new RsaPublicKey$6(e)}async function fromJwk$6(r){if(keySize$6(r)>MAX_KEY_SIZE$6)throw new CodeError$e("key size is too large","ERR_KEY_SIZE_TOO_LARGE");const e=await unmarshalPrivateKey$a(r);return new RsaPrivateKey$6(e.privateKey,e.publicKey)}async function generateKeyPair$k(r){if(r>MAX_KEY_SIZE$6)throw new CodeError$e("key size is too large","ERR_KEY_SIZE_TOO_LARGE");const e=await generateKey$j(r);return new RsaPrivateKey$6(e.privateKey,e.publicKey)}const RSA$6=Object.freeze(Object.defineProperty({__proto__:null,MAX_KEY_SIZE:MAX_KEY_SIZE$6,RsaPrivateKey:RsaPrivateKey$6,RsaPublicKey:RsaPublicKey$6,fromJwk:fromJwk$6,generateKeyPair:generateKeyPair$k,unmarshalRsaPrivateKey:unmarshalRsaPrivateKey$6,unmarshalRsaPublicKey:unmarshalRsaPublicKey$6},Symbol.toStringTag,{value:"Module"}));function generateKey$i(){return secp256k1.utils.randomPrivateKey()}async function hashAndSign$i(r,e){const{digest:t}=await sha256$2.digest(e);try{return secp256k1.sign(t,r).toDERRawBytes()}catch(n){throw new CodeError$e(String(n),"ERR_INVALID_INPUT")}}async function hashAndVerify$i(r,e,t){try{const{digest:n}=await sha256$2.digest(t);return secp256k1.verify(e,n,r)}catch(n){throw new CodeError$e(String(n),"ERR_INVALID_INPUT")}}function compressPublicKey$6(r){return secp256k1.ProjectivePoint.fromHex(r).toRawBytes(!0)}function validatePrivateKey$6(r){try{secp256k1.getPublicKey(r,!0)}catch(e){throw new CodeError$e(String(e),"ERR_INVALID_PRIVATE_KEY")}}function validatePublicKey$6(r){try{secp256k1.ProjectivePoint.fromHex(r)}catch(e){throw new CodeError$e(String(e),"ERR_INVALID_PUBLIC_KEY")}}function computePublicKey$6(r){try{return secp256k1.getPublicKey(r,!0)}catch(e){throw new CodeError$e(String(e),"ERR_INVALID_PRIVATE_KEY")}}let Secp256k1PublicKey$6=class{constructor(e){_(this,"_key");validatePublicKey$6(e),this._key=e}async verify(e,t){return hashAndVerify$i(this._key,t,e)}marshal(){return compressPublicKey$6(this._key)}get bytes(){return PublicKey$8.encode({Type:KeyType$8.Secp256k1,Data:this.marshal()}).subarray()}equals(e){return equals$4(this.bytes,e.bytes)}async hash(){const{bytes:e}=await sha256$2.digest(this.bytes);return e}},Secp256k1PrivateKey$6=class{constructor(e,t){_(this,"_key");_(this,"_publicKey");this._key=e,this._publicKey=t??computePublicKey$6(e),validatePrivateKey$6(this._key),validatePublicKey$6(this._publicKey)}async sign(e){return hashAndSign$i(this._key,e)}get public(){return new Secp256k1PublicKey$6(this._publicKey)}marshal(){return this._key}get bytes(){return PrivateKey$8.encode({Type:KeyType$8.Secp256k1,Data:this.marshal()}).subarray()}equals(e){return equals$4(this.bytes,e.bytes)}async hash(){const{bytes:e}=await sha256$2.digest(this.bytes);return e}async id(){const e=await this.public.hash();return toString$b(e,"base58btc")}async export(e,t="libp2p-key"){if(t==="libp2p-key")return exporter$7(this.bytes,e);throw new CodeError$e(`export format '${t}' is not supported`,"ERR_INVALID_EXPORT_FORMAT")}};function unmarshalSecp256k1PrivateKey$6(r){return new Secp256k1PrivateKey$6(r)}function unmarshalSecp256k1PublicKey$6(r){return new Secp256k1PublicKey$6(r)}async function generateKeyPair$j(){const r=generateKey$i();return new Secp256k1PrivateKey$6(r)}const Secp256k1$6=Object.freeze(Object.defineProperty({__proto__:null,Secp256k1PrivateKey:Secp256k1PrivateKey$6,Secp256k1PublicKey:Secp256k1PublicKey$6,generateKeyPair:generateKeyPair$j,unmarshalSecp256k1PrivateKey:unmarshalSecp256k1PrivateKey$6,unmarshalSecp256k1PublicKey:unmarshalSecp256k1PublicKey$6},Symbol.toStringTag,{value:"Module"})),supportedKeys$6={rsa:RSA$6,ed25519:Ed25519$6,secp256k1:Secp256k1$6};function unsupportedKey$6(r){const e=Object.keys(supportedKeys$6).join(" / ");return new CodeError$e(`invalid or unsupported key type ${r}. Must be ${e}`,"ERR_UNSUPPORTED_KEY_TYPE")}function typeToKey$2(r){if(r=r.toLowerCase(),r==="rsa"||r==="ed25519"||r==="secp256k1")return supportedKeys$6[r];throw unsupportedKey$6(r)}function unmarshalPublicKey$5(r){const e=PublicKey$8.decode(r),t=e.Data??new Uint8Array;switch(e.Type){case KeyType$8.RSA:return supportedKeys$6.rsa.unmarshalRsaPublicKey(t);case KeyType$8.Ed25519:return supportedKeys$6.ed25519.unmarshalEd25519PublicKey(t);case KeyType$8.Secp256k1:return supportedKeys$6.secp256k1.unmarshalSecp256k1PublicKey(t);default:throw unsupportedKey$6(e.Type??"unknown")}}function marshalPublicKey$2(r,e){return e=(e??"rsa").toLowerCase(),typeToKey$2(e),r.bytes}async function unmarshalPrivateKey$9(r){const e=PrivateKey$8.decode(r),t=e.Data??new Uint8Array;switch(e.Type){case KeyType$8.RSA:return supportedKeys$6.rsa.unmarshalRsaPrivateKey(t);case KeyType$8.Ed25519:return supportedKeys$6.ed25519.unmarshalEd25519PrivateKey(t);case KeyType$8.Secp256k1:return supportedKeys$6.secp256k1.unmarshalSecp256k1PrivateKey(t);default:throw unsupportedKey$6(e.Type??"RSA")}}const SignPrefix=fromString$b("libp2p-pubsub:");async function buildRawMessage(r,e,t,n){switch(r.type){case PublishConfigType.Signing:{const i={from:r.author.toBytes(),data:n,seqno:randomBytes$7(8),topic:e,signature:void 0,key:void 0},o=concat$6([SignPrefix,RPC$1.Message.encode(i).finish()]);i.signature=await r.privateKey.sign(o),i.key=r.key;const a={type:"signed",from:r.author,data:t,sequenceNumber:BigInt(`0x${toString$b(i.seqno,"base16")}`),topic:e,signature:i.signature,key:i.key};return{raw:i,msg:a}}case PublishConfigType.Anonymous:return{raw:{from:void 0,data:n,seqno:void 0,topic:e,signature:void 0,key:void 0},msg:{type:"unsigned",data:t,topic:e}};default:throw new Error("Unreachable")}}async function validateToRawMessage(r,e){switch(r){case StrictNoSign:return e.signature!=null?{valid:!1,error:ValidateError.SignaturePresent}:e.seqno!=null?{valid:!1,error:ValidateError.SeqnoPresent}:e.key!=null?{valid:!1,error:ValidateError.FromPresent}:{valid:!0,message:{type:"unsigned",topic:e.topic,data:e.data??new Uint8Array(0)}};case StrictSign:{if(e.seqno==null)return{valid:!1,error:ValidateError.InvalidSeqno};if(e.seqno.length!==8)return{valid:!1,error:ValidateError.InvalidSeqno};if(e.signature==null)return{valid:!1,error:ValidateError.InvalidSignature};if(e.from==null)return{valid:!1,error:ValidateError.InvalidPeerId};let t;try{t=peerIdFromBytes$7(e.from)}catch{return{valid:!1,error:ValidateError.InvalidPeerId}}let n;if(e.key!=null){if(n=unmarshalPublicKey$5(e.key),t.publicKey!==void 0&&!equals$4(n.bytes,t.publicKey))return{valid:!1,error:ValidateError.InvalidPeerId}}else{if(t.publicKey==null)return{valid:!1,error:ValidateError.InvalidPeerId};n=unmarshalPublicKey$5(t.publicKey)}const i={from:e.from,data:e.data,seqno:e.seqno,topic:e.topic,signature:void 0,key:void 0},o=concat$6([SignPrefix,RPC$1.Message.encode(i).finish()]);return await n.verify(o,e.signature)?{valid:!0,message:{type:"signed",from:t,data:e.data??new Uint8Array(0),sequenceNumber:BigInt(`0x${toString$b(e.seqno,"base16")}`),topic:e.topic,signature:e.signature,key:e.key??marshalPublicKey$2(n)}}:{valid:!1,error:ValidateError.InvalidSignature}}default:throw new Error("Unreachable")}}function shuffle(r){if(r.length<=1)return r;const e=()=>Math.floor(Math.random()*Math.floor(r.length));for(let t=0;t<r.length;t++){const n=e(),i=r[t];r[t]=r[n],r[n]=i}return r}function messageIdToString(r){return toString$b(r,"base64")}async function getPublishConfigFromPeerId(r,e){switch(r){case StrictSign:{if(e==null)throw Error("Must provide PeerId");if(e.privateKey==null)throw Error("Cannot sign message, no private key present");if(e.publicKey==null)throw Error("Cannot sign message, no public key present");const t=await unmarshalPrivateKey$9(e.privateKey);return{type:PublishConfigType.Signing,author:e,key:e.publicKey,privateKey:t}}case StrictNoSign:return{type:PublishConfigType.Anonymous};default:throw new Error(`Unknown signature policy "${r}"`)}}var KeyType$7;(function(r){r.RSA="RSA",r.Ed25519="Ed25519",r.Secp256k1="Secp256k1"})(KeyType$7||(KeyType$7={}));var __KeyTypeValues$7;(function(r){r[r.RSA=0]="RSA",r[r.Ed25519=1]="Ed25519",r[r.Secp256k1=2]="Secp256k1"})(__KeyTypeValues$7||(__KeyTypeValues$7={}));(function(r){r.codec=()=>enumeration(__KeyTypeValues$7)})(KeyType$7||(KeyType$7={}));var PublicKey$7;(function(r){let e;r.codec=()=>(e==null&&(e=message((t,n,i={})=>{i.lengthDelimited!==!1&&n.fork(),t.Type!=null&&(n.uint32(8),KeyType$7.codec().encode(t.Type,n)),t.Data!=null&&(n.uint32(18),n.bytes(t.Data)),i.lengthDelimited!==!1&&n.ldelim()},(t,n)=>{const i={},o=n==null?t.len:t.pos+n;for(;t.pos<o;){const a=t.uint32();switch(a>>>3){case 1:i.Type=KeyType$7.codec().decode(t);break;case 2:i.Data=t.bytes();break;default:t.skipType(a&7);break}}return i})),e),r.encode=t=>encodeMessage(t,r.codec()),r.decode=t=>decodeMessage$1(t,r.codec())})(PublicKey$7||(PublicKey$7={}));var PrivateKey$7;(function(r){let e;r.codec=()=>(e==null&&(e=message((t,n,i={})=>{i.lengthDelimited!==!1&&n.fork(),t.Type!=null&&(n.uint32(8),KeyType$7.codec().encode(t.Type,n)),t.Data!=null&&(n.uint32(18),n.bytes(t.Data)),i.lengthDelimited!==!1&&n.ldelim()},(t,n)=>{const i={},o=n==null?t.len:t.pos+n;for(;t.pos<o;){const a=t.uint32();switch(a>>>3){case 1:i.Type=KeyType$7.codec().decode(t);break;case 2:i.Data=t.bytes();break;default:t.skipType(a&7);break}}return i})),e),r.encode=t=>encodeMessage(t,r.codec()),r.decode=t=>decodeMessage$1(t,r.codec())})(PrivateKey$7||(PrivateKey$7={}));const bits$7={"P-256":256,"P-384":384,"P-521":521},curveTypes$7=Object.keys(bits$7);curveTypes$7.join(" / ");Object.values(bases$2).map(r=>r.decoder).reduce((r,e)=>r.or(e),bases$2.identity.decoder);const msgId=(r,e)=>{const t=fromString$b(e.toString(16).padStart(16,"0"),"base16"),n=new Uint8Array(r.length+t.length);return n.set(r,0),n.set(t,r.length),n};function msgIdFnStrictSign(r){if(r.type!=="signed")throw new Error("expected signed message type");if(r.sequenceNumber==null)throw Error("missing seqno field");return msgId(r.from.toBytes(),r.sequenceNumber)}async function msgIdFnStrictNoSign(r){return sha256$2.encode(r.data)}var Protocol;(function(r){r[r.ip4=4]="ip4",r[r.ip6=41]="ip6"})(Protocol||(Protocol={}));function multiaddrToIPStr(r){for(const e of r.tuples())switch(e[0]){case Protocol.ip4:case Protocol.ip6:return convertToString(e[0],e[1])}return null}class SimpleTimeCache{constructor(e){_(this,"entries",new Map);_(this,"validityMs");this.validityMs=e.validityMs}get size(){return this.entries.size}put(e,t){return this.entries.has(e)?!0:(this.entries.set(e,{value:t,validUntilMs:Date.now()+this.validityMs}),!1)}prune(){const e=Date.now();for(const[t,n]of this.entries.entries())if(n.validUntilMs<e)this.entries.delete(t);else break}has(e){return this.entries.has(e)}get(e){const t=this.entries.get(e);return t!=null&&t.validUntilMs>=Date.now()?t.value:void 0}clear(){this.entries.clear()}}var GossipStatusCode;(function(r){r[r.started=0]="started",r[r.stopped=1]="stopped"})(GossipStatusCode||(GossipStatusCode={}));class GossipSub extends TypedEventEmitter$1{constructor(t,n={}){super();_(this,"globalSignaturePolicy");_(this,"multicodecs",[GossipsubIDv11,GossipsubIDv10]);_(this,"publishConfig");_(this,"dataTransform");_(this,"peers",new Set);_(this,"streamsInbound",new Map);_(this,"streamsOutbound",new Map);_(this,"outboundInflightQueue",pushable({objectMode:!0}));_(this,"direct",new Set);_(this,"floodsubPeers",new Set);_(this,"seenCache");_(this,"acceptFromWhitelist",new Map);_(this,"topics",new Map);_(this,"subscriptions",new Set);_(this,"mesh",new Map);_(this,"fanout",new Map);_(this,"fanoutLastpub",new Map);_(this,"gossip",new Map);_(this,"control",new Map);_(this,"peerhave",new Map);_(this,"iasked",new Map);_(this,"backoff",new Map);_(this,"outbound",new Map);_(this,"msgIdFn");_(this,"fastMsgIdFn");_(this,"msgIdToStrFn");_(this,"fastMsgIdCache");_(this,"publishedMessageIds");_(this,"mcache");_(this,"score");_(this,"topicValidators",new Map);_(this,"log");_(this,"heartbeatTicks",0);_(this,"gossipTracer");_(this,"components");_(this,"directPeerInitial",null);_(this,"opts");_(this,"decodeRpcLimits");_(this,"metrics");_(this,"status",{code:GossipStatusCode.stopped});_(this,"maxInboundStreams");_(this,"maxOutboundStreams");_(this,"allowedTopics");_(this,"heartbeatTimer",null);_(this,"runHeartbeat",()=>{const t=this.metrics?.heartbeatDuration.startTimer();this.heartbeat().catch(n=>{this.log("Error running heartbeat",n)}).finally(()=>{if(t?.(),this.status.code===GossipStatusCode.started){clearTimeout(this.status.heartbeatTimeout);let n=this.opts.heartbeatInterval-(Date.now()-this.status.hearbeatStartMs)%this.opts.heartbeatInterval;n<this.opts.heartbeatInterval*.25&&(n+=this.opts.heartbeatInterval,this.metrics?.heartbeatSkipped.inc()),this.status.heartbeatTimeout=setTimeout(this.runHeartbeat,n)}})});const i={fallbackToFloodsub:!0,floodPublish:!0,doPX:!1,directPeers:[],D:GossipsubD,Dlo:GossipsubDlo,Dhi:GossipsubDhi,Dscore:GossipsubDscore,Dout:GossipsubDout,Dlazy:GossipsubDlazy,heartbeatInterval:GossipsubHeartbeatInterval,fanoutTTL:GossipsubFanoutTTL,mcacheLength:GossipsubHistoryLength,mcacheGossip:GossipsubHistoryGossip,seenTTL:GossipsubSeenTTL,gossipsubIWantFollowupMs:GossipsubIWantFollowupTime,prunePeers:GossipsubPrunePeers,pruneBackoff:GossipsubPruneBackoff,unsubcribeBackoff:GossipsubUnsubscribeBackoff,graftFloodThreshold:GossipsubGraftFloodThreshold,opportunisticGraftPeers:GossipsubOpportunisticGraftPeers,opportunisticGraftTicks:GossipsubOpportunisticGraftTicks,directConnectTicks:GossipsubDirectConnectTicks,...n,scoreParams:createPeerScoreParams(n.scoreParams),scoreThresholds:createPeerScoreThresholds(n.scoreThresholds)};if(this.components=t,this.decodeRpcLimits=i.decodeRpcLimits??defaultDecodeRpcLimits,this.globalSignaturePolicy=i.globalSignaturePolicy??StrictSign,i.fallbackToFloodsub&&this.multicodecs.push(FloodsubID),this.log=logger$5(i.debugName??"libp2p:gossipsub"),this.opts=i,this.direct=new Set(i.directPeers.map(o=>o.id.toString())),this.seenCache=new SimpleTimeCache({validityMs:i.seenTTL}),this.publishedMessageIds=new SimpleTimeCache({validityMs:i.seenTTL}),n.msgIdFn!=null)this.msgIdFn=n.msgIdFn;else switch(this.globalSignaturePolicy){case StrictSign:this.msgIdFn=msgIdFnStrictSign;break;case StrictNoSign:this.msgIdFn=msgIdFnStrictNoSign;break;default:throw new Error(`Invalid globalSignaturePolicy: ${this.globalSignaturePolicy}`)}if(n.fastMsgIdFn!=null&&(this.fastMsgIdFn=n.fastMsgIdFn,this.fastMsgIdCache=new SimpleTimeCache({validityMs:i.seenTTL})),this.msgIdToStrFn=n.msgIdToStrFn??messageIdToString,this.mcache=n.messageCache??new MessageCache(i.mcacheGossip,i.mcacheLength,this.msgIdToStrFn),n.dataTransform!=null&&(this.dataTransform=n.dataTransform),n.metricsRegister!=null){if(n.metricsTopicStrToLabel==null)throw Error("Must set metricsTopicStrToLabel with metrics");const o=Math.max(...Object.values(i.scoreParams.topics).map(c=>c.meshMessageDeliveriesWindow),DEFAULT_METRIC_MESH_MESSAGE_DELIVERIES_WINDOWS),a=getMetrics(n.metricsRegister,n.metricsTopicStrToLabel,{gossipPromiseExpireSec:this.opts.gossipsubIWantFollowupMs/1e3,behaviourPenaltyThreshold:i.scoreParams.behaviourPenaltyThreshold,maxMeshMessageDeliveriesWindowSec:o/1e3});a.mcacheSize.addCollect(()=>{this.onScrapeMetrics(a)});for(const c of this.multicodecs)a.protocolsEnabled.set({protocol:c},1);this.metrics=a}else this.metrics=null;this.gossipTracer=new IWantTracer(this.opts.gossipsubIWantFollowupMs,this.msgIdToStrFn,this.metrics),this.score=new PeerScore(this.opts.scoreParams,this.metrics,{scoreCacheValidityMs:i.heartbeatInterval}),this.maxInboundStreams=n.maxInboundStreams,this.maxOutboundStreams=n.maxOutboundStreams,this.allowedTopics=i.allowedTopics!=null?new Set(i.allowedTopics):null}getPeers(){return[...this.peers.keys()].map(t=>peerIdFromString$7(t))}isStarted(){return this.status.code===GossipStatusCode.started}async start(){if(this.isStarted())return;this.log("starting"),this.publishConfig=await getPublishConfigFromPeerId(this.globalSignaturePolicy,this.components.peerId),this.outboundInflightQueue=pushable({objectMode:!0}),pipe(this.outboundInflightQueue,async a=>{for await(const{peerId:c,connection:l}of a)await this.createOutboundStream(c,l)}).catch(a=>{this.log.error("outbound inflight queue error",a)}),await Promise.all(this.opts.directPeers.map(async a=>{await this.components.peerStore.merge(a.id,{multiaddrs:a.addrs})}));const t=this.components.registrar;await Promise.all(this.multicodecs.map(async a=>t.handle(a,this.onIncomingStream.bind(this),{maxInboundStreams:this.maxInboundStreams,maxOutboundStreams:this.maxOutboundStreams})));const n={onConnect:this.onPeerConnected.bind(this),onDisconnect:this.onPeerDisconnected.bind(this)},i=await Promise.all(this.multicodecs.map(async a=>t.register(a,n))),o=setTimeout(this.runHeartbeat,GossipsubHeartbeatInitialDelay);this.status={code:GossipStatusCode.started,registrarTopologyIds:i,heartbeatTimeout:o,hearbeatStartMs:Date.now()+GossipsubHeartbeatInitialDelay},this.score.start(),this.directPeerInitial=setTimeout(()=>{Promise.resolve().then(async()=>{await Promise.all(Array.from(this.direct).map(async a=>this.connect(a)))}).catch(a=>{this.log(a)})},GossipsubDirectConnectInitialDelay),this.log("started")}async stop(){if(this.log("stopping"),this.status.code!==GossipStatusCode.started)return;const{registrarTopologyIds:t}=this.status;this.status={code:GossipStatusCode.stopped};const n=this.components.registrar;await Promise.all(this.multicodecs.map(async o=>n.unhandle(o))),t.forEach(o=>{n.unregister(o)}),this.outboundInflightQueue.end();const i=[];for(const o of this.streamsOutbound.values())i.push(o.close());this.streamsOutbound.clear();for(const o of this.streamsInbound.values())i.push(o.close());this.streamsInbound.clear(),await Promise.all(i),this.peers.clear(),this.subscriptions.clear(),this.heartbeatTimer!=null&&(this.heartbeatTimer.cancel(),this.heartbeatTimer=null),this.score.stop(),this.mesh.clear(),this.fanout.clear(),this.fanoutLastpub.clear(),this.gossip.clear(),this.control.clear(),this.peerhave.clear(),this.iasked.clear(),this.backoff.clear(),this.outbound.clear(),this.gossipTracer.clear(),this.seenCache.clear(),this.fastMsgIdCache!=null&&this.fastMsgIdCache.clear(),this.directPeerInitial!=null&&clearTimeout(this.directPeerInitial),this.log("stopped")}dumpPeerScoreStats(){return this.score.dumpPeerScoreStats()}onIncomingStream({stream:t,connection:n}){if(!this.isStarted())return;const i=n.remotePeer;this.addPeer(i,n.direction,n.remoteAddr),this.createInboundStream(i,t),this.outboundInflightQueue.push({peerId:i,connection:n})}onPeerConnected(t,n){this.metrics?.newConnectionCount.inc({status:n.status}),!(!this.isStarted()||n.status!=="open")&&(this.addPeer(t,n.direction,n.remoteAddr),this.outboundInflightQueue.push({peerId:t,connection:n}))}onPeerDisconnected(t){this.log("connection ended %p",t),this.removePeer(t)}async createOutboundStream(t,n){if(!this.isStarted())return;const i=t.toString();if(this.peers.has(i)&&!this.streamsOutbound.has(i))try{const o=new OutboundStream(await n.newStream(this.multicodecs),c=>{this.log.error("outbound pipe error",c)},{maxBufferSize:this.opts.maxOutboundBufferSize});this.log("create outbound stream %p",t),this.streamsOutbound.set(i,o);const a=o.protocol;a===FloodsubID&&this.floodsubPeers.add(i),this.metrics?.peersPerProtocol.inc({protocol:a},1),this.subscriptions.size>0&&(this.log("send subscriptions to",i),this.sendSubscriptions(i,Array.from(this.subscriptions),!0))}catch(o){this.log.error("createOutboundStream error",o)}}createInboundStream(t,n){if(!this.isStarted())return;const i=t.toString();if(!this.peers.has(i))return;const o=this.streamsInbound.get(i);o!==void 0&&(this.log("replacing existing inbound steam %s",i),o.close().catch(c=>{this.log.error(c)})),this.log("create inbound stream %s",i);const a=new InboundStream(n,{maxDataLength:this.opts.maxInboundDataLength});this.streamsInbound.set(i,a),this.pipePeerReadStream(t,a.source).catch(c=>{this.log(c)})}addPeer(t,n,i){const o=t.toString();if(!this.peers.has(o)){this.log("new peer %p",t),this.peers.add(o),this.score.addPeer(o);const a=multiaddrToIPStr(i);a!==null?this.score.addIP(o,a):this.log("Added peer has no IP in current address %s %s",o,i.toString()),this.outbound.has(o)||this.outbound.set(o,n==="outbound")}}removePeer(t){const n=t.toString();if(!this.peers.has(n))return;this.log("delete peer %p",t),this.peers.delete(n);const i=this.streamsOutbound.get(n),o=this.streamsInbound.get(n);i!=null&&this.metrics?.peersPerProtocol.inc({protocol:i.protocol},-1),i?.close().catch(a=>{this.log.error(a)}),o?.close().catch(a=>{this.log.error(a)}),this.streamsOutbound.delete(n),this.streamsInbound.delete(n);for(const a of this.topics.values())a.delete(n);for(const[a,c]of this.mesh)c.delete(n)&&this.metrics?.onRemoveFromMesh(a,ChurnReason.Dc,1);for(const a of this.fanout.values())a.delete(n);this.floodsubPeers.delete(n),this.gossip.delete(n),this.control.delete(n),this.outbound.delete(n),this.score.removePeer(n),this.acceptFromWhitelist.delete(n)}get started(){return this.status.code===GossipStatusCode.started}getMeshPeers(t){const n=this.mesh.get(t);return n!=null?Array.from(n):[]}getSubscribers(t){const n=this.topics.get(t);return(n!=null?Array.from(n):[]).map(i=>peerIdFromString$7(i))}getTopics(){return Array.from(this.subscriptions)}async pipePeerReadStream(t,n){try{await pipe(n,async i=>{for await(const o of i)try{const a=o.subarray(),c=decodeRpc(a,this.decodeRpcLimits);if(this.metrics?.onRpcRecv(c,a.length),this.opts.awaitRpcHandler)try{await this.handleReceivedRpc(t,c)}catch(l){this.metrics?.onRpcRecvError(),this.log(l)}else this.handleReceivedRpc(t,c).catch(l=>{this.metrics?.onRpcRecvError(),this.log(l)})}catch(a){this.metrics?.onRpcDataError(),this.log(a)}})}catch(i){this.metrics?.onPeerReadStreamError(),this.handlePeerReadStreamError(i,t)}}handlePeerReadStreamError(t,n){this.log.error(t),this.onPeerDisconnected(n)}async handleReceivedRpc(t,n){if(!this.acceptFrom(t.toString())){this.log("received message from unacceptable peer %p",t),this.metrics?.rpcRecvNotAccepted.inc();return}const i=n.subscriptions!=null?n.subscriptions.length:0,o=n.messages!=null?n.messages.length:0;let a=0,c=0,l=0,u=0;if(n.control!=null&&(n.control.ihave!=null&&(a=n.control.ihave.length),n.control.iwant!=null&&(c=n.control.iwant.length),n.control.graft!=null&&(l=n.control.graft.length),n.control.prune!=null&&(u=n.control.prune.length)),this.log(`rpc.from ${t.toString()} subscriptions ${i} messages ${o} ihave ${a} iwant ${c} graft ${l} prune ${u}`),n.subscriptions!=null&&n.subscriptions.length>0){const f=[];n.subscriptions.forEach(g=>{const $=g.topic,S=g.subscribe===!0;if($!=null){if(this.allowedTopics!=null&&!this.allowedTopics.has($))return;this.handleReceivedSubscription(t,$,S),f.push({topic:$,subscribe:S})}}),this.safeDispatchEvent("subscription-change",{detail:{peerId:t,subscriptions:f}})}if(n.messages!=null)for(const f of n.messages){if(this.allowedTopics!=null&&!this.allowedTopics.has(f.topic))continue;const g=this.handleReceivedMessage(t,f).catch($=>{this.metrics?.onMsgRecvError(f.topic),this.log($)});this.opts.awaitRpcMessageHandler&&await g}n.control!=null&&await this.handleControlMessage(t.toString(),n.control)}handleReceivedSubscription(t,n,i){this.log("subscription update from %p topic %s",t,n);let o=this.topics.get(n);o==null&&(o=new Set,this.topics.set(n,o)),i?o.add(t.toString()):o.delete(t.toString())}async handleReceivedMessage(t,n){this.metrics?.onMsgRecvPreValidation(n.topic);const i=await this.validateReceivedMessage(t,n);this.metrics?.onPrevalidationResult(n.topic,i.code);const o=i.code;switch(o){case MessageStatus.duplicate:this.score.duplicateMessage(t.toString(),i.msgIdStr,n.topic),this.gossipTracer.deliverMessage(i.msgIdStr,!0),this.mcache.observeDuplicate(i.msgIdStr,t.toString());return;case MessageStatus.invalid:if(i.msgIdStr!=null){const a=i.msgIdStr;this.score.rejectMessage(t.toString(),a,n.topic,i.reason),this.gossipTracer.rejectMessage(a,i.reason)}else this.score.rejectInvalidMessage(t.toString(),n.topic);this.metrics?.onMsgRecvInvalid(n.topic,i);return;case MessageStatus.valid:this.score.validateMessage(i.messageId.msgIdStr),this.gossipTracer.deliverMessage(i.messageId.msgIdStr),this.mcache.put(i.messageId,n,!this.opts.asyncValidation),this.subscriptions.has(n.topic)&&(!this.components.peerId.equals(t)||this.opts.emitSelf)&&(super.dispatchEvent(new CustomEvent$2("gossipsub:message",{detail:{propagationSource:t,msgId:i.messageId.msgIdStr,msg:i.msg}})),super.dispatchEvent(new CustomEvent$2("message",{detail:i.msg}))),this.opts.asyncValidation||this.forwardMessage(i.messageId.msgIdStr,n,t.toString());break;default:throw new Error(`Invalid validation result: ${o}`)}}async validateReceivedMessage(t,n){const i=this.fastMsgIdFn?.(n),o=i!==void 0?this.fastMsgIdCache?.get(i):void 0;if(o!=null)return{code:MessageStatus.duplicate,msgIdStr:o};const a=await validateToRawMessage(this.globalSignaturePolicy,n);if(!a.valid)return{code:MessageStatus.invalid,reason:RejectReason.Error,error:a.error};const c=a.message;try{this.dataTransform!=null&&(c.data=this.dataTransform.inboundTransform(n.topic,c.data))}catch($){return this.log("Invalid message, transform failed",$),{code:MessageStatus.invalid,reason:RejectReason.Error,error:ValidateError.TransformFailed}}const l=await this.msgIdFn(c),u=this.msgIdToStrFn(l),f={msgId:l,msgIdStr:u};if(i!==void 0&&this.fastMsgIdCache!=null&&this.fastMsgIdCache.put(i,u)&&this.metrics?.fastMsgIdCacheCollision.inc(),this.seenCache.has(u))return{code:MessageStatus.duplicate,msgIdStr:u};this.seenCache.put(u);const g=this.topicValidators.get(n.topic);if(g!=null){let $;try{$=await g(t,c)}catch(S){const E=S.code;E===ERR_TOPIC_VALIDATOR_IGNORE&&($=TopicValidatorResult$a.Ignore),E===ERR_TOPIC_VALIDATOR_REJECT?$=TopicValidatorResult$a.Reject:$=TopicValidatorResult$a.Ignore}if($!==TopicValidatorResult$a.Accept)return{code:MessageStatus.invalid,reason:rejectReasonFromAcceptance($),msgIdStr:u}}return{code:MessageStatus.valid,messageId:f,msg:c}}getScore(t){return this.score.score(t)}sendSubscriptions(t,n,i){this.sendRpc(t,{subscriptions:n.map(o=>({topic:o,subscribe:i}))})}async handleControlMessage(t,n){if(n===void 0)return;const i=n.ihave!=null?this.handleIHave(t,n.ihave):[],o=n.iwant!=null?this.handleIWant(t,n.iwant):[],a=n.graft!=null?await this.handleGraft(t,n.graft):[];if(n.prune!=null&&await this.handlePrune(t,n.prune),i.length===0&&o.length===0&&a.length===0)return;const c=this.sendRpc(t,{messages:o,control:{iwant:i,prune:a}}),l=i[0]?.messageIDs;l!=null&&(c?this.gossipTracer.addPromise(t,l):this.metrics?.iwantPromiseUntracked.inc(1))}acceptFrom(t){if(this.direct.has(t))return!0;const n=Date.now(),i=this.acceptFromWhitelist.get(t);if(i!=null&&i.messagesAccepted<ACCEPT_FROM_WHITELIST_MAX_MESSAGES&&i.acceptUntil>=n)return i.messagesAccepted+=1,!0;const o=this.score.score(t);return o>=ACCEPT_FROM_WHITELIST_THRESHOLD_SCORE?this.acceptFromWhitelist.set(t,{messagesAccepted:0,acceptUntil:n+ACCEPT_FROM_WHITELIST_DURATION_MS}):this.acceptFromWhitelist.delete(t),o>=this.opts.scoreThresholds.graylistThreshold}handleIHave(t,n){if(n.length===0)return[];const i=this.score.score(t);if(i<this.opts.scoreThresholds.gossipThreshold)return this.log("IHAVE: ignoring peer %s with score below threshold [ score = %d ]",t,i),this.metrics?.ihaveRcvIgnored.inc({reason:IHaveIgnoreReason.LowScore}),[];const o=(this.peerhave.get(t)??0)+1;if(this.peerhave.set(t,o),o>GossipsubMaxIHaveMessages)return this.log("IHAVE: peer %s has advertised too many times (%d) within this heartbeat interval; ignoring",t,o),this.metrics?.ihaveRcvIgnored.inc({reason:IHaveIgnoreReason.MaxIhave}),[];const a=this.iasked.get(t)??0;if(a>=GossipsubMaxIHaveLength)return this.log("IHAVE: peer %s has already advertised too many messages (%d); ignoring",t,a),this.metrics?.ihaveRcvIgnored.inc({reason:IHaveIgnoreReason.MaxIasked}),[];const c=new Map;if(n.forEach(({topicID:f,messageIDs:g})=>{if(f==null||g==null||!this.mesh.has(f))return;let $=0;g.forEach(S=>{const E=this.msgIdToStrFn(S);this.seenCache.has(E)||(c.set(E,S),$++)}),this.metrics?.onIhaveRcv(f,g.length,$)}),c.size===0)return[];let l=c.size;l+a>GossipsubMaxIHaveLength&&(l=GossipsubMaxIHaveLength-a),this.log("IHAVE: Asking for %d out of %d messages from %s",l,c.size,t);let u=Array.from(c.values());return shuffle(u),u=u.slice(0,l),this.iasked.set(t,a+l),[{messageIDs:u}]}handleIWant(t,n){if(n.length===0)return[];const i=this.score.score(t);if(i<this.opts.scoreThresholds.gossipThreshold)return this.log("IWANT: ignoring peer %s with score below threshold [score = %d]",t,i),[];const o=new Map,a=new Map;let c=0;return n.forEach(({messageIDs:l})=>{l?.forEach(u=>{const f=this.msgIdToStrFn(u),g=this.mcache.getWithIWantCount(f,t);if(g==null){c++;return}if(a.set(g.msg.topic,1+(a.get(g.msg.topic)??0)),g.count>GossipsubGossipRetransmission){this.log("IWANT: Peer %s has asked for message %s too many times: ignoring request",t,u);return}o.set(f,g.msg)})}),this.metrics?.onIwantRcv(a,c),o.size===0?(this.log("IWANT: Could not provide any wanted messages to %s",t),[]):(this.log("IWANT: Sending %d messages to %s",o.size,t),Array.from(o.values()))}async handleGraft(t,n){const i=[],o=this.score.score(t),a=Date.now();let c=this.opts.doPX;if(n.forEach(({topicID:u})=>{if(u==null)return;const f=this.mesh.get(u);if(f==null){c=!1;return}if(f.has(t))return;if(this.direct.has(t)){this.log("GRAFT: ignoring request from direct peer %s",t),i.push(u),c=!1;return}const g=this.backoff.get(u)?.get(t);if(typeof g=="number"&&a<g){this.log("GRAFT: ignoring backed off peer %s",t),this.score.addPenalty(t,1,ScorePenalty.GraftBackoff),c=!1;const $=g+this.opts.graftFloodThreshold-this.opts.pruneBackoff;a<$&&this.score.addPenalty(t,1,ScorePenalty.GraftBackoff),this.addBackoff(t,u),i.push(u);return}if(o<0){this.log("GRAFT: ignoring peer %s with negative score: score=%d, topic=%s",t,o,u),i.push(u),c=!1,this.addBackoff(t,u);return}if(f.size>=this.opts.Dhi&&!(this.outbound.get(t)??!1)){i.push(u),this.addBackoff(t,u);return}this.log("GRAFT: Add mesh link from %s in %s",t,u),this.score.graft(t,u),f.add(t),this.metrics?.onAddToMesh(u,InclusionReason.Subscribed,1)}),i.length===0)return[];const l=!1;return Promise.all(i.map(async u=>this.makePrune(t,u,c,l)))}async handlePrune(t,n){const i=this.score.score(t);for(const{topicID:o,backoff:a,peers:c}of n){if(o==null)continue;const l=this.mesh.get(o);if(l==null)return;if(this.log("PRUNE: Remove mesh link to %s in %s",t,o),this.score.prune(t,o),l.has(t)&&(l.delete(t),this.metrics?.onRemoveFromMesh(o,ChurnReason.Prune,1)),typeof a=="number"&&a>0?this.doAddBackoff(t,o,a*1e3):this.addBackoff(t,o),c!=null&&c.length>0){if(i<this.opts.scoreThresholds.acceptPXThreshold){this.log("PRUNE: ignoring PX from peer %s with insufficient score [score = %d, topic = %s]",t,i,o);continue}await this.pxConnect(c)}}}addBackoff(t,n){this.doAddBackoff(t,n,this.opts.pruneBackoff)}doAddBackoff(t,n,i){let o=this.backoff.get(n);o==null&&(o=new Map,this.backoff.set(n,o));const a=Date.now()+i;(o.get(t)??0)<a&&o.set(t,a)}applyIwantPenalties(){this.gossipTracer.getBrokenPromises().forEach((t,n)=>{this.log("peer %s didn't follow up in %d IWANT requests; adding penalty",n,t),this.score.addPenalty(n,t,ScorePenalty.BrokenPromise)})}clearBackoff(){if(this.heartbeatTicks%GossipsubPruneBackoffTicks!==0)return;const t=Date.now();this.backoff.forEach((n,i)=>{n.forEach((o,a)=>{o+BACKOFF_SLACK*this.opts.heartbeatInterval<t&&n.delete(a)}),n.size===0&&this.backoff.delete(i)})}async directConnect(){const t=[];this.direct.forEach(n=>{this.streamsOutbound.has(n)||t.push(n)}),await Promise.all(t.map(async n=>this.connect(n)))}async pxConnect(t){t.length>this.opts.prunePeers&&(shuffle(t),t=t.slice(0,this.opts.prunePeers));const n=[];await Promise.all(t.map(async i=>{if(i.peerID==null)return;const o=peerIdFromBytes$7(i.peerID),a=o.toString();if(!this.peers.has(a)){if(i.signedPeerRecord==null){n.push(a);return}try{if(!await this.components.peerStore.consumePeerRecord(i.signedPeerRecord,o)){this.log("bogus peer record obtained through px: could not add peer record to address book");return}n.push(a)}catch{this.log("bogus peer record obtained through px: invalid signature or not a peer record")}}})),n.length!==0&&await Promise.all(n.map(async i=>this.connect(i)))}async connect(t){this.log("Initiating connection with %s",t);const n=peerIdFromString$7(t),i=await this.components.connectionManager.openConnection(n);for(const o of this.multicodecs)for(const a of this.components.registrar.getTopologies(o))a.onConnect?.(n,i)}subscribe(t){if(this.status.code!==GossipStatusCode.started)throw new Error("Pubsub has not started");if(!this.subscriptions.has(t)){this.subscriptions.add(t);for(const n of this.peers.keys())this.sendSubscriptions(n,[t],!0)}this.join(t)}unsubscribe(t){if(this.status.code!==GossipStatusCode.started)throw new Error("Pubsub is not started");const n=this.subscriptions.delete(t);if(this.log("unsubscribe from %s - am subscribed %s",t,n),n)for(const i of this.peers.keys())this.sendSubscriptions(i,[t],!1);this.leave(t)}join(t){if(this.status.code!==GossipStatusCode.started)throw new Error("Gossipsub has not started");if(this.mesh.has(t))return;this.log("JOIN %s",t),this.metrics?.onJoin(t);const n=new Set,i=this.backoff.get(t),o=this.fanout.get(t);if(o!=null&&(this.fanout.delete(t),this.fanoutLastpub.delete(t),o.forEach(a=>{!this.direct.has(a)&&this.score.score(a)>=0&&(i==null||!i.has(a))&&n.add(a)}),this.metrics?.onAddToMesh(t,InclusionReason.Fanout,n.size)),n.size<this.opts.D){const a=n.size;this.getRandomGossipPeers(t,this.opts.D,l=>!n.has(l)&&!this.direct.has(l)&&this.score.score(l)>=0&&(i==null||!i.has(l))).forEach(l=>{n.add(l)}),this.metrics?.onAddToMesh(t,InclusionReason.Random,n.size-a)}this.mesh.set(t,n),n.forEach(a=>{this.log("JOIN: Add mesh link to %s in %s",a,t),this.sendGraft(a,t)})}leave(t){if(this.status.code!==GossipStatusCode.started)throw new Error("Gossipsub has not started");this.log("LEAVE %s",t),this.metrics?.onLeave(t);const n=this.mesh.get(t);n!=null&&(Promise.all(Array.from(n).map(async i=>{this.log("LEAVE: Remove mesh link to %s in %s",i,t),await this.sendPrune(i,t)})).catch(i=>{this.log("Error sending prunes to mesh peers",i)}),this.mesh.delete(t))}selectPeersToForward(t,n,i){const o=new Set,a=this.topics.get(t);a!=null&&(this.direct.forEach(l=>{a.has(l)&&n!==l&&!(i?.has(l)??!1)&&o.add(l)}),this.floodsubPeers.forEach(l=>{a.has(l)&&n!==l&&!(i?.has(l)??!1)&&this.score.score(l)>=this.opts.scoreThresholds.publishThreshold&&o.add(l)}));const c=this.mesh.get(t);return c!=null&&c.size>0&&c.forEach(l=>{n!==l&&!(i?.has(l)??!1)&&o.add(l)}),o}selectPeersToPublish(t){const n=new Set,i={direct:0,floodsub:0,mesh:0,fanout:0},o=this.topics.get(t);if(o!=null)if(this.opts.floodPublish)o.forEach(a=>{this.direct.has(a)?(n.add(a),i.direct++):this.score.score(a)>=this.opts.scoreThresholds.publishThreshold&&(n.add(a),i.floodsub++)});else{this.direct.forEach(c=>{o.has(c)&&(n.add(c),i.direct++)}),this.floodsubPeers.forEach(c=>{o.has(c)&&this.score.score(c)>=this.opts.scoreThresholds.publishThreshold&&(n.add(c),i.floodsub++)});const a=this.mesh.get(t);if(a!=null&&a.size>0)a.forEach(c=>{n.add(c),i.mesh++});else{const c=this.fanout.get(t);if(c!=null&&c.size>0)c.forEach(l=>{n.add(l),i.fanout++});else{const l=this.getRandomGossipPeers(t,this.opts.D,u=>this.score.score(u)>=this.opts.scoreThresholds.publishThreshold);l.size>0&&(this.fanout.set(t,l),l.forEach(u=>{n.add(u),i.fanout++}))}this.fanoutLastpub.set(t,Date.now())}}return{tosend:n,tosendCount:i}}forwardMessage(t,n,i,o){i!=null&&this.score.deliverMessage(i,t,n.topic);const a=this.selectPeersToForward(n.topic,i,o);a.forEach(c=>{this.sendRpc(c,{messages:[n]})}),this.metrics?.onForwardMsg(n.topic,a.size)}async publish(t,n,i){const o=Date.now(),a=this.dataTransform!=null?this.dataTransform.outboundTransform(t,n):n;if(this.publishConfig==null)throw Error("PublishError.Uninitialized");const{raw:c,msg:l}=await buildRawMessage(this.publishConfig,t,n,a),u=await this.msgIdFn(l),f=this.msgIdToStrFn(u),g=i?.ignoreDuplicatePublishError??this.opts.ignoreDuplicatePublishError;if(this.seenCache.has(f)){if(g)return this.metrics?.onPublishDuplicateMsg(t),{recipients:[]};throw Error("PublishError.Duplicate")}const{tosend:$,tosendCount:S}=this.selectPeersToPublish(t),E=this.opts.emitSelf&&this.subscriptions.has(t),v=i?.allowPublishToZeroPeers??this.opts.allowPublishToZeroPeers;if($.size===0&&!v&&!E)throw Error("PublishError.InsufficientPeers");this.seenCache.put(f),this.mcache.put({msgId:u,msgIdStr:f},c,!0),this.publishedMessageIds.put(f);for(const I of $)this.sendRpc(I,{messages:[c]})||$.delete(I);const T=Date.now()-o;return this.metrics?.onPublishMsg(t,S,$.size,c.data!=null?c.data.length:0,T),E&&($.add(this.components.peerId.toString()),super.dispatchEvent(new CustomEvent$2("gossipsub:message",{detail:{propagationSource:this.components.peerId,msgId:f,msg:l}})),super.dispatchEvent(new CustomEvent$2("message",{detail:l}))),{recipients:Array.from($.values()).map(I=>peerIdFromString$7(I))}}reportMessageValidationResult(t,n,i){let o;if(i===TopicValidatorResult$a.Accept){if(o=this.mcache.validate(t),o!=null){const{message:c,originatingPeers:l}=o;this.score.deliverMessage(n,t,c.topic),this.forwardMessage(t,o.message,n,l)}}else if(o=this.mcache.remove(t),o!=null){const c=rejectReasonFromAcceptance(i),{message:l,originatingPeers:u}=o;this.score.rejectMessage(n,t,l.topic,c);for(const f of u)this.score.rejectMessage(f,t,l.topic,c)}const a=this.score.messageFirstSeenTimestampMs(t);this.metrics?.onReportValidation(o,i,a)}sendGraft(t,n){const i=[{topicID:n}];this.sendRpc(t,{control:{graft:i}})}async sendPrune(t,n){const o=[await this.makePrune(t,n,this.opts.doPX,!0)];this.sendRpc(t,{control:{prune:o}})}sendRpc(t,n){const i=this.streamsOutbound.get(t);if(i==null)return this.log(`Cannot send RPC to ${t} as there is no open stream to it available`),!1;const o=this.control.get(t);o!=null&&(this.piggybackControl(t,n,o),this.control.delete(t));const a=this.gossip.get(t);a!=null&&(this.piggybackGossip(t,n,a),this.gossip.delete(t));const c=RPC$1.encode(n).finish();try{i.push(c)}catch(l){return this.log.error(`Cannot send rpc to ${t}`,l),o!=null&&this.control.set(t,o),a!=null&&this.gossip.set(t,a),!1}return this.metrics?.onRpcSent(n,c.length),!0}piggybackControl(t,n,i){if(i.graft!=null){n.control==null&&(n.control={}),n.control.graft==null&&(n.control.graft=[]);for(const o of i.graft)o.topicID!=null&&(this.mesh.get(o.topicID)?.has(t)??!1)&&n.control.graft.push(o)}if(i.prune!=null){n.control==null&&(n.control={}),n.control.prune==null&&(n.control.prune=[]);for(const o of i.prune)o.topicID!=null&&!(this.mesh.get(o.topicID)?.has(t)??!1)&&n.control.prune.push(o)}}piggybackGossip(t,n,i){n.control==null&&(n.control={}),n.control.ihave=i}async sendGraftPrune(t,n,i){const o=this.opts.doPX,a=!1;for(const[c,l]of t){const u=l.map($=>({topicID:$}));let f=[];const g=n.get(c);g!=null&&(f=await Promise.all(g.map(async $=>this.makePrune(c,$,o&&!(i.get(c)??!1),a))),n.delete(c)),this.sendRpc(c,{control:{graft:u,prune:f}})}for(const[c,l]of n){const u=await Promise.all(l.map(async f=>this.makePrune(c,f,o&&!(i.get(c)??!1),a)));this.sendRpc(c,{control:{prune:u}})}}emitGossip(t){const n=this.mcache.getGossipIDs(new Set(t.keys()));for(const[i,o]of t)this.doEmitGossip(i,o,n.get(i)??[])}doEmitGossip(t,n,i){if(i.length===0||(shuffle(i),i.length>GossipsubMaxIHaveLength&&this.log("too many messages for gossip; will truncate IHAVE list (%d messages)",i.length),n.size===0))return;let o=this.opts.Dlazy;const a=GossipsubGossipFactor*n.size;let c=n;a>o&&(o=a),o>c.size?o=c.size:c=shuffle(Array.from(c)).slice(0,o),c.forEach(l=>{let u=i;i.length>GossipsubMaxIHaveLength&&(u=shuffle(u.slice()).slice(0,GossipsubMaxIHaveLength)),this.pushGossip(l,{topicID:t,messageIDs:u})})}flush(){for(const[t,n]of this.gossip.entries())this.gossip.delete(t),this.sendRpc(t,{control:{ihave:n}});for(const[t,n]of this.control.entries())this.control.delete(t),this.sendRpc(t,{control:{graft:n.graft,prune:n.prune}})}pushGossip(t,n){this.log("Add gossip to %s",t);const i=this.gossip.get(t)??[];this.gossip.set(t,i.concat(n))}async makePrune(t,n,i,o){if(this.score.prune(t,n),this.streamsOutbound.get(t)?.protocol===GossipsubIDv10)return{topicID:n,peers:[]};const a=o?this.opts.unsubcribeBackoff:this.opts.pruneBackoff,c=a/1e3;if(this.doAddBackoff(t,n,a),!i)return{topicID:n,peers:[],backoff:c};const l=this.getRandomGossipPeers(n,this.opts.prunePeers,f=>f!==t&&this.score.score(f)>=0),u=await Promise.all(Array.from(l).map(async f=>{const g=peerIdFromString$7(f);let $;try{$=await this.components.peerStore.get(g)}catch(S){if(S.code!=="ERR_NOT_FOUND")throw S}return{peerID:g.toBytes(),signedPeerRecord:$?.peerRecordEnvelope}}));return{topicID:n,peers:u,backoff:c}}async heartbeat(){const{D:t,Dlo:n,Dhi:i,Dscore:o,Dout:a,fanoutTTL:c}=this.opts;this.heartbeatTicks++;const l=new Map,u=v=>{let T=l.get(v);return T===void 0&&(T=this.score.score(v),l.set(v,T)),T},f=new Map,g=new Map,$=new Map;this.clearBackoff(),this.peerhave.clear(),this.metrics?.cacheSize.set({cache:"iasked"},this.iasked.size),this.iasked.clear(),this.applyIwantPenalties(),this.heartbeatTicks%this.opts.directConnectTicks===0&&await this.directConnect(),this.fastMsgIdCache?.prune(),this.seenCache.prune(),this.gossipTracer.prune(),this.publishedMessageIds.prune();const S=new Map;this.mesh.forEach((v,T)=>{const I=this.topics.get(T),A=new Set,P=new Set;if(S.set(T,P),I!=null){const C=shuffle(Array.from(I)),k=this.backoff.get(T);for(const N of C){const L=this.streamsOutbound.get(N);if(L!=null&&this.multicodecs.includes(L.protocol)&&!v.has(N)&&!this.direct.has(N)){const M=u(N);(k==null||!k.has(N))&&M>=0&&A.add(N),M>=this.opts.scoreThresholds.gossipThreshold&&P.add(N)}}}const x=(C,k)=>{this.log("HEARTBEAT: Remove mesh link to %s in %s",C,T),this.addBackoff(C,T),v.delete(C),u(C)>=this.opts.scoreThresholds.gossipThreshold&&P.add(C),this.metrics?.onRemoveFromMesh(T,k,1);const N=g.get(C);N==null?g.set(C,[T]):N.push(T)},D=(C,k)=>{this.log("HEARTBEAT: Add mesh link to %s in %s",C,T),this.score.graft(C,T),v.add(C),P.delete(C),this.metrics?.onAddToMesh(T,k,1);const N=f.get(C);N==null?f.set(C,[T]):N.push(T)};if(v.forEach(C=>{const k=u(C);k<0&&(this.log("HEARTBEAT: Prune peer %s with negative score: score=%d, topic=%s",C,k,T),x(C,ChurnReason.BadScore),$.set(C,!0))}),v.size<n){const C=t-v.size;removeFirstNItemsFromSet(A,C).forEach(N=>{D(N,InclusionReason.NotEnough)})}if(v.size>i){let C=Array.from(v);C.sort((N,L)=>u(L)-u(N)),C=C.slice(0,o).concat(shuffle(C.slice(o)));let k=0;if(C.slice(0,t).forEach(N=>{(this.outbound.get(N)??!1)&&k++}),k<a){const N=M=>{const U=C[M];for(let z=M;z>0;z--)C[z]=C[z-1];C[0]=U};if(k>0){let M=k;for(let U=1;U<t&&M>0;U++)(this.outbound.get(C[U])??!1)&&(N(U),M--)}let L=t-k;for(let M=t;M<C.length&&L>0;M++)(this.outbound.get(C[M])??!1)&&(N(M),L--)}C.slice(t).forEach(N=>{x(N,ChurnReason.Excess)})}if(v.size>=n){let C=0;if(v.forEach(k=>{(this.outbound.get(k)??!1)&&C++}),C<a){const k=a-C;removeItemsFromSet(A,k,L=>this.outbound.get(L)===!0).forEach(L=>{D(L,InclusionReason.Outbound)})}}if(this.heartbeatTicks%this.opts.opportunisticGraftTicks===0&&v.size>1){const C=Array.from(v).sort((L,M)=>u(L)-u(M)),k=Math.floor(v.size/2),N=u(C[k]);if(N<this.opts.scoreThresholds.opportunisticGraftThreshold){const L=this.opts.opportunisticGraftPeers,M=removeItemsFromSet(A,L,U=>u(U)>N);for(const U of M)this.log("HEARTBEAT: Opportunistically graft peer %s on topic %s",U,T),D(U,InclusionReason.Opportunistic)}}});const E=Date.now();this.fanoutLastpub.forEach((v,T)=>{v+c<E&&(this.fanout.delete(T),this.fanoutLastpub.delete(T))}),this.fanout.forEach((v,T)=>{const I=this.topics.get(T);v.forEach(D=>{(!(I?.has(D)??!1)||u(D)<this.opts.scoreThresholds.publishThreshold)&&v.delete(D)});const A=this.topics.get(T),P=[],x=new Set;if(S.set(T,x),A!=null){const D=shuffle(Array.from(A));for(const C of D){const k=this.streamsOutbound.get(C);if(k!=null&&this.multicodecs.includes(k.protocol)&&!v.has(C)&&!this.direct.has(C)){const N=u(C);N>=this.opts.scoreThresholds.publishThreshold&&P.push(C),N>=this.opts.scoreThresholds.gossipThreshold&&x.add(C)}}}if(v.size<t){const D=t-v.size;P.slice(0,D).forEach(C=>{v.add(C),x?.delete(C)})}}),this.emitGossip(S),await this.sendGraftPrune(f,g,$),this.flush(),this.mcache.shift(),this.dispatchEvent(new CustomEvent$2("gossipsub:heartbeat"))}getRandomGossipPeers(t,n,i=()=>!0){const o=this.topics.get(t);if(o==null)return new Set;let a=[];return o.forEach(c=>{const l=this.streamsOutbound.get(c);l!=null&&this.multicodecs.includes(l.protocol)&&i(c)&&a.push(c)}),a=shuffle(a),n>0&&a.length>n&&(a=a.slice(0,n)),new Set(a)}onScrapeMetrics(t){t.mcacheSize.set(this.mcache.size),t.mcacheNotValidatedCount.set(this.mcache.notValidatedCount),t.cacheSize.set({cache:"direct"},this.direct.size),t.cacheSize.set({cache:"seenCache"},this.seenCache.size),t.cacheSize.set({cache:"fastMsgIdCache"},this.fastMsgIdCache?.size??0),t.cacheSize.set({cache:"publishedMessageIds"},this.publishedMessageIds.size),t.cacheSize.set({cache:"mcache"},this.mcache.size),t.cacheSize.set({cache:"score"},this.score.size),t.cacheSize.set({cache:"gossipTracer.promises"},this.gossipTracer.size),t.cacheSize.set({cache:"gossipTracer.requests"},this.gossipTracer.requestMsByMsgSize),t.cacheSize.set({cache:"topics"},this.topics.size),t.cacheSize.set({cache:"subscriptions"},this.subscriptions.size),t.cacheSize.set({cache:"mesh"},this.mesh.size),t.cacheSize.set({cache:"fanout"},this.fanout.size),t.cacheSize.set({cache:"peers"},this.peers.size),t.cacheSize.set({cache:"streamsOutbound"},this.streamsOutbound.size),t.cacheSize.set({cache:"streamsInbound"},this.streamsInbound.size),t.cacheSize.set({cache:"acceptFromWhitelist"},this.acceptFromWhitelist.size),t.cacheSize.set({cache:"gossip"},this.gossip.size),t.cacheSize.set({cache:"control"},this.control.size),t.cacheSize.set({cache:"peerhave"},this.peerhave.size),t.cacheSize.set({cache:"outbound"},this.outbound.size);let n=0;const i=Date.now();t.connectedPeersBackoffSec.reset();for(const l of this.backoff.values()){n+=l.size;for(const[u,f]of l.entries())this.peers.has(u)&&t.connectedPeersBackoffSec.observe(Math.max(0,f-i)/1e3)}t.cacheSize.set({cache:"backoff"},n);for(const[l,u]of this.topics)t.topicPeersCount.set({topicStr:l},u.size);for(const[l,u]of this.mesh)t.meshPeerCounts.set({topicStr:l},u.size);const o=[],a=new Map;t.behaviourPenalty.reset();for(const l of this.peers.keys()){const u=this.score.score(l);o.push(u),a.set(l,u),t.behaviourPenalty.observe(this.score.peerStats.get(l)?.behaviourPenalty??0)}t.registerScores(o,this.opts.scoreThresholds),t.registerScorePerMesh(this.mesh,a);const c=computeAllPeersScoreWeights(this.peers.keys(),this.score.peerStats,this.score.params,this.score.peerIPs,t.topicStrToLabel);t.registerScoreWeights(c)}}_(GossipSub,"multicodec",GossipsubIDv11);function gossipsub(r={}){return e=>new GossipSub(e,r)}let CodeError$c=class extends Error{constructor(t,n){super(t);_(this,"code");this.code=n}},AbortError$9=class extends CodeError$c{constructor(t){super(t,"ABORT_ERR");_(this,"type");this.type="aborted"}};function byteStream(r){const e=pushable$1();r.sink(e).catch(o=>{e.end(o)}),r.sink=async o=>{for await(const a of o)e.push(a);e.end()};let t=r.source;r.source[Symbol.iterator]!=null?t=r.source[Symbol.iterator]():r.source[Symbol.asyncIterator]!=null&&(t=r.source[Symbol.asyncIterator]());const n=new Uint8ArrayList;return{read:async(o,a)=>{a?.signal?.throwIfAborted();let c;const l=new Promise((u,f)=>{c=()=>{f(new AbortError$9("Read aborted"))},a?.signal?.addEventListener("abort",c)});try{if(o==null){const{done:f,value:g}=await Promise.race([t.next(),l]);return f===!0?new Uint8ArrayList:g}for(;n.byteLength<o;){const{value:f,done:g}=await Promise.race([t.next(),l]);if(g===!0)throw new CodeError$c("unexpected end of input","ERR_UNEXPECTED_EOF");n.append(f)}const u=n.sublist(0,o);return n.consume(o),u}finally{c!=null&&a?.signal?.removeEventListener("abort",c)}},write:async(o,a)=>{a?.signal?.throwIfAborted(),o instanceof Uint8Array?e.push(o):e.push(o.subarray()),await e.onEmpty(a)},unwrap:()=>{const o=r.source;return r.source=async function*(){yield*n,yield*o}(),r}}}let CodeError$b=class extends Error{constructor(t,n){super(t);_(this,"code");this.code=n}};const defaultLengthDecoder$1=r=>decode$b(r);defaultLengthDecoder$1.bytes=0;function lpStream$1(r,e={}){const t=byteStream(r);return e.maxDataLength!=null&&e.maxLengthLength==null&&(e.maxLengthLength=encodingLength$1(e.maxDataLength)),{read:async i=>{let o=-1;const a=new Uint8ArrayList,c=e?.lengthDecoder??defaultLengthDecoder$1;for(;;){a.append(await t.read(1,i));try{o=c(a)}catch(l){if(l instanceof RangeError)continue;throw l}if(e?.maxLengthLength!=null&&a.byteLength>e.maxLengthLength)throw new CodeError$b("message length length too long","ERR_MSG_LENGTH_TOO_LONG");if(o>-1)break}if(e?.maxDataLength!=null&&o>e.maxDataLength)throw new CodeError$b("message length too long","ERR_MSG_DATA_TOO_LONG");return t.read(o,i)},write:async(i,o)=>{await t.write(encode$d.single(i,e),o)},writeV:async(i,o)=>{const a=new Uint8ArrayList(...i.map(c=>encode$d.single(c,e)));await t.write(a,o)},unwrap:()=>t.unwrap()}}function pair(){const r=pDefer();let e=!1;return{sink:async t=>{if(e)throw new Error("already piped");e=!0,r.resolve(t)},source:async function*(){yield*await r.promise}()}}function duplexPair(){const r=pair(),e=pair();return[{source:r.source,sink:e.sink},{source:e.source,sink:r.sink}]}const NOISE_MSG_MAX_LENGTH_BYTES$3=65535,NOISE_MSG_MAX_LENGTH_BYTES_WITHOUT_TAG$3=NOISE_MSG_MAX_LENGTH_BYTES$3-16,DUMP_SESSION_KEYS$3=!!globalThis.process?.env?.DUMP_SESSION_KEYS;/*! noble-ciphers - MIT License (c) 2023 Paul Miller (paulmillr.com) */const u8a=r=>r instanceof Uint8Array,u32=r=>new Uint32Array(r.buffer,r.byteOffset,Math.floor(r.byteLength/4)),createView=r=>new DataView(r.buffer,r.byteOffset,r.byteLength),isLE=new Uint8Array(new Uint32Array([287454020]).buffer)[0]===68;if(!isLE)throw new Error("Non little-endian hardware is not supported");function utf8ToBytes$1(r){if(typeof r!="string")throw new Error(`utf8ToBytes expected string, got ${typeof r}`);return new Uint8Array(new TextEncoder().encode(r))}function toBytes$1(r){if(typeof r=="string")r=utf8ToBytes$1(r);else if(u8a(r))r=r.slice();else throw new Error(`expected Uint8Array, got ${typeof r}`);return r}const isPlainObject=r=>Object.prototype.toString.call(r)==="[object Object]"&&r.constructor===Object;function checkOpts(r,e){if(e!==void 0&&(typeof e!="object"||!isPlainObject(e)))throw new Error("options must be object or undefined");return Object.assign(r,e)}function ensureBytes(r,e){if(!(r instanceof Uint8Array))throw new Error("Uint8Array expected");if(typeof e=="number"&&r.length!==e)throw new Error(`Uint8Array length ${e} expected`)}function equalBytes(r,e){if(r.length!==e.length)throw new Error("equalBytes: Different size of Uint8Arrays");let t=!0;for(let n=0;n<r.length;n++)t&&(t=r[n]===e[n]);return t}const wrapCipher=(r,e)=>(Object.assign(e,r),e);function setBigUint64(r,e,t,n){if(typeof r.setBigUint64=="function")return r.setBigUint64(e,t,n);const i=BigInt(32),o=BigInt(4294967295),a=Number(t>>i&o),c=Number(t&o),l=n?4:0,u=n?0:4;r.setUint32(e+l,a,n),r.setUint32(e+u,c,n)}function number(r){if(!Number.isSafeInteger(r)||r<0)throw new Error(`Wrong positive integer: ${r}`)}function bool(r){if(typeof r!="boolean")throw new Error(`Expected boolean, not ${r}`)}function bytes(r,...e){if(!(r instanceof Uint8Array))throw new Error("Expected Uint8Array");if(e.length>0&&!e.includes(r.length))throw new Error(`Expected Uint8Array of length ${e}, not of length=${r.length}`)}function exists$1(r,e=!0){if(r.destroyed)throw new Error("Hash instance has been destroyed");if(e&&r.finished)throw new Error("Hash#digest() has already been called")}function output(r,e){bytes(r);const t=e.outputLen;if(r.length<t)throw new Error(`digestInto() expects output buffer of length at least ${t}`)}const u8to16=(r,e)=>r[e++]&255|(r[e++]&255)<<8;class Poly1305{constructor(e){this.blockLen=16,this.outputLen=16,this.buffer=new Uint8Array(16),this.r=new Uint16Array(10),this.h=new Uint16Array(10),this.pad=new Uint16Array(8),this.pos=0,this.finished=!1,e=toBytes$1(e),ensureBytes(e,32);const t=u8to16(e,0),n=u8to16(e,2),i=u8to16(e,4),o=u8to16(e,6),a=u8to16(e,8),c=u8to16(e,10),l=u8to16(e,12),u=u8to16(e,14);this.r[0]=t&8191,this.r[1]=(t>>>13|n<<3)&8191,this.r[2]=(n>>>10|i<<6)&7939,this.r[3]=(i>>>7|o<<9)&8191,this.r[4]=(o>>>4|a<<12)&255,this.r[5]=a>>>1&8190,this.r[6]=(a>>>14|c<<2)&8191,this.r[7]=(c>>>11|l<<5)&8065,this.r[8]=(l>>>8|u<<8)&8191,this.r[9]=u>>>5&127;for(let f=0;f<8;f++)this.pad[f]=u8to16(e,16+2*f)}process(e,t,n=!1){const i=n?0:2048,{h:o,r:a}=this,c=a[0],l=a[1],u=a[2],f=a[3],g=a[4],$=a[5],S=a[6],E=a[7],v=a[8],T=a[9],I=u8to16(e,t+0),A=u8to16(e,t+2),P=u8to16(e,t+4),x=u8to16(e,t+6),D=u8to16(e,t+8),C=u8to16(e,t+10),k=u8to16(e,t+12),N=u8to16(e,t+14);let L=o[0]+(I&8191),M=o[1]+((I>>>13|A<<3)&8191),U=o[2]+((A>>>10|P<<6)&8191),z=o[3]+((P>>>7|x<<9)&8191),Y=o[4]+((x>>>4|D<<12)&8191),j=o[5]+(D>>>1&8191),B=o[6]+((D>>>14|C<<2)&8191),H=o[7]+((C>>>11|k<<5)&8191),G=o[8]+((k>>>8|N<<8)&8191),q=o[9]+(N>>>5|i),O=0,Q=O+L*c+M*(5*T)+U*(5*v)+z*(5*E)+Y*(5*S);O=Q>>>13,Q&=8191,Q+=j*(5*$)+B*(5*g)+H*(5*f)+G*(5*u)+q*(5*l),O+=Q>>>13,Q&=8191;let W=O+L*l+M*c+U*(5*T)+z*(5*v)+Y*(5*E);O=W>>>13,W&=8191,W+=j*(5*S)+B*(5*$)+H*(5*g)+G*(5*f)+q*(5*u),O+=W>>>13,W&=8191;let X=O+L*u+M*l+U*c+z*(5*T)+Y*(5*v);O=X>>>13,X&=8191,X+=j*(5*E)+B*(5*S)+H*(5*$)+G*(5*g)+q*(5*f),O+=X>>>13,X&=8191;let Z=O+L*f+M*u+U*l+z*c+Y*(5*T);O=Z>>>13,Z&=8191,Z+=j*(5*v)+B*(5*E)+H*(5*S)+G*(5*$)+q*(5*g),O+=Z>>>13,Z&=8191;let J=O+L*g+M*f+U*u+z*l+Y*c;O=J>>>13,J&=8191,J+=j*(5*T)+B*(5*v)+H*(5*E)+G*(5*S)+q*(5*$),O+=J>>>13,J&=8191;let re=O+L*$+M*g+U*f+z*u+Y*l;O=re>>>13,re&=8191,re+=j*c+B*(5*T)+H*(5*v)+G*(5*E)+q*(5*S),O+=re>>>13,re&=8191;let ee=O+L*S+M*$+U*g+z*f+Y*u;O=ee>>>13,ee&=8191,ee+=j*l+B*c+H*(5*T)+G*(5*v)+q*(5*E),O+=ee>>>13,ee&=8191;let te=O+L*E+M*S+U*$+z*g+Y*f;O=te>>>13,te&=8191,te+=j*u+B*l+H*c+G*(5*T)+q*(5*v),O+=te>>>13,te&=8191;let ae=O+L*v+M*E+U*S+z*$+Y*g;O=ae>>>13,ae&=8191,ae+=j*f+B*u+H*l+G*c+q*(5*T),O+=ae>>>13,ae&=8191;let oe=O+L*T+M*v+U*E+z*S+Y*$;O=oe>>>13,oe&=8191,oe+=j*g+B*f+H*u+G*l+q*c,O+=oe>>>13,oe&=8191,O=(O<<2)+O|0,O=O+Q|0,Q=O&8191,O=O>>>13,W+=O,o[0]=Q,o[1]=W,o[2]=X,o[3]=Z,o[4]=J,o[5]=re,o[6]=ee,o[7]=te,o[8]=ae,o[9]=oe}finalize(){const{h:e,pad:t}=this,n=new Uint16Array(10);let i=e[1]>>>13;e[1]&=8191;for(let c=2;c<10;c++)e[c]+=i,i=e[c]>>>13,e[c]&=8191;e[0]+=i*5,i=e[0]>>>13,e[0]&=8191,e[1]+=i,i=e[1]>>>13,e[1]&=8191,e[2]+=i,n[0]=e[0]+5,i=n[0]>>>13,n[0]&=8191;for(let c=1;c<10;c++)n[c]=e[c]+i,i=n[c]>>>13,n[c]&=8191;n[9]-=8192;let o=(i^1)-1;for(let c=0;c<10;c++)n[c]&=o;o=~o;for(let c=0;c<10;c++)e[c]=e[c]&o|n[c];e[0]=(e[0]|e[1]<<13)&65535,e[1]=(e[1]>>>3|e[2]<<10)&65535,e[2]=(e[2]>>>6|e[3]<<7)&65535,e[3]=(e[3]>>>9|e[4]<<4)&65535,e[4]=(e[4]>>>12|e[5]<<1|e[6]<<14)&65535,e[5]=(e[6]>>>2|e[7]<<11)&65535,e[6]=(e[7]>>>5|e[8]<<8)&65535,e[7]=(e[8]>>>8|e[9]<<5)&65535;let a=e[0]+t[0];e[0]=a&65535;for(let c=1;c<8;c++)a=(e[c]+t[c]|0)+(a>>>16)|0,e[c]=a&65535}update(e){exists$1(this);const{buffer:t,blockLen:n}=this;e=toBytes$1(e);const i=e.length;for(let o=0;o<i;){const a=Math.min(n-this.pos,i-o);if(a===n){for(;n<=i-o;o+=n)this.process(e,o);continue}t.set(e.subarray(o,o+a),this.pos),this.pos+=a,o+=a,this.pos===n&&(this.process(t,0,!1),this.pos=0)}return this}destroy(){this.h.fill(0),this.r.fill(0),this.buffer.fill(0),this.pad.fill(0)}digestInto(e){exists$1(this),output(e,this),this.finished=!0;const{buffer:t,h:n}=this;let{pos:i}=this;if(i){for(t[i++]=1;i<16;i++)t[i]=0;this.process(t,0,!0)}this.finalize();let o=0;for(let a=0;a<8;a++)e[o++]=n[a]>>>0,e[o++]=n[a]>>>8;return e}digest(){const{buffer:e,outputLen:t}=this;this.digestInto(e);const n=e.slice(0,t);return this.destroy(),n}}function wrapConstructorWithKey(r){const e=(n,i)=>r(i).update(toBytes$1(n)).digest(),t=r(new Uint8Array(32));return e.outputLen=t.outputLen,e.blockLen=t.blockLen,e.create=n=>r(n),e}const poly1305=wrapConstructorWithKey(r=>new Poly1305(r)),sigma16=utf8ToBytes$1("expand 16-byte k"),sigma32=utf8ToBytes$1("expand 32-byte k"),sigma16_32=u32(sigma16),sigma32_32=u32(sigma32);function rotl(r,e){return r<<e|r>>>32-e}function isAligned32(r){return r.byteOffset%4===0}const BLOCK_LEN=64,BLOCK_LEN32=16,MAX_COUNTER=2**32-1,U32_EMPTY=new Uint32Array;function runCipher(r,e,t,n,i,o,a,c){const l=i.length,u=new Uint8Array(BLOCK_LEN),f=u32(u),g=isAligned32(i)&&isAligned32(o),$=g?u32(i):U32_EMPTY,S=g?u32(o):U32_EMPTY;for(let E=0;E<l;a++){if(r(e,t,n,f,a,c),a>=MAX_COUNTER)throw new Error("arx: counter overflow");const v=Math.min(BLOCK_LEN,l-E);if(g&&v===BLOCK_LEN){const T=E/4;if(E%4!==0)throw new Error("arx: invalid block position");for(let I=0,A;I<BLOCK_LEN32;I++)A=T+I,S[A]=$[A]^f[I];E+=BLOCK_LEN;continue}for(let T=0,I;T<v;T++)I=E+T,o[I]=i[I]^u[T];E+=v}}function createCipher(r,e){const{allowShortKeys:t,extendNonceFn:n,counterLength:i,counterRight:o,rounds:a}=checkOpts({allowShortKeys:!1,counterLength:8,counterRight:!1,rounds:20},e);if(typeof r!="function")throw new Error("core must be a function");return number(i),number(a),bool(o),bool(t),(c,l,u,f,g=0)=>{bytes(c),bytes(l),bytes(u);const $=u.length;if(f||(f=new Uint8Array($)),bytes(f),number(g),g<0||g>=MAX_COUNTER)throw new Error("arx: counter overflow");if(f.length<$)throw new Error(`arx: output (${f.length}) is shorter than data (${$})`);const S=[];let E=c.length,v,T;if(E===32)v=c.slice(),S.push(v),T=sigma32_32;else if(E===16&&t)v=new Uint8Array(32),v.set(c),v.set(c,16),T=sigma16_32,S.push(v);else throw new Error(`arx: invalid 32-byte key, got length=${E}`);isAligned32(l)||(l=l.slice(),S.push(l));const I=u32(v);if(n){if(l.length!==24)throw new Error("arx: extended nonce must be 24 bytes");n(T,I,u32(l.subarray(0,16)),I),l=l.subarray(16)}const A=16-i;if(A!==l.length)throw new Error(`arx: nonce must be ${A} or 16 bytes`);if(A!==12){const x=new Uint8Array(12);x.set(l,o?0:12-l.length),l=x,S.push(l)}const P=u32(l);for(runCipher(r,T,I,P,u,f,g,a);S.length>0;)S.pop().fill(0);return f}}function chachaCore(r,e,t,n,i,o=20){let a=r[0],c=r[1],l=r[2],u=r[3],f=e[0],g=e[1],$=e[2],S=e[3],E=e[4],v=e[5],T=e[6],I=e[7],A=i,P=t[0],x=t[1],D=t[2],C=a,k=c,N=l,L=u,M=f,U=g,z=$,Y=S,j=E,B=v,H=T,G=I,q=A,O=P,Q=x,W=D;for(let Z=0;Z<o;Z+=2)C=C+M|0,q=rotl(q^C,16),j=j+q|0,M=rotl(M^j,12),C=C+M|0,q=rotl(q^C,8),j=j+q|0,M=rotl(M^j,7),k=k+U|0,O=rotl(O^k,16),B=B+O|0,U=rotl(U^B,12),k=k+U|0,O=rotl(O^k,8),B=B+O|0,U=rotl(U^B,7),N=N+z|0,Q=rotl(Q^N,16),H=H+Q|0,z=rotl(z^H,12),N=N+z|0,Q=rotl(Q^N,8),H=H+Q|0,z=rotl(z^H,7),L=L+Y|0,W=rotl(W^L,16),G=G+W|0,Y=rotl(Y^G,12),L=L+Y|0,W=rotl(W^L,8),G=G+W|0,Y=rotl(Y^G,7),C=C+U|0,W=rotl(W^C,16),H=H+W|0,U=rotl(U^H,12),C=C+U|0,W=rotl(W^C,8),H=H+W|0,U=rotl(U^H,7),k=k+z|0,q=rotl(q^k,16),G=G+q|0,z=rotl(z^G,12),k=k+z|0,q=rotl(q^k,8),G=G+q|0,z=rotl(z^G,7),N=N+Y|0,O=rotl(O^N,16),j=j+O|0,Y=rotl(Y^j,12),N=N+Y|0,O=rotl(O^N,8),j=j+O|0,Y=rotl(Y^j,7),L=L+M|0,Q=rotl(Q^L,16),B=B+Q|0,M=rotl(M^B,12),L=L+M|0,Q=rotl(Q^L,8),B=B+Q|0,M=rotl(M^B,7);let X=0;n[X++]=a+C|0,n[X++]=c+k|0,n[X++]=l+N|0,n[X++]=u+L|0,n[X++]=f+M|0,n[X++]=g+U|0,n[X++]=$+z|0,n[X++]=S+Y|0,n[X++]=E+j|0,n[X++]=v+B|0,n[X++]=T+H|0,n[X++]=I+G|0,n[X++]=A+q|0,n[X++]=P+O|0,n[X++]=x+Q|0,n[X++]=D+W|0}const chacha20=createCipher(chachaCore,{counterRight:!1,counterLength:4,allowShortKeys:!1}),ZEROS16=new Uint8Array(16),updatePadded=(r,e)=>{r.update(e);const t=e.length%16;t&&r.update(ZEROS16.subarray(t))},ZEROS32=new Uint8Array(32);function computeTag(r,e,t,n,i){const o=r(e,t,ZEROS32),a=poly1305.create(o);i&&updatePadded(a,i),updatePadded(a,n);const c=new Uint8Array(16),l=createView(c);setBigUint64(l,0,BigInt(i?i.length:0),!0),setBigUint64(l,8,BigInt(n.length),!0),a.update(c);const u=a.digest();return o.fill(0),u}const _poly1305_aead=r=>(e,t,n)=>(ensureBytes(e,32),ensureBytes(t),{encrypt:(o,a)=>{const c=o.length,l=c+16;a?ensureBytes(a,l):a=new Uint8Array(l),r(e,t,o,a,1);const u=computeTag(r,e,t,a.subarray(0,-16),n);return a.set(u,c),a},decrypt:(o,a)=>{const c=o.length,l=c-16;if(c<16)throw new Error("encrypted data must be at least 16 bytes");a?ensureBytes(a,l):a=new Uint8Array(l);const u=o.subarray(0,-16),f=o.subarray(-16),g=computeTag(r,e,t,u,n);if(!equalBytes(f,g))throw new Error("invalid tag");return r(e,t,u,a,1),a}}),chacha20poly1305=wrapCipher({blockSize:64,nonceLength:12,tagLength:16},_poly1305_aead(chacha20));function extract(r,e,t){return hash(r),t===void 0&&(t=new Uint8Array(r.outputLen)),hmac(r,toBytes$3(t),toBytes$3(e))}const HKDF_COUNTER=new Uint8Array([0]),EMPTY_BUFFER=new Uint8Array;function expand(r,e,t,n=32){if(hash(r),number$2(n),n>255*r.outputLen)throw new Error("Length should be <= 255*HashLen");const i=Math.ceil(n/r.outputLen);t===void 0&&(t=EMPTY_BUFFER);const o=new Uint8Array(i*r.outputLen),a=hmac.create(r,e),c=a._cloneInto(),l=new Uint8Array(a.outputLen);for(let u=0;u<i;u++)HKDF_COUNTER[0]=u+1,c.update(u===0?EMPTY_BUFFER:l).update(t).update(HKDF_COUNTER).digestInto(l),o.set(l,r.outputLen*u),a._cloneInto(c);return a.destroy(),c.destroy(),l.fill(0),HKDF_COUNTER.fill(0),o.slice(0,n)}const pureJsCrypto$3={hashSHA256(r){return sha256(r)},getHKDF(r,e){const t=extract(sha256,e,r),i=expand(sha256,t,void 0,96),o=i.subarray(0,32),a=i.subarray(32,64),c=i.subarray(64,96);return[o,a,c]},generateX25519KeyPair(){const r=x25519.utils.randomPrivateKey();return{publicKey:x25519.getPublicKey(r),privateKey:r}},generateX25519KeyPairFromSeed(r){return{publicKey:x25519.getPublicKey(r),privateKey:r}},generateX25519SharedKey(r,e){return x25519.getSharedSecret(r,e)},chaCha20Poly1305Encrypt(r,e,t,n){return chacha20poly1305(n,e,t).encrypt(r)},chaCha20Poly1305Decrypt(r,e,t,n,i){return chacha20poly1305(n,e,t).decrypt(r,i)}},defaultCrypto$3=pureJsCrypto$3;function compare$1(r,e){for(let t=0;t<r.byteLength;t++){if(r[t]<e[t])return-1;if(r[t]>e[t])return 1}return r.byteLength>e.byteLength?1:r.byteLength<e.byteLength?-1:0}function xor(r,e){if(r.length!==e.length)throw new Error("Inputs should have the same length");const t=allocUnsafe$3(r.length);for(let n=0;n<r.length;n++)t[n]=r[n]^e[n];return asUint8Array$2(t)}const uint16BEEncode$3=r=>{const e=allocUnsafe$3(2);return new DataView(e.buffer,e.byteOffset,e.byteLength).setUint16(0,r,!1),e};uint16BEEncode$3.bytes=2;const uint16BEDecode$3=r=>{if(r.length<2)throw RangeError("Could not decode int16BE");return r instanceof Uint8Array?new DataView(r.buffer,r.byteOffset,r.byteLength).getUint16(0,!1):r.getUint16(0)};uint16BEDecode$3.bytes=2;function encode0$3(r){return concat$6([r.ne,r.ciphertext],r.ne.length+r.ciphertext.length)}function encode1$3(r){return concat$6([r.ne,r.ns,r.ciphertext],r.ne.length+r.ns.length+r.ciphertext.length)}function encode2$3(r){return concat$6([r.ns,r.ciphertext],r.ns.length+r.ciphertext.length)}function decode0$3(r){if(r.length<32)throw new Error("Cannot decode stage 0 MessageBuffer: length less than 32 bytes.");return{ne:r.subarray(0,32),ciphertext:r.subarray(32,r.length),ns:alloc$1(0)}}function decode1$3(r){if(r.length<80)throw new Error("Cannot decode stage 1 MessageBuffer: length less than 80 bytes.");return{ne:r.subarray(0,32),ns:r.subarray(32,80),ciphertext:r.subarray(80,r.length)}}function decode2$3(r){if(r.length<48)throw new Error("Cannot decode stage 2 MessageBuffer: length less than 48 bytes.");return{ne:alloc$1(0),ns:r.subarray(0,48),ciphertext:r.subarray(48,r.length)}}const CHACHA_TAG_LENGTH$3=16;function encryptStream$3(r,e){return async function*(t){for await(const n of t)for(let i=0;i<n.length;i+=NOISE_MSG_MAX_LENGTH_BYTES_WITHOUT_TAG$3){let o=i+NOISE_MSG_MAX_LENGTH_BYTES_WITHOUT_TAG$3;o>n.length&&(o=n.length);const a=r.encrypt(n.subarray(i,o),r.session);e?.encryptedPackets.increment(),yield concat$6([uint16BEEncode$3(a.byteLength),a],2+a.byteLength)}}}function decryptStream$3(r,e){return async function*(t){for await(const n of t)for(let i=0;i<n.length;i+=NOISE_MSG_MAX_LENGTH_BYTES$3){let o=i+NOISE_MSG_MAX_LENGTH_BYTES$3;if(o>n.length&&(o=n.length),o-CHACHA_TAG_LENGTH$3<i)throw new Error("Invalid chunk");const a=n.subarray(i,o),c=n.subarray(i,o-CHACHA_TAG_LENGTH$3),{plaintext:l,valid:u}=r.decrypt(a,r.session,c);if(!u)throw e?.decryptErrors.increment(),new Error("Failed to validate decrypted chunk");e?.decryptedPackets.increment(),yield l}}}var NoiseExtensions$3;(function(r){let e;r.codec=()=>(e==null&&(e=message((t,n,i={})=>{if(i.lengthDelimited!==!1&&n.fork(),t.webtransportCerthashes!=null)for(const o of t.webtransportCerthashes)n.uint32(10),n.bytes(o);i.lengthDelimited!==!1&&n.ldelim()},(t,n)=>{const i={webtransportCerthashes:[]},o=n==null?t.len:t.pos+n;for(;t.pos<o;){const a=t.uint32();switch(a>>>3){case 1:{i.webtransportCerthashes.push(t.bytes());break}default:{t.skipType(a&7);break}}}return i})),e),r.encode=t=>encodeMessage(t,r.codec()),r.decode=t=>decodeMessage$1(t,r.codec())})(NoiseExtensions$3||(NoiseExtensions$3={}));var NoiseHandshakePayload$3;(function(r){let e;r.codec=()=>(e==null&&(e=message((t,n,i={})=>{i.lengthDelimited!==!1&&n.fork(),t.identityKey!=null&&t.identityKey.byteLength>0&&(n.uint32(10),n.bytes(t.identityKey)),t.identitySig!=null&&t.identitySig.byteLength>0&&(n.uint32(18),n.bytes(t.identitySig)),t.extensions!=null&&(n.uint32(34),NoiseExtensions$3.codec().encode(t.extensions,n)),i.lengthDelimited!==!1&&n.ldelim()},(t,n)=>{const i={identityKey:alloc$1(0),identitySig:alloc$1(0)},o=n==null?t.len:t.pos+n;for(;t.pos<o;){const a=t.uint32();switch(a>>>3){case 1:{i.identityKey=t.bytes();break}case 2:{i.identitySig=t.bytes();break}case 4:{i.extensions=NoiseExtensions$3.codec().decode(t,t.uint32());break}default:{t.skipType(a&7);break}}}return i})),e),r.encode=t=>encodeMessage(t,r.codec()),r.decode=t=>decodeMessage$1(t,r.codec())})(NoiseHandshakePayload$3||(NoiseHandshakePayload$3={}));async function getPayload$3(r,e,t){const n=await signPayload$3(r,getHandshakePayload$3(e));if(r.publicKey==null)throw new Error("PublicKey was missing from local PeerId");return createHandshakePayload$3(r.publicKey,n,t)}function createHandshakePayload$3(r,e,t){return NoiseHandshakePayload$3.encode({identityKey:r,identitySig:e,extensions:t??{webtransportCerthashes:[]}}).subarray()}async function signPayload$3(r,e){if(r.privateKey==null)throw new Error("PrivateKey was missing from PeerId");return(await unmarshalPrivateKey$d(r.privateKey)).sign(e)}async function getPeerIdFromPayload$3(r){return peerIdFromKeys$6(r.identityKey)}function decodePayload$3(r){return NoiseHandshakePayload$3.decode(r)}function getHandshakePayload$3(r){const e=fromString$b("noise-libp2p-static-key:");return concat$6([e,r],e.length+r.length)}async function verifySignedPayload$3(r,e,t){const n=await peerIdFromKeys$6(e.identityKey);if(!n.equals(t))throw new Error(`Payload identity key ${n.toString()} does not match expected remote peer ${t.toString()}`);const i=getHandshakePayload$3(r);if(n.publicKey==null)throw new Error("PublicKey was missing from PeerId");if(e.identitySig==null)throw new Error("Signature was missing from message");if(!await unmarshalPublicKey$6(n.publicKey).verify(i,e.identitySig))throw new Error("Static key doesn't match to peer that signed payload!");return n}function isValidPublicKey$3(r){return!(!(r instanceof Uint8Array)||r.length!==32)}const log$M=logger$5("libp2p:noise");let keyLogger$2;DUMP_SESSION_KEYS$3?keyLogger$2=log$M:keyLogger$2=Object.assign(()=>{},{enabled:!1,trace:()=>{},error:()=>{}});function logLocalStaticKeys$3(r){keyLogger$2(`LOCAL_STATIC_PUBLIC_KEY ${toString$b(r.publicKey,"hex")}`),keyLogger$2(`LOCAL_STATIC_PRIVATE_KEY ${toString$b(r.privateKey,"hex")}`)}function logLocalEphemeralKeys$3(r){r?(keyLogger$2(`LOCAL_PUBLIC_EPHEMERAL_KEY ${toString$b(r.publicKey,"hex")}`),keyLogger$2(`LOCAL_PRIVATE_EPHEMERAL_KEY ${toString$b(r.privateKey,"hex")}`)):keyLogger$2("Missing local ephemeral keys.")}function logRemoteStaticKey$3(r){keyLogger$2(`REMOTE_STATIC_PUBLIC_KEY ${toString$b(r,"hex")}`)}function logRemoteEphemeralKey$3(r){keyLogger$2(`REMOTE_EPHEMERAL_PUBLIC_KEY ${toString$b(r,"hex")}`)}function logCipherState$3(r){r.cs1&&r.cs2?(keyLogger$2(`CIPHER_STATE_1 ${r.cs1.n.getUint64()} ${toString$b(r.cs1.k,"hex")}`),keyLogger$2(`CIPHER_STATE_2 ${r.cs2.n.getUint64()} ${toString$b(r.cs2.k,"hex")}`)):keyLogger$2("Missing cipher state.")}const MIN_NONCE$3=0,MAX_NONCE$3=4294967295,ERR_MAX_NONCE$3="Cipherstate has reached maximum n, a new handshake must be performed";let Nonce$3=class{constructor(e=MIN_NONCE$3){_(this,"n");_(this,"bytes");_(this,"view");this.n=e,this.bytes=alloc$1(12),this.view=new DataView(this.bytes.buffer,this.bytes.byteOffset,this.bytes.byteLength),this.view.setUint32(4,e,!0)}increment(){this.n++,this.view.setUint32(4,this.n,!0)}getBytes(){return this.bytes}getUint64(){return this.n}assertValue(){if(this.n>MAX_NONCE$3)throw new Error(ERR_MAX_NONCE$3)}},AbstractHandshake$3=class{constructor(e){_(this,"crypto");this.crypto=e}encryptWithAd(e,t,n){const i=this.encrypt(e.k,e.n,t,n);return e.n.increment(),i}decryptWithAd(e,t,n,i){const{plaintext:o,valid:a}=this.decrypt(e.k,e.n,t,n,i);return a&&e.n.increment(),{plaintext:o,valid:a}}hasKey(e){return!this.isEmptyKey(e.k)}createEmptyKey(){return alloc$1(32)}isEmptyKey(e){const t=this.createEmptyKey();return equals$4(t,e)}encrypt(e,t,n,i){return t.assertValue(),this.crypto.chaCha20Poly1305Encrypt(i,t.getBytes(),n,e)}encryptAndHash(e,t){let n;return this.hasKey(e.cs)?n=this.encryptWithAd(e.cs,e.h,t):n=t,this.mixHash(e,n),n}decrypt(e,t,n,i,o){t.assertValue();const a=this.crypto.chaCha20Poly1305Decrypt(i,t.getBytes(),n,e,o);return a?{plaintext:a,valid:!0}:{plaintext:alloc$1(0),valid:!1}}decryptAndHash(e,t){let n,i=!0;return this.hasKey(e.cs)?{plaintext:n,valid:i}=this.decryptWithAd(e.cs,e.h,t):n=t,this.mixHash(e,t),{plaintext:n,valid:i}}dh(e,t){try{const n=this.crypto.generateX25519SharedKey(e,t);return n.length===32?n:n.subarray(0,32)}catch(n){const i=n;return log$M.error(i),alloc$1(32)}}mixHash(e,t){e.h=this.getHash(e.h,t)}getHash(e,t){return this.crypto.hashSHA256(concat$6([e,t],e.length+t.length))}mixKey(e,t){const[n,i]=this.crypto.getHKDF(e.ck,t);e.cs=this.initializeKey(i),e.ck=n}initializeKey(e){return{k:e,n:new Nonce$3}}initializeSymmetric(e){const t=fromString$b(e,"utf-8"),n=this.hashProtocolName(t),i=n,o=this.createEmptyKey();return{cs:this.initializeKey(o),ck:i,h:n}}hashProtocolName(e){if(e.length<=32){const t=alloc$1(32);return t.set(e),t}else return this.getHash(e,alloc$1(0))}split(e){const[t,n]=this.crypto.getHKDF(e.ck,alloc$1(0)),i=this.initializeKey(t),o=this.initializeKey(n);return{cs1:i,cs2:o}}writeMessageRegular(e,t){const n=this.encryptWithAd(e,alloc$1(0),t),i=this.createEmptyKey(),o=alloc$1(0);return{ne:i,ns:o,ciphertext:n}}readMessageRegular(e,t){return this.decryptWithAd(e,alloc$1(0),t.ciphertext)}},XX$3=class extends AbstractHandshake$3{initializeInitiator(e,t,n,i){const o="Noise_XX_25519_ChaChaPoly_SHA256",a=this.initializeSymmetric(o);this.mixHash(a,e);const c=alloc$1(32);return{ss:a,s:t,rs:n,psk:i,re:c}}initializeResponder(e,t,n,i){const o="Noise_XX_25519_ChaChaPoly_SHA256",a=this.initializeSymmetric(o);this.mixHash(a,e);const c=alloc$1(32);return{ss:a,s:t,rs:n,psk:i,re:c}}writeMessageA(e,t,n){const i=alloc$1(0);n!==void 0?e.e=n:e.e=this.crypto.generateX25519KeyPair();const o=e.e.publicKey;this.mixHash(e.ss,o);const a=this.encryptAndHash(e.ss,t);return{ne:o,ns:i,ciphertext:a}}writeMessageB(e,t){e.e=this.crypto.generateX25519KeyPair();const n=e.e.publicKey;this.mixHash(e.ss,n),this.mixKey(e.ss,this.dh(e.e.privateKey,e.re));const i=e.s.publicKey,o=this.encryptAndHash(e.ss,i);this.mixKey(e.ss,this.dh(e.s.privateKey,e.re));const a=this.encryptAndHash(e.ss,t);return{ne:n,ns:o,ciphertext:a}}writeMessageC(e,t){const n=e.s.publicKey,i=this.encryptAndHash(e.ss,n);this.mixKey(e.ss,this.dh(e.s.privateKey,e.re));const o=this.encryptAndHash(e.ss,t),c={ne:this.createEmptyKey(),ns:i,ciphertext:o},{cs1:l,cs2:u}=this.split(e.ss);return{h:e.ss.h,messageBuffer:c,cs1:l,cs2:u}}readMessageA(e,t){return isValidPublicKey$3(t.ne)&&(e.re=t.ne),this.mixHash(e.ss,e.re),this.decryptAndHash(e.ss,t.ciphertext)}readMessageB(e,t){if(isValidPublicKey$3(t.ne)&&(e.re=t.ne),this.mixHash(e.ss,e.re),!e.e)throw new Error("Handshake state `e` param is missing.");this.mixKey(e.ss,this.dh(e.e.privateKey,e.re));const{plaintext:n,valid:i}=this.decryptAndHash(e.ss,t.ns);i&&isValidPublicKey$3(n)&&(e.rs=n),this.mixKey(e.ss,this.dh(e.e.privateKey,e.rs));const{plaintext:o,valid:a}=this.decryptAndHash(e.ss,t.ciphertext);return{plaintext:o,valid:i&&a}}readMessageC(e,t){const{plaintext:n,valid:i}=this.decryptAndHash(e.ss,t.ns);if(i&&isValidPublicKey$3(n)&&(e.rs=n),!e.e)throw new Error("Handshake state `e` param is missing.");this.mixKey(e.ss,this.dh(e.e.privateKey,e.rs));const{plaintext:o,valid:a}=this.decryptAndHash(e.ss,t.ciphertext),{cs1:c,cs2:l}=this.split(e.ss);return{h:e.ss.h,plaintext:o,valid:i&&a,cs1:c,cs2:l}}initSession(e,t,n){const i=this.createEmptyKey(),o=alloc$1(32);let a;return e?a=this.initializeInitiator(t,n,o,i):a=this.initializeResponder(t,n,o,i),{hs:a,i:e,mc:0}}sendMessage(e,t,n){let i;if(e.mc===0)i=this.writeMessageA(e.hs,t,n);else if(e.mc===1)i=this.writeMessageB(e.hs,t);else if(e.mc===2){const{h:o,messageBuffer:a,cs1:c,cs2:l}=this.writeMessageC(e.hs,t);i=a,e.h=o,e.cs1=c,e.cs2=l}else if(e.mc>2)if(e.i){if(!e.cs1)throw new Error("CS1 (cipher state) is not defined");i=this.writeMessageRegular(e.cs1,t)}else{if(!e.cs2)throw new Error("CS2 (cipher state) is not defined");i=this.writeMessageRegular(e.cs2,t)}else throw new Error("Session invalid.");return e.mc++,i}recvMessage(e,t){let n=alloc$1(0),i=!1;if(e.mc===0)({plaintext:n,valid:i}=this.readMessageA(e.hs,t));else if(e.mc===1)({plaintext:n,valid:i}=this.readMessageB(e.hs,t));else if(e.mc===2){const{h:o,plaintext:a,valid:c,cs1:l,cs2:u}=this.readMessageC(e.hs,t);n=a,i=c,e.h=o,e.cs1=l,e.cs2=u}return e.mc++,{plaintext:n,valid:i}}},XXHandshake$3=class{constructor(e,t,n,i,o,a,c,l){_(this,"isInitiator");_(this,"session");_(this,"remotePeer");_(this,"remoteExtensions",{webtransportCerthashes:[]});_(this,"payload");_(this,"connection");_(this,"xx");_(this,"staticKeypair");_(this,"prologue");this.isInitiator=e,this.payload=t,this.prologue=n,this.staticKeypair=o,this.connection=a,c&&(this.remotePeer=c),this.xx=l??new XX$3(i),this.session=this.xx.initSession(this.isInitiator,this.prologue,this.staticKeypair)}async propose(){if(logLocalStaticKeys$3(this.session.hs.s),this.isInitiator){log$M.trace("Stage 0 - Initiator starting to send first message.");const e=this.xx.sendMessage(this.session,alloc$1(0));await this.connection.write(encode0$3(e)),log$M.trace("Stage 0 - Initiator finished sending first message."),logLocalEphemeralKeys$3(this.session.hs.e)}else{log$M.trace("Stage 0 - Responder waiting to receive first message...");const e=decode0$3((await this.connection.read()).subarray()),{valid:t}=this.xx.recvMessage(this.session,e);if(!t)throw new InvalidCryptoExchangeError$1("xx handshake stage 0 validation fail");log$M.trace("Stage 0 - Responder received first message."),logRemoteEphemeralKey$3(this.session.hs.re)}}async exchange(){if(this.isInitiator){log$M.trace("Stage 1 - Initiator waiting to receive first message from responder...");const e=decode1$3((await this.connection.read()).subarray()),{plaintext:t,valid:n}=this.xx.recvMessage(this.session,e);if(!n)throw new InvalidCryptoExchangeError$1("xx handshake stage 1 validation fail");log$M.trace("Stage 1 - Initiator received the message."),logRemoteEphemeralKey$3(this.session.hs.re),logRemoteStaticKey$3(this.session.hs.rs),log$M.trace("Initiator going to check remote's signature...");try{const i=decodePayload$3(t);this.remotePeer=this.remotePeer||await getPeerIdFromPayload$3(i),await verifySignedPayload$3(this.session.hs.rs,i,this.remotePeer),this.setRemoteNoiseExtension(i.extensions)}catch(i){const o=i;throw new UnexpectedPeerError$1(`Error occurred while verifying signed payload: ${o.message}`)}log$M.trace("All good with the signature!")}else{log$M.trace("Stage 1 - Responder sending out first message with signed payload and static key.");const e=this.xx.sendMessage(this.session,this.payload);await this.connection.write(encode1$3(e)),log$M.trace("Stage 1 - Responder sent the second handshake message with signed payload."),logLocalEphemeralKeys$3(this.session.hs.e)}}async finish(){if(this.isInitiator){log$M.trace("Stage 2 - Initiator sending third handshake message.");const e=this.xx.sendMessage(this.session,this.payload);await this.connection.write(encode2$3(e)),log$M.trace("Stage 2 - Initiator sent message with signed payload.")}else{log$M.trace("Stage 2 - Responder waiting for third handshake message...");const e=decode2$3((await this.connection.read()).subarray()),{plaintext:t,valid:n}=this.xx.recvMessage(this.session,e);if(!n)throw new InvalidCryptoExchangeError$1("xx handshake stage 2 validation fail");log$M.trace("Stage 2 - Responder received the message, finished handshake.");try{const i=decodePayload$3(t);this.remotePeer=this.remotePeer||await getPeerIdFromPayload$3(i),await verifySignedPayload$3(this.session.hs.rs,i,this.remotePeer),this.setRemoteNoiseExtension(i.extensions)}catch(i){const o=i;throw new UnexpectedPeerError$1(`Error occurred while verifying signed payload: ${o.message}`)}}logCipherState$3(this.session)}encrypt(e,t){const n=this.getCS(t);return this.xx.encryptWithAd(n,alloc$1(0),e)}decrypt(e,t,n){const i=this.getCS(t,!1);return this.xx.decryptWithAd(i,alloc$1(0),e,n)}getRemoteStaticKey(){return this.session.hs.rs}getCS(e,t=!0){if(!e.cs1||!e.cs2)throw new InvalidCryptoExchangeError$1("Handshake not completed properly, cipher state does not exist.");return this.isInitiator?t?e.cs1:e.cs2:t?e.cs2:e.cs1}setRemoteNoiseExtension(e){e&&(this.remoteExtensions=e)}};function registerMetrics$3(r){return{xxHandshakeSuccesses:r.registerCounter("libp2p_noise_xxhandshake_successes_total",{help:"Total count of noise xxHandshakes successes_"}),xxHandshakeErrors:r.registerCounter("libp2p_noise_xxhandshake_error_total",{help:"Total count of noise xxHandshakes errors"}),encryptedPackets:r.registerCounter("libp2p_noise_encrypted_packets_total",{help:"Total count of noise encrypted packets successfully"}),decryptedPackets:r.registerCounter("libp2p_noise_decrypted_packets_total",{help:"Total count of noise decrypted packets"}),decryptErrors:r.registerCounter("libp2p_noise_decrypt_errors_total",{help:"Total count of noise decrypt errors"})}}let Noise$3=class{constructor(e={}){_(this,"protocol","/noise");_(this,"crypto");_(this,"prologue");_(this,"staticKeys");_(this,"extensions");_(this,"metrics");const{staticNoiseKey:t,extensions:n,crypto:i,prologueBytes:o,metrics:a}=e;this.crypto=i??defaultCrypto$3,this.extensions=n,this.metrics=a?registerMetrics$3(a):void 0,t?this.staticKeys=this.crypto.generateX25519KeyPairFromSeed(t):this.staticKeys=this.crypto.generateX25519KeyPair(),this.prologue=o??alloc$1(0)}async secureOutbound(e,t,n){const i=lpStream$1(t,{lengthEncoder:uint16BEEncode$3,lengthDecoder:uint16BEDecode$3,maxDataLength:NOISE_MSG_MAX_LENGTH_BYTES$3}),o=await this.performHandshake({connection:i,isInitiator:!0,localPeer:e,remotePeer:n});return{conn:await this.createSecureConnection(i,o),remoteExtensions:o.remoteExtensions,remotePeer:o.remotePeer}}async secureInbound(e,t,n){const i=lpStream$1(t,{lengthEncoder:uint16BEEncode$3,lengthDecoder:uint16BEDecode$3,maxDataLength:NOISE_MSG_MAX_LENGTH_BYTES$3}),o=await this.performHandshake({connection:i,isInitiator:!1,localPeer:e,remotePeer:n});return{conn:await this.createSecureConnection(i,o),remotePeer:o.remotePeer,remoteExtensions:o.remoteExtensions}}async performHandshake(e){const t=await getPayload$3(e.localPeer,this.staticKeys.publicKey,this.extensions);return this.performXXHandshake(e,t)}async performXXHandshake(e,t){const{isInitiator:n,remotePeer:i,connection:o}=e,a=new XXHandshake$3(n,t,this.prologue,this.crypto,this.staticKeys,o,i);try{await a.propose(),await a.exchange(),await a.finish(),this.metrics?.xxHandshakeSuccesses.increment()}catch(c){if(this.metrics?.xxHandshakeErrors.increment(),c instanceof Error)throw c.message=`Error occurred during XX handshake: ${c.message}`,c}return a}async createSecureConnection(e,t){const[n,i]=duplexPair(),o=e.unwrap();return await pipe(n,encryptStream$3(t,this.metrics),o,a=>decode$h(a,{lengthDecoder:uint16BEDecode$3}),decryptStream$3(t,this.metrics),n),i}};function noise$3(r={}){return()=>new Noise$3(r)}const ERR_INVALID_FRAME$1="ERR_INVALID_FRAME",ERR_UNREQUESTED_PING$1="ERR_UNREQUESTED_PING",ERR_NOT_MATCHING_PING$1="ERR_NOT_MATCHING_PING",ERR_STREAM_ALREADY_EXISTS$1="ERR_STREAM_ALREADY_EXISTS",ERR_DECODE_INVALID_VERSION$1="ERR_DECODE_INVALID_VERSION",ERR_BOTH_CLIENTS$1="ERR_BOTH_CLIENTS",ERR_RECV_WINDOW_EXCEEDED$1="ERR_RECV_WINDOW_EXCEEDED",PROTOCOL_ERRORS$1=new Set([ERR_INVALID_FRAME$1,ERR_UNREQUESTED_PING$1,ERR_NOT_MATCHING_PING$1,ERR_STREAM_ALREADY_EXISTS$1,ERR_DECODE_INVALID_VERSION$1,ERR_BOTH_CLIENTS$1,ERR_RECV_WINDOW_EXCEEDED$1]),ERR_INVALID_CONFIG$1="ERR_INVALID_CONFIG",ERR_MUXER_LOCAL_CLOSED$1="ERR_MUXER_LOCAL_CLOSED",ERR_MUXER_REMOTE_CLOSED$1="ERR_MUXER_REMOTE_CLOSED",ERR_STREAM_ABORT$1="ERR_STREAM_ABORT",ERR_MAX_OUTBOUND_STREAMS_EXCEEDED$1="ERROR_MAX_OUTBOUND_STREAMS_EXCEEDED",ERR_DECODE_IN_PROGRESS$1="ERR_DECODE_IN_PROGRESS",INITIAL_STREAM_WINDOW$1=256*1024,MAX_STREAM_WINDOW$1=16*1024*1024,defaultConfig$1={log:logger$5("libp2p:yamux"),enableKeepAlive:!0,keepAliveInterval:3e4,maxInboundStreams:1e3,maxOutboundStreams:1e3,initialStreamWindowSize:INITIAL_STREAM_WINDOW$1,maxStreamWindowSize:MAX_STREAM_WINDOW$1,maxMessageSize:64*1024};function verifyConfig$1(r){if(r.keepAliveInterval<=0)throw new CodeError$e("keep-alive interval must be positive",ERR_INVALID_CONFIG$1);if(r.maxInboundStreams<0)throw new CodeError$e("max inbound streams must be larger or equal 0",ERR_INVALID_CONFIG$1);if(r.maxOutboundStreams<0)throw new CodeError$e("max outbound streams must be larger or equal 0",ERR_INVALID_CONFIG$1);if(r.initialStreamWindowSize<INITIAL_STREAM_WINDOW$1)throw new CodeError$e("InitialStreamWindowSize must be larger or equal 256 kB",ERR_INVALID_CONFIG$1);if(r.maxStreamWindowSize<r.initialStreamWindowSize)throw new CodeError$e("MaxStreamWindowSize must be larger than the InitialStreamWindowSize",ERR_INVALID_CONFIG$1);if(r.maxStreamWindowSize>2**32-1)throw new CodeError$e("MaxStreamWindowSize must be less than equal MAX_UINT32",ERR_INVALID_CONFIG$1);if(r.maxMessageSize<1024)throw new CodeError$e("MaxMessageSize must be greater than a kilobyte",ERR_INVALID_CONFIG$1)}var FrameType$1;(function(r){r[r.Data=0]="Data",r[r.WindowUpdate=1]="WindowUpdate",r[r.Ping=2]="Ping",r[r.GoAway=3]="GoAway"})(FrameType$1||(FrameType$1={}));var Flag$1;(function(r){r[r.SYN=1]="SYN",r[r.ACK=2]="ACK",r[r.FIN=4]="FIN",r[r.RST=8]="RST"})(Flag$1||(Flag$1={}));Object.values(Flag$1).filter(r=>typeof r!="string");const YAMUX_VERSION$1=0;var GoAwayCode$1;(function(r){r[r.NormalTermination=0]="NormalTermination",r[r.ProtocolError=1]="ProtocolError",r[r.InternalError=2]="InternalError"})(GoAwayCode$1||(GoAwayCode$1={}));const HEADER_LENGTH$1=12,twoPow24$1=2**24;function decodeHeader$1(r){if(r[0]!==YAMUX_VERSION$1)throw new CodeError$e("Invalid frame version",ERR_DECODE_INVALID_VERSION$1);return{type:r[1],flag:(r[2]<<8)+r[3],streamID:r[4]*twoPow24$1+(r[5]<<16)+(r[6]<<8)+r[7],length:r[8]*twoPow24$1+(r[9]<<16)+(r[10]<<8)+r[11]}}let Decoder$4=class{constructor(e){_(this,"source");_(this,"buffer");_(this,"frameInProgress");this.source=returnlessSource$1(e),this.buffer=new Uint8ArrayList,this.frameInProgress=!1}async*emitFrames(){for await(const e of this.source)for(this.buffer.append(e);;){const t=this.readHeader();if(t===void 0)break;const{type:n,length:i}=t;n===FrameType$1.Data?(this.frameInProgress=!0,yield{header:t,readData:this.readBytes.bind(this,i)}):yield{header:t}}}readHeader(){if(this.frameInProgress)throw new CodeError$e("decoding frame already in progress",ERR_DECODE_IN_PROGRESS$1);if(this.buffer.length<HEADER_LENGTH$1)return;const e=decodeHeader$1(this.buffer.subarray(0,HEADER_LENGTH$1));return this.buffer.consume(HEADER_LENGTH$1),e}async readBytes(e){if(this.buffer.length<e){for await(const n of this.source)if(this.buffer.append(n),this.buffer.length>=e)break}const t=this.buffer.sublist(0,e);return this.buffer.consume(e),this.frameInProgress=!1,t}};function returnlessSource$1(r){if(r[Symbol.iterator]!==void 0){const e=r[Symbol.iterator]();return e.return=void 0,{[Symbol.iterator](){return e}}}else if(r[Symbol.asyncIterator]!==void 0){const e=r[Symbol.asyncIterator]();return e.return=void 0,{[Symbol.asyncIterator](){return e}}}else throw new Error("a source must be either an iterable or an async iterable")}function encodeHeader$1(r){const e=new Uint8Array(HEADER_LENGTH$1);return e[1]=r.type,e[2]=r.flag>>>8,e[3]=r.flag,e[4]=r.streamID>>>24,e[5]=r.streamID>>>16,e[6]=r.streamID>>>8,e[7]=r.streamID,e[8]=r.length>>>24,e[9]=r.length>>>16,e[10]=r.length>>>8,e[11]=r.length,e}let AbortError$8=class extends Error{constructor(t,n){super(t??"The operation was aborted");_(this,"type");_(this,"code");this.type="aborted",this.name="AbortError",this.code=n??"ABORT_ERR"}};async function raceSignal(r,e,t){if(e==null)return r;if(e.aborted)return Promise.reject(new AbortError$8(t?.errorMessage,t?.errorCode));let n;const i=new AbortError$8(t?.errorMessage,t?.errorCode);try{return await Promise.race([r,new Promise((o,a)=>{n=()=>{a(i)},e.addEventListener("abort",n)})])}finally{n!=null&&e.removeEventListener("abort",n)}}const ERR_STREAM_RESET$1="ERR_STREAM_RESET",ERR_SINK_INVALID_STATE$1="ERR_SINK_INVALID_STATE",DEFAULT_SEND_CLOSE_WRITE_TIMEOUT$1=5e3;function isPromise$5(r){return r!=null&&typeof r.then=="function"}let AbstractStream$1=class{constructor(e){_(this,"id");_(this,"direction");_(this,"timeline");_(this,"protocol");_(this,"metadata");_(this,"source");_(this,"status");_(this,"readStatus");_(this,"writeStatus");_(this,"sinkController");_(this,"sinkEnd");_(this,"endErr");_(this,"streamSource");_(this,"onEnd");_(this,"onCloseRead");_(this,"onCloseWrite");_(this,"onReset");_(this,"onAbort");_(this,"sendCloseWriteTimeout");_(this,"log");this.sinkController=new AbortController,this.sinkEnd=pDefer(),this.log=e.log,this.status="open",this.readStatus="ready",this.writeStatus="ready",this.id=e.id,this.metadata=e.metadata??{},this.direction=e.direction,this.timeline={open:Date.now()},this.sendCloseWriteTimeout=e.sendCloseWriteTimeout??DEFAULT_SEND_CLOSE_WRITE_TIMEOUT$1,this.onEnd=e.onEnd,this.onCloseRead=e?.onCloseRead,this.onCloseWrite=e?.onCloseWrite,this.onReset=e?.onReset,this.onAbort=e?.onAbort,this.source=this.streamSource=pushable$1({onEnd:t=>{t!=null?this.log.trace("source ended with error",t):this.log.trace("source ended"),this.onSourceEnd(t)}}),this.sink=this.sink.bind(this)}async sink(e){if(this.writeStatus!=="ready")throw new CodeError$e(`writable end state is "${this.writeStatus}" not "ready"`,ERR_SINK_INVALID_STATE$1);try{this.writeStatus="writing";const t={signal:this.sinkController.signal};if(this.direction==="outbound"){const n=this.sendNewStream(t);isPromise$5(n)&&await n}e=abortableSource(e,this.sinkController.signal,{returnOnAbort:!0}),this.log.trace("sink reading from source");for await(let n of e){n=n instanceof Uint8Array?new Uint8ArrayList(n):n;const i=this.sendData(n,t);isPromise$5(i)&&await i}this.log.trace('sink finished reading from source, write status is "%s"',this.writeStatus),this.writeStatus==="writing"&&(this.writeStatus="closing",this.log.trace("send close write to remote"),await this.sendCloseWrite({signal:AbortSignal.timeout(this.sendCloseWriteTimeout)}),this.writeStatus="closed"),this.onSinkEnd()}catch(t){throw this.log.trace("sink ended with error, calling abort with error",t),this.abort(t),t}finally{this.log.trace("resolve sink end"),this.sinkEnd.resolve()}}onSourceEnd(e){this.timeline.closeRead==null&&(this.timeline.closeRead=Date.now(),this.readStatus="closed",e!=null&&this.endErr==null&&(this.endErr=e),this.onCloseRead?.(),this.timeline.closeWrite!=null?(this.log.trace("source and sink ended"),this.timeline.close=Date.now(),this.status!=="aborted"&&this.status!=="reset"&&(this.status="closed"),this.onEnd!=null&&this.onEnd(this.endErr)):this.log.trace("source ended, waiting for sink to end"))}onSinkEnd(e){this.timeline.closeWrite==null&&(this.timeline.closeWrite=Date.now(),this.writeStatus="closed",e!=null&&this.endErr==null&&(this.endErr=e),this.onCloseWrite?.(),this.timeline.closeRead!=null?(this.log.trace("sink and source ended"),this.timeline.close=Date.now(),this.status!=="aborted"&&this.status!=="reset"&&(this.status="closed"),this.onEnd!=null&&this.onEnd(this.endErr)):this.log.trace("sink ended, waiting for source to end"))}async close(e){this.log.trace("closing gracefully"),this.status="closing",await Promise.all([this.closeRead(e),this.closeWrite(e)]),this.status="closed",this.log.trace("closed gracefully")}async closeRead(e={}){if(this.readStatus==="closing"||this.readStatus==="closed")return;this.log.trace('closing readable end of stream with starting read status "%s"',this.readStatus);const t=this.readStatus;this.readStatus="closing",this.status!=="reset"&&this.status!=="aborted"&&this.timeline.closeRead==null&&(this.log.trace("send close read to remote"),await this.sendCloseRead(e)),t==="ready"&&(this.log.trace("ending internal source queue"),this.streamSource.end()),this.log.trace("closed readable end of stream")}async closeWrite(e={}){this.writeStatus==="closing"||this.writeStatus==="closed"||(this.log.trace('closing writable end of stream with starting write status "%s"',this.writeStatus),this.writeStatus==="ready"&&(this.log.trace("sink was never sunk, sink an empty array"),await raceSignal(this.sink([]),e.signal)),this.writeStatus==="writing"&&await new Promise((t,n)=>{queueMicrotask(()=>{this.log.trace("aborting source passed to .sink"),this.sinkController.abort(),raceSignal(this.sinkEnd.promise,e.signal).then(t,n)})}),this.writeStatus="closed",this.log.trace("closed writable end of stream"))}abort(e){if(this.status==="closed"||this.status==="aborted"||this.status==="reset")return;this.log("abort with error",e),this.log("try to send reset to remote");const t=this.sendReset();isPromise$5(t)&&t.catch(n=>{this.log.error("error sending reset message",n)}),this.status="aborted",this.timeline.abort=Date.now(),this._closeSinkAndSource(e),this.onAbort?.(e)}reset(){if(this.status==="closed"||this.status==="aborted"||this.status==="reset")return;const e=new CodeError$e("stream reset",ERR_STREAM_RESET$1);this.status="reset",this.timeline.reset=Date.now(),this._closeSinkAndSource(e),this.onReset?.()}_closeSinkAndSource(e){this._closeSink(e),this._closeSource(e)}_closeSink(e){this.writeStatus==="writing"&&(this.log.trace("end sink source"),this.sinkController.abort()),this.onSinkEnd(e)}_closeSource(e){this.readStatus!=="closing"&&this.readStatus!=="closed"&&(this.log.trace("ending source with %d bytes to be read by consumer",this.streamSource.readableLength),this.readStatus="closing",this.streamSource.end(e))}remoteCloseWrite(){if(this.readStatus==="closing"||this.readStatus==="closed"){this.log("received remote close write but local source is already closed");return}this.log.trace("remote close write"),this._closeSource()}remoteCloseRead(){if(this.writeStatus==="closing"||this.writeStatus==="closed"){this.log("received remote close read but local sink is already closed");return}this.log.trace("remote close read"),this._closeSink()}destroy(){if(this.status==="closed"||this.status==="aborted"||this.status==="reset"){this.log("received destroy but we are already closed");return}this.log.trace("stream destroyed"),this._closeSinkAndSource()}sourcePush(e){this.streamSource.push(e)}sourceReadableLength(){return this.streamSource.readableLength}};var StreamState$1;(function(r){r[r.Init=0]="Init",r[r.SYNSent=1]="SYNSent",r[r.SYNReceived=2]="SYNReceived",r[r.Established=3]="Established",r[r.Finished=4]="Finished"})(StreamState$1||(StreamState$1={}));let YamuxStream$1=class extends AbstractStream$1{constructor(t){super({...t,onEnd:n=>{this.state=StreamState$1.Finished,t.onEnd?.(n)}});_(this,"name");_(this,"state");_(this,"config");_(this,"_id");_(this,"sendWindowCapacity");_(this,"sendWindowCapacityUpdate");_(this,"recvWindow");_(this,"recvWindowCapacity");_(this,"epochStart");_(this,"getRTT");_(this,"sendFrame");this.config=t.config,this._id=parseInt(t.id,10),this.name=t.name,this.state=t.state,this.sendWindowCapacity=INITIAL_STREAM_WINDOW$1,this.recvWindow=this.config.initialStreamWindowSize,this.recvWindowCapacity=this.recvWindow,this.epochStart=Date.now(),this.getRTT=t.getRTT,this.sendFrame=t.sendFrame,this.source=forEach(this.source,()=>{this.sendWindowUpdate()})}async sendNewStream(){}async sendData(t,n={}){for(t=t.sublist();t.byteLength!==0;){if(this.sendWindowCapacity===0&&await this.waitForSendWindowCapacity(n),this.status!=="open")return;const i=Math.min(this.sendWindowCapacity,this.config.maxMessageSize-HEADER_LENGTH$1,t.length),o=this.getSendFlags();this.sendFrame({type:FrameType$1.Data,flag:o,streamID:this._id,length:i},t.subarray(0,i)),this.sendWindowCapacity-=i,t.consume(i)}}async sendReset(){this.sendFrame({type:FrameType$1.WindowUpdate,flag:Flag$1.RST,streamID:this._id,length:0})}async sendCloseWrite(){const t=this.getSendFlags()|Flag$1.FIN;this.sendFrame({type:FrameType$1.WindowUpdate,flag:t,streamID:this._id,length:0})}async sendCloseRead(){}async waitForSendWindowCapacity(t={}){if(this.sendWindowCapacity>0)return;let n,i;const o=()=>{this.status==="open"?i(new CodeError$e("stream aborted",ERR_STREAM_ABORT$1)):n()};t.signal?.addEventListener("abort",o);try{await new Promise((a,c)=>{this.sendWindowCapacityUpdate=()=>{a()},i=c,n=a})}finally{t.signal?.removeEventListener("abort",o)}}handleWindowUpdate(t){this.log?.trace("stream received window update id=%s",this._id),this.processFlags(t.flag);const n=this.sendWindowCapacity;this.sendWindowCapacity+=t.length,n===0&&t.length>0&&this.sendWindowCapacityUpdate?.()}async handleData(t,n){if(this.log?.trace("stream received data id=%s",this._id),this.processFlags(t.flag),this.recvWindowCapacity<t.length)throw new CodeError$e("receive window exceeded",ERR_RECV_WINDOW_EXCEEDED$1,{available:this.recvWindowCapacity,recv:t.length});const i=await n();this.recvWindowCapacity-=t.length,this.sourcePush(i)}processFlags(t){(t&Flag$1.ACK)===Flag$1.ACK&&this.state===StreamState$1.SYNSent&&(this.state=StreamState$1.Established),(t&Flag$1.FIN)===Flag$1.FIN&&this.remoteCloseWrite(),(t&Flag$1.RST)===Flag$1.RST&&this.reset()}getSendFlags(){switch(this.state){case StreamState$1.Init:return this.state=StreamState$1.SYNSent,Flag$1.SYN;case StreamState$1.SYNReceived:return this.state=StreamState$1.Established,Flag$1.ACK;default:return 0}}sendWindowUpdate(){const t=this.getSendFlags(),n=Date.now(),i=this.getRTT();if(t===0&&i>-1&&n-this.epochStart<i*4&&(this.recvWindow=Math.min(this.recvWindow*2,this.config.maxStreamWindowSize)),this.recvWindowCapacity>=this.recvWindow&&t===0)return;const o=this.recvWindow-this.recvWindowCapacity;this.recvWindowCapacity=this.recvWindow,this.epochStart=n,this.sendFrame({type:FrameType$1.WindowUpdate,flag:t,streamID:this._id,length:o})}};const YAMUX_PROTOCOL_ID$1="/yamux/1.0.0",CLOSE_TIMEOUT$5=500;let Yamux$1=class{constructor(e={}){_(this,"protocol",YAMUX_PROTOCOL_ID$1);_(this,"_init");this._init=e}createStreamMuxer(e){return new YamuxMuxer$1({...this._init,...e})}},YamuxMuxer$1=class{constructor(e){_(this,"protocol",YAMUX_PROTOCOL_ID$1);_(this,"source");_(this,"sink");_(this,"config");_(this,"log");_(this,"closeController");_(this,"nextStreamID");_(this,"_streams");_(this,"nextPingID");_(this,"activePing");_(this,"rtt");_(this,"client");_(this,"localGoAway");_(this,"remoteGoAway");_(this,"numInboundStreams");_(this,"numOutboundStreams");_(this,"onIncomingStream");_(this,"onStreamEnd");this.client=e.direction==="outbound",this.config={...defaultConfig$1,...e},this.log=this.config.log,verifyConfig$1(this.config),this.closeController=new AbortController,setMaxListeners$4(1/0,this.closeController.signal),this.onIncomingStream=e.onIncomingStream,this.onStreamEnd=e.onStreamEnd,this._streams=new Map,this.source=pushable({onEnd:()=>{this.log?.trace("muxer source ended"),this._streams.forEach(t=>{t.destroy()})}}),this.sink=async t=>{const n=()=>{const a=getIterator(t);if(a.return!=null){const c=a.return();isPromise$4(c)&&c.catch(l=>{this.log?.("could not cause sink source to return",l)})}};let i,o;try{const a=new Decoder$4(t);try{this.closeController.signal.addEventListener("abort",n);for await(const c of a.emitFrames())await this.handleFrame(c.header,c.readData)}finally{this.closeController.signal.removeEventListener("abort",n)}i=GoAwayCode$1.NormalTermination}catch(a){const c=a.code;PROTOCOL_ERRORS$1.has(c)?(this.log?.error("protocol error in sink",a),i=GoAwayCode$1.ProtocolError):(this.log?.error("internal error in sink",a),i=GoAwayCode$1.InternalError),o=a}this.log?.trace("muxer sink ended"),o!=null?this.abort(o,i):await this.close({reason:i})},this.numInboundStreams=0,this.numOutboundStreams=0,this.nextStreamID=this.client?1:2,this.nextPingID=0,this.rtt=-1,this.log?.trace("muxer created"),this.config.enableKeepAlive&&this.keepAliveLoop().catch(t=>this.log?.error("keepalive error: %s",t)),this.ping().catch(t=>this.log?.error("ping error: %s",t))}get streams(){return Array.from(this._streams.values())}newStream(e){if(this.remoteGoAway!==void 0)throw new CodeError$e("muxer closed remotely",ERR_MUXER_REMOTE_CLOSED$1);if(this.localGoAway!==void 0)throw new CodeError$e("muxer closed locally",ERR_MUXER_LOCAL_CLOSED$1);const t=this.nextStreamID;if(this.nextStreamID+=2,this.numOutboundStreams>=this.config.maxOutboundStreams)throw new CodeError$e("max outbound streams exceeded",ERR_MAX_OUTBOUND_STREAMS_EXCEEDED$1);this.log?.trace("new outgoing stream id=%s",t);const n=this._newStream(t,e,StreamState$1.Init,"outbound");return this._streams.set(t,n),this.numOutboundStreams++,n.sendWindowUpdate(),n}async ping(){if(this.remoteGoAway!==void 0)throw new CodeError$e("muxer closed remotely",ERR_MUXER_REMOTE_CLOSED$1);if(this.localGoAway!==void 0)throw new CodeError$e("muxer closed locally",ERR_MUXER_LOCAL_CLOSED$1);if(this.activePing===void 0){let e=()=>{};this.activePing={id:this.nextPingID++,promise:new Promise((i,o)=>{const a=()=>{o(new CodeError$e("muxer closed locally",ERR_MUXER_LOCAL_CLOSED$1))};this.closeController.signal.addEventListener("abort",a,{once:!0}),e=()=>{this.closeController.signal.removeEventListener("abort",a),i()}}),resolve:e};const t=Date.now();this.sendPing(this.activePing.id);try{await this.activePing.promise}finally{delete this.activePing}const n=Date.now();this.rtt=n-t}else await this.activePing.promise;return this.rtt}getRTT(){return this.rtt}async close(e={}){if(this.closeController.signal.aborted)return;const t=e?.reason??GoAwayCode$1.NormalTermination;if(this.log?.trace("muxer close reason=%s",t),e.signal==null){const n=AbortSignal.timeout(CLOSE_TIMEOUT$5);setMaxListeners$4(1/0,n),e={...e,signal:n}}try{await Promise.all([...this._streams.values()].map(async n=>n.close(e))),this.sendGoAway(t),this._closeMuxer()}catch(n){this.abort(n)}}abort(e,t){if(!this.closeController.signal.aborted){t=t??GoAwayCode$1.InternalError,this.log?.error("muxer abort reason=%s error=%s",t,e);for(const n of this._streams.values())n.abort(e);this.sendGoAway(t),this._closeMuxer()}}isClosed(){return this.closeController.signal.aborted}_closeMuxer(){this.closeController.abort(),this.source.end()}_newStream(e,t,n,i){if(this._streams.get(e)!=null)throw new CodeError$e("Stream already exists",ERR_STREAM_ALREADY_EXISTS$1,{id:e});const o=new YamuxStream$1({id:e.toString(),name:t,state:n,direction:i,sendFrame:this.sendFrame.bind(this),onEnd:()=>{this.closeStream(e),this.onStreamEnd?.(o)},log:logger$5(`libp2p:yamux:${i}:${e}`),config:this.config,getRTT:this.getRTT.bind(this)});return o}closeStream(e){this.client===(e%2===0)?this.numInboundStreams--:this.numOutboundStreams--,this._streams.delete(e)}async keepAliveLoop(){const e=new Promise((t,n)=>{this.closeController.signal.addEventListener("abort",n,{once:!0})});for(this.log?.trace("muxer keepalive enabled interval=%s",this.config.keepAliveInterval);;){let t;try{await Promise.race([e,new Promise(n=>{t=setTimeout(n,this.config.keepAliveInterval)})]),this.ping().catch(n=>this.log?.error("ping error: %s",n))}catch{clearInterval(t);return}}}async handleFrame(e,t){const{streamID:n,type:i,length:o}=e;if(this.log?.trace("received frame %o",e),n===0)switch(i){case FrameType$1.Ping:{this.handlePing(e);return}case FrameType$1.GoAway:{this.handleGoAway(o);return}default:throw new CodeError$e("Invalid frame type",ERR_INVALID_FRAME$1,{header:e})}else switch(e.type){case FrameType$1.Data:case FrameType$1.WindowUpdate:{await this.handleStreamMessage(e,t);return}default:throw new CodeError$e("Invalid frame type",ERR_INVALID_FRAME$1,{header:e})}}handlePing(e){if(e.flag===Flag$1.SYN)this.log?.trace("received ping request pingId=%s",e.length),this.sendPing(e.length,Flag$1.ACK);else if(e.flag===Flag$1.ACK)this.log?.trace("received ping response pingId=%s",e.length),this.handlePingResponse(e.length);else throw new CodeError$e("Invalid frame flag",ERR_INVALID_FRAME$1,{header:e})}handlePingResponse(e){if(this.activePing===void 0)throw new CodeError$e("ping not requested",ERR_UNREQUESTED_PING$1);if(this.activePing.id!==e)throw new CodeError$e("ping doesn't match our id",ERR_NOT_MATCHING_PING$1);this.activePing.resolve()}handleGoAway(e){this.log?.trace("received GoAway reason=%s",GoAwayCode$1[e]??"unknown"),this.remoteGoAway=e;for(const t of this._streams.values())t.reset();this._closeMuxer()}async handleStreamMessage(e,t){const{streamID:n,flag:i,type:o}=e;(i&Flag$1.SYN)===Flag$1.SYN&&this.incomingStream(n);const a=this._streams.get(n);if(a===void 0){if(o===FrameType$1.Data){if(this.log?.("discarding data for stream id=%s",n),t===void 0)throw new Error("unreachable");await t()}else this.log?.("frame for missing stream id=%s",n);return}switch(o){case FrameType$1.WindowUpdate:{a.handleWindowUpdate(e);return}case FrameType$1.Data:{if(t===void 0)throw new Error("unreachable");await a.handleData(e,t);return}default:throw new Error("unreachable")}}incomingStream(e){if(this.client!==(e%2===0))throw new CodeError$e("both endpoints are clients",ERR_BOTH_CLIENTS$1);if(this._streams.has(e))return;if(this.log?.trace("new incoming stream id=%s",e),this.localGoAway!==void 0){this.sendFrame({type:FrameType$1.WindowUpdate,flag:Flag$1.RST,streamID:e,length:0});return}if(this.numInboundStreams>=this.config.maxInboundStreams){this.log?.("maxIncomingStreams exceeded, forcing stream reset"),this.sendFrame({type:FrameType$1.WindowUpdate,flag:Flag$1.RST,streamID:e,length:0});return}const t=this._newStream(e,void 0,StreamState$1.SYNReceived,"inbound");this.numInboundStreams++,this._streams.set(e,t),this.onIncomingStream?.(t)}sendFrame(e,t){if(this.log?.trace("sending frame %o",e),e.type===FrameType$1.Data){if(t===void 0)throw new CodeError$e("invalid frame",ERR_INVALID_FRAME$1);this.source.push(encodeHeader$1(e)),this.source.push(t)}else this.source.push(encodeHeader$1(e))}sendPing(e,t=Flag$1.SYN){t===Flag$1.SYN?this.log?.trace("sending ping request pingId=%s",e):this.log?.trace("sending ping response pingId=%s",e),this.sendFrame({type:FrameType$1.Ping,flag:t,streamID:0,length:e})}sendGoAway(e=GoAwayCode$1.NormalTermination){this.log?.("sending GoAway reason=%s",GoAwayCode$1[e]),this.localGoAway=e,this.sendFrame({type:FrameType$1.GoAway,flag:0,streamID:0,length:e})}};function isPromise$4(r){return r!=null&&typeof r.then=="function"}function yamux$1(r={}){return()=>new Yamux$1(r)}const inspect$7=Symbol.for("nodejs.util.inspect.custom"),baseDecoder$6=Object.values(bases$2).map(r=>r.decoder).reduce((r,e)=>r.or(e),bases$2.identity.decoder),LIBP2P_KEY_CODE$6=114,MARSHALLED_ED225519_PUBLIC_KEY_LENGTH$6=36,MARSHALLED_SECP256K1_PUBLIC_KEY_LENGTH$6=37;var Rr;let PeerIdImpl$6=class{constructor(e){_(this,"type");_(this,"multihash");_(this,"privateKey");_(this,"publicKey");_(this,"string");_(this,Rr,!0);this.type=e.type,this.multihash=e.multihash,this.privateKey=e.privateKey,Object.defineProperty(this,"string",{enumerable:!1,writable:!0})}get[Symbol.toStringTag](){return`PeerId(${this.toString()})`}toString(){return this.string==null&&(this.string=base58btc$4.encode(this.multihash.bytes).slice(1)),this.string}toCID(){return CID$3.createV1(LIBP2P_KEY_CODE$6,this.multihash)}toBytes(){return this.multihash.bytes}toJSON(){return this.toString()}equals(e){if(e instanceof Uint8Array)return equals$4(this.multihash.bytes,e);if(typeof e=="string")return peerIdFromString$6(e).equals(this);if(e?.multihash?.bytes!=null)return equals$4(this.multihash.bytes,e.multihash.bytes);throw new Error("not valid Id")}[(Rr=symbol$4,inspect$7)](){return`PeerId(${this.toString()})`}},RSAPeerIdImpl$6=class extends PeerIdImpl$6{constructor(t){super({...t,type:"RSA"});_(this,"type","RSA");_(this,"publicKey");this.publicKey=t.publicKey}},Ed25519PeerIdImpl$6=class extends PeerIdImpl$6{constructor(t){super({...t,type:"Ed25519"});_(this,"type","Ed25519");_(this,"publicKey");this.publicKey=t.multihash.digest}},Secp256k1PeerIdImpl$6=class extends PeerIdImpl$6{constructor(t){super({...t,type:"secp256k1"});_(this,"type","secp256k1");_(this,"publicKey");this.publicKey=t.multihash.digest}};function peerIdFromString$6(r,e){if(r.charAt(0)==="1"||r.charAt(0)==="Q"){const t=decode$n(base58btc$4.decode(`z${r}`));return r.startsWith("12D")?new Ed25519PeerIdImpl$6({multihash:t}):r.startsWith("16U")?new Secp256k1PeerIdImpl$6({multihash:t}):new RSAPeerIdImpl$6({multihash:t})}return peerIdFromBytes$6(baseDecoder$6.decode(r))}function peerIdFromBytes$6(r){try{const e=decode$n(r);if(e.code===identity$3.code){if(e.digest.length===MARSHALLED_ED225519_PUBLIC_KEY_LENGTH$6)return new Ed25519PeerIdImpl$6({multihash:e});if(e.digest.length===MARSHALLED_SECP256K1_PUBLIC_KEY_LENGTH$6)return new Secp256k1PeerIdImpl$6({multihash:e})}if(e.code===sha256$2.code)return new RSAPeerIdImpl$6({multihash:e})}catch{return peerIdFromCID$6(CID$3.decode(r))}throw new Error("Supplied PeerID CID is invalid")}function peerIdFromCID$6(r){if(r==null||r.multihash==null||r.version==null||r.version===1&&r.code!==LIBP2P_KEY_CODE$6)throw new Error("Supplied PeerID CID is invalid");const e=r.multihash;if(e.code===sha256$2.code)return new RSAPeerIdImpl$6({multihash:r.multihash});if(e.code===identity$3.code){if(e.digest.length===MARSHALLED_ED225519_PUBLIC_KEY_LENGTH$6)return new Ed25519PeerIdImpl$6({multihash:r.multihash});if(e.digest.length===MARSHALLED_SECP256K1_PUBLIC_KEY_LENGTH$6)return new Secp256k1PeerIdImpl$6({multihash:r.multihash})}throw new Error("Supplied PeerID CID is invalid")}async function peerIdFromKeys$5(r,e){return r.length===MARSHALLED_ED225519_PUBLIC_KEY_LENGTH$6?new Ed25519PeerIdImpl$6({multihash:create$c(identity$3.code,r),privateKey:e}):r.length===MARSHALLED_SECP256K1_PUBLIC_KEY_LENGTH$6?new Secp256k1PeerIdImpl$6({multihash:create$c(identity$3.code,r),privateKey:e}):new RSAPeerIdImpl$6({multihash:await sha256$2.digest(r),publicKey:r,privateKey:e})}async function*browserReadableStreamToIt(r,e={}){const t=r.getReader();try{for(;;){const n=await t.read();if(n.done)return;yield n.value}}finally{e.preventCancel!==!0&&await t.cancel(),t.releaseLock()}}const PUBLIC_KEY_BYTE_LENGTH$5=32,PRIVATE_KEY_BYTE_LENGTH$5=64,KEYS_BYTE_LENGTH$5=32;async function generateKey$h(){const r=ed25519.utils.randomPrivateKey(),e=ed25519.getPublicKey(r);return{privateKey:concatKeys$5(r,e),publicKey:e}}async function generateKeyFromSeed$5(r){if(r.length!==KEYS_BYTE_LENGTH$5)throw new TypeError('"seed" must be 32 bytes in length.');if(!(r instanceof Uint8Array))throw new TypeError('"seed" must be a node.js Buffer, or Uint8Array.');const e=r,t=ed25519.getPublicKey(e);return{privateKey:concatKeys$5(e,t),publicKey:t}}async function hashAndSign$h(r,e){const t=r.subarray(0,KEYS_BYTE_LENGTH$5);return ed25519.sign(e,t)}async function hashAndVerify$h(r,e,t){return ed25519.verify(e,t,r)}function concatKeys$5(r,e){const t=new Uint8Array(PRIVATE_KEY_BYTE_LENGTH$5);for(let n=0;n<KEYS_BYTE_LENGTH$5;n++)t[n]=r[n],t[KEYS_BYTE_LENGTH$5+n]=e[n];return t}const webcrypto$5={get(r=globalThis){const e=r.crypto;if(e==null||e.subtle==null)throw Object.assign(new Error("Missing Web Crypto API. The most likely cause of this error is that this page is being accessed from an insecure context (i.e. not HTTPS). For more information and possible resolutions see https://github.com/libp2p/js-libp2p-crypto/blob/master/README.md#web-crypto-api"),{code:"ERR_MISSING_WEB_CRYPTO"});return e}},derivedEmptyPasswordKey$5={alg:"A128GCM",ext:!0,k:"scm9jmO_4BJAgdwWGVulLg",key_ops:["encrypt","decrypt"],kty:"oct"};function create$6(r){const e=r?.algorithm??"AES-GCM";let t=r?.keyLength??16;const n=r?.nonceLength??12,i=r?.digest??"SHA-256",o=r?.saltLength??16,a=r?.iterations??32767,c=webcrypto$5.get();t*=8;async function l(g,$){const S=c.getRandomValues(new Uint8Array(o)),E=c.getRandomValues(new Uint8Array(n)),v={name:e,iv:E};typeof $=="string"&&($=fromString$b($));let T;if($.length===0){T=await c.subtle.importKey("jwk",derivedEmptyPasswordKey$5,{name:"AES-GCM"},!0,["encrypt"]);try{const A={name:"PBKDF2",salt:S,iterations:a,hash:{name:i}},P=await c.subtle.importKey("raw",$,{name:"PBKDF2"},!1,["deriveKey"]);T=await c.subtle.deriveKey(A,P,{name:e,length:t},!0,["encrypt"])}catch{T=await c.subtle.importKey("jwk",derivedEmptyPasswordKey$5,{name:"AES-GCM"},!0,["encrypt"])}}else{const A={name:"PBKDF2",salt:S,iterations:a,hash:{name:i}},P=await c.subtle.importKey("raw",$,{name:"PBKDF2"},!1,["deriveKey"]);T=await c.subtle.deriveKey(A,P,{name:e,length:t},!0,["encrypt"])}const I=await c.subtle.encrypt(v,T,g);return concat$6([S,v.iv,new Uint8Array(I)])}async function u(g,$){const S=g.subarray(0,o),E=g.subarray(o,o+n),v=g.subarray(o+n),T={name:e,iv:E};typeof $=="string"&&($=fromString$b($));let I;if($.length===0)try{const P={name:"PBKDF2",salt:S,iterations:a,hash:{name:i}},x=await c.subtle.importKey("raw",$,{name:"PBKDF2"},!1,["deriveKey"]);I=await c.subtle.deriveKey(P,x,{name:e,length:t},!0,["decrypt"])}catch{I=await c.subtle.importKey("jwk",derivedEmptyPasswordKey$5,{name:"AES-GCM"},!0,["decrypt"])}else{const P={name:"PBKDF2",salt:S,iterations:a,hash:{name:i}},x=await c.subtle.importKey("raw",$,{name:"PBKDF2"},!1,["deriveKey"]);I=await c.subtle.deriveKey(P,x,{name:e,length:t},!0,["decrypt"])}const A=await c.subtle.decrypt(T,I,v);return new Uint8Array(A)}return{encrypt:l,decrypt:u}}async function exporter$6(r,e){const n=await create$6().encrypt(r,e);return base64$6.encode(n)}var KeyType$6;(function(r){r.RSA="RSA",r.Ed25519="Ed25519",r.Secp256k1="Secp256k1"})(KeyType$6||(KeyType$6={}));var __KeyTypeValues$6;(function(r){r[r.RSA=0]="RSA",r[r.Ed25519=1]="Ed25519",r[r.Secp256k1=2]="Secp256k1"})(__KeyTypeValues$6||(__KeyTypeValues$6={}));(function(r){r.codec=()=>enumeration(__KeyTypeValues$6)})(KeyType$6||(KeyType$6={}));var PublicKey$6;(function(r){let e;r.codec=()=>(e==null&&(e=message((t,n,i={})=>{i.lengthDelimited!==!1&&n.fork(),t.Type!=null&&(n.uint32(8),KeyType$6.codec().encode(t.Type,n)),t.Data!=null&&(n.uint32(18),n.bytes(t.Data)),i.lengthDelimited!==!1&&n.ldelim()},(t,n)=>{const i={},o=n==null?t.len:t.pos+n;for(;t.pos<o;){const a=t.uint32();switch(a>>>3){case 1:i.Type=KeyType$6.codec().decode(t);break;case 2:i.Data=t.bytes();break;default:t.skipType(a&7);break}}return i})),e),r.encode=t=>encodeMessage(t,r.codec()),r.decode=t=>decodeMessage$1(t,r.codec())})(PublicKey$6||(PublicKey$6={}));var PrivateKey$6;(function(r){let e;r.codec=()=>(e==null&&(e=message((t,n,i={})=>{i.lengthDelimited!==!1&&n.fork(),t.Type!=null&&(n.uint32(8),KeyType$6.codec().encode(t.Type,n)),t.Data!=null&&(n.uint32(18),n.bytes(t.Data)),i.lengthDelimited!==!1&&n.ldelim()},(t,n)=>{const i={},o=n==null?t.len:t.pos+n;for(;t.pos<o;){const a=t.uint32();switch(a>>>3){case 1:i.Type=KeyType$6.codec().decode(t);break;case 2:i.Data=t.bytes();break;default:t.skipType(a&7);break}}return i})),e),r.encode=t=>encodeMessage(t,r.codec()),r.decode=t=>decodeMessage$1(t,r.codec())})(PrivateKey$6||(PrivateKey$6={}));let Ed25519PublicKey$5=class{constructor(e){_(this,"_key");this._key=ensureKey$5(e,PUBLIC_KEY_BYTE_LENGTH$5)}async verify(e,t){return hashAndVerify$h(this._key,t,e)}marshal(){return this._key}get bytes(){return PublicKey$6.encode({Type:KeyType$6.Ed25519,Data:this.marshal()}).subarray()}equals(e){return equals$4(this.bytes,e.bytes)}async hash(){const{bytes:e}=await sha256$2.digest(this.bytes);return e}},Ed25519PrivateKey$5=class{constructor(e,t){_(this,"_key");_(this,"_publicKey");this._key=ensureKey$5(e,PRIVATE_KEY_BYTE_LENGTH$5),this._publicKey=ensureKey$5(t,PUBLIC_KEY_BYTE_LENGTH$5)}async sign(e){return hashAndSign$h(this._key,e)}get public(){return new Ed25519PublicKey$5(this._publicKey)}marshal(){return this._key}get bytes(){return PrivateKey$6.encode({Type:KeyType$6.Ed25519,Data:this.marshal()}).subarray()}equals(e){return equals$4(this.bytes,e.bytes)}async hash(){const{bytes:e}=await sha256$2.digest(this.bytes);return e}async id(){const e=identity$3.digest(this.public.bytes);return base58btc$4.encode(e.bytes).substring(1)}async export(e,t="libp2p-key"){if(t==="libp2p-key")return exporter$6(this.bytes,e);throw new CodeError$e(`export format '${t}' is not supported`,"ERR_INVALID_EXPORT_FORMAT")}};function unmarshalEd25519PrivateKey$5(r){if(r.length>PRIVATE_KEY_BYTE_LENGTH$5){r=ensureKey$5(r,PRIVATE_KEY_BYTE_LENGTH$5+PUBLIC_KEY_BYTE_LENGTH$5);const n=r.subarray(0,PRIVATE_KEY_BYTE_LENGTH$5),i=r.subarray(PRIVATE_KEY_BYTE_LENGTH$5,r.length);return new Ed25519PrivateKey$5(n,i)}r=ensureKey$5(r,PRIVATE_KEY_BYTE_LENGTH$5);const e=r.subarray(0,PRIVATE_KEY_BYTE_LENGTH$5),t=r.subarray(PUBLIC_KEY_BYTE_LENGTH$5);return new Ed25519PrivateKey$5(e,t)}function unmarshalEd25519PublicKey$5(r){return r=ensureKey$5(r,PUBLIC_KEY_BYTE_LENGTH$5),new Ed25519PublicKey$5(r)}async function generateKeyPair$i(){const{privateKey:r,publicKey:e}=await generateKey$h();return new Ed25519PrivateKey$5(r,e)}async function generateKeyPairFromSeed$5(r){const{privateKey:e,publicKey:t}=await generateKeyFromSeed$5(r);return new Ed25519PrivateKey$5(e,t)}function ensureKey$5(r,e){if(r=Uint8Array.from(r??[]),r.length!==e)throw new CodeError$e(`Key must be a Uint8Array of length ${e}, got ${r.length}`,"ERR_INVALID_KEY_TYPE");return r}const Ed25519$5=Object.freeze(Object.defineProperty({__proto__:null,Ed25519PrivateKey:Ed25519PrivateKey$5,Ed25519PublicKey:Ed25519PublicKey$5,generateKeyPair:generateKeyPair$i,generateKeyPairFromSeed:generateKeyPairFromSeed$5,unmarshalEd25519PrivateKey:unmarshalEd25519PrivateKey$5,unmarshalEd25519PublicKey:unmarshalEd25519PublicKey$5},Symbol.toStringTag,{value:"Module"}));function bigIntegerToUintBase64url$5(r,e){let t=Uint8Array.from(r.abs().toByteArray());if(t=t[0]===0?t.subarray(1):t,e!=null){if(t.length>e)throw new Error("byte array longer than desired length");t=concat$6([new Uint8Array(e-t.length),t])}return toString$b(t,"base64url")}function base64urlToBigInteger$5(r){const e=base64urlToBuffer$5(r);return new forge$n.jsbn.BigInteger(toString$b(e,"base16"),16)}function base64urlToBuffer$5(r,e){let t=fromString$b(r,"base64urlpad");if(e!=null){if(t.length>e)throw new Error("byte array longer than desired length");t=concat$6([new Uint8Array(e-t.length),t])}return t}const bits$6={"P-256":256,"P-384":384,"P-521":521},curveTypes$6=Object.keys(bits$6);curveTypes$6.join(" / ");function randomBytes$6(r){if(isNaN(r)||r<=0)throw new CodeError$e("random bytes length must be a Number bigger than 0","ERR_INVALID_LENGTH");return randomBytes$a(r)}function convert$7(r,e){return e.map(t=>base64urlToBigInteger$5(r[t]))}function jwk2priv$5(r){return forge$n.pki.setRsaPrivateKey(...convert$7(r,["n","e","d","p","q","dp","dq","qi"]))}function jwk2pub$5(r){return forge$n.pki.setRsaPublicKey(...convert$7(r,["n","e"]))}function pkcs1ToJwk$5(r){const e=forge$n.asn1.fromDer(toString$b(r,"ascii")),t=forge$n.pki.privateKeyFromAsn1(e);return{kty:"RSA",n:bigIntegerToUintBase64url$5(t.n),e:bigIntegerToUintBase64url$5(t.e),d:bigIntegerToUintBase64url$5(t.d),p:bigIntegerToUintBase64url$5(t.p),q:bigIntegerToUintBase64url$5(t.q),dp:bigIntegerToUintBase64url$5(t.dP),dq:bigIntegerToUintBase64url$5(t.dQ),qi:bigIntegerToUintBase64url$5(t.qInv),alg:"RS256"}}function jwkToPkcs1$5(r){if(r.n==null||r.e==null||r.d==null||r.p==null||r.q==null||r.dp==null||r.dq==null||r.qi==null)throw new CodeError$e("JWK was missing components","ERR_INVALID_PARAMETERS");const e=forge$n.pki.privateKeyToAsn1({n:base64urlToBigInteger$5(r.n),e:base64urlToBigInteger$5(r.e),d:base64urlToBigInteger$5(r.d),p:base64urlToBigInteger$5(r.p),q:base64urlToBigInteger$5(r.q),dP:base64urlToBigInteger$5(r.dp),dQ:base64urlToBigInteger$5(r.dq),qInv:base64urlToBigInteger$5(r.qi)});return fromString$b(forge$n.asn1.toDer(e).getBytes(),"ascii")}function pkixToJwk$5(r){const e=forge$n.asn1.fromDer(toString$b(r,"ascii")),t=forge$n.pki.publicKeyFromAsn1(e);return{kty:"RSA",n:bigIntegerToUintBase64url$5(t.n),e:bigIntegerToUintBase64url$5(t.e)}}function jwkToPkix$5(r){if(r.n==null||r.e==null)throw new CodeError$e("JWK was missing components","ERR_INVALID_PARAMETERS");const e=forge$n.pki.publicKeyToAsn1({n:base64urlToBigInteger$5(r.n),e:base64urlToBigInteger$5(r.e)});return fromString$b(forge$n.asn1.toDer(e).getBytes(),"ascii")}async function generateKey$g(r){const e=await webcrypto$5.get().subtle.generateKey({name:"RSASSA-PKCS1-v1_5",modulusLength:r,publicExponent:new Uint8Array([1,0,1]),hash:{name:"SHA-256"}},!0,["sign","verify"]),t=await exportKey$5(e);return{privateKey:t[0],publicKey:t[1]}}async function unmarshalPrivateKey$8(r){const t=[await webcrypto$5.get().subtle.importKey("jwk",r,{name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-256"}},!0,["sign"]),await derivePublicFromPrivate$5(r)],n=await exportKey$5({privateKey:t[0],publicKey:t[1]});return{privateKey:n[0],publicKey:n[1]}}async function hashAndSign$g(r,e){const t=await webcrypto$5.get().subtle.importKey("jwk",r,{name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-256"}},!1,["sign"]),n=await webcrypto$5.get().subtle.sign({name:"RSASSA-PKCS1-v1_5"},t,Uint8Array.from(e));return new Uint8Array(n,0,n.byteLength)}async function hashAndVerify$g(r,e,t){const n=await webcrypto$5.get().subtle.importKey("jwk",r,{name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-256"}},!1,["verify"]);return webcrypto$5.get().subtle.verify({name:"RSASSA-PKCS1-v1_5"},n,e,t)}async function exportKey$5(r){if(r.privateKey==null||r.publicKey==null)throw new CodeError$e("Private and public key are required","ERR_INVALID_PARAMETERS");return Promise.all([webcrypto$5.get().subtle.exportKey("jwk",r.privateKey),webcrypto$5.get().subtle.exportKey("jwk",r.publicKey)])}async function derivePublicFromPrivate$5(r){return webcrypto$5.get().subtle.importKey("jwk",{kty:r.kty,n:r.n,e:r.e},{name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-256"}},!0,["verify"])}function convertKey$5(r,e,t,n){const i=e?jwk2pub$5(r):jwk2priv$5(r),o=toString$b(Uint8Array.from(t),"ascii"),a=n(o,i);return fromString$b(a,"ascii")}function encrypt$5(r,e){return convertKey$5(r,!0,e,(t,n)=>n.encrypt(t))}function decrypt$5(r,e){return convertKey$5(r,!1,e,(t,n)=>n.decrypt(t))}function keySize$5(r){if(r.kty!=="RSA")throw new CodeError$e("invalid key type","ERR_INVALID_KEY_TYPE");if(r.n==null)throw new CodeError$e("invalid key modulus","ERR_INVALID_KEY_MODULUS");return fromString$b(r.n,"base64url").length*8}const MAX_KEY_SIZE$5=8192;let RsaPublicKey$5=class{constructor(e){_(this,"_key");this._key=e}async verify(e,t){return hashAndVerify$g(this._key,t,e)}marshal(){return jwkToPkix$5(this._key)}get bytes(){return PublicKey$6.encode({Type:KeyType$6.RSA,Data:this.marshal()}).subarray()}encrypt(e){return encrypt$5(this._key,e)}equals(e){return equals$4(this.bytes,e.bytes)}async hash(){const{bytes:e}=await sha256$2.digest(this.bytes);return e}},RsaPrivateKey$5=class{constructor(e,t){_(this,"_key");_(this,"_publicKey");this._key=e,this._publicKey=t}genSecret(){return randomBytes$6(16)}async sign(e){return hashAndSign$g(this._key,e)}get public(){if(this._publicKey==null)throw new CodeError$e("public key not provided","ERR_PUBKEY_NOT_PROVIDED");return new RsaPublicKey$5(this._publicKey)}decrypt(e){return decrypt$5(this._key,e)}marshal(){return jwkToPkcs1$5(this._key)}get bytes(){return PrivateKey$6.encode({Type:KeyType$6.RSA,Data:this.marshal()}).subarray()}equals(e){return equals$4(this.bytes,e.bytes)}async hash(){const{bytes:e}=await sha256$2.digest(this.bytes);return e}async id(){const e=await this.public.hash();return toString$b(e,"base58btc")}async export(e,t="pkcs-8"){if(t==="pkcs-8"){const n=new forge$n.util.ByteBuffer(this.marshal()),i=forge$n.asn1.fromDer(n),o=forge$n.pki.privateKeyFromAsn1(i),a={algorithm:"aes256",count:1e4,saltSize:128/8,prfAlgorithm:"sha512"};return forge$n.pki.encryptRsaPrivateKey(o,e,a)}else{if(t==="libp2p-key")return exporter$6(this.bytes,e);throw new CodeError$e(`export format '${t}' is not supported`,"ERR_INVALID_EXPORT_FORMAT")}}};async function unmarshalRsaPrivateKey$5(r){const e=pkcs1ToJwk$5(r);if(keySize$5(e)>MAX_KEY_SIZE$5)throw new CodeError$e("key size is too large","ERR_KEY_SIZE_TOO_LARGE");const t=await unmarshalPrivateKey$8(e);return new RsaPrivateKey$5(t.privateKey,t.publicKey)}function unmarshalRsaPublicKey$5(r){const e=pkixToJwk$5(r);if(keySize$5(e)>MAX_KEY_SIZE$5)throw new CodeError$e("key size is too large","ERR_KEY_SIZE_TOO_LARGE");return new RsaPublicKey$5(e)}async function fromJwk$5(r){if(keySize$5(r)>MAX_KEY_SIZE$5)throw new CodeError$e("key size is too large","ERR_KEY_SIZE_TOO_LARGE");const e=await unmarshalPrivateKey$8(r);return new RsaPrivateKey$5(e.privateKey,e.publicKey)}async function generateKeyPair$h(r){if(r>MAX_KEY_SIZE$5)throw new CodeError$e("key size is too large","ERR_KEY_SIZE_TOO_LARGE");const e=await generateKey$g(r);return new RsaPrivateKey$5(e.privateKey,e.publicKey)}const RSA$5=Object.freeze(Object.defineProperty({__proto__:null,MAX_KEY_SIZE:MAX_KEY_SIZE$5,RsaPrivateKey:RsaPrivateKey$5,RsaPublicKey:RsaPublicKey$5,fromJwk:fromJwk$5,generateKeyPair:generateKeyPair$h,unmarshalRsaPrivateKey:unmarshalRsaPrivateKey$5,unmarshalRsaPublicKey:unmarshalRsaPublicKey$5},Symbol.toStringTag,{value:"Module"}));function generateKey$f(){return secp256k1.utils.randomPrivateKey()}async function hashAndSign$f(r,e){const{digest:t}=await sha256$2.digest(e);try{return secp256k1.sign(t,r).toDERRawBytes()}catch(n){throw new CodeError$e(String(n),"ERR_INVALID_INPUT")}}async function hashAndVerify$f(r,e,t){try{const{digest:n}=await sha256$2.digest(t);return secp256k1.verify(e,n,r)}catch(n){throw new CodeError$e(String(n),"ERR_INVALID_INPUT")}}function compressPublicKey$5(r){return secp256k1.ProjectivePoint.fromHex(r).toRawBytes(!0)}function validatePrivateKey$5(r){try{secp256k1.getPublicKey(r,!0)}catch(e){throw new CodeError$e(String(e),"ERR_INVALID_PRIVATE_KEY")}}function validatePublicKey$5(r){try{secp256k1.ProjectivePoint.fromHex(r)}catch(e){throw new CodeError$e(String(e),"ERR_INVALID_PUBLIC_KEY")}}function computePublicKey$5(r){try{return secp256k1.getPublicKey(r,!0)}catch(e){throw new CodeError$e(String(e),"ERR_INVALID_PRIVATE_KEY")}}let Secp256k1PublicKey$5=class{constructor(e){_(this,"_key");validatePublicKey$5(e),this._key=e}async verify(e,t){return hashAndVerify$f(this._key,t,e)}marshal(){return compressPublicKey$5(this._key)}get bytes(){return PublicKey$6.encode({Type:KeyType$6.Secp256k1,Data:this.marshal()}).subarray()}equals(e){return equals$4(this.bytes,e.bytes)}async hash(){const{bytes:e}=await sha256$2.digest(this.bytes);return e}},Secp256k1PrivateKey$5=class{constructor(e,t){_(this,"_key");_(this,"_publicKey");this._key=e,this._publicKey=t??computePublicKey$5(e),validatePrivateKey$5(this._key),validatePublicKey$5(this._publicKey)}async sign(e){return hashAndSign$f(this._key,e)}get public(){return new Secp256k1PublicKey$5(this._publicKey)}marshal(){return this._key}get bytes(){return PrivateKey$6.encode({Type:KeyType$6.Secp256k1,Data:this.marshal()}).subarray()}equals(e){return equals$4(this.bytes,e.bytes)}async hash(){const{bytes:e}=await sha256$2.digest(this.bytes);return e}async id(){const e=await this.public.hash();return toString$b(e,"base58btc")}async export(e,t="libp2p-key"){if(t==="libp2p-key")return exporter$6(this.bytes,e);throw new CodeError$e(`export format '${t}' is not supported`,"ERR_INVALID_EXPORT_FORMAT")}};function unmarshalSecp256k1PrivateKey$5(r){return new Secp256k1PrivateKey$5(r)}function unmarshalSecp256k1PublicKey$5(r){return new Secp256k1PublicKey$5(r)}async function generateKeyPair$g(){const r=generateKey$f();return new Secp256k1PrivateKey$5(r)}const Secp256k1$5=Object.freeze(Object.defineProperty({__proto__:null,Secp256k1PrivateKey:Secp256k1PrivateKey$5,Secp256k1PublicKey:Secp256k1PublicKey$5,generateKeyPair:generateKeyPair$g,unmarshalSecp256k1PrivateKey:unmarshalSecp256k1PrivateKey$5,unmarshalSecp256k1PublicKey:unmarshalSecp256k1PublicKey$5},Symbol.toStringTag,{value:"Module"})),supportedKeys$5={rsa:RSA$5,ed25519:Ed25519$5,secp256k1:Secp256k1$5};function unsupportedKey$5(r){const e=Object.keys(supportedKeys$5).join(" / ");return new CodeError$e(`invalid or unsupported key type ${r}. Must be ${e}`,"ERR_UNSUPPORTED_KEY_TYPE")}function unmarshalPublicKey$4(r){const e=PublicKey$6.decode(r),t=e.Data??new Uint8Array;switch(e.Type){case KeyType$6.RSA:return supportedKeys$5.rsa.unmarshalRsaPublicKey(t);case KeyType$6.Ed25519:return supportedKeys$5.ed25519.unmarshalEd25519PublicKey(t);case KeyType$6.Secp256k1:return supportedKeys$5.secp256k1.unmarshalSecp256k1PublicKey(t);default:throw unsupportedKey$5(e.Type??"RSA")}}function assign$4(r,e){for(const t in e)Object.defineProperty(r,t,{value:e[t],enumerable:!0,configurable:!0});return r}function createError$4(r,e,t){if(!r||typeof r=="string")throw new TypeError("Please pass an Error to err-code");t||(t={}),typeof e=="object"&&(t=e,e=""),e&&(t.code=e);try{return assign$4(r,t)}catch{t.message=r.message,t.stack=r.stack;const i=function(){};return i.prototype=Object.create(Object.getPrototypeOf(r)),assign$4(new i,t)}}var errCode$6=createError$4;const errCode$7=getDefaultExportFromCjs(errCode$6);var timestamp_min={exports:{}};(function(r){(function(){r.exports=T;var e=86400,t=3200,n=146097*t/400,i=e*n,o=1e3*i,a=864e13,c=4294967296,l=1e6,u="000000000",f=Math.trunc||function(L){var M=L-L%1;return M==0&&(L<0||L===0&&1/L!=1/0)?-0:M},g=T.prototype,$=(T.fromDate=function(L){return new T(+L)},T.fromInt64BE=D(0,1,2,3,0,4),T.fromInt64LE=D(3,2,1,0,4,0),T.fromString=function(z){var M,U=new T,z=(z+="").replace(/^\s*[+\-]?\d+/,function(j){var j=+j,B=1970+(j-1970)%400;return U.year=j-B,B}).replace(/(?:Z|([+\-]\d{2}):?(\d{2}))$/,function(Y,j,B){return j<0&&(B*=-1),M=6e4*(60*+j+ +B),""}).replace(/\.\d+$/,function(Y){return U.nano=+(Y+u).substr(1,9),""}).split(/\D+/);if(1<z.length?z[1]--:z[1]=0,U.time=M=Date.UTC.apply(Date,z)-(M||0),isNaN(M))throw new TypeError("Invalid Date");return I(U)},T.fromTimeT=function(L){return P(L,0)},g.year=0,g.time=0,g.nano=0,g.addNano=function(L){return this.nano+=+L||0,this},g.getNano=function(){var L=I(this);return(L.time%1e3*l+ +L.nano+1e9)%1e9},g.getTimeT=function(){var M=I(this),L=Math.floor(M.time/1e3),M=M.year;return M&&(L+=M*n*e/t),L},g.getYear=function(){return this.toDate().getUTCFullYear()+this.year},g.toDate=function(){return A(I(this).time)},g.toJSON=function(){return this.toString().replace(/0{1,6}Z$/,"Z")},g.toString=function(L){var M=this,U=M.toDate(),z={H:function(){return k(U.getUTCHours())},L:function(){return N(U.getUTCMilliseconds(),3)},M:function(){return k(U.getUTCMinutes())},N:function(){return N(M.getNano(),9)},S:function(){return k(U.getUTCSeconds())},Y:function(){var Y=M.getYear();return 999999<Y?"+"+Y:9999<Y?"+"+N(Y,6):0<=Y?N(Y,4):-999999<=Y?"-"+N(-Y,6):Y},a:function(){return E[U.getUTCDay()]},b:function(){return S[U.getUTCMonth()]},d:function(){return k(U.getUTCDate())},e:function(){return function(Y){return(9<Y?"":" ")+(0|Y)}(U.getUTCDate())},m:function(){return k(U.getUTCMonth()+1)}};return function Y(j){return j.replace(/%./g,function(B){var G=B[1],H=v[G],G=z[G];return H?Y(H):G?G():B})}(L||$)},g.writeInt64BE=x(0,1,2,3,0,4),g.writeInt64LE=x(3,2,1,0,4,0),"%Y-%m-%dT%H:%M:%S.%NZ"),S=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],E=["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],v={"%":"%",F:"%Y-%m-%d",n:`
`,R:"%H:%M",T:"%H:%M:%S",t:"	",X:"%T",Z:"GMT",z:"+0000"};return T;function T(L,M,U){var z=this;if(!(z instanceof T))return new T(L,M,U);z.time=+L||0,z.nano=+M||0,z.year=+U||0,I(z)}function I(L){var M,U,z,Y=L.year,j=L.time,B=L.nano,H=((B<0||l<=B)&&(B-=(U=Math.floor(B/l))*l,j+=U,U=1),Y%t);return(j<-a||a<j||H)&&((M=f(j/o))&&(Y+=M*t,j-=M*o),(z=A(j)).setUTCFullYear(H+z.getUTCFullYear()),z=(j=+z)+(M=f((Y-=H)/t))*o,M&&-a<=z&&z<=a&&(Y-=M*t,j=z),U=1),U&&(L.year=Y,L.time=j,L.nano=B),L}function A(L){var M=new Date(0);return M.setTime(L),M}function P(Y,z){Y=+Y||0;var U=f((z=(z|0)*c)/i)+f(Y/i),z=z%i+Y%i,Y=f(z/i);return Y&&(U+=Y,z-=Y*i),new T(1e3*z,0,U*t)}function x(L,M,U,z,Y,j){return function(H,G){var O=I(this);H=H||new Array(8),C(H,G|=0);var Q=Math.floor(O.time/1e3),O=O.year*(n*e/t),q=f(O/c)+f(Q/c),O=O%c+Q%c,Q=Math.floor(O/c);return Q&&(q+=Q,O-=Q*c),B(H,G+Y,q),B(H,G+j,O),H};function B(H,G,q){H[G+L]=q>>24&255,H[G+M]=q>>16&255,H[G+U]=q>>8&255,H[G+z]=255&q}}function D(L,M,U,z,Y,j){return function(H,G){C(H,G|=0);var q=B(H,G+Y);return P(B(H,G+j),q)};function B(H,G){return 16777216*H[G+L]+(H[G+M]<<16|H[G+U]<<8|H[G+z])}}function C(L,M){if(L=L&&L.length,L==null)throw new TypeError("Invalid Buffer");if(L<M+8)throw new RangeError("Out of range")}function k(L){return(9<L?"":"0")+(0|L)}function N(L,M){return(u+(0|L)).substr(-M)}})()})(timestamp_min);var timestamp_minExports=timestamp_min.exports;const NanoDate=getDefaultExportFromCjs(timestamp_minExports),ERR_IPNS_EXPIRED_RECORD$1="ERR_IPNS_EXPIRED_RECORD",ERR_UNRECOGNIZED_VALIDITY$1="ERR_UNRECOGNIZED_VALIDITY",ERR_SIGNATURE_VERIFICATION$1="ERR_SIGNATURE_VERIFICATION",ERR_UNRECOGNIZED_FORMAT$1="ERR_UNRECOGNIZED_FORMAT",ERR_UNDEFINED_PARAMETER$1="ERR_UNDEFINED_PARAMETER",ERR_INVALID_RECORD_DATA$1="ERR_INVALID_RECORD_DATA",ERR_INVALID_VALUE$1="ERR_INVALID_VALUE",ERR_INVALID_EMBEDDED_KEY$1="ERR_INVALID_EMBEDDED_KEY",ERR_RECORD_TOO_LARGE$1="ERR_RECORD_TOO_LARGE";var IpnsEntry$1;(function(r){(function(n){n.EOL="EOL"})(r.ValidityType||(r.ValidityType={}));let e;(function(n){n[n.EOL=0]="EOL"})(e||(e={})),function(n){n.codec=()=>enumeration(e)}(r.ValidityType||(r.ValidityType={}));let t;r.codec=()=>(t==null&&(t=message((n,i,o={})=>{o.lengthDelimited!==!1&&i.fork(),n.value!=null&&(i.uint32(10),i.bytes(n.value)),n.signatureV1!=null&&(i.uint32(18),i.bytes(n.signatureV1)),n.validityType!=null&&(i.uint32(24),r.ValidityType.codec().encode(n.validityType,i)),n.validity!=null&&(i.uint32(34),i.bytes(n.validity)),n.sequence!=null&&(i.uint32(40),i.uint64(n.sequence)),n.ttl!=null&&(i.uint32(48),i.uint64(n.ttl)),n.pubKey!=null&&(i.uint32(58),i.bytes(n.pubKey)),n.signatureV2!=null&&(i.uint32(66),i.bytes(n.signatureV2)),n.data!=null&&(i.uint32(74),i.bytes(n.data)),o.lengthDelimited!==!1&&i.ldelim()},(n,i)=>{const o={},a=i==null?n.len:n.pos+i;for(;n.pos<a;){const c=n.uint32();switch(c>>>3){case 1:o.value=n.bytes();break;case 2:o.signatureV1=n.bytes();break;case 3:o.validityType=r.ValidityType.codec().decode(n);break;case 4:o.validity=n.bytes();break;case 5:o.sequence=n.uint64();break;case 6:o.ttl=n.uint64();break;case 7:o.pubKey=n.bytes();break;case 8:o.signatureV2=n.bytes();break;case 9:o.data=n.bytes();break;default:n.skipType(c&7);break}}return o})),t),r.encode=n=>encodeMessage(n,r.codec()),r.decode=n=>decodeMessage$1(n,r.codec())})(IpnsEntry$1||(IpnsEntry$1={}));const typeofs=["string","number","bigint","symbol"],objectTypeNames=["Function","Generator","AsyncGenerator","GeneratorFunction","AsyncGeneratorFunction","AsyncFunction","Observable","Array","Buffer","Object","RegExp","Date","Error","Map","Set","WeakMap","WeakSet","ArrayBuffer","SharedArrayBuffer","DataView","Promise","URL","HTMLElement","Int8Array","Uint8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","BigInt64Array","BigUint64Array"];function is(r){if(r===null)return"null";if(r===void 0)return"undefined";if(r===!0||r===!1)return"boolean";const e=typeof r;if(typeofs.includes(e))return e;if(e==="function")return"Function";if(Array.isArray(r))return"Array";if(isBuffer$1(r))return"Buffer";const t=getObjectType(r);return t||"Object"}function isBuffer$1(r){return r&&r.constructor&&r.constructor.isBuffer&&r.constructor.isBuffer.call(null,r)}function getObjectType(r){const e=Object.prototype.toString.call(r).slice(8,-1);if(objectTypeNames.includes(e))return e}class Type{constructor(e,t,n){this.major=e,this.majorEncoded=e<<5,this.name=t,this.terminal=n}toString(){return`Type[${this.major}].${this.name}`}compare(e){return this.major<e.major?-1:this.major>e.major?1:0}}Type.uint=new Type(0,"uint",!0);Type.negint=new Type(1,"negint",!0);Type.bytes=new Type(2,"bytes",!0);Type.string=new Type(3,"string",!0);Type.array=new Type(4,"array",!1);Type.map=new Type(5,"map",!1);Type.tag=new Type(6,"tag",!1);Type.float=new Type(7,"float",!0);Type.false=new Type(7,"false",!0);Type.true=new Type(7,"true",!0);Type.null=new Type(7,"null",!0);Type.undefined=new Type(7,"undefined",!0);Type.break=new Type(7,"break",!0);class Token{constructor(e,t,n){this.type=e,this.value=t,this.encodedLength=n,this.encodedBytes=void 0,this.byteValue=void 0}toString(){return`Token[${this.type}].${this.value}`}}const useBuffer=globalThis.process&&!globalThis.process.browser&&globalThis.Buffer&&typeof globalThis.Buffer.isBuffer=="function",textDecoder$1=new TextDecoder,textEncoder$1=new TextEncoder;function isBuffer(r){return useBuffer&&globalThis.Buffer.isBuffer(r)}const toString$7=useBuffer?(r,e,t)=>t-e>64?globalThis.Buffer.from(r.subarray(e,t)).toString("utf8"):utf8Slice(r,e,t):(r,e,t)=>t-e>64?textDecoder$1.decode(r.subarray(e,t)):utf8Slice(r,e,t),fromString$7=useBuffer?r=>r.length>64?globalThis.Buffer.from(r):utf8ToBytes(r):r=>r.length>64?textEncoder$1.encode(r):utf8ToBytes(r),slice=useBuffer?(r,e,t)=>isBuffer(r)?new Uint8Array(r.subarray(e,t)):r.slice(e,t):(r,e,t)=>r.slice(e,t);function compare(r,e){if(isBuffer(r)&&isBuffer(e))return r.compare(e);for(let t=0;t<r.length;t++)if(r[t]!==e[t])return r[t]<e[t]?-1:1;return 0}function utf8ToBytes(r){const e=[];let t=0;for(let n=0;n<r.length;n++){let i=r.charCodeAt(n);i<128?e[t++]=i:i<2048?(e[t++]=i>>6|192,e[t++]=i&63|128):(i&64512)===55296&&n+1<r.length&&(r.charCodeAt(n+1)&64512)===56320?(i=65536+((i&1023)<<10)+(r.charCodeAt(++n)&1023),e[t++]=i>>18|240,e[t++]=i>>12&63|128,e[t++]=i>>6&63|128,e[t++]=i&63|128):(e[t++]=i>>12|224,e[t++]=i>>6&63|128,e[t++]=i&63|128)}return e}function utf8Slice(r,e,t){const n=[];for(;e<t;){const i=r[e];let o=null,a=i>239?4:i>223?3:i>191?2:1;if(e+a<=t){let c,l,u,f;switch(a){case 1:i<128&&(o=i);break;case 2:c=r[e+1],(c&192)===128&&(f=(i&31)<<6|c&63,f>127&&(o=f));break;case 3:c=r[e+1],l=r[e+2],(c&192)===128&&(l&192)===128&&(f=(i&15)<<12|(c&63)<<6|l&63,f>2047&&(f<55296||f>57343)&&(o=f));break;case 4:c=r[e+1],l=r[e+2],u=r[e+3],(c&192)===128&&(l&192)===128&&(u&192)===128&&(f=(i&15)<<18|(c&63)<<12|(l&63)<<6|u&63,f>65535&&f<1114112&&(o=f))}}o===null?(o=65533,a=1):o>65535&&(o-=65536,n.push(o>>>10&1023|55296),o=56320|o&1023),n.push(o),e+=a}return decodeCodePointsArray(n)}const MAX_ARGUMENTS_LENGTH=4096;function decodeCodePointsArray(r){const e=r.length;if(e<=MAX_ARGUMENTS_LENGTH)return String.fromCharCode.apply(String,r);let t="",n=0;for(;n<e;)t+=String.fromCharCode.apply(String,r.slice(n,n+=MAX_ARGUMENTS_LENGTH));return t}const decodeErrPrefix="CBOR decode error:",encodeErrPrefix="CBOR encode error:";function assertEnoughData(r,e,t){if(r.length-e<t)throw new Error(`${decodeErrPrefix} not enough data for type`)}const uintBoundaries=[24,256,65536,4294967296,BigInt("18446744073709551616")];function readUint8(r,e,t){assertEnoughData(r,e,1);const n=r[e];if(t.strict===!0&&n<uintBoundaries[0])throw new Error(`${decodeErrPrefix} integer encoded in more bytes than necessary (strict decode)`);return n}function readUint16(r,e,t){assertEnoughData(r,e,2);const n=r[e]<<8|r[e+1];if(t.strict===!0&&n<uintBoundaries[1])throw new Error(`${decodeErrPrefix} integer encoded in more bytes than necessary (strict decode)`);return n}function readUint32(r,e,t){assertEnoughData(r,e,4);const n=r[e]*16777216+(r[e+1]<<16)+(r[e+2]<<8)+r[e+3];if(t.strict===!0&&n<uintBoundaries[2])throw new Error(`${decodeErrPrefix} integer encoded in more bytes than necessary (strict decode)`);return n}function readUint64(r,e,t){assertEnoughData(r,e,8);const n=r[e]*16777216+(r[e+1]<<16)+(r[e+2]<<8)+r[e+3],i=r[e+4]*16777216+(r[e+5]<<16)+(r[e+6]<<8)+r[e+7],o=(BigInt(n)<<BigInt(32))+BigInt(i);if(t.strict===!0&&o<uintBoundaries[3])throw new Error(`${decodeErrPrefix} integer encoded in more bytes than necessary (strict decode)`);if(o<=Number.MAX_SAFE_INTEGER)return Number(o);if(t.allowBigInt===!0)return o;throw new Error(`${decodeErrPrefix} integers outside of the safe integer range are not supported`)}function decodeUint8(r,e,t,n){return new Token(Type.uint,readUint8(r,e+1,n),2)}function decodeUint16(r,e,t,n){return new Token(Type.uint,readUint16(r,e+1,n),3)}function decodeUint32(r,e,t,n){return new Token(Type.uint,readUint32(r,e+1,n),5)}function decodeUint64(r,e,t,n){return new Token(Type.uint,readUint64(r,e+1,n),9)}function encodeUint(r,e){return encodeUintValue(r,0,e.value)}function encodeUintValue(r,e,t){if(t<uintBoundaries[0]){const n=Number(t);r.push([e|n])}else if(t<uintBoundaries[1]){const n=Number(t);r.push([e|24,n])}else if(t<uintBoundaries[2]){const n=Number(t);r.push([e|25,n>>>8,n&255])}else if(t<uintBoundaries[3]){const n=Number(t);r.push([e|26,n>>>24&255,n>>>16&255,n>>>8&255,n&255])}else{const n=BigInt(t);if(n<uintBoundaries[4]){const i=[e|27,0,0,0,0,0,0,0];let o=Number(n&BigInt(4294967295)),a=Number(n>>BigInt(32)&BigInt(4294967295));i[8]=o&255,o=o>>8,i[7]=o&255,o=o>>8,i[6]=o&255,o=o>>8,i[5]=o&255,i[4]=a&255,a=a>>8,i[3]=a&255,a=a>>8,i[2]=a&255,a=a>>8,i[1]=a&255,r.push(i)}else throw new Error(`${decodeErrPrefix} encountered BigInt larger than allowable range`)}}encodeUint.encodedSize=function r(e){return encodeUintValue.encodedSize(e.value)};encodeUintValue.encodedSize=function r(e){return e<uintBoundaries[0]?1:e<uintBoundaries[1]?2:e<uintBoundaries[2]?3:e<uintBoundaries[3]?5:9};encodeUint.compareTokens=function r(e,t){return e.value<t.value?-1:e.value>t.value?1:0};function decodeNegint8(r,e,t,n){return new Token(Type.negint,-1-readUint8(r,e+1,n),2)}function decodeNegint16(r,e,t,n){return new Token(Type.negint,-1-readUint16(r,e+1,n),3)}function decodeNegint32(r,e,t,n){return new Token(Type.negint,-1-readUint32(r,e+1,n),5)}const neg1b=BigInt(-1),pos1b=BigInt(1);function decodeNegint64(r,e,t,n){const i=readUint64(r,e+1,n);if(typeof i!="bigint"){const o=-1-i;if(o>=Number.MIN_SAFE_INTEGER)return new Token(Type.negint,o,9)}if(n.allowBigInt!==!0)throw new Error(`${decodeErrPrefix} integers outside of the safe integer range are not supported`);return new Token(Type.negint,neg1b-BigInt(i),9)}function encodeNegint(r,e){const t=e.value,n=typeof t=="bigint"?t*neg1b-pos1b:t*-1-1;encodeUintValue(r,e.type.majorEncoded,n)}encodeNegint.encodedSize=function r(e){const t=e.value,n=typeof t=="bigint"?t*neg1b-pos1b:t*-1-1;return n<uintBoundaries[0]?1:n<uintBoundaries[1]?2:n<uintBoundaries[2]?3:n<uintBoundaries[3]?5:9};encodeNegint.compareTokens=function r(e,t){return e.value<t.value?1:e.value>t.value?-1:0};function toToken$3(r,e,t,n){assertEnoughData(r,e,t+n);const i=slice(r,e+t,e+t+n);return new Token(Type.bytes,i,t+n)}function decodeBytesCompact(r,e,t,n){return toToken$3(r,e,1,t)}function decodeBytes8(r,e,t,n){return toToken$3(r,e,2,readUint8(r,e+1,n))}function decodeBytes16(r,e,t,n){return toToken$3(r,e,3,readUint16(r,e+1,n))}function decodeBytes32(r,e,t,n){return toToken$3(r,e,5,readUint32(r,e+1,n))}function decodeBytes64(r,e,t,n){const i=readUint64(r,e+1,n);if(typeof i=="bigint")throw new Error(`${decodeErrPrefix} 64-bit integer bytes lengths not supported`);return toToken$3(r,e,9,i)}function tokenBytes(r){return r.encodedBytes===void 0&&(r.encodedBytes=r.type===Type.string?fromString$7(r.value):r.value),r.encodedBytes}function encodeBytes(r,e){const t=tokenBytes(e);encodeUintValue(r,e.type.majorEncoded,t.length),r.push(t)}encodeBytes.encodedSize=function r(e){const t=tokenBytes(e);return encodeUintValue.encodedSize(t.length)+t.length};encodeBytes.compareTokens=function r(e,t){return compareBytes(tokenBytes(e),tokenBytes(t))};function compareBytes(r,e){return r.length<e.length?-1:r.length>e.length?1:compare(r,e)}function toToken$2(r,e,t,n,i){const o=t+n;assertEnoughData(r,e,o);const a=new Token(Type.string,toString$7(r,e+t,e+o),o);return i.retainStringBytes===!0&&(a.byteValue=slice(r,e+t,e+o)),a}function decodeStringCompact(r,e,t,n){return toToken$2(r,e,1,t,n)}function decodeString8(r,e,t,n){return toToken$2(r,e,2,readUint8(r,e+1,n),n)}function decodeString16(r,e,t,n){return toToken$2(r,e,3,readUint16(r,e+1,n),n)}function decodeString32(r,e,t,n){return toToken$2(r,e,5,readUint32(r,e+1,n),n)}function decodeString64(r,e,t,n){const i=readUint64(r,e+1,n);if(typeof i=="bigint")throw new Error(`${decodeErrPrefix} 64-bit integer string lengths not supported`);return toToken$2(r,e,9,i,n)}const encodeString=encodeBytes;function toToken$1(r,e,t,n){return new Token(Type.array,n,t)}function decodeArrayCompact(r,e,t,n){return toToken$1(r,e,1,t)}function decodeArray8(r,e,t,n){return toToken$1(r,e,2,readUint8(r,e+1,n))}function decodeArray16(r,e,t,n){return toToken$1(r,e,3,readUint16(r,e+1,n))}function decodeArray32(r,e,t,n){return toToken$1(r,e,5,readUint32(r,e+1,n))}function decodeArray64(r,e,t,n){const i=readUint64(r,e+1,n);if(typeof i=="bigint")throw new Error(`${decodeErrPrefix} 64-bit integer array lengths not supported`);return toToken$1(r,e,9,i)}function decodeArrayIndefinite(r,e,t,n){if(n.allowIndefinite===!1)throw new Error(`${decodeErrPrefix} indefinite length items not allowed`);return toToken$1(r,e,1,1/0)}function encodeArray(r,e){encodeUintValue(r,Type.array.majorEncoded,e.value)}encodeArray.compareTokens=encodeUint.compareTokens;encodeArray.encodedSize=function r(e){return encodeUintValue.encodedSize(e.value)};function toToken(r,e,t,n){return new Token(Type.map,n,t)}function decodeMapCompact(r,e,t,n){return toToken(r,e,1,t)}function decodeMap8(r,e,t,n){return toToken(r,e,2,readUint8(r,e+1,n))}function decodeMap16(r,e,t,n){return toToken(r,e,3,readUint16(r,e+1,n))}function decodeMap32(r,e,t,n){return toToken(r,e,5,readUint32(r,e+1,n))}function decodeMap64(r,e,t,n){const i=readUint64(r,e+1,n);if(typeof i=="bigint")throw new Error(`${decodeErrPrefix} 64-bit integer map lengths not supported`);return toToken(r,e,9,i)}function decodeMapIndefinite(r,e,t,n){if(n.allowIndefinite===!1)throw new Error(`${decodeErrPrefix} indefinite length items not allowed`);return toToken(r,e,1,1/0)}function encodeMap(r,e){encodeUintValue(r,Type.map.majorEncoded,e.value)}encodeMap.compareTokens=encodeUint.compareTokens;encodeMap.encodedSize=function r(e){return encodeUintValue.encodedSize(e.value)};function decodeTagCompact(r,e,t,n){return new Token(Type.tag,t,1)}function decodeTag8(r,e,t,n){return new Token(Type.tag,readUint8(r,e+1,n),2)}function decodeTag16(r,e,t,n){return new Token(Type.tag,readUint16(r,e+1,n),3)}function decodeTag32(r,e,t,n){return new Token(Type.tag,readUint32(r,e+1,n),5)}function decodeTag64(r,e,t,n){return new Token(Type.tag,readUint64(r,e+1,n),9)}function encodeTag(r,e){encodeUintValue(r,Type.tag.majorEncoded,e.value)}encodeTag.compareTokens=encodeUint.compareTokens;encodeTag.encodedSize=function r(e){return encodeUintValue.encodedSize(e.value)};const MINOR_FALSE=20,MINOR_TRUE=21,MINOR_NULL=22,MINOR_UNDEFINED=23;function decodeUndefined(r,e,t,n){if(n.allowUndefined===!1)throw new Error(`${decodeErrPrefix} undefined values are not supported`);return n.coerceUndefinedToNull===!0?new Token(Type.null,null,1):new Token(Type.undefined,void 0,1)}function decodeBreak(r,e,t,n){if(n.allowIndefinite===!1)throw new Error(`${decodeErrPrefix} indefinite length items not allowed`);return new Token(Type.break,void 0,1)}function createToken(r,e,t){if(t){if(t.allowNaN===!1&&Number.isNaN(r))throw new Error(`${decodeErrPrefix} NaN values are not supported`);if(t.allowInfinity===!1&&(r===1/0||r===-1/0))throw new Error(`${decodeErrPrefix} Infinity values are not supported`)}return new Token(Type.float,r,e)}function decodeFloat16(r,e,t,n){return createToken(readFloat16(r,e+1),3,n)}function decodeFloat32(r,e,t,n){return createToken(readFloat32(r,e+1),5,n)}function decodeFloat64(r,e,t,n){return createToken(readFloat64(r,e+1),9,n)}function encodeFloat(r,e,t){const n=e.value;if(n===!1)r.push([Type.float.majorEncoded|MINOR_FALSE]);else if(n===!0)r.push([Type.float.majorEncoded|MINOR_TRUE]);else if(n===null)r.push([Type.float.majorEncoded|MINOR_NULL]);else if(n===void 0)r.push([Type.float.majorEncoded|MINOR_UNDEFINED]);else{let i,o=!1;(!t||t.float64!==!0)&&(encodeFloat16(n),i=readFloat16(ui8a,1),n===i||Number.isNaN(n)?(ui8a[0]=249,r.push(ui8a.slice(0,3)),o=!0):(encodeFloat32(n),i=readFloat32(ui8a,1),n===i&&(ui8a[0]=250,r.push(ui8a.slice(0,5)),o=!0))),o||(encodeFloat64(n),i=readFloat64(ui8a,1),ui8a[0]=251,r.push(ui8a.slice(0,9)))}}encodeFloat.encodedSize=function r(e,t){const n=e.value;if(n===!1||n===!0||n===null||n===void 0)return 1;if(!t||t.float64!==!0){encodeFloat16(n);let i=readFloat16(ui8a,1);if(n===i||Number.isNaN(n))return 3;if(encodeFloat32(n),i=readFloat32(ui8a,1),n===i)return 5}return 9};const buffer=new ArrayBuffer(9),dataView=new DataView(buffer,1),ui8a=new Uint8Array(buffer,0);function encodeFloat16(r){if(r===1/0)dataView.setUint16(0,31744,!1);else if(r===-1/0)dataView.setUint16(0,64512,!1);else if(Number.isNaN(r))dataView.setUint16(0,32256,!1);else{dataView.setFloat32(0,r);const e=dataView.getUint32(0),t=(e&2139095040)>>23,n=e&8388607;if(t===255)dataView.setUint16(0,31744,!1);else if(t===0)dataView.setUint16(0,(r&2147483648)>>16|n>>13,!1);else{const i=t-127;i<-24?dataView.setUint16(0,0):i<-14?dataView.setUint16(0,(e&2147483648)>>16|1<<24+i,!1):dataView.setUint16(0,(e&2147483648)>>16|i+15<<10|n>>13,!1)}}}function readFloat16(r,e){if(r.length-e<2)throw new Error(`${decodeErrPrefix} not enough data for float16`);const t=(r[e]<<8)+r[e+1];if(t===31744)return 1/0;if(t===64512)return-1/0;if(t===32256)return NaN;const n=t>>10&31,i=t&1023;let o;return n===0?o=i*2**-24:n!==31?o=(i+1024)*2**(n-25):o=i===0?1/0:NaN,t&32768?-o:o}function encodeFloat32(r){dataView.setFloat32(0,r,!1)}function readFloat32(r,e){if(r.length-e<4)throw new Error(`${decodeErrPrefix} not enough data for float32`);const t=(r.byteOffset||0)+e;return new DataView(r.buffer,t,4).getFloat32(0,!1)}function encodeFloat64(r){dataView.setFloat64(0,r,!1)}function readFloat64(r,e){if(r.length-e<8)throw new Error(`${decodeErrPrefix} not enough data for float64`);const t=(r.byteOffset||0)+e;return new DataView(r.buffer,t,8).getFloat64(0,!1)}encodeFloat.compareTokens=encodeUint.compareTokens;function invalidMinor(r,e,t){throw new Error(`${decodeErrPrefix} encountered invalid minor (${t}) for major ${r[e]>>>5}`)}function errorer(r){return()=>{throw new Error(`${decodeErrPrefix} ${r}`)}}const jump=[];for(let r=0;r<=23;r++)jump[r]=invalidMinor;jump[24]=decodeUint8;jump[25]=decodeUint16;jump[26]=decodeUint32;jump[27]=decodeUint64;jump[28]=invalidMinor;jump[29]=invalidMinor;jump[30]=invalidMinor;jump[31]=invalidMinor;for(let r=32;r<=55;r++)jump[r]=invalidMinor;jump[56]=decodeNegint8;jump[57]=decodeNegint16;jump[58]=decodeNegint32;jump[59]=decodeNegint64;jump[60]=invalidMinor;jump[61]=invalidMinor;jump[62]=invalidMinor;jump[63]=invalidMinor;for(let r=64;r<=87;r++)jump[r]=decodeBytesCompact;jump[88]=decodeBytes8;jump[89]=decodeBytes16;jump[90]=decodeBytes32;jump[91]=decodeBytes64;jump[92]=invalidMinor;jump[93]=invalidMinor;jump[94]=invalidMinor;jump[95]=errorer("indefinite length bytes/strings are not supported");for(let r=96;r<=119;r++)jump[r]=decodeStringCompact;jump[120]=decodeString8;jump[121]=decodeString16;jump[122]=decodeString32;jump[123]=decodeString64;jump[124]=invalidMinor;jump[125]=invalidMinor;jump[126]=invalidMinor;jump[127]=errorer("indefinite length bytes/strings are not supported");for(let r=128;r<=151;r++)jump[r]=decodeArrayCompact;jump[152]=decodeArray8;jump[153]=decodeArray16;jump[154]=decodeArray32;jump[155]=decodeArray64;jump[156]=invalidMinor;jump[157]=invalidMinor;jump[158]=invalidMinor;jump[159]=decodeArrayIndefinite;for(let r=160;r<=183;r++)jump[r]=decodeMapCompact;jump[184]=decodeMap8;jump[185]=decodeMap16;jump[186]=decodeMap32;jump[187]=decodeMap64;jump[188]=invalidMinor;jump[189]=invalidMinor;jump[190]=invalidMinor;jump[191]=decodeMapIndefinite;for(let r=192;r<=215;r++)jump[r]=decodeTagCompact;jump[216]=decodeTag8;jump[217]=decodeTag16;jump[218]=decodeTag32;jump[219]=decodeTag64;jump[220]=invalidMinor;jump[221]=invalidMinor;jump[222]=invalidMinor;jump[223]=invalidMinor;for(let r=224;r<=243;r++)jump[r]=errorer("simple values are not supported");jump[244]=invalidMinor;jump[245]=invalidMinor;jump[246]=invalidMinor;jump[247]=decodeUndefined;jump[248]=errorer("simple values are not supported");jump[249]=decodeFloat16;jump[250]=decodeFloat32;jump[251]=decodeFloat64;jump[252]=invalidMinor;jump[253]=invalidMinor;jump[254]=invalidMinor;jump[255]=decodeBreak;const quick=[];for(let r=0;r<24;r++)quick[r]=new Token(Type.uint,r,1);for(let r=-1;r>=-24;r--)quick[31-r]=new Token(Type.negint,r,1);quick[64]=new Token(Type.bytes,new Uint8Array(0),1);quick[96]=new Token(Type.string,"",1);quick[128]=new Token(Type.array,0,1);quick[160]=new Token(Type.map,0,1);quick[244]=new Token(Type.false,!1,1);quick[245]=new Token(Type.true,!0,1);quick[246]=new Token(Type.null,null,1);function makeCborEncoders(){const r=[];return r[Type.uint.major]=encodeUint,r[Type.negint.major]=encodeNegint,r[Type.bytes.major]=encodeBytes,r[Type.string.major]=encodeString,r[Type.array.major]=encodeArray,r[Type.map.major]=encodeMap,r[Type.tag.major]=encodeTag,r[Type.float.major]=encodeFloat,r}makeCborEncoders();class Ref{constructor(e,t){this.obj=e,this.parent=t}includes(e){let t=this;do if(t.obj===e)return!0;while(t=t.parent);return!1}static createCheck(e,t){if(e&&e.includes(t))throw new Error(`${encodeErrPrefix} object contains circular references`);return new Ref(t,e)}}const simpleTokens={null:new Token(Type.null,null),undefined:new Token(Type.undefined,void 0),true:new Token(Type.true,!0),false:new Token(Type.false,!1),emptyArray:new Token(Type.array,0),emptyMap:new Token(Type.map,0)},typeEncoders={number(r,e,t,n){return!Number.isInteger(r)||!Number.isSafeInteger(r)?new Token(Type.float,r):r>=0?new Token(Type.uint,r):new Token(Type.negint,r)},bigint(r,e,t,n){return r>=BigInt(0)?new Token(Type.uint,r):new Token(Type.negint,r)},Uint8Array(r,e,t,n){return new Token(Type.bytes,r)},string(r,e,t,n){return new Token(Type.string,r)},boolean(r,e,t,n){return r?simpleTokens.true:simpleTokens.false},null(r,e,t,n){return simpleTokens.null},undefined(r,e,t,n){return simpleTokens.undefined},ArrayBuffer(r,e,t,n){return new Token(Type.bytes,new Uint8Array(r))},DataView(r,e,t,n){return new Token(Type.bytes,new Uint8Array(r.buffer,r.byteOffset,r.byteLength))},Array(r,e,t,n){if(!r.length)return t.addBreakTokens===!0?[simpleTokens.emptyArray,new Token(Type.break)]:simpleTokens.emptyArray;n=Ref.createCheck(n,r);const i=[];let o=0;for(const a of r)i[o++]=objectToTokens(a,t,n);return t.addBreakTokens?[new Token(Type.array,r.length),i,new Token(Type.break)]:[new Token(Type.array,r.length),i]},Object(r,e,t,n){const i=e!=="Object",o=i?r.keys():Object.keys(r),a=i?r.size:o.length;if(!a)return t.addBreakTokens===!0?[simpleTokens.emptyMap,new Token(Type.break)]:simpleTokens.emptyMap;n=Ref.createCheck(n,r);const c=[];let l=0;for(const u of o)c[l++]=[objectToTokens(u,t,n),objectToTokens(i?r.get(u):r[u],t,n)];return sortMapEntries(c,t),t.addBreakTokens?[new Token(Type.map,a),c,new Token(Type.break)]:[new Token(Type.map,a),c]}};typeEncoders.Map=typeEncoders.Object;typeEncoders.Buffer=typeEncoders.Uint8Array;for(const r of"Uint8Clamped Uint16 Uint32 Int8 Int16 Int32 BigUint64 BigInt64 Float32 Float64".split(" "))typeEncoders[`${r}Array`]=typeEncoders.DataView;function objectToTokens(r,e={},t){const n=is(r),i=e&&e.typeEncoders&&e.typeEncoders[n]||typeEncoders[n];if(typeof i=="function"){const a=i(r,n,e,t);if(a!=null)return a}const o=typeEncoders[n];if(!o)throw new Error(`${encodeErrPrefix} unsupported type: ${n}`);return o(r,n,e,t)}function sortMapEntries(r,e){e.mapSorter&&r.sort(e.mapSorter)}const defaultDecodeOptions={strict:!1,allowIndefinite:!0,allowUndefined:!0,allowBigInt:!0};class Tokeniser{constructor(e,t={}){this._pos=0,this.data=e,this.options=t}pos(){return this._pos}done(){return this._pos>=this.data.length}next(){const e=this.data[this._pos];let t=quick[e];if(t===void 0){const n=jump[e];if(!n)throw new Error(`${decodeErrPrefix} no decoder for major type ${e>>>5} (byte 0x${e.toString(16).padStart(2,"0")})`);const i=e&31;t=n(this.data,this._pos,i,this.options)}return this._pos+=t.encodedLength,t}}const DONE=Symbol.for("DONE"),BREAK=Symbol.for("BREAK");function tokenToArray(r,e,t){const n=[];for(let i=0;i<r.value;i++){const o=tokensToObject(e,t);if(o===BREAK){if(r.value===1/0)break;throw new Error(`${decodeErrPrefix} got unexpected break to lengthed array`)}if(o===DONE)throw new Error(`${decodeErrPrefix} found array but not enough entries (got ${i}, expected ${r.value})`);n[i]=o}return n}function tokenToMap(r,e,t){const n=t.useMaps===!0,i=n?void 0:{},o=n?new Map:void 0;for(let a=0;a<r.value;a++){const c=tokensToObject(e,t);if(c===BREAK){if(r.value===1/0)break;throw new Error(`${decodeErrPrefix} got unexpected break to lengthed map`)}if(c===DONE)throw new Error(`${decodeErrPrefix} found map but not enough entries (got ${a} [no key], expected ${r.value})`);if(n!==!0&&typeof c!="string")throw new Error(`${decodeErrPrefix} non-string keys not supported (got ${typeof c})`);if(t.rejectDuplicateMapKeys===!0&&(n&&o.has(c)||!n&&c in i))throw new Error(`${decodeErrPrefix} found repeat map key "${c}"`);const l=tokensToObject(e,t);if(l===DONE)throw new Error(`${decodeErrPrefix} found map but not enough entries (got ${a} [no value], expected ${r.value})`);n?o.set(c,l):i[c]=l}return n?o:i}function tokensToObject(r,e){if(r.done())return DONE;const t=r.next();if(t.type===Type.break)return BREAK;if(t.type.terminal)return t.value;if(t.type===Type.array)return tokenToArray(t,r,e);if(t.type===Type.map)return tokenToMap(t,r,e);if(t.type===Type.tag){if(e.tags&&typeof e.tags[t.value]=="function"){const n=tokensToObject(r,e);return e.tags[t.value](n)}throw new Error(`${decodeErrPrefix} tag not supported (${t.value})`)}throw new Error("unsupported")}function decodeFirst(r,e){if(!(r instanceof Uint8Array))throw new Error(`${decodeErrPrefix} data to decode must be a Uint8Array`);e=Object.assign({},defaultDecodeOptions,e);const t=e.tokenizer||new Tokeniser(r,e),n=tokensToObject(t,e);if(n===DONE)throw new Error(`${decodeErrPrefix} did not find any content to decode`);if(n===BREAK)throw new Error(`${decodeErrPrefix} got unexpected break`);return[n,r.subarray(t.pos())]}function decode$a(r,e){const[t,n]=decodeFirst(r,e);if(n.length>0)throw new Error(`${decodeErrPrefix} too many terminals, data makes no sense`);return t}const log$L=logger$2("ipns:utils"),IPNS_PREFIX$2=fromString$b("/ipns/"),LIBP2P_CID_CODEC$1=114;function parseRFC3339$2(r){const e=new RegExp("(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2})\\.(\\d+)Z"),t=String(r).trim().match(e);if(t==null)throw new Error("Invalid format");const n=parseInt(t[1],10),i=parseInt(t[2],10)-1,o=parseInt(t[3],10),a=parseInt(t[4],10),c=parseInt(t[5],10),l=parseInt(t[6],10),u=parseInt(t[7].padEnd(6,"0").slice(0,3),10);return new Date(Date.UTC(n,i,o,a,c,l,u))}const extractPublicKey$1=async(r,e)=>{if(e==null||r==null){const n=new Error("one or more of the provided parameters are not defined");throw log$L.error(n),errCode$7(n,ERR_UNDEFINED_PARAMETER$1)}let t;if(e.pubKey!=null){try{t=unmarshalPublicKey$4(e.pubKey)}catch(i){throw log$L.error(i),i}if(!(await peerIdFromKeys$5(e.pubKey)).equals(r))throw errCode$7(new Error("Embedded public key did not match PeerID"),ERR_INVALID_EMBEDDED_KEY$1)}else r.publicKey!=null&&(t=unmarshalPublicKey$4(r.publicKey));if(t!=null)return t;throw errCode$7(new Error("no public key is available"),ERR_UNDEFINED_PARAMETER$1)},ipnsRecordDataForV2Sig$1=r=>{const e=fromString$b("ipns-signature:");return concat$6([e,r])},marshal=r=>"signatureV1"in r?IpnsEntry$1.encode({value:fromString$b(r.value),signatureV1:r.signatureV1,validityType:r.validityType,validity:fromString$b(r.validity.toString()),sequence:r.sequence,ttl:r.ttl,pubKey:r.pubKey,signatureV2:r.signatureV2,data:r.data}):IpnsEntry$1.encode({pubKey:r.pubKey,signatureV2:r.signatureV2,data:r.data});function unmarshal$1(r){const e=IpnsEntry$1.decode(r);if(e.sequence!=null&&(e.sequence=BigInt(e.sequence)),e.ttl!=null&&(e.ttl=BigInt(e.ttl)),e.signatureV2==null||e.data==null)throw errCode$7(new Error("missing data or signatureV2"),ERR_SIGNATURE_VERIFICATION$1);const t=parseCborData$1(e.data),n=normalizeValue$1(t.Value);let i;try{i=NanoDate.fromDate(parseRFC3339$2(toString$b(t.Validity)))}catch{throw log$L.error("unrecognized validity format (not an rfc3339 format)"),errCode$7(new Error("unrecognized validity format (not an rfc3339 format)"),ERR_UNRECOGNIZED_FORMAT$1)}if(e.value!=null&&e.signatureV1!=null)return validateCborDataMatchesPbData$1(e),{value:n,validityType:IpnsEntry$1.ValidityType.EOL,validity:i,sequence:t.Sequence,ttl:t.TTL,pubKey:e.pubKey,signatureV1:e.signatureV1,signatureV2:e.signatureV2,data:e.data};if(e.signatureV2!=null)return{value:n,validityType:IpnsEntry$1.ValidityType.EOL,validity:i,sequence:t.Sequence,ttl:t.TTL,pubKey:e.pubKey,signatureV2:e.signatureV2,data:e.data};throw new Error("invalid record: does not include signatureV1 or signatureV2")}const peerIdToRoutingKey=r=>concat$6([IPNS_PREFIX$2,r.toBytes()]),peerIdFromRoutingKey$2=r=>peerIdFromBytes$6(r.slice(IPNS_PREFIX$2.length)),parseCborData$1=r=>{const e=decode$a(r);if(e.ValidityType===0)e.ValidityType=IpnsEntry$1.ValidityType.EOL;else throw errCode$7(new Error("Unknown validity type"),ERR_UNRECOGNIZED_VALIDITY$1);return Number.isInteger(e.Sequence)&&(e.Sequence=BigInt(e.Sequence)),Number.isInteger(e.TTL)&&(e.TTL=BigInt(e.TTL)),e},normalizeValue$1=r=>{if(r!=null){if(isPeerId$2(r))return`/ipns/${r.toCID().toString(base36$4)}`;if(r instanceof Uint8Array){const n=toString$b(r);n.startsWith("/")&&(r=n)}const e=r.toString().trim();if(e.startsWith("/")&&e.length>1)return e;const t=CID$3.asCID(r);if(t!=null)return t.code===LIBP2P_CID_CODEC$1?`/ipns/${t.toString(base36$4)}`:`/ipfs/${t.toV1().toString()}`;try{return r instanceof Uint8Array?`/ipfs/${CID$3.decode(r).toV1().toString()}`:`/ipfs/${CID$3.parse(e).toV1().toString()}`}catch{}}throw errCode$7(new Error("Value must be a valid content path starting with /"),ERR_INVALID_VALUE$1)},validateCborDataMatchesPbData$1=r=>{if(r.data==null)throw errCode$7(new Error("Record data is missing"),ERR_INVALID_RECORD_DATA$1);const e=parseCborData$1(r.data);if(!equals$4(e.Value,r.value??new Uint8Array(0)))throw errCode$7(new Error('Field "value" did not match between protobuf and CBOR'),ERR_SIGNATURE_VERIFICATION$1);if(!equals$4(e.Validity,r.validity??new Uint8Array(0)))throw errCode$7(new Error('Field "validity" did not match between protobuf and CBOR'),ERR_SIGNATURE_VERIFICATION$1);if(e.ValidityType!==r.validityType)throw errCode$7(new Error('Field "validityType" did not match between protobuf and CBOR'),ERR_SIGNATURE_VERIFICATION$1);if(e.Sequence!==r.sequence)throw errCode$7(new Error('Field "sequence" did not match between protobuf and CBOR'),ERR_SIGNATURE_VERIFICATION$1);if(e.TTL!==r.ttl)throw errCode$7(new Error('Field "ttl" did not match between protobuf and CBOR'),ERR_SIGNATURE_VERIFICATION$1)};logger$2("ipns");identity$3.code;const log$K=logger$2("ipns:validator"),MAX_RECORD_SIZE$1=1024*10,validate$2=async(r,e)=>{const t=unmarshal$1(e);let n;try{const i=ipnsRecordDataForV2Sig$1(t.data);n=await r.verify(i,t.signatureV2)}catch{n=!1}if(!n)throw log$K.error("record signature verification failed"),errCode$7(new Error("record signature verification failed"),ERR_SIGNATURE_VERIFICATION$1);if(t.validityType===IpnsEntry$1.ValidityType.EOL){if(t.validity.toDate().getTime()<Date.now())throw log$K.error("record has expired"),errCode$7(new Error("record has expired"),ERR_IPNS_EXPIRED_RECORD$1)}else if(t.validityType!=null)throw log$K.error("unrecognized validity type"),errCode$7(new Error("unrecognized validity type"),ERR_UNRECOGNIZED_VALIDITY$1);log$K("ipns record for %b is valid",t.value)};async function ipnsValidator$1(r,e){if(e.byteLength>MAX_RECORD_SIZE$1)throw errCode$7(new Error("record too large"),ERR_RECORD_TOO_LARGE$1);const t=peerIdFromRoutingKey$2(r),n=unmarshal$1(e),i=await extractPublicKey$1(t,n);await validate$2(i,e)}async function*parse(r){const e=/\r?\n/,t=new TextDecoder("utf8");let n="";for await(let i of r){typeof i=="string"&&(i=new TextEncoder().encode(i)),n+=t.decode(i,{stream:!0});const o=n.split(e);n=o.pop()??"";for(let a=0;a<o.length;a++)yield JSON.parse(o[a])}n+=t.decode(),n!==""&&(yield JSON.parse(n))}var eventemitter3$1={exports:{}};(function(r){var e=Object.prototype.hasOwnProperty,t="~";function n(){}Object.create&&(n.prototype=Object.create(null),new n().__proto__||(t=!1));function i(l,u,f){this.fn=l,this.context=u,this.once=f||!1}function o(l,u,f,g,$){if(typeof f!="function")throw new TypeError("The listener must be a function");var S=new i(f,g||l,$),E=t?t+u:u;return l._events[E]?l._events[E].fn?l._events[E]=[l._events[E],S]:l._events[E].push(S):(l._events[E]=S,l._eventsCount++),l}function a(l,u){--l._eventsCount===0?l._events=new n:delete l._events[u]}function c(){this._events=new n,this._eventsCount=0}c.prototype.eventNames=function(){var u=[],f,g;if(this._eventsCount===0)return u;for(g in f=this._events)e.call(f,g)&&u.push(t?g.slice(1):g);return Object.getOwnPropertySymbols?u.concat(Object.getOwnPropertySymbols(f)):u},c.prototype.listeners=function(u){var f=t?t+u:u,g=this._events[f];if(!g)return[];if(g.fn)return[g.fn];for(var $=0,S=g.length,E=new Array(S);$<S;$++)E[$]=g[$].fn;return E},c.prototype.listenerCount=function(u){var f=t?t+u:u,g=this._events[f];return g?g.fn?1:g.length:0},c.prototype.emit=function(u,f,g,$,S,E){var v=t?t+u:u;if(!this._events[v])return!1;var T=this._events[v],I=arguments.length,A,P;if(T.fn){switch(T.once&&this.removeListener(u,T.fn,void 0,!0),I){case 1:return T.fn.call(T.context),!0;case 2:return T.fn.call(T.context,f),!0;case 3:return T.fn.call(T.context,f,g),!0;case 4:return T.fn.call(T.context,f,g,$),!0;case 5:return T.fn.call(T.context,f,g,$,S),!0;case 6:return T.fn.call(T.context,f,g,$,S,E),!0}for(P=1,A=new Array(I-1);P<I;P++)A[P-1]=arguments[P];T.fn.apply(T.context,A)}else{var x=T.length,D;for(P=0;P<x;P++)switch(T[P].once&&this.removeListener(u,T[P].fn,void 0,!0),I){case 1:T[P].fn.call(T[P].context);break;case 2:T[P].fn.call(T[P].context,f);break;case 3:T[P].fn.call(T[P].context,f,g);break;case 4:T[P].fn.call(T[P].context,f,g,$);break;default:if(!A)for(D=1,A=new Array(I-1);D<I;D++)A[D-1]=arguments[D];T[P].fn.apply(T[P].context,A)}}return!0},c.prototype.on=function(u,f,g){return o(this,u,f,g,!1)},c.prototype.once=function(u,f,g){return o(this,u,f,g,!0)},c.prototype.removeListener=function(u,f,g,$){var S=t?t+u:u;if(!this._events[S])return this;if(!f)return a(this,S),this;var E=this._events[S];if(E.fn)E.fn===f&&(!$||E.once)&&(!g||E.context===g)&&a(this,S);else{for(var v=0,T=[],I=E.length;v<I;v++)(E[v].fn!==f||$&&!E[v].once||g&&E[v].context!==g)&&T.push(E[v]);T.length?this._events[S]=T.length===1?T[0]:T:a(this,S)}return this},c.prototype.removeAllListeners=function(u){var f;return u?(f=t?t+u:u,this._events[f]&&a(this,f)):(this._events=new n,this._eventsCount=0),this},c.prototype.off=c.prototype.removeListener,c.prototype.addListener=c.prototype.on,c.prefixed=t,c.EventEmitter=c,r.exports=c})(eventemitter3$1);var eventemitter3Exports$1=eventemitter3$1.exports;const EventEmitter$1=getDefaultExportFromCjs(eventemitter3Exports$1);let TimeoutError$3=class extends Error{constructor(e){super(e),this.name="TimeoutError"}},AbortError$7=class extends Error{constructor(e){super(),this.name="AbortError",this.message=e}};const getDOMException$3=r=>globalThis.DOMException===void 0?new AbortError$7(r):new DOMException(r),getAbortedReason$3=r=>{const e=r.reason===void 0?getDOMException$3("This operation was aborted."):r.reason;return e instanceof Error?e:getDOMException$3(e)};function pTimeout$3(r,e,t,n){let i;const o=new Promise((a,c)=>{if(typeof e!="number"||Math.sign(e)!==1)throw new TypeError(`Expected \`milliseconds\` to be a positive number, got \`${e}\``);if(e===Number.POSITIVE_INFINITY){a(r);return}if(n={customTimers:{setTimeout,clearTimeout},...n},n.signal){const{signal:l}=n;l.aborted&&c(getAbortedReason$3(l)),l.addEventListener("abort",()=>{c(getAbortedReason$3(l))})}i=n.customTimers.setTimeout.call(void 0,()=>{if(typeof t=="function"){try{a(t())}catch(f){c(f)}return}const l=typeof t=="string"?t:`Promise timed out after ${e} milliseconds`,u=t instanceof Error?t:new TimeoutError$3(l);typeof r.cancel=="function"&&r.cancel(),c(u)},e),(async()=>{try{a(await r)}catch(l){c(l)}finally{n.customTimers.clearTimeout.call(void 0,i)}})()});return o.clear=()=>{clearTimeout(i),i=void 0},o}function lowerBound$2(r,e,t){let n=0,i=r.length;for(;i>0;){const o=Math.trunc(i/2);let a=n+o;t(r[a],e)<=0?(n=++a,i-=o+1):i=o}return n}var __classPrivateFieldGet$3=function(r,e,t,n){if(t==="a"&&!n)throw new TypeError("Private accessor was defined without a getter");if(typeof e=="function"?r!==e||!n:!e.has(r))throw new TypeError("Cannot read private member from an object whose class did not declare it");return t==="m"?n:t==="a"?n.call(r):n?n.value:e.get(r)},_PriorityQueue_queue$1;let PriorityQueue$1=class{constructor(){_PriorityQueue_queue$1.set(this,[])}enqueue(e,t){t={priority:0,...t};const n={priority:t.priority,run:e};if(this.size&&__classPrivateFieldGet$3(this,_PriorityQueue_queue$1,"f")[this.size-1].priority>=t.priority){__classPrivateFieldGet$3(this,_PriorityQueue_queue$1,"f").push(n);return}const i=lowerBound$2(__classPrivateFieldGet$3(this,_PriorityQueue_queue$1,"f"),n,(o,a)=>a.priority-o.priority);__classPrivateFieldGet$3(this,_PriorityQueue_queue$1,"f").splice(i,0,n)}dequeue(){const e=__classPrivateFieldGet$3(this,_PriorityQueue_queue$1,"f").shift();return e?.run}filter(e){return __classPrivateFieldGet$3(this,_PriorityQueue_queue$1,"f").filter(t=>t.priority===e.priority).map(t=>t.run)}get size(){return __classPrivateFieldGet$3(this,_PriorityQueue_queue$1,"f").length}};_PriorityQueue_queue$1=new WeakMap;var __classPrivateFieldSet$1=function(r,e,t,n,i){if(n==="m")throw new TypeError("Private method is not writable");if(n==="a"&&!i)throw new TypeError("Private accessor was defined without a setter");if(typeof e=="function"?r!==e||!i:!e.has(r))throw new TypeError("Cannot write private member to an object whose class did not declare it");return n==="a"?i.call(r,t):i?i.value=t:e.set(r,t),t},__classPrivateFieldGet$2=function(r,e,t,n){if(t==="a"&&!n)throw new TypeError("Private accessor was defined without a getter");if(typeof e=="function"?r!==e||!n:!e.has(r))throw new TypeError("Cannot read private member from an object whose class did not declare it");return t==="m"?n:t==="a"?n.call(r):n?n.value:e.get(r)},_PQueue_instances$1,_PQueue_carryoverConcurrencyCount$1,_PQueue_isIntervalIgnored$1,_PQueue_intervalCount$1,_PQueue_intervalCap$1,_PQueue_interval$1,_PQueue_intervalEnd$1,_PQueue_intervalId$1,_PQueue_timeoutId$1,_PQueue_queue$1,_PQueue_queueClass$1,_PQueue_pending$1,_PQueue_concurrency$1,_PQueue_isPaused$1,_PQueue_throwOnTimeout$1,_PQueue_doesIntervalAllowAnother_get$1,_PQueue_doesConcurrentAllowAnother_get$1,_PQueue_next$1,_PQueue_onResumeInterval$1,_PQueue_isIntervalPaused_get$1,_PQueue_tryToStartAnother$1,_PQueue_initializeIntervalIfNeeded$1,_PQueue_onInterval$1,_PQueue_processQueue$1,_PQueue_throwOnAbort$1,_PQueue_onEvent$1;let AbortError$6=class extends Error{},PQueue$1=class extends EventEmitter$1{constructor(e){var t,n,i,o;if(super(),_PQueue_instances$1.add(this),_PQueue_carryoverConcurrencyCount$1.set(this,void 0),_PQueue_isIntervalIgnored$1.set(this,void 0),_PQueue_intervalCount$1.set(this,0),_PQueue_intervalCap$1.set(this,void 0),_PQueue_interval$1.set(this,void 0),_PQueue_intervalEnd$1.set(this,0),_PQueue_intervalId$1.set(this,void 0),_PQueue_timeoutId$1.set(this,void 0),_PQueue_queue$1.set(this,void 0),_PQueue_queueClass$1.set(this,void 0),_PQueue_pending$1.set(this,0),_PQueue_concurrency$1.set(this,void 0),_PQueue_isPaused$1.set(this,void 0),_PQueue_throwOnTimeout$1.set(this,void 0),Object.defineProperty(this,"timeout",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),e={carryoverConcurrencyCount:!1,intervalCap:Number.POSITIVE_INFINITY,interval:0,concurrency:Number.POSITIVE_INFINITY,autoStart:!0,queueClass:PriorityQueue$1,...e},!(typeof e.intervalCap=="number"&&e.intervalCap>=1))throw new TypeError(`Expected \`intervalCap\` to be a number from 1 and up, got \`${(n=(t=e.intervalCap)===null||t===void 0?void 0:t.toString())!==null&&n!==void 0?n:""}\` (${typeof e.intervalCap})`);if(e.interval===void 0||!(Number.isFinite(e.interval)&&e.interval>=0))throw new TypeError(`Expected \`interval\` to be a finite number >= 0, got \`${(o=(i=e.interval)===null||i===void 0?void 0:i.toString())!==null&&o!==void 0?o:""}\` (${typeof e.interval})`);__classPrivateFieldSet$1(this,_PQueue_carryoverConcurrencyCount$1,e.carryoverConcurrencyCount,"f"),__classPrivateFieldSet$1(this,_PQueue_isIntervalIgnored$1,e.intervalCap===Number.POSITIVE_INFINITY||e.interval===0,"f"),__classPrivateFieldSet$1(this,_PQueue_intervalCap$1,e.intervalCap,"f"),__classPrivateFieldSet$1(this,_PQueue_interval$1,e.interval,"f"),__classPrivateFieldSet$1(this,_PQueue_queue$1,new e.queueClass,"f"),__classPrivateFieldSet$1(this,_PQueue_queueClass$1,e.queueClass,"f"),this.concurrency=e.concurrency,this.timeout=e.timeout,__classPrivateFieldSet$1(this,_PQueue_throwOnTimeout$1,e.throwOnTimeout===!0,"f"),__classPrivateFieldSet$1(this,_PQueue_isPaused$1,e.autoStart===!1,"f")}get concurrency(){return __classPrivateFieldGet$2(this,_PQueue_concurrency$1,"f")}set concurrency(e){if(!(typeof e=="number"&&e>=1))throw new TypeError(`Expected \`concurrency\` to be a number from 1 and up, got \`${e}\` (${typeof e})`);__classPrivateFieldSet$1(this,_PQueue_concurrency$1,e,"f"),__classPrivateFieldGet$2(this,_PQueue_instances$1,"m",_PQueue_processQueue$1).call(this)}async add(e,t={}){return t={timeout:this.timeout,throwOnTimeout:__classPrivateFieldGet$2(this,_PQueue_throwOnTimeout$1,"f"),...t},new Promise((n,i)=>{__classPrivateFieldGet$2(this,_PQueue_queue$1,"f").enqueue(async()=>{var o,a,c;__classPrivateFieldSet$1(this,_PQueue_pending$1,(a=__classPrivateFieldGet$2(this,_PQueue_pending$1,"f"),a++,a),"f"),__classPrivateFieldSet$1(this,_PQueue_intervalCount$1,(c=__classPrivateFieldGet$2(this,_PQueue_intervalCount$1,"f"),c++,c),"f");try{if(!((o=t.signal)===null||o===void 0)&&o.aborted)throw new AbortError$6("The task was aborted.");let l=e({signal:t.signal});t.timeout&&(l=pTimeout$3(Promise.resolve(l),t.timeout)),t.signal&&(l=Promise.race([l,__classPrivateFieldGet$2(this,_PQueue_instances$1,"m",_PQueue_throwOnAbort$1).call(this,t.signal)]));const u=await l;n(u),this.emit("completed",u)}catch(l){if(l instanceof TimeoutError$3&&!t.throwOnTimeout){n();return}i(l),this.emit("error",l)}finally{__classPrivateFieldGet$2(this,_PQueue_instances$1,"m",_PQueue_next$1).call(this)}},t),this.emit("add"),__classPrivateFieldGet$2(this,_PQueue_instances$1,"m",_PQueue_tryToStartAnother$1).call(this)})}async addAll(e,t){return Promise.all(e.map(async n=>this.add(n,t)))}start(){return __classPrivateFieldGet$2(this,_PQueue_isPaused$1,"f")?(__classPrivateFieldSet$1(this,_PQueue_isPaused$1,!1,"f"),__classPrivateFieldGet$2(this,_PQueue_instances$1,"m",_PQueue_processQueue$1).call(this),this):this}pause(){__classPrivateFieldSet$1(this,_PQueue_isPaused$1,!0,"f")}clear(){__classPrivateFieldSet$1(this,_PQueue_queue$1,new(__classPrivateFieldGet$2(this,_PQueue_queueClass$1,"f")),"f")}async onEmpty(){__classPrivateFieldGet$2(this,_PQueue_queue$1,"f").size!==0&&await __classPrivateFieldGet$2(this,_PQueue_instances$1,"m",_PQueue_onEvent$1).call(this,"empty")}async onSizeLessThan(e){__classPrivateFieldGet$2(this,_PQueue_queue$1,"f").size<e||await __classPrivateFieldGet$2(this,_PQueue_instances$1,"m",_PQueue_onEvent$1).call(this,"next",()=>__classPrivateFieldGet$2(this,_PQueue_queue$1,"f").size<e)}async onIdle(){__classPrivateFieldGet$2(this,_PQueue_pending$1,"f")===0&&__classPrivateFieldGet$2(this,_PQueue_queue$1,"f").size===0||await __classPrivateFieldGet$2(this,_PQueue_instances$1,"m",_PQueue_onEvent$1).call(this,"idle")}get size(){return __classPrivateFieldGet$2(this,_PQueue_queue$1,"f").size}sizeBy(e){return __classPrivateFieldGet$2(this,_PQueue_queue$1,"f").filter(e).length}get pending(){return __classPrivateFieldGet$2(this,_PQueue_pending$1,"f")}get isPaused(){return __classPrivateFieldGet$2(this,_PQueue_isPaused$1,"f")}};_PQueue_carryoverConcurrencyCount$1=new WeakMap,_PQueue_isIntervalIgnored$1=new WeakMap,_PQueue_intervalCount$1=new WeakMap,_PQueue_intervalCap$1=new WeakMap,_PQueue_interval$1=new WeakMap,_PQueue_intervalEnd$1=new WeakMap,_PQueue_intervalId$1=new WeakMap,_PQueue_timeoutId$1=new WeakMap,_PQueue_queue$1=new WeakMap,_PQueue_queueClass$1=new WeakMap,_PQueue_pending$1=new WeakMap,_PQueue_concurrency$1=new WeakMap,_PQueue_isPaused$1=new WeakMap,_PQueue_throwOnTimeout$1=new WeakMap,_PQueue_instances$1=new WeakSet,_PQueue_doesIntervalAllowAnother_get$1=function r(){return __classPrivateFieldGet$2(this,_PQueue_isIntervalIgnored$1,"f")||__classPrivateFieldGet$2(this,_PQueue_intervalCount$1,"f")<__classPrivateFieldGet$2(this,_PQueue_intervalCap$1,"f")},_PQueue_doesConcurrentAllowAnother_get$1=function r(){return __classPrivateFieldGet$2(this,_PQueue_pending$1,"f")<__classPrivateFieldGet$2(this,_PQueue_concurrency$1,"f")},_PQueue_next$1=function r(){var e;__classPrivateFieldSet$1(this,_PQueue_pending$1,(e=__classPrivateFieldGet$2(this,_PQueue_pending$1,"f"),e--,e),"f"),__classPrivateFieldGet$2(this,_PQueue_instances$1,"m",_PQueue_tryToStartAnother$1).call(this),this.emit("next")},_PQueue_onResumeInterval$1=function r(){__classPrivateFieldGet$2(this,_PQueue_instances$1,"m",_PQueue_onInterval$1).call(this),__classPrivateFieldGet$2(this,_PQueue_instances$1,"m",_PQueue_initializeIntervalIfNeeded$1).call(this),__classPrivateFieldSet$1(this,_PQueue_timeoutId$1,void 0,"f")},_PQueue_isIntervalPaused_get$1=function r(){const e=Date.now();if(__classPrivateFieldGet$2(this,_PQueue_intervalId$1,"f")===void 0){const t=__classPrivateFieldGet$2(this,_PQueue_intervalEnd$1,"f")-e;if(t<0)__classPrivateFieldSet$1(this,_PQueue_intervalCount$1,__classPrivateFieldGet$2(this,_PQueue_carryoverConcurrencyCount$1,"f")?__classPrivateFieldGet$2(this,_PQueue_pending$1,"f"):0,"f");else return __classPrivateFieldGet$2(this,_PQueue_timeoutId$1,"f")===void 0&&__classPrivateFieldSet$1(this,_PQueue_timeoutId$1,setTimeout(()=>{__classPrivateFieldGet$2(this,_PQueue_instances$1,"m",_PQueue_onResumeInterval$1).call(this)},t),"f"),!0}return!1},_PQueue_tryToStartAnother$1=function r(){if(__classPrivateFieldGet$2(this,_PQueue_queue$1,"f").size===0)return __classPrivateFieldGet$2(this,_PQueue_intervalId$1,"f")&&clearInterval(__classPrivateFieldGet$2(this,_PQueue_intervalId$1,"f")),__classPrivateFieldSet$1(this,_PQueue_intervalId$1,void 0,"f"),this.emit("empty"),__classPrivateFieldGet$2(this,_PQueue_pending$1,"f")===0&&this.emit("idle"),!1;if(!__classPrivateFieldGet$2(this,_PQueue_isPaused$1,"f")){const e=!__classPrivateFieldGet$2(this,_PQueue_instances$1,"a",_PQueue_isIntervalPaused_get$1);if(__classPrivateFieldGet$2(this,_PQueue_instances$1,"a",_PQueue_doesIntervalAllowAnother_get$1)&&__classPrivateFieldGet$2(this,_PQueue_instances$1,"a",_PQueue_doesConcurrentAllowAnother_get$1)){const t=__classPrivateFieldGet$2(this,_PQueue_queue$1,"f").dequeue();return t?(this.emit("active"),t(),e&&__classPrivateFieldGet$2(this,_PQueue_instances$1,"m",_PQueue_initializeIntervalIfNeeded$1).call(this),!0):!1}}return!1},_PQueue_initializeIntervalIfNeeded$1=function r(){__classPrivateFieldGet$2(this,_PQueue_isIntervalIgnored$1,"f")||__classPrivateFieldGet$2(this,_PQueue_intervalId$1,"f")!==void 0||(__classPrivateFieldSet$1(this,_PQueue_intervalId$1,setInterval(()=>{__classPrivateFieldGet$2(this,_PQueue_instances$1,"m",_PQueue_onInterval$1).call(this)},__classPrivateFieldGet$2(this,_PQueue_interval$1,"f")),"f"),__classPrivateFieldSet$1(this,_PQueue_intervalEnd$1,Date.now()+__classPrivateFieldGet$2(this,_PQueue_interval$1,"f"),"f"))},_PQueue_onInterval$1=function r(){__classPrivateFieldGet$2(this,_PQueue_intervalCount$1,"f")===0&&__classPrivateFieldGet$2(this,_PQueue_pending$1,"f")===0&&__classPrivateFieldGet$2(this,_PQueue_intervalId$1,"f")&&(clearInterval(__classPrivateFieldGet$2(this,_PQueue_intervalId$1,"f")),__classPrivateFieldSet$1(this,_PQueue_intervalId$1,void 0,"f")),__classPrivateFieldSet$1(this,_PQueue_intervalCount$1,__classPrivateFieldGet$2(this,_PQueue_carryoverConcurrencyCount$1,"f")?__classPrivateFieldGet$2(this,_PQueue_pending$1,"f"):0,"f"),__classPrivateFieldGet$2(this,_PQueue_instances$1,"m",_PQueue_processQueue$1).call(this)},_PQueue_processQueue$1=function r(){for(;__classPrivateFieldGet$2(this,_PQueue_instances$1,"m",_PQueue_tryToStartAnother$1).call(this););},_PQueue_throwOnAbort$1=async function r(e){return new Promise((t,n)=>{e.addEventListener("abort",()=>{n(new AbortError$6("The task was aborted."))},{once:!0})})},_PQueue_onEvent$1=async function r(e,t){return new Promise(n=>{const i=()=>{t&&!t()||(this.off(e,i),n())};this.on(e,i)})};const IPNS_PREFIX$1=fromString$b("/ipns/");function isIPNSKey(r){return equals$4(r.subarray(0,IPNS_PREFIX$1.byteLength),IPNS_PREFIX$1)}const peerIdFromRoutingKey$1=r=>peerIdFromBytes$6(r.slice(IPNS_PREFIX$1.length));class DelegatedRoutingV1HttpApiClientContentRouting{constructor(e){_(this,"client");this.client=e}async*findProviders(e,t={}){yield*map$1(this.client.getProviders(e,t),n=>({id:n.ID,multiaddrs:n.Addrs??[],protocols:[]}))}async provide(){}async put(e,t,n){if(!isIPNSKey(e))return;const i=peerIdFromRoutingKey$1(e),o=unmarshal$1(t);await this.client.putIPNS(i,o,n)}async get(e,t){if(!isIPNSKey(e))throw new CodeError$e("Not found","ERR_NOT_FOUND");const n=peerIdFromRoutingKey$1(e);try{const i=await this.client.getIPNS(n,t);return marshal(i)}catch(i){throw i.code==="ERR_BAD_RESPONSE"?new CodeError$e("Not found","ERR_NOT_FOUND"):i}}}class DelegatedRoutingV1HttpApiClientPeerRouting{constructor(e){_(this,"client");this.client=e}async findPeer(e,t={}){const n=await first(this.client.getPeers(e,t));if(n!=null)return{id:n.ID,multiaddrs:n.Addrs,protocols:[]};throw new CodeError$e("Not found","ERR_NOT_FOUND")}async*getClosestPeers(e,t={}){}}const log$J=logger$2("delegated-routing-v1-http-api-client"),defaultValues$2={concurrentRequests:4,timeout:3e4};var it,Rt,ot,At;class DefaultDelegatedRoutingV1HttpApiClient{constructor(e,t={}){ne(this,it);ne(this,ot);_(this,"started");_(this,"httpQueue");_(this,"shutDownController");_(this,"clientUrl");_(this,"timeout");_(this,"contentRouting");_(this,"peerRouting");this.started=!1,this.shutDownController=new AbortController,this.httpQueue=new PQueue$1({concurrency:t.concurrentRequests??defaultValues$2.concurrentRequests}),this.clientUrl=e instanceof URL?e:new URL(e),this.timeout=t.timeout??defaultValues$2.timeout,this.contentRouting=new DelegatedRoutingV1HttpApiClientContentRouting(this),this.peerRouting=new DelegatedRoutingV1HttpApiClientPeerRouting(this)}get[contentRouting](){return this.contentRouting}get[peerRouting](){return this.peerRouting}isStarted(){return this.started}start(){this.started=!0}stop(){this.httpQueue.clear(),this.shutDownController.abort(),this.started=!1}async*getProviders(e,t={}){log$J("getProviders starts: %c",e);const n=anySignal([this.shutDownController.signal,t.signal,AbortSignal.timeout(this.timeout)]),i=pDefer(),o=pDefer();this.httpQueue.add(async()=>(i.resolve(),o.promise));try{await i.promise;const a=`${this.clientUrl}routing/v1/providers/${e.toString()}`,l=await fetch(a,{headers:{Accept:"application/x-ndjson"},signal:n});if(l.body==null)throw new CodeError$e("Routing response had no body","ERR_BAD_RESPONSE");if(l.headers.get("Content-Type")==="application/json"){const f=await l.json();for(const g of f.Providers){const $=se(this,it,Rt).call(this,g);$!=null&&(yield $)}}else for await(const f of parse(browserReadableStreamToIt(l.body))){const g=se(this,it,Rt).call(this,f);g!=null&&(yield g)}}catch(a){log$J.error("getProviders errored:",a)}finally{n.clear(),o.resolve(),log$J("getProviders finished: %c",e)}}async*getPeers(e,t={}){log$J("getPeers starts: %c",e);const n=anySignal([this.shutDownController.signal,t.signal,AbortSignal.timeout(this.timeout)]),i=pDefer(),o=pDefer();this.httpQueue.add(async()=>(i.resolve(),o.promise));try{await i.promise;const a=`${this.clientUrl}routing/v1/peers/${e.toCID().toString()}`,l=await fetch(a,{headers:{Accept:"application/x-ndjson"},signal:n});if(l.body==null)throw new CodeError$e("Routing response had no body","ERR_BAD_RESPONSE");if(l.headers.get("Content-Type")==="application/json"){const f=await l.json();for(const g of f.Peers){const $=se(this,ot,At).call(this,e,g);$!=null&&(yield $)}}else for await(const f of parse(browserReadableStreamToIt(l.body))){const g=se(this,ot,At).call(this,e,f);g!=null&&(yield g)}}catch(a){log$J.error("getPeers errored:",a)}finally{n.clear(),o.resolve(),log$J("getPeers finished: %c",e)}}async getIPNS(e,t={}){log$J("getIPNS starts: %c",e);const n=anySignal([this.shutDownController.signal,t.signal,AbortSignal.timeout(this.timeout)]),i=pDefer(),o=pDefer();this.httpQueue.add(async()=>(i.resolve(),o.promise));try{await i.promise;const a=`${this.clientUrl}routing/v1/ipns/${e.toCID().toString()}`,l=await fetch(a,{headers:{Accept:"application/vnd.ipfs.ipns-record"},signal:n});if(l.body==null)throw new CodeError$e("GET ipns response had no body","ERR_BAD_RESPONSE");const u=new Uint8Array(await l.arrayBuffer());return await ipnsValidator$1(peerIdToRoutingKey(e),u),unmarshal$1(u)}finally{n.clear(),o.resolve(),log$J("getIPNS finished: %c",e)}}async putIPNS(e,t,n={}){log$J("getIPNS starts: %c",e);const i=anySignal([this.shutDownController.signal,n.signal,AbortSignal.timeout(this.timeout)]),o=pDefer(),a=pDefer();this.httpQueue.add(async()=>(o.resolve(),a.promise));try{await o.promise;const c=marshal(t),l=`${this.clientUrl}routing/v1/ipns/${e.toCID().toString()}`;if((await fetch(l,{method:"PUT",headers:{"Content-Type":"application/vnd.ipfs.ipns-record"},body:c,signal:i})).status!==200)throw new CodeError$e("PUT ipns response had status other than 200","ERR_BAD_RESPONSE")}finally{i.clear(),a.resolve(),log$J("getIPNS finished: %c",e)}}}it=new WeakSet,Rt=function(e){if(e.Schema==="peer")return e.ID=peerIdFromString$6(e.ID),e.Addrs=e.Addrs.map(multiaddr$1),e.Protocols=e.Protocols??[],e;if(e.Schema==="bitswap")return{Schema:"peer",ID:peerIdFromString$6(e.ID),Addrs:e.Addrs.map(multiaddr$1),Protocols:e.Protocol!=null?[e.Protocol]:[]};if(e.ID!=null&&Array.isArray(e.Addrs))return{Schema:"peer",ID:peerIdFromString$6(e.ID),Addrs:e.Addrs.map(multiaddr$1),Protocols:Array.isArray(e.Protocols)?e.Protocols:[]}},ot=new WeakSet,At=function(e,t){if(t.Schema==="peer"&&(t.ID=peerIdFromString$6(t.ID),t.Addrs=t.Addrs.map(multiaddr$1),e.equals(t.ID)))return t};function createDelegatedRoutingV1HttpApiClient(r,e={}){return new DefaultDelegatedRoutingV1HttpApiClient(new URL(r),e)}const inspect$6=Symbol.for("nodejs.util.inspect.custom"),baseDecoder$5=Object.values(bases$2).map(r=>r.decoder).reduce((r,e)=>r.or(e),bases$2.identity.decoder),LIBP2P_KEY_CODE$5=114,MARSHALLED_ED225519_PUBLIC_KEY_LENGTH$5=36,MARSHALLED_SECP256K1_PUBLIC_KEY_LENGTH$5=37;var Ar;let PeerIdImpl$5=class{constructor(e){_(this,"type");_(this,"multihash");_(this,"privateKey");_(this,"publicKey");_(this,"string");_(this,Ar,!0);this.type=e.type,this.multihash=e.multihash,this.privateKey=e.privateKey,Object.defineProperty(this,"string",{enumerable:!1,writable:!0})}get[Symbol.toStringTag](){return`PeerId(${this.toString()})`}toString(){return this.string==null&&(this.string=base58btc$4.encode(this.multihash.bytes).slice(1)),this.string}toCID(){return CID$3.createV1(LIBP2P_KEY_CODE$5,this.multihash)}toBytes(){return this.multihash.bytes}toJSON(){return this.toString()}equals(e){if(e instanceof Uint8Array)return equals$4(this.multihash.bytes,e);if(typeof e=="string")return peerIdFromString$5(e).equals(this);if(e?.multihash?.bytes!=null)return equals$4(this.multihash.bytes,e.multihash.bytes);throw new Error("not valid Id")}[(Ar=symbol$4,inspect$6)](){return`PeerId(${this.toString()})`}},RSAPeerIdImpl$5=class extends PeerIdImpl$5{constructor(t){super({...t,type:"RSA"});_(this,"type","RSA");_(this,"publicKey");this.publicKey=t.publicKey}},Ed25519PeerIdImpl$5=class extends PeerIdImpl$5{constructor(t){super({...t,type:"Ed25519"});_(this,"type","Ed25519");_(this,"publicKey");this.publicKey=t.multihash.digest}},Secp256k1PeerIdImpl$5=class extends PeerIdImpl$5{constructor(t){super({...t,type:"secp256k1"});_(this,"type","secp256k1");_(this,"publicKey");this.publicKey=t.multihash.digest}};function peerIdFromString$5(r,e){if(r.charAt(0)==="1"||r.charAt(0)==="Q"){const t=decode$n(base58btc$4.decode(`z${r}`));return r.startsWith("12D")?new Ed25519PeerIdImpl$5({multihash:t}):r.startsWith("16U")?new Secp256k1PeerIdImpl$5({multihash:t}):new RSAPeerIdImpl$5({multihash:t})}return peerIdFromBytes$5(baseDecoder$5.decode(r))}function peerIdFromBytes$5(r){try{const e=decode$n(r);if(e.code===identity$3.code){if(e.digest.length===MARSHALLED_ED225519_PUBLIC_KEY_LENGTH$5)return new Ed25519PeerIdImpl$5({multihash:e});if(e.digest.length===MARSHALLED_SECP256K1_PUBLIC_KEY_LENGTH$5)return new Secp256k1PeerIdImpl$5({multihash:e})}if(e.code===sha256$2.code)return new RSAPeerIdImpl$5({multihash:e})}catch{return peerIdFromCID$5(CID$3.decode(r))}throw new Error("Supplied PeerID CID is invalid")}function peerIdFromCID$5(r){if(r==null||r.multihash==null||r.version==null||r.version===1&&r.code!==LIBP2P_KEY_CODE$5)throw new Error("Supplied PeerID CID is invalid");const e=r.multihash;if(e.code===sha256$2.code)return new RSAPeerIdImpl$5({multihash:r.multihash});if(e.code===identity$3.code){if(e.digest.length===MARSHALLED_ED225519_PUBLIC_KEY_LENGTH$5)return new Ed25519PeerIdImpl$5({multihash:r.multihash});if(e.digest.length===MARSHALLED_SECP256K1_PUBLIC_KEY_LENGTH$5)return new Secp256k1PeerIdImpl$5({multihash:r.multihash})}throw new Error("Supplied PeerID CID is invalid")}const DNS4=base$4("dns4"),DNS6=base$4("dns6"),DNSADDR=base$4("dnsaddr"),DNS=or$2(base$4("dns"),DNSADDR,DNS4,DNS6),IP=or$2(base$4("ip4"),base$4("ip6")),TCP=or$2(and(IP,base$4("tcp")),and(DNS,base$4("tcp"))),UDP=and(IP,base$4("udp")),UTP=and(UDP,base$4("utp")),QUIC=and(UDP,base$4("quic")),QUICV1=and(UDP,base$4("quic-v1")),_WebSockets=or$2(and(TCP,base$4("ws")),and(DNS,base$4("ws"))),WebSockets$2=or$2(and(_WebSockets,base$4("p2p")),_WebSockets),_WebSocketsSecure=or$2(and(TCP,base$4("wss")),and(DNS,base$4("wss")),and(TCP,base$4("tls"),base$4("ws")),and(DNS,base$4("tls"),base$4("ws"))),WebSocketsSecure=or$2(and(_WebSocketsSecure,base$4("p2p")),_WebSocketsSecure),HTTP=or$2(and(TCP,base$4("http")),and(IP,base$4("http")),and(DNS,base$4("http"))),HTTPS=or$2(and(TCP,base$4("https")),and(IP,base$4("https")),and(DNS,base$4("https"))),_WebRTCDirect=and(UDP,base$4("webrtc-direct"),base$4("certhash")),WebRTCDirect=or$2(and(_WebRTCDirect,base$4("p2p")),_WebRTCDirect),_WebTransport=and(QUICV1,base$4("webtransport"),base$4("certhash"),base$4("certhash")),WebTransport$1=or$2(and(_WebTransport,base$4("p2p")),_WebTransport),P2PWebRTCStar=or$2(and(WebSockets$2,base$4("p2p-webrtc-star"),base$4("p2p")),and(WebSocketsSecure,base$4("p2p-webrtc-star"),base$4("p2p")),and(WebSockets$2,base$4("p2p-webrtc-star")),and(WebSocketsSecure,base$4("p2p-webrtc-star"))),P2PWebRTCDirect=or$2(and(HTTP,base$4("p2p-webrtc-direct"),base$4("p2p")),and(HTTPS,base$4("p2p-webrtc-direct"),base$4("p2p")),and(HTTP,base$4("p2p-webrtc-direct")),and(HTTPS,base$4("p2p-webrtc-direct"))),Reliable=or$2(_WebSockets,_WebSocketsSecure,HTTP,HTTPS,P2PWebRTCStar,P2PWebRTCDirect,TCP,UTP,QUIC,DNS,WebRTCDirect,WebTransport$1),_P2P=or$2(and(Reliable,base$4("p2p")),P2PWebRTCStar,P2PWebRTCDirect,WebRTCDirect,WebTransport$1,base$4("p2p")),_Circuit=or$2(and(_P2P,base$4("p2p-circuit"),_P2P),and(_P2P,base$4("p2p-circuit")),and(base$4("p2p-circuit"),_P2P),and(Reliable,base$4("p2p-circuit")),and(base$4("p2p-circuit"),Reliable),base$4("p2p-circuit")),CircuitRecursive=()=>or$2(and(_Circuit,CircuitRecursive),_Circuit),Circuit=CircuitRecursive(),P2P=or$2(and(Circuit,_P2P,Circuit),and(_P2P,Circuit),and(Circuit,_P2P),Circuit,_P2P);function makeMatchesFunction(r){function e(t){let n;try{n=multiaddr$1(t)}catch{return!1}const i=r(n.protoNames());return i===null?!1:i===!0||i===!1?i:i.length===0}return e}function and(...r){function e(t){if(t.length<r.length)return null;let n=t;return r.some(i=>(n=typeof i=="function"?i().partialMatch(t):i.partialMatch(t),Array.isArray(n)&&(t=n),n===null)),n}return{toString:function(){return"{ "+r.join(" ")+" }"},input:r,matches:makeMatchesFunction(e),partialMatch:e}}function or$2(...r){function e(n){let i=null;return r.some(o=>{const a=typeof o=="function"?o().partialMatch(n):o.partialMatch(n);return a!=null?(i=a,!0):!1}),i}return{toString:function(){return"{ "+r.join(" ")+" }"},input:r,matches:makeMatchesFunction(e),partialMatch:e}}function base$4(r){const e=r;function t(i){let o;try{o=multiaddr$1(i)}catch{return!1}const a=o.protoNames();return a.length===1&&a[0]===e}function n(i){return i.length===0?null:i[0]===e?i.slice(1):null}return{toString:function(){return e},matches:t,partialMatch:n}}const log$I=logger$5("libp2p:bootstrap"),DEFAULT_BOOTSTRAP_TAG_NAME="bootstrap",DEFAULT_BOOTSTRAP_TAG_VALUE=50,DEFAULT_BOOTSTRAP_TAG_TTL=12e4,DEFAULT_BOOTSTRAP_DISCOVERY_TIMEOUT=1e3;var Dr,Cr;class Bootstrap extends TypedEventEmitter$1{constructor(t,n={list:[]}){if(n.list==null||n.list.length===0)throw new Error("Bootstrap requires a list of peer addresses");super();_(this,"timer");_(this,"list");_(this,"timeout");_(this,"components");_(this,"_init");_(this,Dr,this);_(this,Cr,"@libp2p/bootstrap");this.components=t,this.timeout=n.timeout??DEFAULT_BOOTSTRAP_DISCOVERY_TIMEOUT,this.list=[];for(const i of n.list){if(!P2P.matches(i)){log$I.error("Invalid multiaddr");continue}const o=multiaddr$1(i),a=o.getPeerId();if(a==null){log$I.error("Invalid bootstrap multiaddr without peer id");continue}const c={id:peerIdFromString$5(a),multiaddrs:[o],protocols:[]};this.list.push(c)}this._init=n}isStarted(){return!!this.timer}start(){this.isStarted()||(log$I("Starting bootstrap node discovery, discovering peers after %s ms",this.timeout),this.timer=setTimeout(()=>{this._discoverBootstrapPeers().catch(t=>{log$I.error(t)})},this.timeout))}async _discoverBootstrapPeers(){if(this.timer!=null)for(const t of this.list){if(await this.components.peerStore.merge(t.id,{tags:{[this._init.tagName??DEFAULT_BOOTSTRAP_TAG_NAME]:{value:this._init.tagValue??DEFAULT_BOOTSTRAP_TAG_VALUE,ttl:this._init.tagTTL??DEFAULT_BOOTSTRAP_TAG_TTL}}}),this.timer==null)return;this.safeDispatchEvent("peer",{detail:t})}}stop(){this.timer!=null&&clearTimeout(this.timer),this.timer=void 0}}Dr=peerDiscovery,Cr=Symbol.toStringTag,_(Bootstrap,"tag","bootstrap");function bootstrap(r){return e=>new Bootstrap(e,r)}const second=1e3,minute=60*second,hour=60*minute,MAX_RECORD_AGE=36*hour,LAN_PREFIX="/lan",PROTOCOL_PREFIX$3="/ipfs",PROTOCOL_DHT="/kad/1.0.0",RECORD_KEY_PREFIX="/dht/record",PROVIDER_KEY_PREFIX="/dht/provider",PROVIDERS_LRU_CACHE_SIZE=256,PROVIDERS_VALIDITY=24*hour,PROVIDERS_CLEANUP_INTERVAL=hour,K=20,ALPHA=3,QUERY_SELF_INTERVAL=Number(5*minute),QUERY_SELF_INITIAL_INTERVAL=Number(Number(second)),QUERY_SELF_TIMEOUT=Number(5*second),TABLE_REFRESH_INTERVAL=Number(5*minute),TABLE_REFRESH_QUERY_TIMEOUT=Number(30*second),DEFAULT_QUERY_TIMEOUT=Number(30*second),CustomEvent$1=globalThis.CustomEvent??Event;async function*parallel(r,e={}){let t=e.concurrency??1/0;t<1&&(t=1/0);const n=e.ordered==null?!1:e.ordered,i=new EventTarget,o=[];let a=pDefer(),c=pDefer(),l=!1,u,f=!1;i.addEventListener("task-complete",()=>{c.resolve()}),Promise.resolve().then(async()=>{try{for await(const E of r){if(o.length===t&&(a=pDefer(),await a.promise),f)break;const v={done:!1};o.push(v),E().then(T=>{v.done=!0,v.ok=!0,v.value=T,i.dispatchEvent(new CustomEvent$1("task-complete"))},T=>{v.done=!0,v.err=T,i.dispatchEvent(new CustomEvent$1("task-complete"))})}l=!0,i.dispatchEvent(new CustomEvent$1("task-complete"))}catch(E){u=E,i.dispatchEvent(new CustomEvent$1("task-complete"))}});function g(){return n?o[0]?.done:!!o.find(E=>E.done)}function*$(){for(;o.length>0&&o[0].done;){const E=o[0];if(o.shift(),E.ok)yield E.value;else throw f=!0,a.resolve(),E.err;a.resolve()}}function*S(){for(;g();)for(let E=0;E<o.length;E++)if(o[E].done){const v=o[E];if(o.splice(E,1),E--,v.ok)yield v.value;else throw f=!0,a.resolve(),v.err;a.resolve()}}for(;;){if(g()||(c=pDefer(),await c.promise),u!=null)throw u;if(n?yield*$():yield*S(),l&&o.length===0)break}}const inspect$5=Symbol.for("nodejs.util.inspect.custom"),baseDecoder$4=Object.values(bases$2).map(r=>r.decoder).reduce((r,e)=>r.or(e),bases$2.identity.decoder),LIBP2P_KEY_CODE$4=114,MARSHALLED_ED225519_PUBLIC_KEY_LENGTH$4=36,MARSHALLED_SECP256K1_PUBLIC_KEY_LENGTH$4=37;var xr;let PeerIdImpl$4=class{constructor(e){_(this,"type");_(this,"multihash");_(this,"privateKey");_(this,"publicKey");_(this,"string");_(this,xr,!0);this.type=e.type,this.multihash=e.multihash,this.privateKey=e.privateKey,Object.defineProperty(this,"string",{enumerable:!1,writable:!0})}get[Symbol.toStringTag](){return`PeerId(${this.toString()})`}toString(){return this.string==null&&(this.string=base58btc$4.encode(this.multihash.bytes).slice(1)),this.string}toCID(){return CID$3.createV1(LIBP2P_KEY_CODE$4,this.multihash)}toBytes(){return this.multihash.bytes}toJSON(){return this.toString()}equals(e){if(e instanceof Uint8Array)return equals$4(this.multihash.bytes,e);if(typeof e=="string")return peerIdFromString$4(e).equals(this);if(e?.multihash?.bytes!=null)return equals$4(this.multihash.bytes,e.multihash.bytes);throw new Error("not valid Id")}[(xr=symbol$4,inspect$5)](){return`PeerId(${this.toString()})`}},RSAPeerIdImpl$4=class extends PeerIdImpl$4{constructor(t){super({...t,type:"RSA"});_(this,"type","RSA");_(this,"publicKey");this.publicKey=t.publicKey}},Ed25519PeerIdImpl$4=class extends PeerIdImpl$4{constructor(t){super({...t,type:"Ed25519"});_(this,"type","Ed25519");_(this,"publicKey");this.publicKey=t.multihash.digest}},Secp256k1PeerIdImpl$4=class extends PeerIdImpl$4{constructor(t){super({...t,type:"secp256k1"});_(this,"type","secp256k1");_(this,"publicKey");this.publicKey=t.multihash.digest}};function peerIdFromString$4(r,e){if(r.charAt(0)==="1"||r.charAt(0)==="Q"){const t=decode$n(base58btc$4.decode(`z${r}`));return r.startsWith("12D")?new Ed25519PeerIdImpl$4({multihash:t}):r.startsWith("16U")?new Secp256k1PeerIdImpl$4({multihash:t}):new RSAPeerIdImpl$4({multihash:t})}return peerIdFromBytes$4(baseDecoder$4.decode(r))}function peerIdFromBytes$4(r){try{const e=decode$n(r);if(e.code===identity$3.code){if(e.digest.length===MARSHALLED_ED225519_PUBLIC_KEY_LENGTH$4)return new Ed25519PeerIdImpl$4({multihash:e});if(e.digest.length===MARSHALLED_SECP256K1_PUBLIC_KEY_LENGTH$4)return new Secp256k1PeerIdImpl$4({multihash:e})}if(e.code===sha256$2.code)return new RSAPeerIdImpl$4({multihash:e})}catch{return peerIdFromCID$4(CID$3.decode(r))}throw new Error("Supplied PeerID CID is invalid")}function peerIdFromCID$4(r){if(r==null||r.multihash==null||r.version==null||r.version===1&&r.code!==LIBP2P_KEY_CODE$4)throw new Error("Supplied PeerID CID is invalid");const e=r.multihash;if(e.code===sha256$2.code)return new RSAPeerIdImpl$4({multihash:r.multihash});if(e.code===identity$3.code){if(e.digest.length===MARSHALLED_ED225519_PUBLIC_KEY_LENGTH$4)return new Ed25519PeerIdImpl$4({multihash:r.multihash});if(e.digest.length===MARSHALLED_SECP256K1_PUBLIC_KEY_LENGTH$4)return new Secp256k1PeerIdImpl$4({multihash:r.multihash})}throw new Error("Supplied PeerID CID is invalid")}async function peerIdFromKeys$4(r,e){return r.length===MARSHALLED_ED225519_PUBLIC_KEY_LENGTH$4?new Ed25519PeerIdImpl$4({multihash:create$c(identity$3.code,r),privateKey:e}):r.length===MARSHALLED_SECP256K1_PUBLIC_KEY_LENGTH$4?new Secp256k1PeerIdImpl$4({multihash:create$c(identity$3.code,r),privateKey:e}):new RSAPeerIdImpl$4({multihash:await sha256$2.digest(r),publicKey:r,privateKey:e})}var Record$1;(function(r){let e;r.codec=()=>(e==null&&(e=message((t,n,i={})=>{i.lengthDelimited!==!1&&n.fork(),t.key!=null&&t.key.byteLength>0&&(n.uint32(10),n.bytes(t.key)),t.value!=null&&t.value.byteLength>0&&(n.uint32(18),n.bytes(t.value)),t.timeReceived!=null&&t.timeReceived!==""&&(n.uint32(42),n.string(t.timeReceived)),i.lengthDelimited!==!1&&n.ldelim()},(t,n)=>{const i={key:new Uint8Array(0),value:new Uint8Array(0),timeReceived:""},o=n==null?t.len:t.pos+n;for(;t.pos<o;){const a=t.uint32();switch(a>>>3){case 1:i.key=t.bytes();break;case 2:i.value=t.bytes();break;case 5:i.timeReceived=t.string();break;default:t.skipType(a&7);break}}return i})),e),r.encode=t=>encodeMessage(t,r.codec()),r.decode=t=>decodeMessage$1(t,r.codec())})(Record$1||(Record$1={}));function toRFC3339(r){const e=r.getUTCFullYear(),t=String(r.getUTCMonth()+1).padStart(2,"0"),n=String(r.getUTCDate()).padStart(2,"0"),i=String(r.getUTCHours()).padStart(2,"0"),o=String(r.getUTCMinutes()).padStart(2,"0"),a=String(r.getUTCSeconds()).padStart(2,"0"),c=r.getUTCMilliseconds(),l=String(c*1e3*1e3).padStart(9,"0");return`${e}-${t}-${n}T${i}:${o}:${a}.${l}Z`}function parseRFC3339$1(r){const e=new RegExp("(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2})\\.(\\d+)Z"),t=String(r).trim().match(e);if(t==null)throw new Error("Invalid format");const n=parseInt(t[1],10),i=parseInt(t[2],10)-1,o=parseInt(t[3],10),a=parseInt(t[4],10),c=parseInt(t[5],10),l=parseInt(t[6],10),u=parseInt(t[7].slice(0,-6),10);return new Date(Date.UTC(n,i,o,a,c,l,u))}class Libp2pRecord{constructor(e,t,n){_(this,"key");_(this,"value");_(this,"timeReceived");if(!(e instanceof Uint8Array))throw new Error("key must be a Uint8Array");if(!(t instanceof Uint8Array))throw new Error("value must be a Uint8Array");this.key=e,this.value=t,this.timeReceived=n}serialize(){return Record$1.encode(this.prepareSerialize())}prepareSerialize(){return{key:this.key,value:this.value,timeReceived:toRFC3339(this.timeReceived)}}static deserialize(e){const t=Record$1.decode(e);return new Libp2pRecord(t.key,t.value,new Date(t.timeReceived))}static fromDeserialized(e){const t=parseRFC3339$1(e.timeReceived);if(e.key==null)throw new Error("key missing from deserialized object");if(e.value==null)throw new Error("value missing from deserialized object");return new Libp2pRecord(e.key,e.value,t)}}var Record;(function(r){let e;r.codec=()=>(e==null&&(e=message((t,n,i={})=>{i.lengthDelimited!==!1&&n.fork(),t.key!=null&&(n.uint32(10),n.bytes(t.key)),t.value!=null&&(n.uint32(18),n.bytes(t.value)),t.author!=null&&(n.uint32(26),n.bytes(t.author)),t.signature!=null&&(n.uint32(34),n.bytes(t.signature)),t.timeReceived!=null&&(n.uint32(42),n.string(t.timeReceived)),i.lengthDelimited!==!1&&n.ldelim()},(t,n)=>{const i={},o=n==null?t.len:t.pos+n;for(;t.pos<o;){const a=t.uint32();switch(a>>>3){case 1:i.key=t.bytes();break;case 2:i.value=t.bytes();break;case 3:i.author=t.bytes();break;case 4:i.signature=t.bytes();break;case 5:i.timeReceived=t.string();break;default:t.skipType(a&7);break}}return i})),e),r.encode=t=>encodeMessage(t,r.codec()),r.decode=t=>decodeMessage$1(t,r.codec())})(Record||(Record={}));var Message$4;(function(r){(function(i){i.PUT_VALUE="PUT_VALUE",i.GET_VALUE="GET_VALUE",i.ADD_PROVIDER="ADD_PROVIDER",i.GET_PROVIDERS="GET_PROVIDERS",i.FIND_NODE="FIND_NODE",i.PING="PING"})(r.MessageType||(r.MessageType={}));let e;(function(i){i[i.PUT_VALUE=0]="PUT_VALUE",i[i.GET_VALUE=1]="GET_VALUE",i[i.ADD_PROVIDER=2]="ADD_PROVIDER",i[i.GET_PROVIDERS=3]="GET_PROVIDERS",i[i.FIND_NODE=4]="FIND_NODE",i[i.PING=5]="PING"})(e||(e={})),function(i){i.codec=()=>enumeration(e)}(r.MessageType||(r.MessageType={})),function(i){i.NOT_CONNECTED="NOT_CONNECTED",i.CONNECTED="CONNECTED",i.CAN_CONNECT="CAN_CONNECT",i.CANNOT_CONNECT="CANNOT_CONNECT"}(r.ConnectionType||(r.ConnectionType={}));let t;(function(i){i[i.NOT_CONNECTED=0]="NOT_CONNECTED",i[i.CONNECTED=1]="CONNECTED",i[i.CAN_CONNECT=2]="CAN_CONNECT",i[i.CANNOT_CONNECT=3]="CANNOT_CONNECT"})(t||(t={})),function(i){i.codec=()=>enumeration(t)}(r.ConnectionType||(r.ConnectionType={})),function(i){let o;i.codec=()=>(o==null&&(o=message((a,c,l={})=>{if(l.lengthDelimited!==!1&&c.fork(),a.id!=null&&(c.uint32(10),c.bytes(a.id)),a.addrs!=null)for(const u of a.addrs)c.uint32(18),c.bytes(u);a.connection!=null&&(c.uint32(24),r.ConnectionType.codec().encode(a.connection,c)),l.lengthDelimited!==!1&&c.ldelim()},(a,c)=>{const l={addrs:[]},u=c==null?a.len:a.pos+c;for(;a.pos<u;){const f=a.uint32();switch(f>>>3){case 1:l.id=a.bytes();break;case 2:l.addrs.push(a.bytes());break;case 3:l.connection=r.ConnectionType.codec().decode(a);break;default:a.skipType(f&7);break}}return l})),o),i.encode=a=>encodeMessage(a,i.codec()),i.decode=a=>decodeMessage$1(a,i.codec())}(r.Peer||(r.Peer={}));let n;r.codec=()=>(n==null&&(n=message((i,o,a={})=>{if(a.lengthDelimited!==!1&&o.fork(),i.type!=null&&(o.uint32(8),r.MessageType.codec().encode(i.type,o)),i.clusterLevelRaw!=null&&(o.uint32(80),o.int32(i.clusterLevelRaw)),i.key!=null&&(o.uint32(18),o.bytes(i.key)),i.record!=null&&(o.uint32(26),o.bytes(i.record)),i.closerPeers!=null)for(const c of i.closerPeers)o.uint32(66),r.Peer.codec().encode(c,o);if(i.providerPeers!=null)for(const c of i.providerPeers)o.uint32(74),r.Peer.codec().encode(c,o);a.lengthDelimited!==!1&&o.ldelim()},(i,o)=>{const a={closerPeers:[],providerPeers:[]},c=o==null?i.len:i.pos+o;for(;i.pos<c;){const l=i.uint32();switch(l>>>3){case 1:a.type=r.MessageType.codec().decode(i);break;case 10:a.clusterLevelRaw=i.int32();break;case 2:a.key=i.bytes();break;case 3:a.record=i.bytes();break;case 8:a.closerPeers.push(r.Peer.codec().decode(i,i.uint32()));break;case 9:a.providerPeers.push(r.Peer.codec().decode(i,i.uint32()));break;default:i.skipType(l&7);break}}return a})),n),r.encode=i=>encodeMessage(i,r.codec()),r.decode=i=>decodeMessage$1(i,r.codec())})(Message$4||(Message$4={}));const MESSAGE_TYPE=Message$4.MessageType,CONNECTION_TYPE=Message$4.ConnectionType,MESSAGE_TYPE_LOOKUP=Object.keys(MESSAGE_TYPE);let Message$3=class sr{constructor(e,t,n){_(this,"type");_(this,"key");_(this,"clusterLevelRaw");_(this,"closerPeers");_(this,"providerPeers");_(this,"record");if(!(t instanceof Uint8Array))throw new Error("Key must be a Uint8Array");this.type=e,this.key=t,this.clusterLevelRaw=n,this.closerPeers=[],this.providerPeers=[],this.record=void 0}get clusterLevel(){const e=this.clusterLevelRaw-1;return e<0?0:e}set clusterLevel(e){this.clusterLevelRaw=e}serialize(){return Message$4.encode({key:this.key,type:this.type,clusterLevelRaw:this.clusterLevelRaw,closerPeers:this.closerPeers.map(toPbPeer),providerPeers:this.providerPeers.map(toPbPeer),record:this.record==null?void 0:this.record.serialize().subarray()})}static deserialize(e){const t=Message$4.decode(e),n=new sr(t.type??Message$4.MessageType.PUT_VALUE,t.key??Uint8Array.from([]),t.clusterLevelRaw??0);return n.closerPeers=t.closerPeers.map(fromPbPeer),n.providerPeers=t.providerPeers.map(fromPbPeer),t.record?.length!=null&&(n.record=Libp2pRecord.deserialize(t.record)),n}};function toPbPeer(r){return{id:r.id.toBytes(),addrs:(r.multiaddrs??[]).map(t=>t.bytes),connection:CONNECTION_TYPE.CONNECTED}}function fromPbPeer(r){if(r.id==null)throw new Error("Invalid peer in message");return{id:peerIdFromBytes$4(r.id),multiaddrs:(r.addrs??[]).map(e=>multiaddr$1(e)),protocols:[]}}function sendQueryEvent(r,e={}){const t={...r,name:"SEND_QUERY",type:0,messageName:r.type,messageType:MESSAGE_TYPE_LOOKUP.indexOf(r.type.toString())};return e.onProgress?.(new CustomEvent$2("kad-dht:query:send-query",{detail:t})),t}function peerResponseEvent(r,e={}){const t={...r,name:"PEER_RESPONSE",type:1,messageName:r.messageType,closer:r.closer!=null?r.closer:[],providers:r.providers!=null?r.providers:[]};return e.onProgress?.(new CustomEvent$2("kad-dht:query:peer-response",{detail:t})),t}function finalPeerEvent(r,e={}){const t={...r,name:"FINAL_PEER",type:2};return e.onProgress?.(new CustomEvent$2("kad-dht:query:final-peer",{detail:t})),t}function queryErrorEvent(r,e={}){const t={...r,name:"QUERY_ERROR",type:3};return e.onProgress?.(new CustomEvent$2("kad-dht:query:query-error",{detail:t})),t}function providerEvent(r,e={}){const t={...r,name:"PROVIDER",type:4};return e.onProgress?.(new CustomEvent$2("kad-dht:query:provider",{detail:t})),t}function valueEvent(r,e={}){const t={...r,name:"VALUE",type:5};return e.onProgress?.(new CustomEvent$2("kad-dht:query:value",{detail:t})),t}function dialPeerEvent(r,e={}){const t={...r,name:"DIAL_PEER",type:7};return e.onProgress?.(new CustomEvent$2("kad-dht:query:dial-peer",{detail:t})),t}function bestRecord(r,e,t){if(t.length===0){const a="No records given";throw new CodeError$e(a,"ERR_NO_RECORDS_RECEIVED")}const i=toString$b(e).split("/");if(i.length<3){const a="Record key does not have a selector function";throw new CodeError$e(a,"ERR_NO_SELECTOR_FUNCTION_FOR_RECORD_KEY")}const o=r[i[1].toString()];if(o==null){const a=`No selector function configured for key type "${i[1]}"`;throw new CodeError$e(a,"ERR_UNRECOGNIZED_KEY_PREFIX")}return t.length===1?0:o(e,t)}function publickKey(r,e){return 0}const selectors={pk:publickKey};async function verifyRecord(r,e){const t=e.key,i=toString$b(t).split("/");if(i.length<3)return;const o=r[i[1].toString()];if(o==null){const a=`No validator available for key type "${i[1]}"`;throw new CodeError$e(a,"ERR_INVALID_RECORD_KEY_TYPE")}await o(t,e.value)}const validatePublicKeyRecord=async(r,e)=>{if(!(r instanceof Uint8Array))throw new CodeError$e('"key" must be a Uint8Array',"ERR_INVALID_RECORD_KEY_NOT_BUFFER");if(r.byteLength<5)throw new CodeError$e("invalid public key record","ERR_INVALID_RECORD_KEY_TOO_SHORT");if(toString$b(r.subarray(0,4))!=="/pk/")throw new CodeError$e("key was not prefixed with /pk/","ERR_INVALID_RECORD_KEY_BAD_PREFIX");const n=r.slice(4),i=await sha256$2.digest(e);if(!equals$4(n,i.bytes))throw new CodeError$e("public key does not match passed in key","ERR_INVALID_RECORD_HASH_MISMATCH")},validators={pk:validatePublicKeyRecord},PK_PREFIX=fromString$b("/pk/");function removePrivateAddresses(r){return{...r,multiaddrs:r.multiaddrs.filter(e=>{const[[t,n]]=e.stringTuples();if(t===53||t===54||t===55)return n!=="localhost";if(t!==4&&t!==6||n==null)return!1;const i=is_ip_private(n);return i==null?!0:!i})}}function removePublicAddresses(r){return{...r,multiaddrs:r.multiaddrs.filter(e=>{const[[t,n]]=e.stringTuples();if(n==="localhost")return!0;if(t!==4&&t!==6||n==null)return!1;const i=is_ip_private(n);return i??!1})}}async function convertBuffer(r){return(await sha256$2.digest(r)).digest}async function convertPeerId(r){return convertBuffer(r.toBytes())}function bufferToRecordKey(r){return new Key(`${RECORD_KEY_PREFIX}/${toString$b(r,"base32")}`,!1)}function keyForPublicKey(r){return concat$6([PK_PREFIX,r.toBytes()])}function isPublicKeyKey(r){return toString$b(r.subarray(0,4))==="/pk/"}function fromPublicKeyKey(r){return peerIdFromBytes$4(r.subarray(4))}function createPutRecord(r,e){const t=new Date;return new Libp2pRecord(r,e,t).serialize()}function debounce$1(r,e=100){let t;return()=>{clearTimeout(t),t=setTimeout(()=>{r()},e)}}class ContentFetching{constructor(e,t){_(this,"log");_(this,"components");_(this,"validators");_(this,"selectors");_(this,"peerRouting");_(this,"queryManager");_(this,"network");const{validators:n,selectors:i,peerRouting:o,queryManager:a,network:c,lan:l}=t;this.components=e,this.log=logger$5(`libp2p:kad-dht:${l?"lan":"wan"}:content-fetching`),this.validators=n,this.selectors=i,this.peerRouting=o,this.queryManager=a,this.network=c}async putLocal(e,t){const n=bufferToRecordKey(e);await this.components.datastore.put(n,t)}async getLocal(e){this.log("getLocal %b",e);const t=bufferToRecordKey(e);this.log("fetching record for key %k",t);const n=await this.components.datastore.get(t);this.log("found %k in local datastore",t);const i=Libp2pRecord.deserialize(n);return await verifyRecord(this.validators,i),i}async*sendCorrectionRecord(e,t,n,i={}){this.log("sendCorrection for %b",e);const o=createPutRecord(e,n);for(const{value:a,from:c}of t){if(equals$4(a,n)){this.log("record was ok");continue}if(this.components.peerId.equals(c)){try{const f=bufferToRecordKey(e);this.log(`Storing corrected record for key ${f.toString()}`),await this.components.datastore.put(f,o.subarray())}catch(f){this.log.error("Failed error correcting self",f)}continue}let l=!1;const u=new Message$3(MESSAGE_TYPE.PUT_VALUE,e,0);u.record=Libp2pRecord.deserialize(o);for await(const f of this.network.sendRequest(c,u,i))f.name==="PEER_RESPONSE"&&f.record!=null&&equals$4(f.record.value,Libp2pRecord.deserialize(o).value)&&(l=!0),yield f;l||(yield queryErrorEvent({from:c,error:new CodeError$e("value not put correctly","ERR_PUT_VALUE_INVALID")},i)),this.log.error("Failed error correcting entry")}}async*put(e,t,n={}){this.log("put key %b value %b",e,t);const i=createPutRecord(e,t),o=bufferToRecordKey(e);this.log(`storing record for key ${o.toString()}`),await this.components.datastore.put(o,i.subarray()),yield*pipe(this.peerRouting.getClosestPeers(e,{signal:n.signal}),a=>map$1(a,c=>async()=>{if(c.name!=="FINAL_PEER")return[c];const l=[],u=new Message$3(MESSAGE_TYPE.PUT_VALUE,e,0);u.record=Libp2pRecord.deserialize(i),this.log("send put to %p",c.peer.id);for await(const f of this.network.sendRequest(c.peer.id,u,n))l.push(f),f.name==="PEER_RESPONSE"&&(f.record!=null&&equals$4(f.record.value,Libp2pRecord.deserialize(i).value)||l.push(queryErrorEvent({from:c.peer.id,error:new CodeError$e("value not put correctly","ERR_PUT_VALUE_INVALID")},n)));return l}),a=>parallel(a,{ordered:!1,concurrency:ALPHA}),async function*(a){for await(const c of a)yield*c})}async*get(e,t={}){this.log("get %b",e);const n=[];for await(const c of this.getMany(e,t))c.name==="VALUE"&&n.push(c),yield c;if(n.length===0)return;const i=n.map(c=>c.value);let o=0;try{o=bestRecord(this.selectors,e,i)}catch(c){if(c.code!=="ERR_NO_SELECTOR_FUNCTION_FOR_RECORD_KEY")throw c}const a=i[o];if(this.log("GetValue %b %b",e,a),a==null)throw new CodeError$e("best value was not found","ERR_NOT_FOUND");yield*this.sendCorrectionRecord(e,n,a,t),yield n[o]}async*getMany(e,t={}){this.log("getMany values for %b",e);try{const o=await this.getLocal(e);yield valueEvent({value:o.value,from:this.components.peerId},t)}catch(o){this.log("error getting local value for %b",e,o)}const n=this,i=async function*({peer:o,signal:a}){for await(const c of n.peerRouting.getValueOrPeers(o,e,{signal:a}))yield c,c.name==="PEER_RESPONSE"&&c.record!=null&&(yield valueEvent({from:o,value:c.record.value},t))};yield*this.queryManager.run(e,i,t)}}class ContentRouting{constructor(e,t){_(this,"log");_(this,"components");_(this,"network");_(this,"peerRouting");_(this,"queryManager");_(this,"routingTable");_(this,"providers");const{network:n,peerRouting:i,queryManager:o,routingTable:a,providers:c,lan:l}=t;this.components=e,this.log=logger$5(`libp2p:kad-dht:${l?"lan":"wan"}:content-routing`),this.network=n,this.peerRouting=i,this.queryManager=o,this.routingTable=a,this.providers=c}async*provide(e,t,n={}){this.log("provide %s",e),await this.providers.addProvider(e,this.components.peerId);const i=new Message$3(MESSAGE_TYPE.ADD_PROVIDER,e.multihash.bytes,0);i.providerPeers=[{id:this.components.peerId,multiaddrs:t,protocols:[]}];let o=0;const a=c=>async()=>{if(c.name!=="FINAL_PEER")return[c];const l=[];this.log("putProvider %s to %p",e,c.peer.id);try{this.log("sending provider record for %s to %p",e,c.peer.id);for await(const u of this.network.sendMessage(c.peer.id,i,n))u.name==="PEER_RESPONSE"&&(this.log("sent provider record for %s to %p",e,c.peer.id),o++),l.push(u)}catch(u){this.log.error("error sending provide record to peer %p",c.peer.id,u),l.push(queryErrorEvent({from:c.peer.id,error:u},n))}return l};yield*pipe(this.peerRouting.getClosestPeers(e.multihash.bytes,n),c=>map$1(c,l=>a(l)),c=>parallel(c,{ordered:!1,concurrency:ALPHA}),async function*(c){for await(const l of c)yield*l}),this.log("sent provider records to %d peers",o)}async*findProviders(e,t){const n=this.routingTable.kBucketSize,i=e.multihash.bytes,o=this;this.log("findProviders %c",e);const a=await this.providers.getProviders(e);if(a.length>0){const u=[];for(const f of a.slice(0,n))try{const g=await this.components.peerStore.get(f);u.push({id:f,multiaddrs:g.addresses.map(({multiaddr:$})=>$),protocols:g.protocols})}catch(g){if(g.code!=="ERR_NOT_FOUND")throw g;this.log("no peer store entry for %p",f)}yield peerResponseEvent({from:this.components.peerId,messageType:MESSAGE_TYPE.GET_PROVIDERS,providers:u},t),yield providerEvent({from:this.components.peerId,providers:u},t)}if(a.length>=n)return;const c=async function*({peer:u,signal:f}){const g=new Message$3(MESSAGE_TYPE.GET_PROVIDERS,i,0);yield*o.network.sendRequest(u,g,{...t,signal:f})},l=new Set(a.map(u=>u.toString()));for await(const u of this.queryManager.run(i,c,t))if(yield u,u.name==="PEER_RESPONSE"){this.log("Found %d provider entries for %c and %d closer peers",u.providers.length,e,u.closer.length);const f=[];for(const g of u.providers)l.has(g.id.toString())||(l.add(g.id.toString()),f.push(g));if(f.length>0&&(yield providerEvent({from:u.from,providers:f},t)),l.size===n)return}}}class Network extends TypedEventEmitter$1{constructor(t,n){super();_(this,"log");_(this,"protocol");_(this,"running");_(this,"components");const{protocol:i,lan:o}=n;this.components=t,this.log=logger$5(`libp2p:kad-dht:${o?"lan":"wan"}:network`),this.running=!1,this.protocol=i}async start(){this.running||(this.running=!0)}async stop(){this.running=!1}isStarted(){return this.running}async*sendRequest(t,n,i={}){if(this.running){this.log("sending %s to %p",n.type,t),yield dialPeerEvent({peer:t},i),yield sendQueryEvent({to:t,type:n.type},i);try{const a=await(await this.components.connectionManager.openConnection(t,i)).newStream(this.protocol,i),c=await this._writeReadMessage(a,n.serialize(),i);yield peerResponseEvent({from:t,messageType:c.type,closer:c.closerPeers,providers:c.providerPeers,record:c.record},i)}catch(o){yield queryErrorEvent({from:t,error:o},i)}finally{}}}async*sendMessage(t,n,i={}){if(this.running){this.log("sending %s to %p",n.type,t),yield dialPeerEvent({peer:t},i),yield sendQueryEvent({to:t,type:n.type},i);try{const a=await(await this.components.connectionManager.openConnection(t,i)).newStream(this.protocol,i);await this._writeMessage(a,n.serialize(),i),yield peerResponseEvent({from:t,messageType:n.type},i)}catch(o){yield queryErrorEvent({from:t,error:o},i)}finally{}}}async _writeMessage(t,n,i){i.signal!=null&&(t=abortableDuplex(t,i.signal)),await pipe([n],o=>encode$d(o),t,drain)}async _writeReadMessage(t,n,i){i.signal!=null&&(t=abortableDuplex(t,i.signal));const o=await pipe([n],c=>encode$d(c),t,c=>decode$h(c),async c=>{const l=await first(c);if(l!=null)return l;throw new CodeError$e("No message received","ERR_NO_MESSAGE_RECEIVED")}),a=Message$3.deserialize(o);return a.closerPeers.forEach(c=>{this.dispatchEvent(new CustomEvent$2("peer",{detail:c}))}),a.providerPeers.forEach(c=>{this.dispatchEvent(new CustomEvent$2("peer",{detail:c}))}),a}}const webcrypto$4={get(r=globalThis){const e=r.crypto;if(e==null||e.subtle==null)throw Object.assign(new Error("Missing Web Crypto API. The most likely cause of this error is that this page is being accessed from an insecure context (i.e. not HTTPS). For more information and possible resolutions see https://github.com/libp2p/js-libp2p-crypto/blob/master/README.md#web-crypto-api"),{code:"ERR_MISSING_WEB_CRYPTO"});return e}},PUBLIC_KEY_BYTE_LENGTH$4=32,PRIVATE_KEY_BYTE_LENGTH$4=64,KEYS_BYTE_LENGTH$4=32;async function generateKey$e(){const r=ed25519.utils.randomPrivateKey(),e=ed25519.getPublicKey(r);return{privateKey:concatKeys$4(r,e),publicKey:e}}async function generateKeyFromSeed$4(r){if(r.length!==KEYS_BYTE_LENGTH$4)throw new TypeError('"seed" must be 32 bytes in length.');if(!(r instanceof Uint8Array))throw new TypeError('"seed" must be a node.js Buffer, or Uint8Array.');const e=r,t=ed25519.getPublicKey(e);return{privateKey:concatKeys$4(e,t),publicKey:t}}async function hashAndSign$e(r,e){const t=r.subarray(0,KEYS_BYTE_LENGTH$4);return ed25519.sign(e,t)}async function hashAndVerify$e(r,e,t){return ed25519.verify(e,t,r)}function concatKeys$4(r,e){const t=new Uint8Array(PRIVATE_KEY_BYTE_LENGTH$4);for(let n=0;n<KEYS_BYTE_LENGTH$4;n++)t[n]=r[n],t[KEYS_BYTE_LENGTH$4+n]=e[n];return t}const derivedEmptyPasswordKey$4={alg:"A128GCM",ext:!0,k:"scm9jmO_4BJAgdwWGVulLg",key_ops:["encrypt","decrypt"],kty:"oct"};function create$5(r){const e=r?.algorithm??"AES-GCM";let t=r?.keyLength??16;const n=r?.nonceLength??12,i=r?.digest??"SHA-256",o=r?.saltLength??16,a=r?.iterations??32767,c=webcrypto$4.get();t*=8;async function l(g,$){const S=c.getRandomValues(new Uint8Array(o)),E=c.getRandomValues(new Uint8Array(n)),v={name:e,iv:E};typeof $=="string"&&($=fromString$b($));let T;if($.length===0){T=await c.subtle.importKey("jwk",derivedEmptyPasswordKey$4,{name:"AES-GCM"},!0,["encrypt"]);try{const A={name:"PBKDF2",salt:S,iterations:a,hash:{name:i}},P=await c.subtle.importKey("raw",$,{name:"PBKDF2"},!1,["deriveKey"]);T=await c.subtle.deriveKey(A,P,{name:e,length:t},!0,["encrypt"])}catch{T=await c.subtle.importKey("jwk",derivedEmptyPasswordKey$4,{name:"AES-GCM"},!0,["encrypt"])}}else{const A={name:"PBKDF2",salt:S,iterations:a,hash:{name:i}},P=await c.subtle.importKey("raw",$,{name:"PBKDF2"},!1,["deriveKey"]);T=await c.subtle.deriveKey(A,P,{name:e,length:t},!0,["encrypt"])}const I=await c.subtle.encrypt(v,T,g);return concat$6([S,v.iv,new Uint8Array(I)])}async function u(g,$){const S=g.subarray(0,o),E=g.subarray(o,o+n),v=g.subarray(o+n),T={name:e,iv:E};typeof $=="string"&&($=fromString$b($));let I;if($.length===0)try{const P={name:"PBKDF2",salt:S,iterations:a,hash:{name:i}},x=await c.subtle.importKey("raw",$,{name:"PBKDF2"},!1,["deriveKey"]);I=await c.subtle.deriveKey(P,x,{name:e,length:t},!0,["decrypt"])}catch{I=await c.subtle.importKey("jwk",derivedEmptyPasswordKey$4,{name:"AES-GCM"},!0,["decrypt"])}else{const P={name:"PBKDF2",salt:S,iterations:a,hash:{name:i}},x=await c.subtle.importKey("raw",$,{name:"PBKDF2"},!1,["deriveKey"]);I=await c.subtle.deriveKey(P,x,{name:e,length:t},!0,["decrypt"])}const A=await c.subtle.decrypt(T,I,v);return new Uint8Array(A)}return{encrypt:l,decrypt:u}}async function exporter$5(r,e){const n=await create$5().encrypt(r,e);return base64$6.encode(n)}var KeyType$5;(function(r){r.RSA="RSA",r.Ed25519="Ed25519",r.Secp256k1="Secp256k1"})(KeyType$5||(KeyType$5={}));var __KeyTypeValues$5;(function(r){r[r.RSA=0]="RSA",r[r.Ed25519=1]="Ed25519",r[r.Secp256k1=2]="Secp256k1"})(__KeyTypeValues$5||(__KeyTypeValues$5={}));(function(r){r.codec=()=>enumeration(__KeyTypeValues$5)})(KeyType$5||(KeyType$5={}));var PublicKey$5;(function(r){let e;r.codec=()=>(e==null&&(e=message((t,n,i={})=>{i.lengthDelimited!==!1&&n.fork(),t.Type!=null&&(n.uint32(8),KeyType$5.codec().encode(t.Type,n)),t.Data!=null&&(n.uint32(18),n.bytes(t.Data)),i.lengthDelimited!==!1&&n.ldelim()},(t,n)=>{const i={},o=n==null?t.len:t.pos+n;for(;t.pos<o;){const a=t.uint32();switch(a>>>3){case 1:i.Type=KeyType$5.codec().decode(t);break;case 2:i.Data=t.bytes();break;default:t.skipType(a&7);break}}return i})),e),r.encode=t=>encodeMessage(t,r.codec()),r.decode=t=>decodeMessage$1(t,r.codec())})(PublicKey$5||(PublicKey$5={}));var PrivateKey$5;(function(r){let e;r.codec=()=>(e==null&&(e=message((t,n,i={})=>{i.lengthDelimited!==!1&&n.fork(),t.Type!=null&&(n.uint32(8),KeyType$5.codec().encode(t.Type,n)),t.Data!=null&&(n.uint32(18),n.bytes(t.Data)),i.lengthDelimited!==!1&&n.ldelim()},(t,n)=>{const i={},o=n==null?t.len:t.pos+n;for(;t.pos<o;){const a=t.uint32();switch(a>>>3){case 1:i.Type=KeyType$5.codec().decode(t);break;case 2:i.Data=t.bytes();break;default:t.skipType(a&7);break}}return i})),e),r.encode=t=>encodeMessage(t,r.codec()),r.decode=t=>decodeMessage$1(t,r.codec())})(PrivateKey$5||(PrivateKey$5={}));let Ed25519PublicKey$4=class{constructor(e){_(this,"_key");this._key=ensureKey$4(e,PUBLIC_KEY_BYTE_LENGTH$4)}async verify(e,t){return hashAndVerify$e(this._key,t,e)}marshal(){return this._key}get bytes(){return PublicKey$5.encode({Type:KeyType$5.Ed25519,Data:this.marshal()}).subarray()}equals(e){return equals$4(this.bytes,e.bytes)}async hash(){const{bytes:e}=await sha256$2.digest(this.bytes);return e}},Ed25519PrivateKey$4=class{constructor(e,t){_(this,"_key");_(this,"_publicKey");this._key=ensureKey$4(e,PRIVATE_KEY_BYTE_LENGTH$4),this._publicKey=ensureKey$4(t,PUBLIC_KEY_BYTE_LENGTH$4)}async sign(e){return hashAndSign$e(this._key,e)}get public(){return new Ed25519PublicKey$4(this._publicKey)}marshal(){return this._key}get bytes(){return PrivateKey$5.encode({Type:KeyType$5.Ed25519,Data:this.marshal()}).subarray()}equals(e){return equals$4(this.bytes,e.bytes)}async hash(){const{bytes:e}=await sha256$2.digest(this.bytes);return e}async id(){const e=identity$3.digest(this.public.bytes);return base58btc$4.encode(e.bytes).substring(1)}async export(e,t="libp2p-key"){if(t==="libp2p-key")return exporter$5(this.bytes,e);throw new CodeError$e(`export format '${t}' is not supported`,"ERR_INVALID_EXPORT_FORMAT")}};function unmarshalEd25519PrivateKey$4(r){if(r.length>PRIVATE_KEY_BYTE_LENGTH$4){r=ensureKey$4(r,PRIVATE_KEY_BYTE_LENGTH$4+PUBLIC_KEY_BYTE_LENGTH$4);const n=r.subarray(0,PRIVATE_KEY_BYTE_LENGTH$4),i=r.subarray(PRIVATE_KEY_BYTE_LENGTH$4,r.length);return new Ed25519PrivateKey$4(n,i)}r=ensureKey$4(r,PRIVATE_KEY_BYTE_LENGTH$4);const e=r.subarray(0,PRIVATE_KEY_BYTE_LENGTH$4),t=r.subarray(PUBLIC_KEY_BYTE_LENGTH$4);return new Ed25519PrivateKey$4(e,t)}function unmarshalEd25519PublicKey$4(r){return r=ensureKey$4(r,PUBLIC_KEY_BYTE_LENGTH$4),new Ed25519PublicKey$4(r)}async function generateKeyPair$f(){const{privateKey:r,publicKey:e}=await generateKey$e();return new Ed25519PrivateKey$4(r,e)}async function generateKeyPairFromSeed$4(r){const{privateKey:e,publicKey:t}=await generateKeyFromSeed$4(r);return new Ed25519PrivateKey$4(e,t)}function ensureKey$4(r,e){if(r=Uint8Array.from(r??[]),r.length!==e)throw new CodeError$e(`Key must be a Uint8Array of length ${e}, got ${r.length}`,"ERR_INVALID_KEY_TYPE");return r}const Ed25519$4=Object.freeze(Object.defineProperty({__proto__:null,Ed25519PrivateKey:Ed25519PrivateKey$4,Ed25519PublicKey:Ed25519PublicKey$4,generateKeyPair:generateKeyPair$f,generateKeyPairFromSeed:generateKeyPairFromSeed$4,unmarshalEd25519PrivateKey:unmarshalEd25519PrivateKey$4,unmarshalEd25519PublicKey:unmarshalEd25519PublicKey$4},Symbol.toStringTag,{value:"Module"}));function bigIntegerToUintBase64url$4(r,e){let t=Uint8Array.from(r.abs().toByteArray());if(t=t[0]===0?t.subarray(1):t,e!=null){if(t.length>e)throw new Error("byte array longer than desired length");t=concat$6([new Uint8Array(e-t.length),t])}return toString$b(t,"base64url")}function base64urlToBigInteger$4(r){const e=base64urlToBuffer$4(r);return new forge$n.jsbn.BigInteger(toString$b(e,"base16"),16)}function base64urlToBuffer$4(r,e){let t=fromString$b(r,"base64urlpad");if(e!=null){if(t.length>e)throw new Error("byte array longer than desired length");t=concat$6([new Uint8Array(e-t.length),t])}return t}const bits$5={"P-256":256,"P-384":384,"P-521":521},curveTypes$5=Object.keys(bits$5);curveTypes$5.join(" / ");function randomBytes$5(r){if(isNaN(r)||r<=0)throw new CodeError$e("random bytes length must be a Number bigger than 0","ERR_INVALID_LENGTH");return randomBytes$a(r)}function convert$6(r,e){return e.map(t=>base64urlToBigInteger$4(r[t]))}function jwk2priv$4(r){return forge$n.pki.setRsaPrivateKey(...convert$6(r,["n","e","d","p","q","dp","dq","qi"]))}function jwk2pub$4(r){return forge$n.pki.setRsaPublicKey(...convert$6(r,["n","e"]))}function pkcs1ToJwk$4(r){const e=forge$n.asn1.fromDer(toString$b(r,"ascii")),t=forge$n.pki.privateKeyFromAsn1(e);return{kty:"RSA",n:bigIntegerToUintBase64url$4(t.n),e:bigIntegerToUintBase64url$4(t.e),d:bigIntegerToUintBase64url$4(t.d),p:bigIntegerToUintBase64url$4(t.p),q:bigIntegerToUintBase64url$4(t.q),dp:bigIntegerToUintBase64url$4(t.dP),dq:bigIntegerToUintBase64url$4(t.dQ),qi:bigIntegerToUintBase64url$4(t.qInv),alg:"RS256"}}function jwkToPkcs1$4(r){if(r.n==null||r.e==null||r.d==null||r.p==null||r.q==null||r.dp==null||r.dq==null||r.qi==null)throw new CodeError$e("JWK was missing components","ERR_INVALID_PARAMETERS");const e=forge$n.pki.privateKeyToAsn1({n:base64urlToBigInteger$4(r.n),e:base64urlToBigInteger$4(r.e),d:base64urlToBigInteger$4(r.d),p:base64urlToBigInteger$4(r.p),q:base64urlToBigInteger$4(r.q),dP:base64urlToBigInteger$4(r.dp),dQ:base64urlToBigInteger$4(r.dq),qInv:base64urlToBigInteger$4(r.qi)});return fromString$b(forge$n.asn1.toDer(e).getBytes(),"ascii")}function pkixToJwk$4(r){const e=forge$n.asn1.fromDer(toString$b(r,"ascii")),t=forge$n.pki.publicKeyFromAsn1(e);return{kty:"RSA",n:bigIntegerToUintBase64url$4(t.n),e:bigIntegerToUintBase64url$4(t.e)}}function jwkToPkix$4(r){if(r.n==null||r.e==null)throw new CodeError$e("JWK was missing components","ERR_INVALID_PARAMETERS");const e=forge$n.pki.publicKeyToAsn1({n:base64urlToBigInteger$4(r.n),e:base64urlToBigInteger$4(r.e)});return fromString$b(forge$n.asn1.toDer(e).getBytes(),"ascii")}async function generateKey$d(r){const e=await webcrypto$4.get().subtle.generateKey({name:"RSASSA-PKCS1-v1_5",modulusLength:r,publicExponent:new Uint8Array([1,0,1]),hash:{name:"SHA-256"}},!0,["sign","verify"]),t=await exportKey$4(e);return{privateKey:t[0],publicKey:t[1]}}async function unmarshalPrivateKey$7(r){const t=[await webcrypto$4.get().subtle.importKey("jwk",r,{name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-256"}},!0,["sign"]),await derivePublicFromPrivate$4(r)],n=await exportKey$4({privateKey:t[0],publicKey:t[1]});return{privateKey:n[0],publicKey:n[1]}}async function hashAndSign$d(r,e){const t=await webcrypto$4.get().subtle.importKey("jwk",r,{name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-256"}},!1,["sign"]),n=await webcrypto$4.get().subtle.sign({name:"RSASSA-PKCS1-v1_5"},t,Uint8Array.from(e));return new Uint8Array(n,0,n.byteLength)}async function hashAndVerify$d(r,e,t){const n=await webcrypto$4.get().subtle.importKey("jwk",r,{name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-256"}},!1,["verify"]);return webcrypto$4.get().subtle.verify({name:"RSASSA-PKCS1-v1_5"},n,e,t)}async function exportKey$4(r){if(r.privateKey==null||r.publicKey==null)throw new CodeError$e("Private and public key are required","ERR_INVALID_PARAMETERS");return Promise.all([webcrypto$4.get().subtle.exportKey("jwk",r.privateKey),webcrypto$4.get().subtle.exportKey("jwk",r.publicKey)])}async function derivePublicFromPrivate$4(r){return webcrypto$4.get().subtle.importKey("jwk",{kty:r.kty,n:r.n,e:r.e},{name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-256"}},!0,["verify"])}function convertKey$4(r,e,t,n){const i=e?jwk2pub$4(r):jwk2priv$4(r),o=toString$b(Uint8Array.from(t),"ascii"),a=n(o,i);return fromString$b(a,"ascii")}function encrypt$4(r,e){return convertKey$4(r,!0,e,(t,n)=>n.encrypt(t))}function decrypt$4(r,e){return convertKey$4(r,!1,e,(t,n)=>n.decrypt(t))}function keySize$4(r){if(r.kty!=="RSA")throw new CodeError$e("invalid key type","ERR_INVALID_KEY_TYPE");if(r.n==null)throw new CodeError$e("invalid key modulus","ERR_INVALID_KEY_MODULUS");return fromString$b(r.n,"base64url").length*8}const MAX_KEY_SIZE$4=8192;let RsaPublicKey$4=class{constructor(e){_(this,"_key");this._key=e}async verify(e,t){return hashAndVerify$d(this._key,t,e)}marshal(){return jwkToPkix$4(this._key)}get bytes(){return PublicKey$5.encode({Type:KeyType$5.RSA,Data:this.marshal()}).subarray()}encrypt(e){return encrypt$4(this._key,e)}equals(e){return equals$4(this.bytes,e.bytes)}async hash(){const{bytes:e}=await sha256$2.digest(this.bytes);return e}},RsaPrivateKey$4=class{constructor(e,t){_(this,"_key");_(this,"_publicKey");this._key=e,this._publicKey=t}genSecret(){return randomBytes$5(16)}async sign(e){return hashAndSign$d(this._key,e)}get public(){if(this._publicKey==null)throw new CodeError$e("public key not provided","ERR_PUBKEY_NOT_PROVIDED");return new RsaPublicKey$4(this._publicKey)}decrypt(e){return decrypt$4(this._key,e)}marshal(){return jwkToPkcs1$4(this._key)}get bytes(){return PrivateKey$5.encode({Type:KeyType$5.RSA,Data:this.marshal()}).subarray()}equals(e){return equals$4(this.bytes,e.bytes)}async hash(){const{bytes:e}=await sha256$2.digest(this.bytes);return e}async id(){const e=await this.public.hash();return toString$b(e,"base58btc")}async export(e,t="pkcs-8"){if(t==="pkcs-8"){const n=new forge$n.util.ByteBuffer(this.marshal()),i=forge$n.asn1.fromDer(n),o=forge$n.pki.privateKeyFromAsn1(i),a={algorithm:"aes256",count:1e4,saltSize:128/8,prfAlgorithm:"sha512"};return forge$n.pki.encryptRsaPrivateKey(o,e,a)}else{if(t==="libp2p-key")return exporter$5(this.bytes,e);throw new CodeError$e(`export format '${t}' is not supported`,"ERR_INVALID_EXPORT_FORMAT")}}};async function unmarshalRsaPrivateKey$4(r){const e=pkcs1ToJwk$4(r);if(keySize$4(e)>MAX_KEY_SIZE$4)throw new CodeError$e("key size is too large","ERR_KEY_SIZE_TOO_LARGE");const t=await unmarshalPrivateKey$7(e);return new RsaPrivateKey$4(t.privateKey,t.publicKey)}function unmarshalRsaPublicKey$4(r){const e=pkixToJwk$4(r);if(keySize$4(e)>MAX_KEY_SIZE$4)throw new CodeError$e("key size is too large","ERR_KEY_SIZE_TOO_LARGE");return new RsaPublicKey$4(e)}async function fromJwk$4(r){if(keySize$4(r)>MAX_KEY_SIZE$4)throw new CodeError$e("key size is too large","ERR_KEY_SIZE_TOO_LARGE");const e=await unmarshalPrivateKey$7(r);return new RsaPrivateKey$4(e.privateKey,e.publicKey)}async function generateKeyPair$e(r){if(r>MAX_KEY_SIZE$4)throw new CodeError$e("key size is too large","ERR_KEY_SIZE_TOO_LARGE");const e=await generateKey$d(r);return new RsaPrivateKey$4(e.privateKey,e.publicKey)}const RSA$4=Object.freeze(Object.defineProperty({__proto__:null,MAX_KEY_SIZE:MAX_KEY_SIZE$4,RsaPrivateKey:RsaPrivateKey$4,RsaPublicKey:RsaPublicKey$4,fromJwk:fromJwk$4,generateKeyPair:generateKeyPair$e,unmarshalRsaPrivateKey:unmarshalRsaPrivateKey$4,unmarshalRsaPublicKey:unmarshalRsaPublicKey$4},Symbol.toStringTag,{value:"Module"}));function generateKey$c(){return secp256k1.utils.randomPrivateKey()}async function hashAndSign$c(r,e){const{digest:t}=await sha256$2.digest(e);try{return secp256k1.sign(t,r).toDERRawBytes()}catch(n){throw new CodeError$e(String(n),"ERR_INVALID_INPUT")}}async function hashAndVerify$c(r,e,t){try{const{digest:n}=await sha256$2.digest(t);return secp256k1.verify(e,n,r)}catch(n){throw new CodeError$e(String(n),"ERR_INVALID_INPUT")}}function compressPublicKey$4(r){return secp256k1.ProjectivePoint.fromHex(r).toRawBytes(!0)}function validatePrivateKey$4(r){try{secp256k1.getPublicKey(r,!0)}catch(e){throw new CodeError$e(String(e),"ERR_INVALID_PRIVATE_KEY")}}function validatePublicKey$4(r){try{secp256k1.ProjectivePoint.fromHex(r)}catch(e){throw new CodeError$e(String(e),"ERR_INVALID_PUBLIC_KEY")}}function computePublicKey$4(r){try{return secp256k1.getPublicKey(r,!0)}catch(e){throw new CodeError$e(String(e),"ERR_INVALID_PRIVATE_KEY")}}let Secp256k1PublicKey$4=class{constructor(e){_(this,"_key");validatePublicKey$4(e),this._key=e}async verify(e,t){return hashAndVerify$c(this._key,t,e)}marshal(){return compressPublicKey$4(this._key)}get bytes(){return PublicKey$5.encode({Type:KeyType$5.Secp256k1,Data:this.marshal()}).subarray()}equals(e){return equals$4(this.bytes,e.bytes)}async hash(){const{bytes:e}=await sha256$2.digest(this.bytes);return e}},Secp256k1PrivateKey$4=class{constructor(e,t){_(this,"_key");_(this,"_publicKey");this._key=e,this._publicKey=t??computePublicKey$4(e),validatePrivateKey$4(this._key),validatePublicKey$4(this._publicKey)}async sign(e){return hashAndSign$c(this._key,e)}get public(){return new Secp256k1PublicKey$4(this._publicKey)}marshal(){return this._key}get bytes(){return PrivateKey$5.encode({Type:KeyType$5.Secp256k1,Data:this.marshal()}).subarray()}equals(e){return equals$4(this.bytes,e.bytes)}async hash(){const{bytes:e}=await sha256$2.digest(this.bytes);return e}async id(){const e=await this.public.hash();return toString$b(e,"base58btc")}async export(e,t="libp2p-key"){if(t==="libp2p-key")return exporter$5(this.bytes,e);throw new CodeError$e(`export format '${t}' is not supported`,"ERR_INVALID_EXPORT_FORMAT")}};function unmarshalSecp256k1PrivateKey$4(r){return new Secp256k1PrivateKey$4(r)}function unmarshalSecp256k1PublicKey$4(r){return new Secp256k1PublicKey$4(r)}async function generateKeyPair$d(){const r=generateKey$c();return new Secp256k1PrivateKey$4(r)}const Secp256k1$4=Object.freeze(Object.defineProperty({__proto__:null,Secp256k1PrivateKey:Secp256k1PrivateKey$4,Secp256k1PublicKey:Secp256k1PublicKey$4,generateKeyPair:generateKeyPair$d,unmarshalSecp256k1PrivateKey:unmarshalSecp256k1PrivateKey$4,unmarshalSecp256k1PublicKey:unmarshalSecp256k1PublicKey$4},Symbol.toStringTag,{value:"Module"})),supportedKeys$4={rsa:RSA$4,ed25519:Ed25519$4,secp256k1:Secp256k1$4};function unsupportedKey$4(r){const e=Object.keys(supportedKeys$4).join(" / ");return new CodeError$e(`invalid or unsupported key type ${r}. Must be ${e}`,"ERR_UNSUPPORTED_KEY_TYPE")}function typeToKey$1(r){if(r=r.toLowerCase(),r==="rsa"||r==="ed25519"||r==="secp256k1")return supportedKeys$4[r];throw unsupportedKey$4(r)}function marshalPublicKey$1(r,e){return e=(e??"rsa").toLowerCase(),typeToKey$1(e),r.bytes}class PeerDistanceList{constructor(e,t){_(this,"originDhtKey");_(this,"capacity");_(this,"peerDistances");this.originDhtKey=e,this.capacity=t,this.peerDistances=[]}get length(){return this.peerDistances.length}get peers(){return this.peerDistances.map(e=>e.peerId)}async add(e){if(this.peerDistances.find(i=>i.peerId.equals(e))!=null)return;const t=await convertPeerId(e),n={peerId:e,distance:xor(this.originDhtKey,t)};this.peerDistances.push(n),this.peerDistances.sort((i,o)=>compare$1(i.distance,o.distance)),this.peerDistances=this.peerDistances.slice(0,this.capacity)}async anyCloser(e){if(e.length===0)return!1;if(this.length===0)return!0;const t=await Promise.all(e.map(convertPeerId)),n=this.peerDistances[this.peerDistances.length-1].distance;for(const i of t){const o=xor(this.originDhtKey,i);if(compare$1(o,n)<0)return!0}return!1}}class PeerRouting{constructor(e,t){_(this,"components");_(this,"log");_(this,"routingTable");_(this,"network");_(this,"validators");_(this,"queryManager");const{routingTable:n,network:i,validators:o,queryManager:a,lan:c}=t;this.components=e,this.routingTable=n,this.network=i,this.validators=o,this.queryManager=a,this.log=logger$5(`libp2p:kad-dht:${c?"lan":"wan"}:peer-routing`)}async findPeerLocal(e){let t;const n=await this.routingTable.find(e);if(n!=null){this.log("findPeerLocal found %p in routing table",e);try{t=await this.components.peerStore.get(n)}catch(i){if(i.code!=="ERR_NOT_FOUND")throw i}}if(t==null)try{t=await this.components.peerStore.get(e)}catch(i){if(i.code!=="ERR_NOT_FOUND")throw i}if(t!=null)return this.log("findPeerLocal found %p in peer store",e),{id:t.id,multiaddrs:t.addresses.map(i=>i.multiaddr),protocols:[]}}async*_getValueSingle(e,t,n={}){const i=new Message$3(MESSAGE_TYPE.GET_VALUE,t,0);yield*this.network.sendRequest(e,i,n)}async*getPublicKeyFromNode(e,t={}){const n=keyForPublicKey(e);for await(const i of this._getValueSingle(e,n,t))if(yield i,i.name==="PEER_RESPONSE"&&i.record!=null){const o=await peerIdFromKeys$4(marshalPublicKey$1({bytes:i.record.value}));if(!o.equals(e))throw new CodeError$e("public key does not match id","ERR_PUBLIC_KEY_DOES_NOT_MATCH_ID");if(o.publicKey==null)throw new CodeError$e("public key missing","ERR_PUBLIC_KEY_MISSING");yield valueEvent({from:e,value:o.publicKey},t)}throw new CodeError$e(`Node not responding with its public key: ${e.toString()}`,"ERR_INVALID_RECORD")}async*findPeer(e,t={}){this.log("findPeer %p",e);const n=await this.findPeerLocal(e);if(n!=null){this.log("found local"),yield finalPeerEvent({from:this.components.peerId,peer:n},t);return}const i=this,o=async function*({peer:c,signal:l}){const u=new Message$3(MESSAGE_TYPE.FIND_NODE,e.toBytes(),0);for await(const f of i.network.sendRequest(c,u,{...t,signal:l}))if(yield f,f.name==="PEER_RESPONSE"){const g=f.closer.find($=>$.id.equals(e));g!=null&&(yield finalPeerEvent({from:f.from,peer:g},t))}};let a=!1;for await(const c of this.queryManager.run(e.toBytes(),o,t))c.name==="FINAL_PEER"&&(a=!0),yield c;a||(yield queryErrorEvent({from:this.components.peerId,error:new CodeError$e("Not found","ERR_NOT_FOUND")},t))}async*getClosestPeers(e,t={}){this.log("getClosestPeers to %b",e);const n=await convertBuffer(e),i=this.routingTable.closestPeers(n),o=this,a=new PeerDistanceList(n,this.routingTable.kBucketSize);await Promise.all(i.map(async l=>{await a.add(l)}));const c=async function*({peer:l,signal:u}){o.log("closerPeersSingle %s from %p",toString$b(e,"base32"),l);const f=new Message$3(MESSAGE_TYPE.FIND_NODE,e,0);yield*o.network.sendRequest(l,f,{...t,signal:u})};for await(const l of this.queryManager.run(e,c,t))yield l,l.name==="PEER_RESPONSE"&&await Promise.all(l.closer.map(async u=>{await a.add(u.id)}));this.log("found %d peers close to %b",a.length,e);for(const l of a.peers)try{const u=await this.components.peerStore.get(l);yield finalPeerEvent({from:this.components.peerId,peer:{id:l,multiaddrs:u.addresses.map(({multiaddr:f})=>f),protocols:u.protocols}},t)}catch(u){if(u.code!=="ERR_NOT_FOUND")throw u}}async*getValueOrPeers(e,t,n={}){for await(const i of this._getValueSingle(e,t,n)){if(i.name==="PEER_RESPONSE"&&i.record!=null)try{await this._verifyRecordOnline(i.record)}catch{const a="invalid record received, discarded";this.log(a),yield queryErrorEvent({from:i.from,error:new CodeError$e(a,"ERR_INVALID_RECORD")},n);continue}yield i}}async _verifyRecordOnline(e){if(e.timeReceived==null)throw new CodeError$e("invalid record received","ERR_INVALID_RECORD");await verifyRecord(this.validators,new Libp2pRecord(e.key,e.value,e.timeReceived))}async getCloserPeersOffline(e,t){const n=await convertBuffer(e),i=this.routingTable.closestPeers(n),o=[];for(const a of i)if(!a.equals(t))try{const c=await this.components.peerStore.get(a);o.push({id:a,multiaddrs:c.addresses.map(({multiaddr:l})=>l),protocols:c.protocols})}catch(c){if(c.code!=="ERR_NOT_FOUND")throw c}return o.length>0?this.log("getCloserPeersOffline found %d peer(s) closer to %b than %p",o.length,e,t):this.log("getCloserPeersOffline could not find peer closer to %b than %p",e,t),o}}var hashlru=function(r){if(!r)throw Error("hashlru must have a max value, of type number, greater than 0");var e=0,t=Object.create(null),n=Object.create(null);function i(o,a){t[o]=a,e++,e>=r&&(e=0,n=t,t=Object.create(null))}return{has:function(o){return t[o]!==void 0||n[o]!==void 0},remove:function(o){t[o]!==void 0&&(t[o]=void 0),n[o]!==void 0&&(n[o]=void 0)},get:function(o){var a=t[o];if(a!==void 0)return a;if((a=n[o])!==void 0)return i(o,a),a},set:function(o,a){t[o]!==void 0?t[o]=a:i(o,a)},clear:function(){t=Object.create(null),n=Object.create(null)}}};const cache=getDefaultExportFromCjs(hashlru),log$H=logger$5("libp2p:kad-dht:providers");class Providers{constructor(e,t={}){_(this,"components");_(this,"cache");_(this,"cleanupInterval");_(this,"provideValidity");_(this,"syncQueue");_(this,"started");_(this,"cleaner");const{cacheSize:n,cleanupInterval:i,provideValidity:o}=t;this.components=e,this.cleanupInterval=i??PROVIDERS_CLEANUP_INTERVAL,this.provideValidity=o??PROVIDERS_VALIDITY,this.cache=cache(n??PROVIDERS_LRU_CACHE_SIZE),this.syncQueue=new PQueue$3({concurrency:1}),this.started=!1}isStarted(){return this.started}async start(){this.started||(this.started=!0,this.cleaner=setInterval(()=>{this._cleanup().catch(e=>{log$H.error(e)})},this.cleanupInterval))}async stop(){this.started=!1,this.cleaner!=null&&(clearInterval(this.cleaner),this.cleaner=void 0)}async _cleanup(){await this.syncQueue.add(async()=>{const e=Date.now();let t=0,n=0;const i=new Map,o=this.components.datastore.batch(),a=this.components.datastore.query({prefix:PROVIDER_KEY_PREFIX});for await(const c of a)try{const{cid:l,peerId:u}=parseProviderKey(c.key),f=readTime(c.value).getTime(),g=Date.now(),$=g-f,S=$>this.provideValidity;if(log$H("comparing: %d - %d = %d > %d %s",g,f,$,this.provideValidity,S?"(expired)":""),S){n++,o.delete(c.key);const E=i.get(l)??new Set;E.add(u),i.set(l,E)}t++}catch(l){log$H.error(l.message)}i.size>0?(log$H("deleting %d / %d entries",n,t),await o.commit()):log$H("nothing to delete");for(const[c,l]of i){const u=makeProviderKey(c),f=this.cache.get(u);if(f!=null){for(const g of l)f.delete(g);f.size===0?this.cache.remove(u):this.cache.set(u,f)}}log$H("Cleanup successful (%dms)",Date.now()-e)})}async _getProvidersMap(e){const t=makeProviderKey(e);let n=this.cache.get(t);return n==null&&(n=await loadProviders(this.components.datastore,e),this.cache.set(t,n)),n}async addProvider(e,t){await this.syncQueue.add(async()=>{log$H("%p provides %s",t,e);const n=await this._getProvidersMap(e);log$H("loaded %s provs",n.size);const i=new Date;n.set(t.toString(),i);const o=makeProviderKey(e);this.cache.set(o,n),await writeProviderEntry(this.components.datastore,e,t,i)})}async getProviders(e){return this.syncQueue.add(async()=>(log$H("get providers for %s",e),[...(await this._getProvidersMap(e)).keys()].map(n=>peerIdFromString$4(n))),{throwOnTimeout:!0})}}function makeProviderKey(r){const e=typeof r=="string"?r:toString$b(r.multihash.bytes,"base32");return`${PROVIDER_KEY_PREFIX}/${e}`}async function writeProviderEntry(r,e,t,n){const i=[makeProviderKey(e),"/",t.toString()].join(""),o=new Key(i),a=encode$a(n.getTime());await r.put(o,a)}function parseProviderKey(r){const e=r.toString().split("/");if(e.length!==5)throw new Error(`incorrectly formatted provider entry key in datastore: ${r.toString()}`);return{cid:e[3],peerId:e[4]}}async function loadProviders(r,e){const t=new Map,n=r.query({prefix:makeProviderKey(e)});for await(const i of n){const{peerId:o}=parseProviderKey(i.key);t.set(o,readTime(i.value))}return t}function readTime(r){return new Date(decode$b(r))}async function*queueToGenerator(r,e,t,n){const i=pushable({objectMode:!0}),o=g=>{n("clean up queue, results %d, queue size %d, pending tasks %d",i.readableLength,r.size,r.pending),r.clear(),i.end(g)},a=g=>{g!=null&&i.push(g)},c=g=>{n("queue error",g),o(g)},l=()=>{n("queue idle"),o()},u=()=>{n("abort queue"),o(new CodeError$e("Query aborted","ERR_QUERY_ABORTED"))},f=()=>{o()};r.on("completed",a),r.on("error",c),r.on("idle",l),e.addEventListener("abort",u),t.addEventListener("cleanup",f);try{yield*i}finally{r.removeListener("completed",a),r.removeListener("error",c),r.removeListener("idle",l),e.removeEventListener("abort",u),t.removeEventListener("cleanup",f)}}const MAX_XOR=BigInt("0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF");async function*queryPath(r){const{key:e,startingPeer:t,ourPeerId:n,signal:i,query:o,alpha:a,pathIndex:c,numPaths:l,cleanUp:u,queryFuncTimeout:f,log:g,peersSeen:$}=r,S=new PQueue$3({concurrency:a}),E=await convertBuffer(e);function v(T,I){if(T==null)return;$.add(T);const A=BigInt("0x"+toString$b(xor(I,E),"base16"));S.add(async()=>{const P=[i];f!=null&&P.push(AbortSignal.timeout(f));const x=anySignal(P);try{for await(const D of o({key:e,peer:T,signal:x,pathIndex:c,numPaths:l})){if(x.aborted)return;if(D.name==="PEER_RESPONSE")for(const C of D.closer){if($.has(C.id)){g("already seen %p in query",C.id);continue}if(n.equals(C.id)){g("not querying ourselves");continue}const k=await convertPeerId(C.id);if(BigInt("0x"+toString$b(xor(k,E),"base16"))>A){g("skipping %p as they are not closer to %b than %p",C.id,e,T);continue}g("querying closer peer %p",C.id),v(C.id,k)}S.emit("completed",D)}}catch(D){if(!i.aborted)return queryErrorEvent({from:T,error:D},r)}finally{x.clear()}},{priority:MAX_XOR-A}).catch(P=>{g.error(P)})}v(t,await convertPeerId(t)),yield*queueToGenerator(S,i,u,g)}class QueryManager{constructor(e,t){_(this,"components");_(this,"lan");_(this,"disjointPaths");_(this,"alpha");_(this,"shutDownController");_(this,"running");_(this,"queries");_(this,"metrics");_(this,"routingTable");_(this,"initialQuerySelfHasRun");const{lan:n=!1,disjointPaths:i=K,alpha:o=ALPHA}=t;this.components=e,this.disjointPaths=i??K,this.running=!1,this.alpha=o??ALPHA,this.lan=n,this.queries=0,this.initialQuerySelfHasRun=t.initialQuerySelfHasRun,this.routingTable=t.routingTable,this.shutDownController=new AbortController,setMaxListeners$4(1/0,this.shutDownController.signal)}isStarted(){return this.running}async start(){this.running=!0,this.components.metrics!=null&&this.metrics==null&&(this.metrics={runningQueries:this.components.metrics.registerMetric(`libp2p_kad_dht_${this.lan?"lan":"wan"}_running_queries`),queryTime:this.components.metrics.registerMetric(`libp2p_kad_dht_${this.lan?"lan":"wan"}_query_time_seconds`)})}async stop(){this.running=!1,this.shutDownController.abort()}async*run(e,t,n={}){if(!this.running)throw new Error("QueryManager not started");const i=this.metrics?.queryTime.timer();if(n.signal==null){const u=AbortSignal.timeout(DEFAULT_QUERY_TIMEOUT);setMaxListeners$4(1/0,u),n={...n,signal:u}}const o=anySignal([this.shutDownController.signal,n.signal]);setMaxListeners$4(1/0,o);const a=logger$5(`libp2p:kad-dht:${this.lan?"lan":"wan"}:query:`+toString$b(e,"base58btc")),c=Date.now(),l=new TypedEventEmitter$1;try{n.isSelfQuery!==!0&&this.initialQuerySelfHasRun!=null&&(a("waiting for initial query-self query before continuing"),await Promise.race([new Promise((E,v)=>{o.addEventListener("abort",()=>{v(new AbortError$g("Query was aborted before self-query ran"))})}),this.initialQuerySelfHasRun.promise]),this.initialQuerySelfHasRun=void 0),a("query:start"),this.queries++,this.metrics?.runningQueries.update(this.queries);const u=await convertBuffer(e),f=this.routingTable.closestPeers(u),g=f.slice(0,Math.min(this.disjointPaths,f.length));if(f.length===0){a.error("Running query with no peers");return}const $=new PeerSet$1,S=g.map((E,v)=>queryPath({key:e,startingPeer:E,ourPeerId:this.components.peerId,signal:o,query:t,pathIndex:v,numPaths:g.length,alpha:this.alpha,cleanUp:l,queryFuncTimeout:n.queryFuncTimeout,log:a,peersSeen:$,onProgress:n.onProgress}));for await(const E of merge$1(...S))yield E,E.name==="QUERY_ERROR"&&a("error",E.error)}catch(u){if(!(!this.running&&u.code==="ERR_QUERY_ABORTED"))throw u}finally{o.clear(),this.queries--,this.metrics?.runningQueries.update(this.queries),i?.(),l.dispatchEvent(new CustomEvent$2("cleanup")),a("query:done in %dms",Date.now()-c)}}}function isAsyncIterable$4(r){return r[Symbol.asyncIterator]!=null}function length$2(r){if(isAsyncIterable$4(r))return(async()=>{let e=0;for await(const t of r)e++;return e})();{let e=0;for(const t of r)e++;return e}}let TimeoutError$2=class extends Error{constructor(e){super(e),this.name="TimeoutError"}},AbortError$5=class extends Error{constructor(e){super(),this.name="AbortError",this.message=e}};const getDOMException$2=r=>globalThis.DOMException===void 0?new AbortError$5(r):new DOMException(r),getAbortedReason$2=r=>{const e=r.reason===void 0?getDOMException$2("This operation was aborted."):r.reason;return e instanceof Error?e:getDOMException$2(e)};function pTimeout$2(r,e){const{milliseconds:t,fallback:n,message:i,customTimers:o={setTimeout,clearTimeout}}=e;let a;const l=new Promise((u,f)=>{if(typeof t!="number"||Math.sign(t)!==1)throw new TypeError(`Expected \`milliseconds\` to be a positive number, got \`${t}\``);if(e.signal){const{signal:$}=e;$.aborted&&f(getAbortedReason$2($)),$.addEventListener("abort",()=>{f(getAbortedReason$2($))})}if(t===Number.POSITIVE_INFINITY){r.then(u,f);return}const g=new TimeoutError$2;a=o.setTimeout.call(void 0,()=>{if(n){try{u(n())}catch($){f($)}return}typeof r.cancel=="function"&&r.cancel(),i===!1?u():i instanceof Error?f(i):(g.message=i??`Promise timed out after ${t} milliseconds`,f(g))},t),(async()=>{try{u(await r)}catch($){f($)}})()}).finally(()=>{l.clear()});return l.clear=()=>{o.clearTimeout.call(void 0,a),a=void 0},l}const normalizeEmitter=r=>{const e=r.on||r.addListener||r.addEventListener,t=r.off||r.removeListener||r.removeEventListener;if(!e||!t)throw new TypeError("Emitter is not compatible");return{addListener:e.bind(r),removeListener:t.bind(r)}};function pEventMultiple(r,e,t){let n;const i=new Promise((o,a)=>{if(t={rejectionEvents:["error"],multiArgs:!1,resolveImmediately:!1,...t},!(t.count>=0&&(t.count===Number.POSITIVE_INFINITY||Number.isInteger(t.count))))throw new TypeError("The `count` option should be at least 0 or more");t.signal?.throwIfAborted();const c=[e].flat(),l=[],{addListener:u,removeListener:f}=normalizeEmitter(r),g=(...S)=>{const E=t.multiArgs?S:S[0];t.filter&&!t.filter(E)||(l.push(E),t.count===l.length&&(n(),o(l)))},$=S=>{n(),a(S)};n=()=>{for(const S of c)f(S,g);for(const S of t.rejectionEvents)f(S,$)};for(const S of c)u(S,g);for(const S of t.rejectionEvents)u(S,$);t.signal&&t.signal.addEventListener("abort",()=>{$(t.signal.reason)},{once:!0}),t.resolveImmediately&&o(l)});if(i.cancel=n,typeof t.timeout=="number"){const o=pTimeout$2(i,{milliseconds:t.timeout});return o.cancel=n,o}return i}function pEvent(r,e,t){typeof t=="function"&&(t={filter:t}),t={...t,count:1,resolveImmediately:!1};const n=pEventMultiple(r,e,t),i=n.then(o=>o[0]);return i.cancel=n.cancel,i}class QuerySelf{constructor(e,t){_(this,"log");_(this,"components");_(this,"peerRouting");_(this,"routingTable");_(this,"count");_(this,"interval");_(this,"initialInterval");_(this,"queryTimeout");_(this,"started");_(this,"timeoutId");_(this,"controller");_(this,"initialQuerySelfHasRun");_(this,"querySelfPromise");const{peerRouting:n,lan:i,count:o,interval:a,queryTimeout:c,routingTable:l}=t;this.components=e,this.log=logger$5(`libp2p:kad-dht:${i?"lan":"wan"}:query-self`),this.started=!1,this.peerRouting=n,this.routingTable=l,this.count=o??K,this.interval=a??QUERY_SELF_INTERVAL,this.initialInterval=t.initialInterval??QUERY_SELF_INITIAL_INTERVAL,this.queryTimeout=c??QUERY_SELF_TIMEOUT,this.initialQuerySelfHasRun=t.initialQuerySelfHasRun}isStarted(){return this.started}start(){this.started||(this.started=!0,clearTimeout(this.timeoutId),this.timeoutId=setTimeout(()=>{this.querySelf().catch(e=>{this.log.error("error running self-query",e)})},this.initialInterval))}stop(){this.started=!1,this.timeoutId!=null&&clearTimeout(this.timeoutId),this.controller!=null&&this.controller.abort()}async querySelf(){if(!this.started){this.log("skip self-query because we are not started");return}if(this.querySelfPromise!=null)return this.log("joining existing self query"),this.querySelfPromise.promise;if(this.querySelfPromise=pDefer(),this.started){this.controller=new AbortController;const e=anySignal([this.controller.signal,AbortSignal.timeout(this.queryTimeout)]);setMaxListeners$4(1/0,e);try{this.routingTable.size===0&&(this.log("routing table was empty, waiting for some peers before running query"),await pEvent(this.routingTable,"peer:add",{signal:e})),this.log("run self-query, look for %d peers timing out after %dms",this.count,this.queryTimeout);const t=Date.now(),n=await pipe(this.peerRouting.getClosestPeers(this.components.peerId.toBytes(),{signal:e,isSelfQuery:!0}),i=>take(i,this.count),async i=>length$2(i));this.log("self-query found %d peers in %dms",n,Date.now()-t)}catch(t){this.log.error("self-query error",t)}finally{e.clear(),this.initialQuerySelfHasRun!=null&&(this.initialQuerySelfHasRun.resolve(),this.initialQuerySelfHasRun=void 0)}}this.querySelfPromise.resolve(),this.querySelfPromise=void 0,this.started&&(this.timeoutId=setTimeout(()=>{this.querySelf().catch(e=>{this.log.error("error running self-query",e)})},this.interval))}}function arrayEquals$1(r,e){if(r===e)return!0;if(r.length!==e.length)return!1;for(let t=0,n=r.length;t<n;++t)if(r[t]!==e[t])return!1;return!0}function createNode$1(){return{contacts:[],dontSplit:!1,left:null,right:null}}function ensureInt8(r,e){if(!(e instanceof Uint8Array))throw new TypeError(r+" is not a Uint8Array")}class KBucket extends TypedEventEmitter$1{constructor(t){super();_(this,"localNodeId");_(this,"root");_(this,"numberOfNodesPerKBucket");_(this,"numberOfNodesToPing");_(this,"distance");_(this,"arbiter");this.localNodeId=t.localNodeId,this.numberOfNodesPerKBucket=t.numberOfNodesPerKBucket??20,this.numberOfNodesToPing=t.numberOfNodesToPing??3,this.distance=t.distance??KBucket.distance,this.arbiter=t.arbiter??KBucket.arbiter,ensureInt8("option.localNodeId as parameter 1",this.localNodeId),this.root=createNode$1()}static arbiter(t,n){return(t.vectorClock??0)>(n.vectorClock??0)?t:n}static distance(t,n){let i=0,o=0;const a=Math.min(t.length,n.length),c=Math.max(t.length,n.length);for(;o<a;++o)i=i*256+(t[o]^n[o]);for(;o<c;++o)i=i*256+255;return i}add(t){ensureInt8("contact.id",t?.id);let n=0,i=this.root;for(;i.contacts===null;)i=this._determineNode(i,t.id,n++);const o=this._indexOf(i,t.id);return o>=0?(this._update(i,o,t),this):i.contacts.length<this.numberOfNodesPerKBucket?(i.contacts.push(t),this.safeDispatchEvent("added",{detail:t}),this):i.dontSplit?(this.safeDispatchEvent("ping",{detail:{oldContacts:i.contacts.slice(0,this.numberOfNodesToPing),newContact:t}}),this):(this._split(i,n),this.add(t))}closest(t,n=1/0){if(ensureInt8("id",t),!Number.isInteger(n)&&n!==1/0||n<=0)throw new TypeError("n is not positive number");let i=[];for(let o=[this.root],a=0;o.length>0&&i.length<n;){const c=o.pop();if(c!=null)if(c.contacts===null){const l=this._determineNode(c,t,a++);o.push(c.left===l?c.right:c.left),o.push(l)}else i=i.concat(c.contacts)}return i.map(o=>({distance:this.distance(o.id,t),contact:o})).sort((o,a)=>o.distance-a.distance).slice(0,n).map(o=>o.contact)}count(){let t=0;for(const n=[this.root];n.length>0;){const i=n.pop();i!=null&&(i.contacts===null?n.push(i.right,i.left):t+=i.contacts.length)}return t}_determineNode(t,n,i){const o=i>>3,a=i%8;return n.length<=o&&a!==0?t.left:n[o]&1<<7-a?t.right:t.left}get(t){ensureInt8("id",t);let n=0,i=this.root;for(;i.contacts===null;)i=this._determineNode(i,t,n++);const o=this._indexOf(i,t);return o>=0?i.contacts[o]:void 0}_indexOf(t,n){for(let i=0;i<t.contacts.length;++i)if(arrayEquals$1(t.contacts[i].id,n))return i;return-1}remove(t){ensureInt8("the id as parameter 1",t);let n=0,i=this.root;for(;i.contacts===null;)i=this._determineNode(i,t,n++);const o=this._indexOf(i,t);if(o>=0){const a=i.contacts.splice(o,1)[0];this.safeDispatchEvent("removed",{detail:a})}return this}_split(t,n){t.left=createNode$1(),t.right=createNode$1();for(const a of t.contacts)this._determineNode(t,a.id,n).contacts.push(a);t.contacts=null;const i=this._determineNode(t,this.localNodeId,n),o=t.left===i?t.right:t.left;o.dontSplit=!0}toArray(){let t=[];for(const n=[this.root];n.length>0;){const i=n.pop();i!=null&&(i.contacts===null?n.push(i.right,i.left):t=t.concat(i.contacts))}return t}*toIterable(){for(const t=[this.root];t.length>0;){const n=t.pop();n!=null&&(n.contacts===null?t.push(n.right,n.left):yield*n.contacts)}}_update(t,n,i){if(!arrayEquals$1(t.contacts[n].id,i.id))throw new Error("wrong index for _update");const o=t.contacts[n],a=this.arbiter(o,i);a===o&&o!==i||(t.contacts.splice(n,1),t.contacts.push(a),this.safeDispatchEvent("updated",{detail:{incumbent:o,selection:a}}))}}const KAD_CLOSE_TAG_NAME="kad-close",KAD_CLOSE_TAG_VALUE=50,KBUCKET_SIZE=20,PING_TIMEOUT=1e4,PING_CONCURRENCY=10;class RoutingTable extends TypedEventEmitter$1{constructor(t,n){super();_(this,"kBucketSize");_(this,"kb");_(this,"pingQueue");_(this,"log");_(this,"components");_(this,"lan");_(this,"pingTimeout");_(this,"pingConcurrency");_(this,"running");_(this,"protocol");_(this,"tagName");_(this,"tagValue");_(this,"metrics");const{kBucketSize:i,pingTimeout:o,lan:a,pingConcurrency:c,protocol:l,tagName:u,tagValue:f}=n;this.components=t,this.log=logger$5(`libp2p:kad-dht:${a?"lan":"wan"}:routing-table`),this.kBucketSize=i??KBUCKET_SIZE,this.pingTimeout=o??PING_TIMEOUT,this.pingConcurrency=c??PING_CONCURRENCY,this.lan=a,this.running=!1,this.protocol=l,this.tagName=u??KAD_CLOSE_TAG_NAME,this.tagValue=f??KAD_CLOSE_TAG_VALUE;const g=()=>{this.metrics?.pingQueueSize.update(this.pingQueue.size),this.metrics?.pingRunning.update(this.pingQueue.pending)};this.pingQueue=new PQueue$3({concurrency:this.pingConcurrency}),this.pingQueue.addListener("add",g),this.pingQueue.addListener("next",g),this._onPing=this._onPing.bind(this)}isStarted(){return this.running}async start(){this.running=!0,this.components.metrics!=null&&(this.metrics={routingTableSize:this.components.metrics.registerMetric(`libp2p_kad_dht_${this.lan?"lan":"wan"}_routing_table_size`),pingQueueSize:this.components.metrics.registerMetric(`libp2p_kad_dht_${this.lan?"lan":"wan"}_ping_queue_size`),pingRunning:this.components.metrics.registerMetric(`libp2p_kad_dht_${this.lan?"lan":"wan"}_ping_running`)});const t=new KBucket({localNodeId:await convertPeerId(this.components.peerId),numberOfNodesPerKBucket:this.kBucketSize,numberOfNodesToPing:1});this.kb=t,t.addEventListener("ping",this._onPing),this._tagPeers(t)}async stop(){this.running=!1,this.pingQueue.clear(),this.kb=void 0}_tagPeers(t){let n=new PeerSet$1;const i=debounce$1(()=>{const o=new PeerSet$1(t.closest(t.localNodeId,KBUCKET_SIZE).map(l=>l.peer)),a=o.difference(n),c=n.difference(o);Promise.resolve().then(async()=>{for(const l of a)await this.components.peerStore.merge(l,{tags:{[this.tagName]:{value:this.tagValue}}});for(const l of c)await this.components.peerStore.merge(l,{tags:{[this.tagName]:void 0}})}).catch(l=>{this.log.error("Could not update peer tags",l)}),n=o});t.addEventListener("added",o=>{i(),this.safeDispatchEvent("peer:add",{detail:o.detail.peer})}),t.addEventListener("removed",o=>{i(),this.safeDispatchEvent("peer:remove",{detail:o.detail.peer})})}_onPing(t){const{oldContacts:n,newContact:i}=t.detail;this.pingQueue.add(async()=>{if(!this.running)return;let o=0;try{await Promise.all(n.map(async a=>{try{const c={signal:AbortSignal.timeout(this.pingTimeout)};this.log("pinging old contact %p",a.peer),await(await(await this.components.connectionManager.openConnection(a.peer,c)).newStream(this.protocol,c)).close(),o++}catch(c){this.running&&this.kb!=null&&(this.log.error("could not ping peer %p",a.peer,c),this.log("evicting old contact after ping failed %p",a.peer),this.kb.remove(a.id))}finally{this.metrics?.routingTableSize.update(this.size)}})),this.running&&o<n.length&&this.kb!=null&&(this.log("adding new contact %p",i.peer),this.kb.add(i))}catch(a){this.log.error("could not process k-bucket ping event",a)}}).catch(o=>{this.log.error("could not process k-bucket ping event",o)})}get size(){return this.kb==null?0:this.kb.count()}async find(t){const n=await convertPeerId(t),i=this.closestPeer(n);if(i!=null&&t.equals(i))return i}closestPeer(t){const n=this.closestPeers(t,1);if(n.length>0)return n[0]}closestPeers(t,n=this.kBucketSize){return this.kb==null?[]:this.kb.closest(t,n).map(o=>o.peer)}async add(t){if(this.kb==null)throw new Error("RoutingTable is not started");const n=await convertPeerId(t);this.kb.add({id:n,peer:t}),this.log("added %p with kad id %b",t,n),this.metrics?.routingTableSize.update(this.size)}async remove(t){if(this.kb==null)throw new Error("RoutingTable is not started");const n=await convertPeerId(t);this.kb.remove(n),this.metrics?.routingTableSize.update(this.size)}}const GENERATED_PREFIXES=[77591,22417,43971,28421,740,29829,71467,228973,196661,78537,27689,36431,44415,14362,19456,106025,96308,2882,49509,21149,87173,131409,75844,23676,121838,30291,17492,2953,7564,110620,129477,127283,53113,72417,165166,109690,21200,102125,24049,71504,90342,25307,72039,26812,26715,32264,133800,71161,88956,171987,51779,24425,16671,30251,186294,247761,14202,2121,8465,35024,4876,85917,169730,3638,256836,96184,943,18678,6583,52907,35807,112254,214097,18796,11595,9243,23554,887,268203,382004,24590,111335,11625,16619,29039,102425,69006,97976,92362,32552,63717,41433,128974,137630,59943,10019,13986,35430,33665,108037,43799,43280,38195,29078,58629,18265,14425,46832,235538,40830,77881,110717,58937,3463,325358,51300,47623,117252,19007,10170,20540,91237,294813,4951,79841,56232,36270,128547,69209,66275,100156,32063,73531,34439,80937,28892,44466,88595,216307,32583,49620,16605,82127,45807,21630,78726,20235,40163,111007,96926,5567,72083,21665,58844,39419,179767,48328,42662,51550,5251,37811,49608,81056,50854,55513,20922,18891,197409,164656,32593,71449,220474,58919,85682,67854,13758,35066,3565,61905,214793,119572,141419,21504,10302,27354,67003,46131,32668,15165,64871,34450,17821,2757,11452,34189,5160,12257,85523,560,53385,65887,119549,135620,312353,115979,122356,10867,193231,124537,54783,90675,120791,4715,142253,50943,17271,43358,25331,4917,120566,34580,12878,33786,160528,32523,4869,301307,104817,81491,23276,8832,97911,31265,52065,7998,49622,9715,43998,34091,84587,20664,69041,29419,53205,10838,58288,116145,6185,5154,141795,35924,21307,144738,43730,12085,8279,10002,119,133779,199668,72938,31768,39176,67875,38453,9700,44144,4121,116048,41733,12868,82669,92308,128,34262,11332,7712,90764,36141,13553,71312,77470,117314,96549,49135,23602,54468,28605,6327,62308,17171,67531,21319,14105,894,107722,46157,8503,51069,100472,45138,15246,14577,35609,191464,1757,13364,161349,32067,91705,81144,52339,5408,91066,21983,14157,100545,4372,26630,129112,1423,29676,213626,4397,88436,99190,6877,49958,26122,114348,60661,29818,293118,50042,179738,16400,163423,89627,31040,43973,36638,45952,5153,1894,109322,1898,134021,12402,112077,68309,190269,69866,31938,107383,11522,105232,11248,14868,39852,71707,186525,16530,38162,106212,11700,5130,16608,26998,59586,108399,230033,43683,48135,82179,2073,5015,196684,189293,16378,23452,8301,35640,11632,214551,29240,57644,33137,91949,55157,52384,117313,5090,17717,89668,49363,82238,241035,66216,29066,184088,97206,62820,26595,4241,135635,173672,8202,459,71355,146294,29587,3008,135385,141203,14803,6634,45094,69362,50925,546,51884,62011,83296,234584,44515,56050,89476,87751,19373,12691,149923,19794,13833,35846,87557,58339,2884,19145,25647,12224,11024,77338,64608,122297,53025,7205,36189,36294,170779,21750,7739,173883,75192,35664,224240,113121,30181,26267,27036,117827,92015,106516,55628,203549,67949,60462,60844,35911,20457,1820,920,19773,8738,73173,181993,38521,98254,76257,46008,92796,5384,26868,151566,22124,2411,15919,186872,180021,28099,152961,78811,80237,62352,102653,74259,184890,16792,123702,224945,29940,19512,75283,14059,112691,92811,233329,20411,138569,53341,109802,50600,134528,66747,5529,166531,31578,64732,67189,1596,126357,967,167999,206598,109752,119431,207825,78791,91938,10301,27311,24233,252343,28831,32812,66002,112267,90895,8786,8095,16824,22866,21813,60507,174833,19549,130985,117051,52110,6938,81923,123864,38061,919,18680,53534,46739,112893,161529,85429,26761,11900,81121,91968,15390,217947,56524,1713,6654,37089,85630,138866,61850,16491,75577,16884,98296,73523,6140,44645,6062,36366,29844,57946,37932,42472,5266,20834,19309,33753,127182,134259,35810,41805,45878,312001,14881,47757,49251,120050,44252,3708,25856,107864,120347,1228,36550,41682,34496,47025,8393,173365,246526,12894,161607,35670,90785,126572,2095,124731,157033,58694,554,12786,9642,4817,16136,47864,174698,66992,4639,69284,10625,40710,27763,51738,30404,264105,137904,109882,52487,42824,57514,2740,10479,146799,107390,16586,88038,174951,9410,16185,44158,5568,40658,46108,12763,97385,26175,108859,664,230732,67470,46663,14395,50750,141320,93140,15361,47997,55784,6791,307840,118569,107326,18056,58281,260415,54691,8790,73332,45633,7511,45674,143373,14031,11799,94491,35646,96544,14560,26049,32983,25791,83814,42094,231370,63955,139212,2359,169908,3108,183486,105867,28197,32941,124968,26402,88267,149768,23053,3078,19091,52924,25383,19209,111548,97361,3959,24880,235061,9099,24921,161254,151405,20508,7159,34381,20133,11434,74036,19974,34769,36585,1076,22454,17354,38727,235160,111547,96454,117448,156940,91330,37299,7310,26915,117060,51369,22620,61861,322264,106850,111694,15091,2624,40345,300446,177064,1707,27389,54792,327783,132669,183543,59003,17744,20603,151134,106923,53084,71803,279424,319816,11579,21946,16728,38274,72711,5085,83391,88646,40159,25027,34680,10752,12988,54126,30365,18338,100445,230674,44874,84974,143877,123253,139372,28082,91477,144002,13096,219729,46016,50029,42377,14601,6660,58244,58978,23918,88206,113611,64452,17541,41032,10942,12021,49189,10978,40175,37156,10947,71709,106894,112538,57007,137486,150608,152719,40615,7746,279716,13101,19524,28708,40578,72320,1096,182051,94527,51275,22833,45164,81917,77519,48508,5421,140302,37845,149830,5587,27579,5357,428725,248187,6326,206760,39814,32585,89923,44341,288753,284443,96368,31201,94189,119504,20359,52073,103216,179,27934,32801,96035,34111,34309,101326,18198,20704,210266,37643,27880,141873,106e3,19414,56614,167714,66483,107885,86602,4379,20796,75467,4987,5017,118857,26003,34308,114428,29198,6686,29697,73632,3739,69795,16798,41504,7207,30722,21436,36735,28067,28545,3239,11221,36031,41889,100010,19247,317673,29495,174554,6424,129725,53845,94986,7955,59676,2604,191497,19735,102214,62954,23844,11872,179525,261436,34492,428,78404,142035,16747,17246,27578,37021,33672,57944,26056,135760,2369,61674,122066,31327,19374,157065,40553,130982,69619,71290,38855,72100,92903,95940,51422,165999,65713,57873,50726,7288,20272,2081,42326,22624,81120,57914,79352,19447,1684,72302,11774,302559,161481,96396,13692,414988,3721,79066,56627,46883,21150,11747,12184,5856,113458,176117,84416,52079,27933,3354,59765,141359,2212,216309,2555,23458,196722,142463,45701,44548,28798,19418,215,29916,9396,10574,114226,84475,13520,18694,34056,4524,90302,62930,13539,19407,77209,7728,38088,9535,2263,23875,183945,17750,26274,67172,10585,28042,22199,7478,51331,66030,26774,192929,31434,25850,50197,52926,178158,4679,181256,70184,229600,9959,105594,72158,73974,2726,35085,78087,23284,35568,51713,155676,5401,27254,11966,17569,223253,71993,103357,111477,55722,30504,26034,46774,35392,36285,214814,41143,163465,1051,16094,81044,6636,76489,179102,20712,39178,35683,125177,54219,30617,52994,25324,50123,2543,87529,58995,10688,125199,12388,60158,125481,131646,7642,133350,65874,3438,97277,101450,10075,56344,116821,50778,60547,98016,106135,13859,14255,16300,77373,173521,8285,45932,37426,4054,114295,55947,7703,39114,52,51119,128135,19714,60715,9554,50492,88180,2823,118271,52993,122625,97919,23859,37895,25040,33614,32102,20431,3577,9275,15686,43031,157741,110358,1884,40291,125391,13736,5008,64881,87336,77381,70711,43032,49155,118587,70494,4318,10168,30126,12580,10524,280104,104001,145413,2862,84140,6603,106005,13566,12780,11251,42830,571,179910,82443,13146,469,42714,32591,265217,424024,92553,54721,134100,6007,15242,114681,59030,16718,85465,200214,85982,55174,165013,23493,56964,82529,109150,32706,27568,82442,5350,14976,13165,44890,60021,21343,33978,17264,4655,22328,27819,75730,16567,55483,14510,17926,45827,150609,3704,7385,272531,161543,76904,122163,52405,2039,19165,41623,14423,228354,3369,176360,85491,7122,35789,303724,4465,13628,2233,55311,118771,20713,10006,221519,45115,71021,35650,29775,7337,10864,20665,21142,1746,15080,1624,32449,10905,105743,229797,7701,3940,22997,178467,57208,389057,39683,59403,63344,63125,54847,69691,18336,56448,3362,37202,18282,29648,138224,35867,10495,5911,28814,26653,31514,176702,26550,45621,11734,4525,40543,73944,121080,27858,155561,14887,44670,30742,8796,107455,113472,56369,75581,183777,240095,133699,153299,8768,160464,26058,49078,103971,21875,71486,44888,17156,9678,89541,123019,102337,3972,83930,21245,87852,109660,287918,183019,686,10100,39177,283941,11274,24736,26793,26214,25995,77011,141580,4070,23742,46285,46632,30700,26669,19056,35951,115575,174034,56097,35463,87425,24575,44245,38701,82317,85922,281616,100333,147697,61503,7730,84330,8530,59917,61597,17173,9092,32658,90288,193136,39023,20381,56654,31132,7779,1919,1375,117128,30819,11169,40938,23935,115201,101155,151034,4835,11231,74550,89388,59951,91704,107312,167882,115062,12732,72738,88703,464019,158267,57995,60496,737,14371,123867,4174,243339,159946,7568,16025,134556,110916,38103,191,80226,88794,29688,27230,10454,76308,57647,77409,113483,66864,14745,19808,12023,46583,84805,16015,17102,2231,20611,3547,95740,250131,34559,108894,8498,15853,159169,148920,20942,2813,93160,45188,210613,45531,52587,149062,39782,28194,57849,60965,84954,89766,84453,100927,16501,27658,165311,103841,54192,207341,19558,20084,319622,5672,205467,98462,61849,36279,13609,147177,24726,165015,209489,59591,31157,6551,117580,75060,141146,277310,21072,22023,106474,63041,137443,122965,68371,5383,42146,98961,113467,30863,23794,4843,99630,30392,82679,13699,241612,33601,93146,24319,18643,32155,95669,40440,15333,34089,67799,142144,58245,38633,114531,117400,77861,188726,5507,2568,8853,10987,107222,2663,2421,11530,13345,30075,41785,118661,104786,17459,12490,16281,71936,193555,17431,5944,71758,26485,77317,20803,367167,158,7362,93430,11735,172445,46002,11532,54482,930,62911,2235,23004,179236,4764,101859,208113,22477,55163,95579,14098,67320,162556,90709,156949,3826,57492,4025,34092,87442,104565,6718,186015,28214,14209,10039,107186,233912,58877,81637,55265,39828,6194,145813,50831,105849,4974,88319,122296,10272,197216,95714,51540,72418,23324,91555,8743,140452,250249,51666,34124,7229,38592,129641,78169,174242,22464,149964,51450,14034,10026,95376,26190,120062,14401,8700,265,31386,143573,7203,229889,61567,4227,140981,2466,72052,10787,10062,30958,6099,38471,30103,23202,208101,70847,467,58934,32271,32984,36637,24107,30771,17109,73353,13650,2098,157040,67366,66904,106018,265380,107238,18535,44025,32681,144983,62505,91295,56120,3082,77508,10322,63023,36700,81885,224127,16721,45023,239261,111272,13852,7866,149243,204199,32309,22084,42029,38316,126644,104973,14406,43454,67322,61310,15789,40285,24026,181047,6301,70927,23319,115823,27248,66693,115875,278566,63007,146844,56841,59007,87368,180001,22370,42114,80605,12022,10374,308,25079,14689,12618,63368,7936,264973,212291,136713,95999,105801,18965,32075,48700,52230,35119,96912,32992,8586,16606,101333,101812,14969,39930,759,193090,27387,42914,12937,5058,62646,64528,38624,25743,37502,3716,4435,30352,178687,26461,132611,42002,138442,35833,59582,16345,8048,60319,49349,309,47800,49739,90482,26405,34470,63786,32479,85028,39866,47846,11649,23934,29466,2816,42864,31828,7410,74885,49632,47629,111801,90749,19536,18767,105764,59606,21223,10746,76298,22220,39408,7190,79654,64856,11602,82156,272765,17079,70089,245473,51813,184407,384678,1576,122249,5064,27481,6188,25790,74361,27541,318284,45430,31488,620,93579,45723,192118,22670,51913,4162,70244,35966,26397,16199,50899,209613,121702,287507,2993,36101,132229,67345,33062,76295,118628,78705,52316,34375,107083,107454,44863,127561,33964,3073,154010,190914,55967,39074,6272,31047,5550,41123,26154,98638,47110,19998,148091,50229,31329,59900,195442,19106,61347,73497,70015,682,45850,25776,38022,148951,6288,37411,232526,109277,27286,32342,9262,5220,16651,23175,46740,129438,78614,121925,66914,88710,127952,5563,21500,34521,10739,14863,191006,62956,17359,16749,67027,56284,69134,43301,35039,58883,54466,60823,404451,75743,59856,86979,7923,34273,83785,32142,7693,268986,197428,282681,17049,22346,22990,92245,107180,3357,37104,96724,49153,7683,31197,43267,82231,164276,23696,20848,188364,22309,24821,158707,1018,22514,70922,27792,45589,59709,10765,736,35218,63479,51987,24275,63588,55361,92929,81964,4658,20122,12330,44058,13065,311456,72224,8337,211229,38979,22590,138478,52757,32595,133600,8838,31549,94412,43391,90056,1585,94802,127271,6223,31889,137038,132910,2165,57616,230152,6080,10748,36737,74579,134062,50525,180532,119270,34556,76155,82394,52595,29258,31435,87820,67996,26943,183878,38007,2410,13526,180297,69856,3503,187396,167700,7838,16701,9199,56267,3661,37407,65994,23767,5708,62508,221700,67088,86978,46776,84434,32088,5612,9149,88244,21685,95151,46750,189612,2979,506311,2594,3628,40074,105039,78243,28523,6651,38058,71999,30992,12764,68261,108991,6165,26450,61961,13400,22426,7490,60890,109623,2070,12958,50355,67979,257096,7213,42578,52121,35716,65461,7516,124758,39268,302,64712,14977,1467,219452,2840,34229,11121,21602,19270,63574,8024,1532,17331,79839,78885,52029,180767,57957,6069,91265,61380,55767,8927,32881,287603,22149,35029,68876,6428,199567,46926,13412,104132,21434,366616,45060,110046,81924,128910,45886,52821,130416,29416,77342,21762,67329,121432,79924,11724,38625,81006,102033,28338,13326,3250,82056,82526,38212,21112,12382,111495,3263,7414,86274,93490,40844,30224,45212,24019,48411,71367,24941,76729,57776,3769,38114,202019,197745,31953,237533,33270,201580,255648,100798,44741,32241,98468,106931,10085,15090,170358,33154,66787,18819,69760,25061,234005,82660,6295,131975,16874,9076,4094,25005,17740,40908,19533,220019,44330,99792,50040,19619,13950,55228,24423,31253,95308,103177,184795,28590,82285,5059,3210,75525,49894,70007,56178,10580,36051,139681,21617,98736,3555,106306,164189,37352,63915,47824,24883,145530,61904,28444,11483,19837,145446,30420,112972,85939,11835,191233,2262,20705,58630,1753,148334,1197,144714,6887,11223,107667,60879,77914,4151,57417,81594,96681,169430,1784,20444,95138,254041,27038,596,7117,72808,13759,3353,126776,21074,55322,27081,36942,39547,139830,179275,4453,713,8722,71399,19204,25785,22794,23923,104114,11291,25458,102309,88396,75288,230440,206396,104551,58447,130857,37247,94734,31548,176529,226077,65159,20104,10096,66881,94191,237909,27109,37404,1520,27421,25220,113003,23423,24884,50585,6286,231877,150800,11789,3226,90004,60642,5053,202400,61442,132531,175329,57138,30116,103847,9973,75367,16452,32360,59119,21246,10191,164804,23305,61051,37348,154530,13214,5468,50403,66754,130976,50559,80515,14436,155492,84017,5472,43107,41240,2890,90431,70188,382,76234,48040,50211,281038,237007,32115,142178,1536,22761,96429,1811,31243,1679,49143,55209,17402,235054,61494,7462,77030,34925,87609,78002,9499,9027,73289,201078,101379,63544,27666,5469,10642,30029,49816,132979,95620,58086,351930,116300,2110,2043,30845,6154,11279,16727,4122,2277,27281,4971,3650,39060,61970,65951,39674,75686,38151,11370,130809,177895,32665,63725,122267,7857,39618,118483,44792,157755,178624,136994,24260,41308,22471,12404,21707,12486,30473,52781,50246,20247,39065,909,56825,103158,128603,31542,1089,41935,32744,12428,37963,84420,33134,72921,208449,42622,168151,127335,147107,46699,38216,12591,94342,85814,31423,24944,2605,87542,67473,192551,4496,56321,91819,17630,6300,256183,114569,202090,33209,35289,34897,24967,40520,43470,5344,10199,34810,14283,10381,10017,62923,49924,23233,64539,13051,35686,19698,11570,135555,120868,44924,87065,52318,52335,47586,140906,245885,109834,78668,9065,46990,25258,72022,61243,40838,4545,146387,10537,11557,17470,36930,68104,46711,24264,79401,81043,18225,120488,24746,84338,81652,28266,13776,21878,46973,1047,230465,73357,95777,24973,210160,62210,58404,110633,169651,6937,41870,9909,26822,191062,76553,27519,96256,239070,2478,205678,67955,58532,20601,50120,19148,78501,195724,110740,8249,109665,27446,30568,57631,31425,49752,32820,65504,50079,3663,102256,219898,23849,211315,14645,4359,91767,9528,12449,49366,7941,49763,107848,8930,27086,50686,9744,10447,81935,39513,46514,1670,29229,6172,22312,137280,97759,9806,14445,22976,56458,73391,34983,93760,174219,52573,33149,59747,2429,136277,75123,165263,91040,7446,57632,48633,97140,246081,84766,151684,79918,93268,120346,54059,54875,77858,32996,103590,45276,11968,19600,25849,17159,132907,42828,16817,4913,99462,103303,27395,5737,74184,20749,21160,14377,77062,131403,158735,10999,27799,77785,9320,34366,51593,61070,33746,47048,29268,36675,30262,53297,9832,82e3,20188,122292,39917,7331,18160,68301,185935,134830,15031,4935,10004,165845,185534,46923,30109,44134,122631,18874,22903,112790,26561,18549,348902,82871,140345,255565,135390,63556,103747,145055,179600,145662,296111,61661,211987,23952,52342,126343,48450,32919,44277,82185,9591,62139,205363,376969,394874,108461,18040,120885,14798,39863,16571,16794,58271,81025,55206,14640,118656,6361,44092,85970,6262,153863,108244,180200,72264,79947,38044,10050,5735,61221,80712,5471,115689,11391,11661,184257,20010,60116,30320,19327,134598,45455,27542,18004,125092,452272,1549,91523,46567,180063,156026,2608,11174,58848,37788,65907,80194,30490,5786,40775,119519,106241,11323,156297,8425,61495,2617,29675,2425,59886,112582,49142,59618,4863,50597,86710,50650,168632,27693,85641,83643,18993,25768,84284,28090,93592,36627,312804,43381,9887,9402,100931,97165,3311,173330,66805,28935,4963,184460,3201,78102,19126,21607,37496,24938,22615,16153,32862,134792,153318,61120,6067,2812,12826,12792,23825,37559,64662,202250,102694,155488,85881,149193,46233,65383,15521,106982,11358,176786,25752,39717,34208,24510,32464,77742,39371,72028,138229,60688,71386,102834,132477,2208,11548,63670,271279,28351,30338,38620,32491,99845,143885,152266,13252,2825,178663,108097,1775,78201,14897,113573,163346,62292,171129,22183,96598,38733,64971,166776,117445,9968,146393,44677,74867,20908,97328,12761,25656,26785,9148,112344,26115,99176,110121,22437,49547,6180,79320,5835,31392,43328,33377,75870,119860,69497,80273,7325,155219,43167,111173,28347,20222,3763,71752,55041,47252,14618,28088,15012,97805,194698,54636,2036,41349,6173,96604,61530,51859,43782,13361,24334,22668,24792,7070,23441,16789,3209,36211,208475,26242,32880,122181,182407,21444,31060,88459,29929,77907,12716,10934,97005,20599,31690,8403,58445,30303,22700,10336,86731,103115,337709,72556,46788,112566,47684,67089,53548,36874,56487,41387,125985,26893,40071,106683,73712,18787,40105,72992,67246,137276,50802,36790,70328,138827,22466,39263,183295,29858,50975,9322,57397,10654,24364,30383,55799,41600,23584,127295,296610,129078,143558,244131,86397,36049,1085,80677,3820,108139,5476,34767,24683,7758,13060,7239,131671,250593,59556,103392,29810,4188,252323,39404,116877,7651,43600,40338,13554,157253,39196,25978,144387,61211,234,50104,6129,10449,93777,9240,356378,274148,4439,72970,3724,147770,78680,62570,115877,40027,40547,36817,224392,64609,34795,165027,67440,2477,37206,23431,50754,164797,46018,94995,170982,27051,7957,22767,3674,27900,56419,18930,60701,41302,2692,84749,339721,61996,111094,80221,50129,1045,8153,62945,19202,8250,37208,37418,32560,79477,41106,88569,33963,36693,5892,30570,1581,66471,49647,11922,160717,29442,5643,114865,82962,95982,132098,22633,22838,94726,54556,28566,205039,162340,33216,16849,35847,221339,94851,26533,71469,1805,3804,12935,45483,71020,36310,65381,192960,34240,35165,59773,1248,46954,155332,96864,4246,388800,16129,57133,74592,44807,442014,38203,42574,80818,91592,26377,36424,65760,977,77387,22628,147610,28018,30561,98454,6969,119628,63648,18170,36854,26601,64018,22027,37279,51395,152934,21153,9430,58760,194742,5330,55115,34158,28917,174111,13171,122326,1526,43896,66094,25325,4234,148354,11450,275,18999,112191,44365,22723,68409,8733,57746,96565,75007,14196,108844,29475,88599,177563,100792,106156,86323,93726,14248,135341,194131,40126,47099,14779,8272,39597,95983,171398,65882,28052,10393,47213,40689,22120,72212,106829,34964,109146,753,648,21660,30047,17527,181025,5619,145357,4085,216883,9359,186951,24779,53931,24545,36197,223296,62628,168101,4243,107313,30321,26642,13049,51059,31027,107912,807,73550,26551,84369,122422,165872,49754,74213,234264,33151,52014,33100,87183,22365,52500,40013,23302,5652,72723,21404,26107,48434,587,94049,168493,96418,32871,70860,31709,25128,443,71597,166253,15670,70994,26341,133675,28280,75491,54756,47955,56028,26182,11952,113272,472197,64640,110753,17919,337,50642,22576,142,87371,53391,93210,126694,15285,19642,85667,14148,1506,42092,52962,33243,11970,20734,135843,57044,58880,13002,219134,22876,64754,232519,4257,43120,321573,24799,64526,124728,52579,81472,70831,276848,17403,74359,23021,182101,74597,23744,148267,12055,7976,5349,11772,67540,167347,65318,18720,127832,108238,22828,90233,9987,259080,118185,73209,79270,13775,90100,137742,90799,70569,15699,19961,9087,67475,57872,39731,8810,134897,131868,146849,19898,3334,2281,167061,91073,60356,467742,74712,188,53179,137679,92769,29241,9537,132595,80119,1041,88962,5976,40171,44911,102859,139059,104558,98987,47761,19272,71472,113864,175377,73338,10857,23402,23758,1591,139864,5644,4076,118760,16427,134198,18853,20291,100849,37423,22038,36677,19071,195521,57445,11069,31869,55718,66882,148490,44,41296,75242,49704,166810,9906,20943,122258,49112,105667,15969,10344,6408,187694,21399,72742,58970,14867,14376,81889,41856,23225,15042,56993,16074,131389,74276,72407,53875,383108,53597,37363,68993,44854,122548,430927,198279,38430,80409,12245,2981,628,2818,17760,37437,238229,7968,46892,2200,3730,34190,65983,37959,112291,87850,70827,6522,20750,73913,111621,41652,19587,2780,58668,25916,85259,18200,168962,95781,42445,102050,7776,57662,103313,47742,96358,41964,66174,100396,29069,204735,19679,27978,7479,40264,22534,61183,36081,107436,58223,14680,23002,101311,24716,124108,12908,5646,31750,40380,14215,232799,102772,14122,96775,61398,50917,12096,149880,67833,598749,124194,155871,49216,790,14677,65319,56917,7440,145744,95701,12206,49405,129269,76199,45732,9767,11058,9047,210885,11051,7392,26307,2130,8132,147526,20802,232698,115660,50060,59789,57344,107623,80343,112676,23291,9866,160971,34032,118291,15719,59730,164911,28975,2659,58046,78480,21854,66209,53863,109085,116045,29021,46481,107552,22130,18764,70254,31272,11300,52460,43933,84738,20721,53869,190840,79673,105300,7561,321817,66924,13940,33281,101046,183181,32176,71878,5678,62924,79535,56646,40303,19559,27703,93042,73368,42187,3670,37376,46440,7023,36816,109628,20680,5940,276440,275233,170848,112093,136996,14984,20226,111441,77693,112960,48577,39370,55707,50314,123404,26570,54281,61372,123391,4857,35928,246740,132507,106646,44241,7196,92258,9825,37688,51197,303141,5590,15476,132986,10955,85782,34486,26696,7991,28813,18858,39546,11703,11365,38185,5716,93555,11925,40121,60002,6985,10976,171384,3887,43394,13337,56346,6381,252336,39573,75042,53711,1028,31781,44295,95925,131713,7214,68125,43571,70954,213234,1628,8760,13391,65485,17320,56038,1710,25248,60803,57399,19839,3870,326,281556,50945,72400,21460,316244,75619,56246,98775,481,13513,55765,50427,7388,123519,32929,57908,27124,61316,101097,57467,30228,48792,10788,20402,37318,50526,155730,34456,158065,145305,17832,43733,64052,4506,35072,205355,177028,184004,187081,68616,35938,83703,10367,36892,93186,260137,51934,89970,4985,23445,26755,21558,7948,78741,23376,124405,85594,68596,57536,49351,12619,56593,132668,99924,109728,71844,71935,196018,65464,17617,14987,89701,143773,33997,8687,22701,33258,2914,4436,72108,85610,9671,49067,2327,82988,1361,1672,44033,35777,30269,24057,10605,82236,616,15793,13919,47249,112086,116698,9484,80207,90574,33304,68624,93127,56101,42210,160929,4827,38995,38095,4701,125119,5027,33680,9236,231236,14135,87837,23318,70261,78893,30151,81482,14332,1084,74256,27532,46644,79185,3148,62615,6981,55672,31668,36825,1849,14536,37446,14738,23779,43058,162749,72199,1168,21346,5592,85932,85302,9668,18351,57135,150360,2080,228015,77953,34670,119302,151751,31009,106725,84265,45214,59289,74178,113071,263206,111009,4021,44449,188119,192629,123592,392506,292847,114487,12831,205858,9852,20780,79648,75767,357014,97721,18166,21005,67950,33226,204009,16536,2987,11335,66717,144910,47950,17262,55060,15063,2934,51038,26775,178497,66008,3427,49433,128592,20036,157553,63861,3089,23015,51210,28696,35933,49942,71135,231518,99620,17248,21835,176536,20676,16944,38700,165831,233253,295625,36723,13023,52745,10907,19423,67972,125868,95473,82875,1183,108455,52685,33417,64095,21433,52438,33191,127809,44505,211823,7810,2752,95548,162031,7185,91196,47563,61721,33359,17897,23682,42806,178101,22874,49707,199897,75419,82456,8618,11171,79712,116847,18783,44190,46564,5346,59046,95032,7893,14916,3214,26800,24172,121453,34362,10250,17408,18888,4840,68696,22831,13162,36005,32512,14800,62357,41723,45046,27247,37486,5372,2564,34261,298500,66509,133920,89138,31305,117697,19097,108304,81386,84106,23802,46411,63304,946,51417,41777,41041,19501,115864,60743,294354,37955,94165,18116,1156,17937,20645,57114,90804,58042,48643,92288,9861,2557,88546,61333,101008,12853,5148,87856,4152,144503,73841,18718,9789,147565,10846,42085,12789,30223,8993,56352,67203,2448,28215,6052,23540,126319,75933,36689,80235,23231,23561,21383,38800,77548,102798,21234,31468,158608,46188,63960,191679,8051,67014,11185,170078,42186,28827,34777,41930,212079,12421,34750,24111,110344,73918,45171,70826,141949,40063,23979,24254,37309,26724,27179,24718,83648,54938,14591,17425,29525,102675,48975,48654,12316,8929,60640,41709,50168,63264,89812,50716,48632,38755,138583,160123,55579,71829,24230,233277,46322,39650,166388,34718,24108,98252,7031,106695,62498,18258,35062,217827,78731,34824,33354,19520,60852,2432,60224,8587,2836,62955,702,20227,42285,40560,95592,62486,11094,53035,143291,18842,46177,77994,1770,9657,107422,172915,32655,128716,25886,25164,156740,119928,165875,85817,11007,89110,33956,12652,65156,180266,8494,36889,19958,20955,96,1264,118288,135769,44754,86671,5632,19026,168220,289120,33569,93821,66144,70635,7687,5642,2714,55445,56636,71545,184182,93133,7332,37389,12643,52315,22729,11014,158742,17050,152889,50178,34601,41945,52136,9948,26914,63548,95721,115951,40759,8960,158258,38938,49232,48325,42234,81523,253019,66128,40978,20048,238048,38760,62928,122560,118532,43687,137472,163689,26680,9878,17448,51035,16211,60834,36749,29178,14241,59868,150086,2305,26477,42422,34342,165341,83279,33894,14257,29928,12743,13957,125571,89134,66712,10952,16507,147839,30146,7249,16565,45399,39874,114565,215780,31990,230881,171477,102,196546,44538,10880,84948,281705,86651,10617,31395,2342,453658,43569,60561,132901,21845,17727,58556,258242,22262,58728,4008,77997,11806,37431,30599,81375,109137,185787,114085,217292,97453,169085,30593,60212,11544,102056,65580,2384,91655,4855,95725,7295,157994,16228,20669,53276,141590,105246,17334,25440,76067,17967,39321,38911,11362,28559,63807,21627,26468,85816,40120,1025,15234,58319,69516,66512,124548,75845,78873,22137,46681,51242,85683,32909,76747,35555,43396,101465,1765,73094,1077,2962,39028,66777,57831,42048,15828,13962,36041,63657,52412,5242,58846,2141,5506,219012,134451,3936,182230,17558,17153,152237,22621,49377,170216,35257,68233,65374,6510,11126,212151,7184,2480,22517,3437,33073,30156,16557,3768,55067,86829,91e3,12350,148650,66017,79424,70885,49066,28250,21369,51213,34533,11510,3258,18176,18465,84413,6315,36411,163765,4346,356,107618,598,13727,285026,162695,8749,14583,7132,63521,184253,32378,25991,5604,30961,53675,4874,84693,5086,34811,26978,56564,7904,33519,51221,113942,69253,6664,125563,22055,220680,102008,742,51930,19494,176108,44424,35123,13025,75685,11759,74335,22250,181453,131147,16984,132115,154311,11991,76452,52609,85351,196,30969,9198,74919,2529,56838,71779,29187,116304,3504,62330,41190,86153,28393,254926,104228,105189,13264,84359,3574,12415,8534,57147,10175,188174,59504,60932,66318,16407,107921,17638,99103,49278,28403,39786,145865,8462,3558,43406,142271,29139,21989,36552,93955,72365,7176,13556,106185,37957,321774,17782,129017,51154,27938,24952,1935,39366,2791,33489,41582,56078,24558,9311,5449,218786,27808,190429,68013,36020,86003,29735,3404,87348,119357,115714,2324,86796,81973,40992,43376,93621,28784,16808,36367,2517,2909,191926,24978,55303,53308,205724,60068,3098,21375,64784,23949,26579,63121,12319,80145,39967,97861,6757,70143,67642,37082,34698,69140,122883,46151,62187,80934,429,19437,135071,137885,222647,13331,154065,327,61778,74257,40116,37493,14855,85079,237641,42342,102164,199965,71204,4662,29368,5042,113914,122214,8955,13149,102503,43173,5659,163787,69003,307084,63392,171080,21390,81918,86666,36622,24126,28887,5736,28054,207170,163428,79891,346467,95363,38980,111806,80828,9200,19288,294896,114468,87405,111715,141705,7015,72754,68463,48738,243147,33397,101210,37051,98801,82847,20397,4940,185559,18716,54718,83491,11725,40803,1128,12128,23060,5174,7745,67007,46701,1571,27807,180186,256996,18975,16837,7877,212758,250379,15440,87954,57755,24719,124057,83461,258,50864,8874,29038,71289,31627,15429,9005,4061,113851,107716,82819,13651,79656,117851,17539,111446,12938,39724,190787,4352,15402,21070,62708,8539,23777,73853,13552,38810,86117,16285,56400,1718,75342,142863,29033,378,110113,180321,32586,23606,26393,160984,207987,23783,8406,16904,24596,47274,11693,46539,60524,78595,48423,31718,20170,9009,146268,15183,191060,172765,1349,138436,37365,10970,40509,225817,20021,70394,152138,21541,66559,66544,89352,2725,17258,91345,7313,3815,115868,8660,40362,4071,103524,39388,118275,21950,6549,38226,32754,209574,29201,43495,18028,20296,40597,18370,47520,202450,24134,2219,8195,69545,38041,136934,46374,19041,159811,84865,58620,846,98749,13569,30714,97246,32186,4479,27355,92973,35214,151491,75963,37631,1561,27200,238083,23182,60756,12291,25766,39355,102333,87362,65741,59906,19538,201575,48772,102938,24438,292580,39964,66366,9004,61379,50548,37622,38732,28379,68180,76622,17488,69849,5963,7219,48143,43413,55358,540,58691,29506,19245,52193,48621,5518,13048,118625,44755,191081,42061,89197,2259,60665,66994,71210,51232,3585,142096,55024,7892,8345,58653,463307,65658,64319,137941,136323,53499,12746,43492,6978,95163,29925,60175,5128,7352,41463,184756,121146,20473,18426,4598,5309,54580,14277,121151,10691,56711,43880,63409,76682,11830,172218,264898,32632,66536,81062,31649,25788,92774,60222,11100,63159,9432,224657,25240,53613,152,138620,163829,2397,85345,12501,37507,64932,38575,43522,65789,80198,78796,35226,3851,108891,73311,3060,28391,93671,39663,46142,30982,66041,37281,68157,26553,71872,81142,211527,39747,118119,22695,2859,11066,20232,168911,7933,197005,17066,111071,44434,133994,120798,12766,227798,45756,132852,29917,36076,55352,65281,129800,41958,18944,84678,18580,168093,132621,39997,54092,27740,32354,3770,114118,103242,43918,15899,18574,145944,3190,123469,219903,24169,100571,62403,16776,92779,14535,17168,16475,14304,37231,1712,28218,242754,61688,28980,1318,51359,222657,99200,67989,31772,23932,35351,201251,49041,27306,19128,40135,3986,77333,19649,120683,151927,21081,7076,78375,77501,101599,8011,89585,96715,58179,5378,102138,106793,26051,217276,4197,16297,27014,46721,13322,22806,5278,29629,70632,9647,71519,58818,40603,128530,8903,36770,56900,31483,26935,43845,34265,34920,87658,6114,84767,64250,47318,50720,19264,162514,33357,13117,6705,46696,75032,71054,87004,42035,69138,11903,99854,102328,19611,34525,69312,6431,49842,101600,133178,108751,41829,89939,225664,48916,99556,9195,130387,5960,36857,116724,53518,94002,39077,53996,6945,22261,64291,8314,152785,57588,16522,9091,5048,87671,35441,39509,1945,12423,158923,178413,37549,14095,1475,73188,62878,4819,24012,68534,42606,4010,120809,57497,59564,101758,103718,32701,80116,12345,95834,46918,21468,53213,15665,31200,3867,5140,96013,250744,21016,10069,13968,35449,180829,27683,39704,59956,22893,3115,26293,32785,75934,62445,141162,62720,2018,83638,19949,114012,95006,3330,99829,130935,309272,9565,55874,121727,37017,23586,319858,40970,27602,8625,112329,61060,100088,118525,25922,16232,1907,60671,51583,44553,80993,5262,94679,8676,940,20736,11823,3020,16476,12340,152600,97416,3703,25744,66826,16245,16876,46446,84798,74227,176020,45192,61955,75496,23946,23626,40372,26036,6149,11822,30582,16541,41914,82385,232823,40921,80773,14930,3631,7517,39619,4348,36180,126106,138939,62611,1477,113512,47321,25052,14546,118881,29060,23589,128322,36795,18401,137921,104699,267929,36194,172791,18113,4766,188215,30083,332586,94089,5805,77909,22194,68234,154976,43220,40660,70001,184893,138095,11128,103010,22663,5108,212615,8485,5565,49222,54614,26530,42639,16319,55062,152662,105595,21114,22216,10294,68158,10436,86950,7206,62115,3977,3657,59874,456,118617,18156,106663,112229,80992,17442,8217,55551,5133,34344,251927,51153,39364,201321,7816,66803,23057,156724,145664,14276,95705,979,2796,6875,13429,212525,50602,26276,28284,3424,19465,52397,46963,31420,51399,206476,92317,48851,637,100820,83349,10317,60227,21972,6908,282439,32857,224767,95629,83882,42106,87338,69757,29840,68709,37665,45244,114577,49188,175943,54009,186746,106158,70168,3358,234002,50555,9221,129338,9562,20118,32923,78479,118280,65752,4977,10474,102174,60947,129006,10570,83451,8598,8078,159367,123785,80438,16742,5905,5281,181513,42402,6977,163136,93179,42191,14968,50421,112401,105440,33456,57347,121611,4221,94954,36517,24046,27796,6255,33394,72990,135408,116627,1233,57874,25654,95419,68156,401399,313338,55208,45573,93124,119251,47200,38196,11909,130667,45391,73904,64964,167846,4137,115606,52036,62214,7969,160925,7187,1132,134835,40309,73195,64494,80472,444841,61111,26500,45323,40743,53625,52797,22659,15631,29739,36706,28841,39147,102836,26794,10536,14845,87305,45874,12241,127587,83833,57183,79722,30844,41304,84655,20825,92500,3722,25655,27811,10157,81634,31362,34088,92487,70123,22190,185100,72658,139035,192523,88241,2078,230490,44528,85638,100198,22088,29982,291233,241062,13865,4445,137791,37835,107218,31726,19718,38234,72528,23046,19177,66695,5109,17251,28077,5617,21554,47839,72425,133825,1486,73065,181275,141508,21768,62971,63082,2512,34200,9904,120309,6392,91243,68416,268253,41199,116757,138551,185526,41246,28986,4093,19057,17295,4148,245766,122360,35356,112075,20301,75441,10998,7977,19769,62922,937,63547,100196,26427,157820,20983,236696,22935,8140,90315,156004,47204,140973,7726,45097,52725,22636,23436,257282,105247,522,88389,216031,202204,46812,211666,19693,68828,81691,45925,11256,30292,372,5236,167826,88328,232776,151611,5360,82104,18841,80393,25465,18285,20320,72377,31730,33160,45803,38715,27705,37379,24163,18360,103586,4015,32305,269494,91252,20080,36567,54650,7797,57073,12650,31164,42209,6375,261663,105528,81661,106002,2800,5375,17247,43151,4442,15727,194619,100855,144898,62320,78465,39929,16454,1967,28311,61363,17219,9395,8745,121445,76939,80385,162380,22009,54191,44248,16299,122830,48151,74429,78291,64755,14238,44966,2511,17712,67954,93583,829,105899,49935,84750,11591,33185,85447,42717,27409,208542,28965,62052,52525,5597,25694,65594,16343,63224,276188,12475,9331,127507,38522,57287,24128,133161,79723,105548,133695,48917,27558,43278,46520,13778,141954,110785,83366,17715,46317,105763,66298,147013,41086,94180,16478,220447,44611,730,19722,78975,117889,125643,26254,16574,18480,65006,15806,38549,246418,46052,36056,8440,34984,30170,3163,59800,4458,115442,4283,41970,33507,104078,1653,22,121158,276486,3655,6338,24048,133421,23641,2161,24422,36006,8086,10675,181474,12307,29514,59143,14729,52509,87128,122470,19446,80852,33314,24573,119864,14237,9652,57779,6612,51851,15284,98871,90581,124466,156831,21190,22015,71380,161906,87247,69201,18392,17908,108470,72962,40719,14338,17911,95260,43339,20610,78916,20710,72451,11315,31448,17263,58853,178878,48111,116002,45497,80506,82605,85880,36300,121755,25215,36118,301929,88728,405223,276136,553,34704,212438,49970,78329,922,20711,25036,257130,38295,145369,18128,15385,30829,55656,48345,8012,3561,28004,122041,192900,58338,112508,41085,29976,87040,47117,23905,4336,92061,138880,97407,42083,172121,6256,25192,172671,5,93568,1420,12677,31605,56743,40620,6015,78415,231077,31298,80026,13902,19048,24924,170586,32955,176119,87859,36731,6773,27711,24658,26475,115216,133207,93250,95820,88522,8317,5714,124047,55219,86860,19677,23961,22928,162209,8904,225992,359835,56084,96201,29392,96558,86071,93643,55114,13347,8183,95129,82012,2017,123336,34219,115554,157159,47747,101684,41008,18735,193781,104151,226906,7552,179874,124113,31159,21162,44010,14771,51268,166128,31382,73124,77438,92830,205709,12113,1292,38937,13114,1334,2118,15597,69581,14449,21934,76618,48728,67038,14967,51495,24243,87736,147249,26720,11119,46063,43749,5843,44147,152629,133428,65703,14269,45604,57982,28672,55616,45957,8438,95433,37698,220862,132034,39456,61870,4161,26501,73560,56418,9845,4654,20916,10456,88920,119358,9015,65931,96507,48029,38534,21676,109081,43078,34943,25089,6131,28766,23665,5477,10255,16695,67,45778,42443,42770,29534,23733,100513,62617,42630,48746,14191,43753,50295,26007,8792,57243,43119,54725,164253,58250,112304,131796,25165,4651,3188,24831,47748,3705,19540,13211,102095,5593,18699,23666,32005,117571,33541,60584,74573,86311,99443,25172,27222,168938,7143,11853,53560,18834,19960,86522,28217,53266,117700,72989,34323,18721,66450,34346,74056,47217,202002,46269,9429,68582,75458,37823,82843,96652,32549,145144,27958,19820,158086,31955,201406,135379,31207,192545,12950,51704,9094,248263,76147,64028,110009,79407,89345,99284,223492,47966,26848,15359,201137,2861,110507,71231,72297,31851,118777,71039,151051,240855,16333,50766,14727,7939,4149,80908,418780,88378,59276,1327,7284,38576,79814,65820,42199,84860,49574,62596,12396,70598,40117,8648,7994,16836,7630,14047,359699,106878,525,29037,28064,13380,11675,50669,74216,103539,180314,27449,56299,172344,19274,7301,246099,32043,19422,36506,129317,6806,30140,4614,46639,66926,932,86600,6322,27847,233103,10541,39025,34887,3517,12972,26220,2031,66561,115015,48658,47596,12714,33845,3893,16165,35237,89983,14769,11962,147224,47018,29977,27979,5552,82338,86023,131368,1218,24853,237840,132193,15455,40873,3668,65351,53388,15229,59889,272245,47934,11858,34347,18038,90853,86981,300602,19343,114181,29362,84921,6095,106059,79472,38015,1206,48741,6208,8e4,21916,17423,6002,108083,24479,34931,56661,9511,26995,100694,163853,35997,81254,58321,18919,171890,86877,91341,74503,70477,53412,7027,59281,39892,131302,5864,15947,61301,67466,162369,47956,27874,35624,282324,21270,111847,102548,41482,30955,116737,28264,8592,55458,22301,75090,29821,30697,51709,3041,19208,8038,24634,30467,87509,126428,19389,18814,152686,20701,83474,45832,80891,105808,11378,153223,120770,98186,150633,49838,9141,12755,30962,5260,74490,21256,31678,65062,33326,289838,187831,20595,89768,2805,58535,10844,70085,12090,2451,138068,98544,24461,4511,6754,41684,28203,3383,65355,82833,30161,83924,234361,128424,28921,222594,33975,125491,34069,11508,67464,144226,41850,98703,34371,7901,21254,38398,65651,23549,53883,213340,123269,12028,71764,177701,28758,2623,68395,11549,15232,68603,9660,63116,36079,57093,31198,20475,48467,89984,35619,186847,107469,31389,43631,73867,41949,68841,114250,1605,30564,63403,17588,27680,99533,12641,70325,50428,73426,78379,11855,91651,72081,91720,60198,15743,12065,83398,140046,6761,46598,45900,5068,886,62448,148968,37347,19405,9680,15819,43496,63370,75667,163700,37639,3633,22774,34341,183131,134335,37200,23915,7054,14194,12970,26438,13350,285521,25594,8219,104410,91039,168804,138480,149734,15907,33818,61132,60082,4622,110187,56736,13551,73571,3945,73463,65498,17758,263266,17593,2710,27585,54469,38200,45367,63754,28881,3473,12791,98287,31895,65787,4463,94536,24951,36332,59901,28803,52130,86403,7668,181822,74831,18977,9850,177206,145485,109798,7292,31421,26280,77211,58511,12507,127004,11113,147,8729,56208,43066,79926,129937,31345,83947,39915,46146,98763,42566,1337,13192,18323,105163,80570,117753,16555,72883,11077,159438,40764,70933,83329,26066,12276,72059,21655,173836,126713,69454,153482,91585,70644,102558,110483,6764,127864,190133,3961,101798,20945,71138,82402,90884,69669,44753,923,16939,59700,164258,25969,27082,31399,43846,6306,246093,51342,6153,151581,202801,182731,56475,162188,89426,141356,14355,121815,27536,28023,65257,77523,106668,127314,24947,12790,38796,169698,23555,10725,44573,183083,42088,62716,43265,105958,32050,44067,50118,1668,3874,6243,318411,16599,1691,94999,52378,28671,216728,123258,2059,34969,69225,5913,136280,171443,141515,91662,22175,135282,80020,92270,1663,4808,4482,3495,34691,5226,109830,108512,17342,107488,11606,123190,100247,29666,146527,113014,15794,30894,13224,39585,243192,22351,9903,7836,47699,11078,25468,122291,48821,26780,122679,75521,81450,630,4895,92900,55074,74293,17441,3563,111657,103102,51613,12318,52370,36191,68245,34269,40445,41354,122901,168604,182500,62012,42557,11259,24428,115113,86345,12362,3909,78430,86852,134602,20459,47853,93879,22577,7659,3688,38555,13349,17381,56715,91639,12493,10895,92438,3142,37057,28928,2004,36427,32268,34222,209974,10432,67436,41989,173518,107930,27079,62729,30908,55558,5828,45031,14902,53546,8204,144263,60255,14520,88212,86582,109589,69356,8064,47449,8505,66558,16886,4844,52817,111260,215129,12941,91118,650,20770,6273,73089,40618,62790,2873,35002,14023,97208,19386,102646,36993,143736,135457,35385,113601,17893,32627,84439,100619,56016,6581,57264,172160,45452,111710,203627,70131,24100,322787,1996,35665,70078,22358,90922,83658,4097,63200,58499,14542,99153,52159,6615,12414,63415,31986,16823,1579,65405,137809,8841,16898,48082,259,33014,42375,12260,179850,73667,91389,98882,29532,17311,326251,41092,5928,20742,44964,48019,43505,9317,49265,6643,192712,48424,163487,19861,20113,70848,31928,105333,23685,78563,14638,54755,7158,24142,44018,20774,125255,20331,24280,10163,1285,2336,39851,4299,117269,46714,63816,87779,159624,11731,9971,990,137317,108831,50994,74554,162680,23640,131597,146962,170620,34829,91205,21184,1913,63616,18427,93136,156592,17519,67565,115882,138220,78622,88535,18115,2711,33554,109492,54298,971,24914,25863,36363,45715,27099,194995,14299,178181,111488,72395,322385,157719,130787,11897,81843,83999,11369,49280,118604,40922,61332,110343,53407,75639,40582,300440,54722,25637,13694,48248,48278,194521,56203,52779,48783,72627,10953,376,16733,280238,26351,230789,15132,25168,137270,3588,63704,73376,94031,74284,19443,159557,9697,39901,13351,119050,15406,146455,3460,29556,75195,37673,102524,92329,47289,98413,15311,100684,56345,7116,95480,11590,7200,167,23610,58426,17730,136656,27944,53151,2701,8824,103124,3017,90744,113588,53216,79736,65940,26931,498,29568,80540,143543,21292,1740,59268,16561,180816,42323,50174,40890,52866,10703,57169,4700,17191,4424,93511,49698,166650,26972,48631,165169,82879,69326,202970,4007,2376,231325,139592,22119,62851,37504,68816,58345,67398,186643,43331,277416,53749,15746,23102,17432,4793,151138,48822,54265,48203,198688,14305,54287,2291,18018,113378,123260,7180,97549,87027,120085,2920,76080,8190,102005,5641,64580,14955,59802,54028,58884,19367,81779,412567,85957,97053,103637,78871,29364,27637,141728,4767,30686,112738,130146,42745,12730,105040,14844,232,210944,36581,152317,135543,29744,3129,55647,58149,46319,27265,17499,28005,59948,7170,34138,5702,293047,110892,408,91760,218674,18469,46095,81403,14389,4610,35672,73060,11006,74848,104820,118143,190357,20043,105358,141735,5115,27093,45924,123073,52599,29433,9616,238350,78610,24851,58858,26769,31969,24613,18294,4982,32735,39639,143563,112073,202205,12567,4873,88601,44897,81503,101648,81362,34662,85277,17574,48173,21435,221188,40215,39576,80786,26544,64668,81841,10731,37733,247986,149188,127703,495,18382,54388,72446,43071,30974,198723,89608,41360,190,33045,8386,31658,19992,237838,119015,137622,50890,100913,6460,116233,267230,26621,104129,65114,14190,41542,14888,85962,23342,23041,26453,43725,71809,45186,4770,46452,53894,56616,221286,18973,9038,109299,55365,19366,26863,18808,60909,69353,41738,83463,12100,68561,72860,3980,13796,49340,12332,31311,27418,4255,53430,18976,45523,510,14224,30477,26581,4530,3651,101663,139840,22709,150861,31996,63923,120623,262522,3076,10528,2929,14672,130238,18087,9816,121894,100308,25085,55111,14565,18952,53293,2042,369988,23674,61789,133529,28783,108293,35477,47119,36448,71049,40015,33055,78598,198442,1833,159937,40654,77444,189245,113153,8621,18599,38553,35223,166072,2375,11659,21786,89523,6032,12116,63046,159398,18454,3678,32521,47626,11411,103527,38896,42946,15696,26370,10185,8413,37080,165583,4331,63555,14907,72220,50056,6623,62236,36565,49783,10049,17503,100581,55951,146244,24724,9626,17969,25524,109300,173965,99994,101056,46459,43647,53737,277968,8347,123521,74858,33829,44762,77574,877,81377,222525,123532,30602,43881,53145,2973,16284,81940,61281,127044,63620,9875,14756,114829,19032,9202,52759,119141,23928,120551,19607,3599,33401,76821,73233,117430,39968,36539,7071,5446,121735,194059,15206,45283,6706,15603,65615,1207,165723,92275,34773,104447,8396,32353,205240,164323,13600,60555,79205,25532,22907,33410,57480,107111,69630,32137,47832,70913,33161,20321,2371,117348,10714,86246,1625,11763,17900,268,78457,99175,97940,101092,86660,32221,14041,128504,125080,53744,124263,31017,13897,403,31859,21964,5633,111630,5547,77329,17961,18241,84995,25984,12983,67491,62168,47262,5241,297,51191,7351,8967,147212,82060,16821,782,11033,82431,62957,5026,43459,77963,203477,53528,6247,191852,87774,74164,215654,13467,1522,219964,28589,244104,16242,117821,67725,72570,156792,17186,15979,26990,44128,193014,35276,57125,16212,166451,68017,6905,77608,16364,53777,75921,76426,37975,26203,269296,64099,84122,12077,38533,830,4407,20139,963,43028,38902,42911,37503,83343,85045,16979,1165,60835,137387,58380,86990,110066,134540,56331,193845,81238,17922,163093,38744,110641,12502,56404,34862,26865,125964,12965,111648,25547,7771,27196,136980,9555,29551,107158,57885,18831,37705,35505,101742,13970,102109,62548,124657,23328,11124,89592,146376,248050,6241,22033,18337,80685,29898,11908,216623,67721,106162,146610,21377,15085,91552,42041,62560,122532,125336,102365,121537,142559,29693,223919,11515,110495,18776,22494,5895,185059,103592,229351,51220,100102,37027,257855,29359,54123,36066,106493,12244,79258,32002,432,56205,94836,90182,6726,14762,29391,48938,26864,38083,60364,3310,60192,14766,205567,57504,110760,22649,24666,46333,21517,3430,13135,28873,27052,158809,11597,20529,6695,23138,22960,37137,45574,6545,305877,43423,26153,24769,59844,14501,10430,134352,56169,13213,103432,49523,35181,13435,12408,129475,64620,230854,77390,51990,15653,83248,33466,44571,117828,51481,2187,10559,68019,18021,54895,48247,18354,33737,4554,108595,37288,39767,116707,9175,3726,108877,21616,83684,49862,1938,8543,276466,20134,108498,48770,102254,31914,131520,185291,100559,51890,209,19526,76471,50544,71814,99351,8172,198526,28816,20419,9109,98389,136777,76479,75596,30635,165417,48216,120220,25955,211071,39314,24308,32164,2559,146280,43403,9233,17947,90585,1786,86920,125662,2457,64741,32152,32918,122882,78538,44001,31723,56426,23375,103172,88177,145697,52506,49319,68016,31664,41488,18486,110400,7030,28241,986,109199,19900,42147,56864,65287,49183,7858,24e3,30453,840,16673,25907,68916,89927,6309,158335,36407,199737,130464,13137,59603,201778,195292,21015,42466,179062,172561,89492,11075,180407,31868,72493,20998,60217,9865,19530,39274,130266,54539,21623,12535,13505,40641,73375,4087,85633,2153,3117,70680,55788,92096,47509,98493,37490,271936,151475,3032,16171,96642,34106,78425,125761,19591,3366,19316,54508,24183,50786,194248,91528,33253,34622,108355,41741,705,3814,3883,108929,13203,67831,10142,59754,68208,29128,84820,56880,38794,24972,48571,40821,40476,18137,164254,24064,236309,79181,11282,395,39169,2013,51587,28551,9645,701,109513,115899,113566,12762,62045,58322,103726,41343,40866,244102,143816,2490,70346,40973,52618,15412,30720,104315,38917,42027,93676,17513,107418,20706,123890,13399,97727,24044,87962,65606,44250,98044,65276,74790,101473,19350,91570,1326,87790,172042,7577,100813,86896,85891,41512,108130,27794,14875,71431,12835,156250,58135,3759,22476,42176,115873,34686,56523,73643,108505,51491,20838,12721,32863,45700,29496,13700,34294,55360,29206,155942,123812,7706,163234,203,132720,49358,144431,8130,175788,35818,3270,76832,25710,54095,97274,28779,94621,74396,19092,128242,58067,20885,14670,93255,15107,63291,23654,126900,129421,59294,262659,9798,3251,67344,28600,44629,50672,29072,26999,31526,23183,49175,165843,175455,17282,175411,32022,45989,30298,90690,78118,83156,23749,35636,31317,7069,80381,94561,133756,14960,97404,6138,41065,78041,32843,16601,34123,9559,146529,123377,96395,54441,42012,84257,123541,10745,22139,106459,11720,150883,172651,154996,110538,4728,53447,25704,2009,71152,119354,21166,66604,1429,216162,8637,122250,63520,27180,29172,36124,276428,107787,77184,4680,14952,104903,24418,14793,51561,52931,8371,26342,48526,7118,92066,67280,40653,8847,34597,105438,14198,50163,61188,146286,50315,41205,170829,161496,585,197359,95056,1687,365794,91349,48507,5804,49263,5146,104902,96365,117343,132222,46084,96919,16875,8073,262381,79982,52663,13928,16056,153908,15145,109256,132308,18763,24904,167644,13618,40750,18686,147124,114709,150038,52849,2938,12568,48617,8778,5459,44202,44591,74914,17183,248689,13878,7822,80060,23116,194037,18487,2067,7798,43077,33678,244028,31320,74273,2794,19466,8218,36280,183997,48124,19416,29656,19280,98734,7715,18311,30701,133602,150307,126956,7378,2933,79903,13178,12593,86571,26604,92446,13574,44205,65699,427599,21118,8245,14407,27877,47936,33542,7916,26460,117762,21596,37818,2249,127359,209394,60044,47677,308089,36791,154971,31417,6998,150042,174360,12255,43009,29335,48739,3912,101398,53340,2580,146939,151295,45360,125275,15273,45383,27456,48761,23314,8750,60801,85823,104759,27894,123685,66968,39480,26917,55290,83305,2696,98390,57569,145853,340733,4919,20024,52268,30884,7413,203685,70989,112855,4129,50536,349518,68205,332641,159581,135361,236026,37563,176404,64899,6578,122033,63871,1850,85234,82089,66124,74145,121098,107351,12687,36881,117334,13136,14698,85933,93866,18047,32620,310,15094,46e3,88451,23632,36645,27940,87618,80520,58892,20976,27702,140090,96075,67841,103292,238964,87778,107338,17019,83427,67522,7302,8261,47570,116787,8730,80484,61772,174422,56005,131193,52875,14588,28471,59817,9586,15720,158155,51307,109734,15196,11025,59331,3884,52626,102602,84797,25158,27314,4437,20488,76214,189248,35023,114952,157376,2827,62439,102878,129749,36405,10329,109339,108633,36662,1254,13267,5470,87105,58004,15397,10434,159667,21864,52022,179464,3013,32147,31496,116832,18494,105502,129227,107267,50033,13481,9954,24267,22141,16257,116154,36185,950,115685,11305,176708,2048,178671,112573,287867,162328,497663,95170,50979,193861,50987,30368,136257,31830,46549,15119,169876,23788,17462,249887,57377,1949,35448,14791,43769,210091,3783,34612,282103,88380,245190,5457,20491,98908,11402,86899,117916,16028,162584,60644,320177,156096,31065,55876,22e3,77655,9992,23397,13757,317623,63978,215255,2443,17648,93231,27388,104529,93807,55505,140477,12046,112040,70887,40152,94365,112353,25063,114679,266061,71248,119555,15589,2244,617,14129,211431,70110,100652,7777,4383,85911,89221,21010,120615,58357,86405,37554,41647,18,15143,69662,60491,14714,186134,148344,42347,5410,168175,44535,42449,343894,129417,99682,20659,27272,140483,63455,222159,17536,13722,42637,62324,11976,114691,148109,2283,32057,182393,4295,147364,33705,2075,44303,30274,28331,63740,69740,29148,10346,44862,33716,73937,153333,12930,38784,247159,2515,41053,20256,83368,256189,54639,115240,5096,24661,175419,153552,26516,141,138176,63885,34115,47222,55709,2765,28479,38875,236608,12229,22921,77291,54426,45388,2860,57787,114579,295139,105782,17826,71066,19119,54364,69385,16568,12323,28057,33346,34919,124763,155533,101386,31644,8627,49001,303600,29868,63213,9103,77280,71333,9696,138789,37059,24823,5057,21352,32368,114208,56803,19424,10445,58514,8661,209508,26187,171838,10460,63454,14016,122504,41328,21329,46618,32493,38225,7855,31763,7945,29876,8734,6438,24205,97490,139977,130740,47323,33195,85390,57194,13813,60600,21313,96251,7699,27584,170521,139271,1363,4402,336738,129223,84983,69150,13147,3590,163929,207225,155260,55916,20288,4503,8398,98490,11773,27512,37113,84976,86558,28365,11756,116005,182148,13733,115313,47644,67208,85069,9347,14995,226141,14704,101835,41159,35314,13113,63526,214039,29978,50446,83339,17440,129441,72522,118641,97816,24907,73844,15717,118884,167255,96509,162793,30847,36849,51297,78974,77793,10427,1873,2972,9999,35074,28190,64297,146836,46298,60038,163007,108919,61219,2403,75022,127339,4233,110389,69022,9833,128097,88016,79390,222936,22570,94657,28462,56956,38803,81536,30474,152794,19566,16481,147408,74574,81895,20731,1918,1366,76367,187321,54494,24366,21690,61696,33283,107477,77499,31112,414383,74362,18463,218441,120929,59848,258629,201924,69269,454,19989,13054,59894,3623,58908,20681,35723,78523,102680,38988,184112,108087,50944,132704,52966,21699,18860,96349,201411,82697,85395,95658,5093,6427,177894,44191,32755,26961,155739,6249,31310,81030,26574,84311,120155,86730,113535,7424,48888,13516,45747,98098,20077,183995,81945,43210,26704,40420,75831,45648,11180,6855,57927,65528,124096,34851,2598,156633,107572,127352,38169,123845,60142,62722,105584,232364,23211,68120,1601,22169,89299,747,258039,80572,7258,152249,11862,101204,8834,121434,33761,19175,133142,46343,40178,48723,3589,41977,30210,38868,62257,10087,82658,87827,90646,16415,47552,351723,28298,72225,91146,272760,1701,11295,1652,109651,300747,51863,198800,29446,11794,32345,37538,22356,33102,37590,113544,37970,11478,179743,25454,103417,59905,221970,105196,145604,7817,164809,102360,16974,75840,255333,56902,6659,1954,645,59400,67769,7689,18675,5215,13793,20536,27852,3387,29523,259718,16860,94625,43143,29245,15848,233581,22685,63631,78557,22836,133302,84513,1348,51826,47129,98836,58284,1830,1749,94642,10933,6145,12506,10975,13879,103781,144434,10268,28409,32346,52968,121567,107374,77268,23686,35097,10501,155275,15303,47136,21102,168741,55332,90385,15996,84817,681,137803,25054,142275,6163,38175,8056,124296,240642,65621,4934,178205,16101,62803,60964,18230,100622,76465,44689,14545,9543,47514,16852,93380,28048,12047,107106,37575,101485,77047,57326,34819,96137,76916,6469,46264,115983,75768,87668,69942,13027,165,8373,114231,26434,52844,42799,182044,23580,146254,38081,43236,33883,146220,382894,14606,46035,36481,166621,35417,95382,2957,59384,60428,36358,66343,75378,22267,22950,83528,17577,56474,25285,4619,179691,75355,95836,53295,34588,171410,4487,14679,84208,44015,18562,109133,54101,11531,86052,174479,303157,28095,9953,35642,14564,39802,16145,77606,117406,53038,121117,53624,22062,1212,7632,127157,237292,189087,10478,127345,102515,181997,86752,87623,10966,121602,68783,68681,83042,114380,138349,191305,67176,50085,39016,1427,42384,1412,67118,122616,72389,25260,2237,13576,137346,19938,20304,2191,68759,5373,61364,238507,75814,23931,69565,38993,131741,38364,12528,87762,5679,129853,5310,186831,32653,90338,260176,389531,108118,26843,43985,50175,30563,25106,56965,18130,140428,4542,165503,117991,24219,229605,1819,129663,1240,3797,76093,18398,71339,51919,93043,27175,47060,216257,6483,35051,1217,16512,80798,129064,13225,69339,8548,237079,72298,2575,34280,51379,117910,55671,53345,247552,29486,39328,140821,34681,57045,60177,5004,90269,78522,2479,322607,48474,61296,13057,31558,4678,59271,6699,27044,31988,35944,12503,83480,4389,136508,3781,114121,70279,4488,155829,42214,2898,68191,75695,305850,45041,74344,106509,30087,17429,93292,12477,290,23080,114802,35714,18751,26554,105424,17775,2144,2412,100610,65192,113975,52975,180272,135050,129815,76238,106483,21440,63186,4260,46189,9711,28249,4169,23429,23390,8324,141585,63809,67668,38457,38063,39226,59972,1189,203916,62368,14403,16949,61767,85801,1739,40147,35049,76757,33124,62102,15780,103593,103009,53484,22952,67973,114645,6566,5245,50462,7601,8288,3513,194571,80276,1908,54592,5124,58571,2513,6800,273997,193904,1119,17991,117245,2508,129156,82366,26278,71465,63341,56943,39662,106116,94966,156875,9736,2204,122308,94418,27134,1280,24539,49022,45314,3764,50904,46424,30699,28087,293839,9400,33646,40165,822,147499,50263,116179,29085,11863,31314,5578,17797,5104,12454,1604,15342,219206,10232,67800,94261,25872,13565,90339,78971,75377,26649,41184,47695,11514,35369,20767,14227,41953,309396,148270,147938,33074,14453,27499,109019,39018,25738,240196,158931,52820,8612,95853,21524,137010,84901,70869,70021,116794,48404,38771,6732,1070,70990,187297,49140,5238,576,3564,253975,16027,16483,2811,37775,19034,25259,4053,2e3,70083,95774,19713,33431,92703,91314,42381,288770,48194,95985,3991,77418,13406,241328,245086,56533,35275,62725,9246,51924,70181,95331,16163,31410,79016,39312,120878,119371,275987,80124,27712,9186,220,23598,146167,85209,68238,282190,57048,31273,30555,80913,17594,75779,59160,135002,101219,189377,29225,96735,60126,62522,104e3,27620,86814,17240,147533,11001,5425,43682,410,49460,87270,69480,46315,59448,1816,76201,9431,11788,87960,29063,65539,47347,11678,33846,7008,196704,9895,6753,8633,120892,59970,572824,115934,6646,202559,892,48351,37611,251282,57823,67263,57750,26527,34485,90747,7685,88370,6144,64182,1709,41969,21458,62327,181657,49247,225330,122600,114574,107124,85361,111833,63243,71420,15655,191178,72430,18063,51425,54002,12364,53225,86557,18193,97580,41232,138398,67821,128724,8944,233212,101353,52099,42127,14006,120107,32789,32132,3498,18123,33758,56058,5779,128760,59888,98869,18445,84702,51911,13234,218379,20093,39031,8074,70195,20708,23462,24355,131384,60189,26390,10403,41060,7140,10781,49410,42261,87202,82566,41663,43105,60276,2768,5733,74176,28329,2297,145430,131632,83615,122915,105441,655,224102,5284,136426,67763,16294,188511,32538,61049,27893,3394,13951,159099,28542,17930,145360,9492,190122,32285,78855,26440,13570,58648,73908,4239,124561,2444,74172,53131,11468,10794,73566,11623,35343,64710,30481,4163,10328,38309,29901,10538,154377,76132,92405,24839,11679,3465,13449,11637,7824,2337,57754,1260,14458,41118,19878,38661,13416,159180,37074,163164,54137,28627,52134,184900,8520,40385,29546,30502,22386,66527,107458,6850,24022,47983,30603,35083,8934,304066,39500,9,28261,33026,77251,9374,44833,116312,34990,29236,63563,125639,135405,165398,159055,55690,88141,69643,236964,31983,25572,20436,36746,60896,31850,16179,11828,5888,3043,66368,9750,31167,7915,53111,36430,1333,64344,93659,20061,60596,180191,51630,6792,30244,43509,101058,22409,420,44210,109783,43223,27030,72477,72831,32679,29235,7675,47556,12258,39907,149412,84926,118247,24692,71717,105038,86009,45941,41189,89453,29856,52543,30627,226798,67303,59230,67415,34408,1367,99685,16867,128419,52147,4111,125381,117881,16173,44093,102224,31575,23234,24870,83790,127407,239098,3200,994,1255,100903,242275,117266,55116,38205,16140,29662,11307,40414,208793,123355,56470,4862,75600,30119,58218,70828,24075,26974,7802,192353,4851,5475,78720,66596,3409,28573,64396,30381,30690,59859,88256,5406,99945,103064,34463,37727,24238,86643,60088,4057,23741,5967,162904,38240,28356,93858,25510,122879,6897,3278,7057,11971,4400,35461,211413,21395,59615,39471,87233,55795,128426,3051,22470,41950,14705,3974,180108,80476,78442,204996,91987,15634,67610,139015,142373,35611,51134,10387,4353,153456,57749,181039,14183,68447,151532,21107,36452,20551,3186,46247,46383,129666,88736,140662,146243,2066,8360,7978,64818,106963,17896,47801,10723,114821,223295,74192,3293,3393,16987,74064,11277,91622,4270,29828,27951,387869,103235,1374,61988,120083,477,145892,128378,11779,211263,61354,18221,17869,46530,83061,108538,157981,90608,67199,95080,49064,195814,12302,66307,10348,231346,160732,112859,63633,146558,21271,31037,198802,47622,12862,95710,3910,77850,73961,85585,34752,61e3,4082,24595,103679,71107,8208,79568,150019,16615,24961,139857,32664,197366,4559,54735,32696,4126,162019,75698,13916,70108,159638,19834,9349,24675,175560,49643,18206,52459,27992,10809,88865,401975,133172,29e3,34558,30915,3658,25834,42430,36562,125265,18182,10155,40149,97082,208980,19575,60853,90529,66545,9600,789,46420,2317,88593,55595,98980,115302,5742,169155,1073,177901,3472,11189,63711,78643,65472,50459,127979,93,42202,67053,21720,157650,11145,141378,42033,22824,85705,79114,35584,15974,1510,54172,28562,12451,104226,19190,97151,73024,20948,5151,81741,21499,29006,84183,198074,54003,45120,170125,26240,35177,28389,64863,79974,60778,176915,232183,45342,2038,80253,41564,40703,32689,5430,100689,5366,23007,134279,14266,26712,73993,24934,64242,52113,102887,61801,46415,201049,54251,62133,122757,164883,30815,139966,2319,30842,766,13362,10287,134518,86111,81665,82440,28333,43019,18963,8804,161944,23439,102144,101145,80029,39052,248708,30350,117340,11878,128467,974,138625,63961,5237,74778,61834,67040,43814,13690,65947,33809,232476,115258,181745,28824,94013,9510,10246,93722,81976,7217,114383,3493,16014,69045,72692,12145,80981,9507,6692,1620,60820,330444,35474,33962,4797,7053,295463,46445,27026,12491,77988,49524,35675,90947,29114,166705,101385,133782,32704,6186,84595,176031,185623,45966,151302,63069,1699,107491,947,15458,74452,196212,6046,10498,12163,10239,35191,243951,9277,9090,29539,54460,22820,26514,112549,60372,51753,48756,21812,70861,260326,41,44222,10441,16961,48148,138771,216194,5914,52153,53400,212036,56519,26245,10117,45888,15294,138019,90913,26368,43842,42111,23348,6082,194845,161089,156206,51546,11647,30759,302912,262094,8635,78876,26535,35283,54183,31183,85484,147873,12989,5197,6356,72894,65347,20150,27370,73787,1493,45918,12366,190217,20724,13858,10981,67449,81213,7553,14115,72242,271517,11842,48310,88743,143726,22177,3290,243231,58452,62937,12592,1654,40066,33477,13751,9921,128442,15868,7106,75236,83773,10775,36938,10482,170465,17368,17469,161508,32752,98340,800,19824,264456,3901,87319,2867,26782,9630,113102,185815,24197,44584,86366,40224,3636,140916,31731,267731,9567,53678,72984,29389,27963,17106,50282,284911,60170,8322,12608,23374,89652,5268,39044,229766,8869,151350,31436,177342,12269,183212,120418,116270,2843,78888,69192,7865,184099,1086,129897,18383,70508,20242,18508,229924,124569,35749,50589,55626,9884,83115,40971,30671,18135,14452,38861,17844,201826,5549,26413,17189,13561,38539,10679,143331,3314,36785,171194,49685,187713,67506,4618,104039,17060,195080,50648,33159,19238,67559,134840,28599,157523,17130,38064,117398,94355,31918,13575,34538,40326,13997,3494,348283,62481,26862,3603,104426,244363,153709,112487,304612,199674,41239,35545,54869,293005,28223,26277,26899,4533,18518,15492,38587,80488,70485,160395,263,60162,11382,222152,4696,250751,51921,182609,10707,48463,46243,1227,49111,111564,46502,33342,56846,68541,63559,858,139927,16654,229375,76759,26478,33205,95828,23399,92945,2637,35630,28470,143992,50214,14174,21456,166191,65665,1711,21594,78019,97599,111701,36,147151,110246,189022,43021,30397,40757,131935,42065,73335,48039,26596,28984,15102,2361,7421,202167,69744,43766,52826,3642,83304,33873,75140,63169,192389,36551,92748,13039,123959,233220,21738,84447,77230,20228,187852,19095,25799,92136,108774,29237,53947,2299,118106,2687,8830,42331,202924,33667,2023,73763,30704,19363,19779,16737,35629,48081,24068,101013,162338,291912,13749,24745,328289,167679,70086,48299,23306,16732,17801,43322,54589,3586,63653,43624,53474,925,109177,251316,43805,13082,19511,86565,142182,92461,17117,101033,103319,64589,4022,4351,235897,5352,82705,107142,46391,156084,5860,61365,10558,13045,7717,18357,33922,12590,33065,6928,46993,783,46937,67846,8952,26295,6107,119656,18799,17458,50747,4229,179559,112727,118080,20683,41464,125468,51560,49749,44231,7359,35339,62988,136487,67015,5208,29150,24956,105186,48858,6143,18097,6972,16404,73489,58742,97196,36357,164616,5834,32267,13746,147733,15113,132091,34127,106298,39729,106426,22294,9780,15602,36213,71502,42808,66802,599,60755,5851,39120,67363,108623,126368,72770,91263,32486,30596,151717,7951,52002,43103,11768,68942,40901,39344,24037,127500,116890,48403,16926,86750,17745,48648,159545,34460,58419,5634,114317,67865,31462,23352,24010,98185,125708,69686,68337,13610,26271,70691,2980,4768,27225,102402,75453,28106,8104,6931,1176,6274,6475,112635,22498,6176,238686,26832,28893,90319,14441,15682,15087,39517,45270,109134,104440,45965,47645,81772,7876,52683,87720,12898,4505,185665,2769,113401,15664,57592,105229,137381,97059,119268,6876,43309,33886,128363,35476,144249,67013,143587,83367,25703,91436,59347,53236,2289,16519,19844,46309,58558,99834,23313,218816,231303,36388,51333,183535,109792,139277,54306,90139,18235,8275,32710,37677,82464,86025,92204,88842,117723,37570,128723,234242,76350,73795,34896,148247,58424,11105,11744,45746,63372,17118,49772,199520,81902,38004,22911,33752,3125,1995,53792,4689,26909,108150,146062,69674,41811,161444,84855,8999,28561,16731,93937,3189,21967,24890,22943,1356,145300,51569,28802,517,118679,31703,40607,48098,108854,25003,10233,73969,177495,5248,24516,215347,146192,48712,60626,69188,40735,5866,586,101541,6509,47590,52129,5969,222045,110933,25733,24223,65339,62812,2414,155418,35819,16022,78423,43138,20995,128255,240673,46745,236093,72176,57085,97841,61248,107,36068,193177,105427,55726,215229,20446,47228,100420,87091,14429,121708,23605,21157,187721,21880,2997,203976,99166,95068,25877,7724,98925,83401,4829,13182,18229,13718,239662,38653,116505,153497,30589,89029,38962,181302,43853,78872,180301,4786,248240,7401,106136,112590,77745,19731,60880,77789,125748,135487,5975,48627,34084,12419,215770,47557,254582,10364,106495,21856,67539,88981,38805,21428,48732,42316,12149,16078,52808,25327,51322,33850,51147,12253,122354,46077,56483,254553,115417,81834,150991,94662,86668,7381,12841,100650,18218,15741,22372,68294,50705,15535,84660,61887,22553,72299,31361,24824,17743,46820,64288,31582,77006,111674,116384,30760,80920,86149,77192,51979,79691,60342,122805,103800,240873,160744,233114,78962,54920,8608,3484,316104,72548,24337,5088,230040,21926,10172,36838,26,86221,83458,102176,12062,17571,41929,41170,28428,68239,41750,103930,2634,18313,53019,34825,97837,63115,24606,73157,152474,14715,91439,37033,109806,140259,30668,174760,380,135597,95673,136073,65073,134249,13829,17279,122305,4420,46444,10237,64848,203623,70728,10349,182885,65075,24519,25783,40318,34139,22222,63394,55266,102764,41422,20126,65100,90408,53640,35128,48932,11192,38935,96839,34782,39492,19396,41332,6250,5511,19492,51304,25936,104466,54099,73771,86115,5080,7669,30891,111700,13931,25276,72289,135447,14820,258641,25265,31005,281179,75286,393,95359,14623,13584,6680,101227,80173,44933,76666,54542,13244,39348,458,25379,109451,134348,81143,6959,65554,12027,51311,8716,57589,140731,28467,23316,17272,30458,25980,55229,77197,83798,28302,114784,7428,34548,26241,14712,39336,103304,18928,54080,12870,334,87722,15208,16895,142098,114262,39820,83913,57817,28682,7721,14900,108672,11250,62246,42849,415188,1724,26555,24549,25505,26443,107450,145899,61035,43528,6901,60726,65906,267741,21338,147590,42079,18924,73017,135236,15393,5206,4026,84185,1531,5988,113890,82647,303391,7386,69844,71611,189865,76523,31877,13315,19314,198575,32821,1928,67641,25913,104475,103489,3297,70391,18406,15446,113347,19295,93790,27856,1792,167471,116449,8541,4408,41757,63233,25765,86680,64501,27034,24816,34975,6079,4486,49693,36229,16917,21581,62426,27862,11612,54284,35702,194034,355,24277,48262,87411,70504,310164,118018,12516,47559,43502,57433,107139,9290,66533,80863,14634,34312,91725,28606,21342,67241,72355,43244,375789,37402,174015,105070,8342,44167,67494,1890,16365,11723,271002,1865,47918,8350,45564,27742,25110,125803,8553,49504,81925,62211,4534,15491,19011,80373,206920,667,102405,128623,245524,5553,113309,192739,65766,19567,22832,261958,29679,21293,71134,20962,105123,24721,860,21752,33448,18372,157167,94822,35770,173224,232737,75729,28937,46828,28062,25453,5207,140366,36665,30652,6169,67920,150458,92040,23186,184604,92330,20891,176492,49427,27828,38305,42495,143982,49560,25503,90043,29747,65328,47830,12932,11068,77721,9003,25213,94205,140426,46090,89945,138173,192691,33329,112232,129905,35709,27514,1841,19957,31411,127476,53572,17497,173549,55063,175135,19841,69314,5192,237921,117660,150697,4060,273045,50414,98940,65348,153665,164423,58804,156695,48994,213928,86036,28608,8355,39574,34540,16927,135680,18374,151587,10830,53805,16878,16623,4282,48030,8537,14986,46102,13062,72897,72,33050,108227,39451,45935,651,113320,40535,95176,57450,48843,5003,19019,10407,211163,3848,1068,4988,32091,30095,41692,15099,43602,107434,50744,7627,171349,16313,150832,352665,207750,33937,38256,51091,156e3,87889,90663,84175,24908,114900,50365,31494,83829,5398,169342,47521,54818,18935,8356,43094,41212,174536,10082,92550,6678,60614,23355,69721,14796,34149,128830,58187,3179,208,40325,28399,225029,401412,51150,31580,207268,6657,10993,69818,64282,289845,23308,12961,38447,6681,52944,31855,2572,47646,120728,179148,37240,45196,218274,4816,3695,21961,50084,35209,18073,51452,27004,6100,33941,1377,84831,171214,85,141510,9078,99227,32610,6417,11718,49868,65579,87902,73018,49062,46280,61742,21512,40862,107733,15941,29168,157765,144919,14487,5767,158014,140070,7241,573,71584,16921,223566,40331,179473,35081,47926,140885,41508,52104,59180,42310,32811,29048,123517,102413,80208,10104,14746,12649,153641,126022,37965,113017,4171,83,142592,2809,6362,50416,71323,116894,260776,16204,1524,5760,30351,12658,20703,54403,36083,45408,74772,4946,14485,50759,111222,10890,2195,167147,92962,130534,16283,177256,35016,15472,210156,151187,73922,117691,43250,52051,37392,24811,24358,30830,5775,818,21969,1476,127322,151783,58392,31021,106913,65215,89407,90802,28531,11690,20234,95249,44602,37256,18707,11928,5161,4410,26571,51903,49768,22008,25252,65780,209499,68769,203726,13249,137363,48845,86823,6658,5674,31881,1083,1823,108676,34518,166752,13791,14287,91576,91429,8665,11529,26401,16191,91972,30964,5254,28486,54697,79613,66520,18447,22870,45203,194466,22822,51703,12278,76716,44595,73455,33546,12235,144843,36154,51247,11116,33040,3180,225753,60864,1972,28469,12891,28879,10338,144157,56294,353058,38302,41447,87532,110616,27065,168438,6557,1213,50804,144643,24817,2390,136531,38174,247513,16190,4059,122791,131994,137430,39506,57650,16305,5188,54309,106128,20628,88071,67394,395446,250285,66176,91254,1399,114196,43915,60230,44853,27206,106353,43013,18733,345105,226453,51202,16607,57106,117175,35492,10476,89598,127439,15187,39624,13688,61570,10615,31111,59370,6238,175252,32143,224492,41388,95408,34384,148238,78307,38959,9340,160091,61443,15737,11216,41244,170,38299,102443,113097,26382,14027,33707,3957,76300,66160,19431,18900,6952,1717,108656,82206,188021,257335,27295,43999,41210,31777,46956,57457,12657,11489,15697,48060,204748,53583,82422,284790,30503,137341,8120,19615,220311,15991,10217,63424,9808,67431,70976,98221,4491,15177,28535,144789,751,13230,2394,1504,33977,132104,30316,22230,931,97193,185240,24826,22687,174322,15307,22988,1390,188745,180325,29580,59068,74903,18994,29195,79,15436,7622,38462,11566,138710,44828,45774,37768,99236,68137,84083,19282,22698,17134,74807,126662,173497,46248,16938,119735,3212,28292,213652,49013,9975,32180,45660,86250,4801,68788,95490,77482,113751,11994,44624,94452,46839,128497,100316,5798,58588,73184,202987,65417,37790,88524,1606,43156,97964,105717,34947,11203,100060,37742,130074,93653,107799,94311,196106,41347,8035,10780,16390,27883,118236,167395,1979,25006,19375,31628,18916,144723,78502,114047,103107,86492,107686,5844,20934,206963,23556,22591,16562,146333,20167,10471,117434,33085,2863,9740,36669,41849,37271,22790,18209,28979,8231,12952,54408,21731,25130,45208,55748,138120,75826,414,29593,9925,292865,25999,683,123149,7036,92159,86055,61827,103680,23176,54918,58466,57578,13305,5709,86479,16697,31064,17660,200919,10770,49793,33423,32370,52047,16488,62555,6459,8426,83493,7763,59725,82812,18628,67760,79405,68557,9612,7673,28102,56517,69620,171797,32458,29541,15870,81109,32080,207644,71495,21202,11039,91036,61230,2810,130800,32260,4613,60590,37112,75214,33979,126402,155062,30642,63875,12810,194463,82799,47664,16725,36685,43367,61099,449,172150,102867,21691,301838,36745,7130,18671,57316,34852,38034,54182,35578,65900,99486,19771,3456,2658,16914,99866,28390,28109,8262,21147,34353,20006,4228,137085,1675,203023,283196,198286,214375,163329,290603,152574,40471,83506,30068,14730,23177,131539,34759,27668,32178,71896,104799,116305,85430,119262,42860,25160,8911,23428,49437,105322,6519,16203,6349,74711,1230,38045,8540,75165,44736,25909,51026,317034,4984,32281,91312,27060,44431,17817,45363,155937,239085,35697,59784,91993,29531,126740,213757,76560,167776,285273,24262,8237,65030,41160,74437,48804,118916,13159,37842,1031,75349,1478,11655,108777,23435,277425,101734,67469,70231,124711,43532,28514,65526,54956,1e3,21882,17728,25302,40952,52214,149632,1999,2111,3259,63362,89961,220561,39777,26335,9063,10572,12416,34551,34623,38604,24723,5947,15588,69927,66252,119177,69173,46629,28714,70715,212408,20521,406913,74380,11716,50659,50862,37009,88460,130101,7210,53853,538,65120,151950,55806,163748,52837,13153,21100,16674,64536,6091,138201,44837,58547,3723,163,2177,32288,85454,34033,8497,14282,25742,10535,10741,79559,117493,243787,49337,100718,79495,40139,42956,7551,55433,15421,31509,23034,45081,547,61176,53434,328001,8470,36263,30145,4519,74173,53935,11845,73774,60211,78025,3,4102,73782,109293,315332,48412,26683,13714,6865,20128,18490,104141,325,39470,171970,115860,15707,7268,73301,74336,31370,2368,111827,107757,136231,142844,97138,96638,84053,38691,23801,1588,10573,122098,77039,240,186135,146101,11996,18143,112963,46171,155836,348769,47795,121213,116266,132515,3344,144804,31286,99187,255838,129694,35894,48779,55235,148582,71967,65282,15174,13920,47080,6147,108242,157593,125025,7136,1286,28957,127956,28402,98813,20805,7532,109417,40610,5041,32958,15142,18408,108596,33543,50517,27748,80114,233434,91447,487,37094,100048,30541,43477,10639,89862,155868,37667,8726,60684,237903,73408,99589,12190,38739,97348,3914,13594,2680,149016,13907,30171,28343,23530,115225,61104,35821,147679,14337,4297,244282,24085,326976,56428,7851,21303,131620,71446,83253,68692,111870,5224,15813,38197,49026,45057,13660,3306,76345,40671,27905,91072,996,68527,62085,91351,122634,55109,168209,2024,27560,112707,17352,8306,167115,169921,166958,5031,46020,11844,67284,19130,76185,6920,32849,5450,14610,22451,21002,17392,31872,66682,84796,13709,40210,59898,12029,8719,53564,21462,91884,21647,88379,194428,12754,37797,132826,160016,22567,54383,53186,77611,31107,8339,4694,19185,90355,23597,17222,140675,28442,23668,55977,9128,61555,28774,155229,17658,9390,24379,69357,15752,127381,239631,62460,93181,55913,45133,140155,18676,25249,33164,29581,82837,67223,22362,29975,7317,52813,1943,29613,20012,207130,49617,49651,5636,15334,36313,29226,28084,95247,72072,19e3,224932,15811,114,32127,38097,37508,88507,37225,27359,91626,12193,69279,20608,11055,88156,92808,2152,57259,55275,72789,24475,104414,1708,9882,3818,48661,66897,1631,34806,227930,85815,87753,18321,250664,72733,25107,206797,50891,8082,196411,92596,96764,152823,65514,22819,387277,62176,51225,40329,15563,189,3659,73670,64357,51793,275136,33482,86653,74615,67058,11318,125720,15388,22388,8267,1730,102663,170910,40784,7144,85373,13040,7088,94309,583,44224,140424,77439,18496,164026,36578,4722,9151,5824,63365,26510,35199,40500,79277,32495,44614,35233,9566,203293,152144,7097,2330,183480,98629,13423,330887,44130,68600,30939,97829,31012,345465,56747,94879,4939,160027,149761,99423,46099,32251,15332,8761,96094,128555,5763,235318,222223,55729,30241,55420,201746,3987,81382,8259,49325,23287,7719,24633,251100,92311,18591,110533,64759,170260,393860,7175,21144,132887,3593,75346,101277,91109,16387,259187,11627,57459,173829,44694,55780,49797,89192,120443,62622,3904,14814,23887,1027,112258,64955,99800,11132,66353,36202,48624,18158,88481,96882,43059,11040,2455,7077,21651,181159,99126,100434,61388,68186,19161,110468,120052,8819,55324,41494,7014,37689,3618,87729,92615,207943,9823,128657,12587,15857,6379,67628,51216,71775,157617,63244,1503,3864,218754,110864,5769,21492,7243,1192,87921,85529,31512,18537,42698,35350,73510,84474,34301,8991,21013,35034,566,38832,19838,35586,37216,39413,55006,12178,59742,856,84563,6900,25632,17437,49786,30723,13847,70845,4044,7843,23944,235976,55530,48942,6518,20939,73769,192653,52936,95207,23895,132542,142982,22632,87452,48042,54018,178468,10728,26230,23559,363,81269,142012,5718,346258,31456,84333,246476,51018,66692,101804,120570,39962,30373,70593,2864,60541,19425,54209,104092,7201,31545,48018,25865,15442,46257,40443,8328,6451,111782,47527,97754,33046,470,245116,31095,39,91934,87208,73470,36708,36521,12801,70624,36272,8892,79768,12427,55454,103756,5908,52390,62962,22720,141138,94634,41689,128402,126390,6628,106394,35527,134394,82727,254651,194502,148064,89549,3202,28359,957,21954,27906,49840,142747,8307,24206,48978,1186,71728,133038,71474,91306,6333,110959,74600,70387,18983,62609,56057,22970,1147,135850,1321,28834,3578,59715,102227,32827,81415,99952,55636,257598,390,22702,35701,85872,402916,39216,189795,14929,19467,10112,144422,61514,5279,63421,134686,41436,8424,51925,10598,132295,124416,4604,194739,210929,57866,31829,51626,50007,9976,91878,61906,56168,81906,60918,61859,40017,23059,16887,40927,62064,12785,32893,32913,21782,93965,20169,44387,79084,38463,11457,93950,27127,157050,2697,337088,5116,54128,48255,33279,8821,27352,25515,124022,65710,28906,38557,33390,1722,104435,72215,38551,12094,30978,25113,6671,37355,175109,42862,98024,65406,221276,59624,118012,64637,78760,86697,21426,1639,40350,12584,67193,84144,31396,7863,143011,69629,63112,9454,28666,65798,46372,134721,6314,51402,30837,151922,2847,38676,38008,92823,136245,17540,5504,109295,205242,37606,5211,214892,1586,20670,208711,137743,19328,40652,16995,20023,14657,154919,34422,12996,13918,38221,47690,16398,2959,37680,89122,6721,198469,91876,172043,83898,101992,26084,94570,3635,76958,22853,76497,38266,176590,168403,44464,142840,79180,184594,1984,41806,83147,11985,6546,366068,59732,24533,271505,8736,39084,222992,93429,28962,58985,86665,8432,30028,14548,32439,54424,165029,55175,27458,69046,121277,46168,33732,20661,24581,135574,123110,37556,79260,72611,16957,12939,46162,58238,44907,72936,253758,41324,32518,96480,11949,124438,65280,43256,34107,53533,43531,37037,28366,45970,32741,173438,6121,194202,62969,26355,30314,58370,28455,1848,50519,82830,90393,21761,295490,10936,256940,133568,44050,20269,4089,27457,21610,219460,36743,14821,101388,52005,13124,30979,140816,167362,26054,18458,60789,34917,40447,26606,33422,9066,3452,83614,5761,20263,137238,25038,91310,101,52322,74548,42572,38084,214054,186568,31802,17665,30620,141936,37730,14420,4265,187218,49640,188208,51441,55388,96452,66659,40869,42039,60967,221027,19234,178581,29105,96050,9165,196118,157335,3738,40354,117436,2965,34136,59659,15570,50843,230035,31444,71260,43886,18316,5387,38500,168508,17406,32174,8828,103373,143806,90367,3560,18719,122310,16508,26719,2541,105429,6645,37998,73190,10591,235916,49737,87112,233941,53188,32193,79154,4544,52905,126477,7580,63501,57314,3216,31337,6541,103083,60846,49,9756,15481,1355,43840,14319,13743,27486,10222,73114,230718,418644,16706,6674,279748,23058,45273,295831,86306,2743,5535,88773,21829,35253,120938,31153,3169,16839,42847,8751,80974,33942,36867,35514,16485,26474,77775,56877,5391,48346,3882,108713,31403,27804,55248,26235,43821,136104,40118,175507,28034,203908,18732,1788,34030,106427,36958,54359,7251,44936,15356,69139,455,157915,22173,140291,50348,43275,82066,49621,54952,15216,36226,96695,66855,6936,1987,8227,196087,4631,68827,99004,47541,110265,17953,147605,110242,58520,31312,38724,329975,642,3155,34497,75937,6207,73843,6120,17249,51429,117746,3218,910,68961,319671,14938,29555,34700,1649,66673,72268,9655,76800,153087,6941,210168,27130,35398,1780,73242,3135,56689,19556,165307,8765,35967,121458,13333,70453,17350,117253,22265,13340,44265,39869,441,3742,135025,23581,33309,16543,17731,13291,157637,283005,21408,101360,63887,52312,83873,5338,233779,23759,186949,34531,177320,38069,156465,91004,19353,59852,68160,14891,1338,1072,29823,1950,28901,81407,313445,73038,84807,162348,240257,37162,138934,16111,58013,41253,102951,16457,96056,19541,56402,67217,41638,94381,89674,29481,37456,80815,151579,13937,13683,132537,19699,134545,67020,29816,222341,141235,427578,48868,129557,233342,23077,87871,16213,18728,16184,9469,37913,19680,2798,171356,178328,13216,50049,72690,71904,124644,55455,7504,29052,41036,266546,19899,30391,188755,8659,59469,16,104298,112943,53865,76203,138226,68857,139953,14125,107625,119795,173133,4398,50273,48808,54390,16466,122086,31835,67035,50971,48859,7508,46427,66477,73021,84615,39985,83076,46779,201569,53336,36443,60865,168164,143810,51393,25548,169307,32896,24485,38424,21837,29087,275813,51674,6714,64883,46169,187369,55186,76192,12852,12018,62134,31067,118303,16542,12125,10579,4928,26291,43854,7091,10946,253716,109062,39283,17261,113012,258512,47764,125126,32646,55892,80279,201623,149872,3192,385,1208,48750,5376,58738,22335,5427,82416,47811,32435,143086,38930,94128,59975,156037,37977,38224,62485,7698,50405,71027,16462,21559,136153,34131,107506,162069,63703,3101,215029,40407,4178,3774,9187,80019,17880,97926,67579,2600,18405,8351,47924,86638,70820,92206,86453,29610,42241,119200,3198,15466,67813,57863,35454,4779,99518,4649,104641,144269,33730,38073,65864,6838,109456,193298,154007,5623,45741,30846,182578,25573,157224,1543,58575,138703,146140,44971,49356,18275,59064,20300,13122,11848,24453,11973,9797,86843,2919,25530,49210,1130,161220,76788,75373,85604,34926,36014,17777,17255,51533,11676,92226,51845,119859,21525,5936,18507,28050,1140,31418,14857,34207,47859,10750,36382,32079,106909,59426,87757,38393,110042,15965,97104,33757,35344,97993,53979,33651,45407,41884,82515,173089,7177,58371,35365,47543,51927,35587,10670,23544,29306,84233,39976,76076,62097,9007,8668,28119,78281,120790,19835,143020,54968,18670,64959,20649,34469,42570,33001,136570,87796,120044,1106,58700,63951,127623,12805,83057,40212,31773,49850,7361,54336,347524,101314,23751,19569,48791,29174,49369,20467,7465,75842,38281,623,112457,60210,28849,51003,94720,6426,90047,85560,43761,3579,85105,34607,90410,118528,7224,42907,111163,18168,6960,161135,191298,5247,100584,127552,171568,20121,91173,12636,54615,20199,63730,98105,2396,40387,14438,125012,4765,33235,12865,45299,37728,82098,77872,114037,59253,19675,24838,398016,102561,11446,17069,57508,178277,65836,99941,26114,2585,271882,136866,50126,11027,155648,118367,14585,8910,123015,335383,40434,41016,53021,14439,87098,176860,201543,121888,2358,9286,5739,22666,54270,37884,169381,33984,93859,16124,89364,72207,51639,76366,99029,65812,2198,12147,174891,194289,6986,30252,88822,21284,11445,288337,160821,33034,100869,43852,25761,52882,1144,103809,1924,84458,86079,43411,13542,139276,18141,34978,41298,7276,26481,173800,33210,17951,142652,33616,33677,2210,19941,98568,2486,192414,80136,12058,235883,50963,249638,29572,27221,47034,6124,72107,63346,97620,158513,299699,40388,23235,37176,224244,198386,121323,67992,23827,63170,17838,106622,158590,26807,5345,23489,91891,55474,74834,37981,13058,5977,72552,34706,26828,145172,19904,21367,34043,960,77092,91381,4733,47446,7680,41697,5170,16960,14741,46101,13656,473,51842,37433,11103,11551,121951,13191,97536,165932,50397,51628,129028,9069,44885,6590,59195,47045,32940,225472,90345,21833,13303,29407,96615,141951,5198,6028,18395,7181,3861,14966,156358,167182,36529,55253,25942,173153,30959,27261,50691,150176,162201,38467,48462,80602,42163,118482,168,108756,26011,17166,54149,456538,22512,91374,13816,90358,131615,18132,226707,1824,28139,26860,42253,93877,77351,65575,8980,80574,22020,27948,40422,91324,76376,13528,39281,91685,82215,122541,144066,1983,193851,17283,26320,2739,194978,4790,26845,42627,61300,65815,174612,55133,4200,191130,79771,158321,52280,166796,221620,62461,11278,4067,88152,83409,31717,121367,13522,47325,37945,10406,174348,249321,154101,64912,29938,51775,17220,15776,166138,78890,84425,54121,42861,16368,24572,291647,10197,32073,22651,11677,97509,26952,35787,18424,41910,71614,94977,72318,41594,70024,275419,37702,60199,7335,39107,61315,18271,18394,33768,87884,104277,123724,7277,56288,71981,189803,49320,3352,6798,14240,8954,69220,94433,57372,28620,68863,193727,85575,42309,41667,67689,42081,22543,44824,12719,28540,114236,101553,27638,27296,4300,5353,4663,19379,94098,3758,95888,95144,80344,87320,28447,259518,12718,71391,152731,37063,24132,31911,104896,15672,103782,1521,4945,72541,23717,122632,15619,87175,206120,29428,189780,61416,28350,44457,972,1175,47233,198738,95789,41907,21953,97034,59341,22864,53713,16873,32971,20693,20954,31336,21477,16169,38370,16412,9019,3841,24599,21938,17085,6484,81198,76413,5849,72514,12320,65247,276175,37234,59796,52642,16312,57349,198507,94148,46134,18958,125552,1747,18725,151873,14901,5490,68287,29470,3689,64794,40814,26018,25692,54450,2703,88278,124886,173087,174e3,24159,179477,24276,46004,201876,209202,445,52876,31948,30206,157610,39180,18439,44124,50469,5774,96278,222758,200216,50290,45486,20435,46986,46276,140133,142326,15569,13363,47522,92583,2182,7135,16853,22998,30272,4952,63263,35623,39096,53789,44864,20053,110392,124213,4630,16087,28221,127787,25839,77481,44693,13464,113146,6983,27069,55717,50102,4760,7107,26186,66507,59145,36032,104182,71328,29425,64317,50781,47465,94298,69706,74899,22754,120756,25108,93077,56834,73286,39928,16218,41699,176763,7555,70819,50083,26895,23315,26014,16773,123079,41712,5719,31516,90427,158540,85051,183128,40864,27505,55392,9058,45224,96857,30901,136622,96557,56304,120061,11501,151448,5773,89743,7769,86069,2935,18471,41628,10114,33660,110170,49479,26745,92846,33221,26731,18795,87076,8550,2100,29972,120289,3077,72490,33784,2630,208722,50861,63483,79029,6419,39467,14302,45286,64207,9686,67513,44170,1050,77246,59266,17055,53801,7150,11111,42432,4278,94579,362117,36175,42902,41933,39002,98489,22913,74161,84773,57036,17556,162288,74485,178760,93867,73635,128860,50362,261,67455,80001,46080,35662,4368,25247,19230,74393,22588,1822,27682,235324,13798,85998,13194,235067,23514,71669,147632,23191,134748,214683,105101,1518,25489,247114,7380,54842,26922,3971,26361,20844,68642,170517,77339,123255,8963,77818,150998,48466,36806,2732,23261,11741,236162,18243,126216,28690,50546,16385,92760,197383,246558,201295,88255,67588,71687,176076,172653,169058,33906,63747,24835,157621,43338,30050,46152,132741,2770,51371,94835,6614,15112,11749,56936,1250,19027,399017,58036,100215,23388,55815,308768,124152,94803,9521,64186,8971,28,30427,62163,7616,103838,35079,29203,131235,7743,17389,10882,37420,61460,228512,85363,41581,131077,62822,119647,10130,54445,26925,19968,29016,24446,74028,24176,61448,67185,9254,8563,119129,9771,99184,37716,39514,10532,221512,258753,218630,55980,23394,32141,61924,66749,32411,3741,36475,26678,77010,44946,91203,128749,116953,20476,49625,53116,13735,102335,29376,51946,83407,67892,59212,34685,21083,1546,112982,32972,74397,1078,190545,16082,86140,58591,89611,101531,10061,105104,76319,20035,17551,52611,169061,190842,100780,23907,90413,115619,9675,34710,193435,49443,129734,11183,258877,16318,136182,126808,44635,27304,192375,2599,125648,47051,12091,23814,721,58800,40137,66726,97930,60877,74487,7942,54326,9841,41428,13762,8211,85383,6950,99177,79806,201786,296464,124087,13144,29741,41721,47634,55088,254286,106408,17041,99064,12942,64086,45233,14005,2612,55827,255,7984,13980,38574,12776,46654,73499,249951,2101,26676,25996,132326,116415,119062,50449,31033,23038,11589,179252,20007,14860,129270,21143,17796,144715,60106,70758,69842,34674,282133,44014,16774,57268,38528,24053,46373,201667,28327,471023,51889,102667,21193,114909,84132,69317,96723,67969,16134,68145,15058,28765,32035,2524,101089,98664,25045,76571,14957,86040,118506,262428,154764,81573,39681,283900,73287,127825,544,80448,52347,38512,175971,15180,45467,33086,46552,48894,81107,43213,36672,54025,76703,8053,7608,13299,56619,20752,238099,54164,105133,1444,32942,953,37564,8e3,66316,119463,106817,404,13667,149108,128597,31267,10269,49836,106150,1484,52330,76965,160486,171648,38456,31263,22424,37738,66245,67467,143369,60471,75610,20895,115528,86070,60854,40796,49347,18989,15030,11371,37578,15779,79867,10187,86462,46402,155626,93200,40229,7090,57547,108053,99598,11088,47505,41218,206017,2173,20988,30219,22919,80563,57566,42369,93141,41675,2407,182519,120495,27154,16702,29456,14349,7958,16688,117177,140375,42467,261919,74916,153569,10836,34742,49526,7621,105997,12212,2270,392377,7755,17959,25086,232152,138791,33847,13860,35316,5811,1344,71259,50452,207539,92635,50359,5821,33674,30255,2086,2587,96264,17543,42,6029,9580,43007,139248,82831,12917,29607,25786,51467,42137,85161,100698,31561,88989,121990,278500,3602,109344,37982,15279,116442,28936,30880,87894,58079,128661,126731,67392,28051,146885,4861,16216,97344,42827,147561,153948,22684,21335,47685,1853,43349,15185,59642,10229,25520,187921,108972,5579,98037,24945,6697,19193,63734,137934,75056,89740,19767,224268,56138,63643,151661,39313,70618,84031,89723,84074,13703,85626,35460,8867,64845,3439,57906,99776,63968,49270,81130,34356,16210,23547,36446,34090,140028,72439,2221,22163,57058,363492,113754,18913,95451,48663,54464,54037,176097,68425,3023,34906,29482,117389,341780,80431,58330,16753,92616,60907,94846,147486,4498,48646,7773,46801,7778,18946,464978,47558,33223,177444,7328,15626,63337,94700,11743,9351,255024,39098,16447,42647,96230,39769,58840,10068,63439,35800,65843,58823,413844,9156,51258,7434,61791,85018,6872,3692,28096,7121,33024,6009,75532,31997,192535,9661,3304,9547,14753,31987,25314,55689,15896,20430,39472,31340,99744,25398,115569,54883,28719,205423,23071,57855,64638,149867,25671,82403,37616,20668,39989,77996,74948,140555,175248,64810,36515,46595,4958,248773,24045,28728,136673,168704,20804,114833,100325,27135,21205,96151,153134,45992,7093,13992,76047,1980,19432,145001,75159,87462,17710,1013,45556,34297,144882,20648,26061,11319,129567,108555,18872,464580,33386,22717,65948,167189,5603,135042,79542,8801,202632,18114,91882,5973,5239,67315,4431,60916,47819,71693,32597,32606,18183,45072,80329,76385,24749,51305,40314,156514,14693,130345,13168,66214,18029,12858,34801,27628,14544,10823,40522,40185,33739,148694,23548,9923,61012,28859,17933,19442,34364,99849,164107,141167,30629,21054,6744,36491,8096,42474,41706,155060,30650,10600,163442,1143,96655,61390,52359,7559,51568,64256,203854,4467,22453,14504,436398,7878,6980,8293,63610,293747,16167,35763,19627,147603,15419,18032,110744,51346,33681,54571,40472,48615,39073,21604,13754,173027,92560,11083,47299,63062,11813,52007,29883,9734,139722,15953,1550,20651,13616,49306,16113,90089,92326,7584,30712,72424,164858,6831,152871,55746,197721,34167,196442,6022,112107,55215,7538,123381,4920,43539,77165,8939,50392,34192,20225,79762,22505,58667,40770,29788,97180,82835,4568,8579,13273,363569,35898,49983,436,36598,3237,131691,62418,35591,8101,4073,379438,65218,76072,33887,2968,27573,212619,288680,68278,72851,150504,217896,6913,121339,22017,35340,51072,43616,75043,31437,10833,81487,4364,22968,41454,106687,85446,19863,109625,149241,524,141850,214404,54376,657,237023,9401,108137,53800,32474,49712,53334,126876,27337,45552,177696,8269,15036,12097,42240,2328,125374,119295,99715,2500,19624,39441,27220,102691,60957,94543,39101,18566,67362,13975,78230,25017,34017,239007,90027,39351,41681,35354,43822,1043,916,58587,141983,94818,38799,75459,41114,67432,16195,36606,59568,22272,126769,31424,68659,12287,134302,257977,5756,207285,95637,47248,117689,19583,77451,22373,12200,54993,117118,34244,29386,34562,53819,71267,64172,77665,49368,7716,59301,25749,45426,194789,17297,2650,1766,32501,45198,20403,20984,6600,14171,94604,19037,5402,29896,9938,59935,109708,88081,145182,44844,39167,352626,164173,35374,45982,6122,154,73419,220487,53834,53601,17992,8609,229321,5610,68098,66815,71012,95069,140968,27396,8957,134489,24656,86659,56598,134852,17316,123838,255436,6613,41610,138033,81452,32023,32396,123687,63398,8693,29712,30407,19296,121188,3551,36099,20032,111948,56624,16547,27453,35916,15378,52039,56849,13489,22214,73177,53097,277349,2157,14029,187886,10260,141743,246460,91880,50869,3788,49486,133566,54950,33120,129337,53768,18333,9525,26902,312251,10297,9020,70759,16647,112432,59260,84609,9818,82766,73569,468,46001,75780,55028,52106,11498,43645,108069,17150,17753,29417,16705,31799,9606,289,122254,115975,8620,6133,255357,56908,14456,133464,43554,79224,11247,29630,160,12756,25464,65960,350428,62521,321796,100359,67358,35169,46172,113128,48988,88868,31094,33266,6847,60887,98188,49659,69117,92977,220228,13947,80181,35103,62170,97351,13475,2440,199768,19498,36597,46971,25234,67806,62881,84717,73648,181966,10488,94149,21550,26655,63436,48375,14405,165650,9621,24439,28043,42735,4490,29963,56674,45373,1934,262446,50855,67098,26898,5261,52696,40644,33900,9440,180286,87162,22940,19704,26936,69769,10254,101759,27406,12243,48e3,73926,113215,54935,5726,192787,4312,106216,9366,11550,52949,23457,212271,277152,133895,108374,6191,96477,29980,218916,58024,54696,40853,91124,65894,91170,65908,252552,6793,29212,15389,44516,122515,52617,35058,9017,103536,39510,49136,19242,130652,662077,74699,47024,31422,8517,73351,24399,13867,128360,4810,4434,61779,111983,61036,17798,110240,59722,102960,39688,10001,23803,23039,176498,56659,44814,134295,17188,77577,74466,226175,102472,154333,63900,111747,18062,41171,79669,32773,408933,42562,28931,30907,107388,43487,2946,240310,23938,24354,319,184983,7927,6488,1422,10790,68809,68209,64775,4361,202,17123,59634,51200,44391,18188,17843,2619,74278,3230,9540,47187,21702,36274,56894,43907,16310,34790,16866,6150,5561,13587,107545,108873,126867,86986,28640,33427,19017,5762,80637,17430,46903,2047,131055,25958,13558,5444,47152,13900,44563,122857,45348,70863,39593,54332,38068,33637,318,40310,143467,18502,24520,11377,62013,28942,27246,28269,83545,17999,59015,90707,30065,15161,34720,1263,37008,2012,6060,98575,92933,5721,299,199555,24578,29223,2985,743,115825,109523,136657,47454,26378,53586,3733,174945,93340,244456,5693,37386,28782,89767,27545,23573,18798,136425,34320,84778,20041,48453,38215,7477,71958,40621,8773,5874,187927,105965,51100,43533,18083,8443,10180,43597,2003,183999,69689,12216,129696,146188,62389,34044,68410,12765,43273,26949,266807,3345,34477,79197,5688,47539,213110,21634,22257,50092,32222,42346,39530,63668,98,134978,74022,5152,59088,174145,37220,9934,9545,118937,5724,87240,19875,15784,40143,23263,87513,181654,285152,37881,263241,4966,43934,10433,186657,6470,74416,225854,25908,142677,246262,32280,6192,75890,45546,143264,135305,29742,47013,77787,11732,126658,8763,37950,21806,57557,113464,89465,108995,164574,23894,22996,23169,15369,23117,17642,130607,40503,36239,280990,44666,9981,40427,147487,26869,168452,32886,32991,46798,240839,15111,70502,65697,88548,44145,28701,48767,31139,206777,35659,181164,166262,14554,171445,31786,66523,76607,17956,6507,31279,90476,116611,167918,6560,1243,115324,80128,41867,55897,187323,37069,32596,189444,145931,13390,105530,65709,26805,6999,55714,41300,22915,68951,22138,21120,22264,10058,19945,33635,56123,99085,10032,5818,6016,46649,57476,35264,94413,112522,262288,93686,83038,14341,23204,28807,66084,77987,6101,126673,7133,38126,5923,122091,170240,97772,46874,215746,43948,41622,3272,55596,8332,146411,251315,13533,8561,81521,115449,48616,175175,2063,186556,3036,134537,75772,29728,82360,22973,186559,86348,89100,38388,82297,45610,2613,87082,9986,177812,57884,23591,47485,42543,33582,44713,74439,257444,252451,31825,35631,38540,33066,5147,13973,4343,51830,70378,22827,26448,95560,36896,241741,48067,203953,298860,61620,20450,3220,67272,6586,107662,100160,108684,6929,57226,4762,7457,1320,40404,77204,99309,62750,208653,59977,44e3,74315,34332,5819,172217,64904,114077,18147,84012,1791,98456,90930,21446,116669,103938,7422,85140,59713,5768,326211,16239,75411,13229,29398,10758,236107,1539,112472,95979,152154,151294,306,21196,38146,10700,6891,84282,109646,56492,40539,6589,119491,51354,30685,140209,136906,29622,73617,49553,70525,51671,166869,139616,74395,37439,49595,45678,11959,33211,86560,52434,9282,62690,112155,130810,5243,108261,99970,265613,72551,80049,6391,33365,90721,66737,69872,87011,1860,9032,112544,60905,37371,89015,140351,19076,850,373531,2802,36725,218795,72062,28990,16550,24614,7815,6187,26336,33373,32162,42791,73555,32062,23386,10244,56392,49442,27076,136262,12412,14883,1134,33675,97153,199281,15608,100152,74072,47942,254301,36451,16026,10687,65067,56708,254030,30290,50490,13864,57941,259331,35588,23485,43486,24869,21620,92971,22072,88645,1048,182050,13343,32452,14825,19509,3325,216938,45740,99716,189082,53740,78245,25609,24311,176777,47340,308354,40669,66085,14102,125339,9225,128709,97207,1271,200933,78439,113451,88975,18324,46521,11819,18570,141756,72512,170020,52754,63550,118515,103073,93330,32736,50499,14722,31600,68452,398867,29316,172786,18417,104924,2606,5670,84818,16288,67106,59580,82929,607401,291,85829,359,15897,35830,50696,65630,52672,22115,356968,29895,40837,231192,34024,38957,26722,406,23335,124952,72068,68804,13268,147101,164740,276569,162596,66943,11569,26654,66358,4777,23229,102127,5848,978,2921,59666,5371,28212,90108,42938,39320,2499,4271,108792,33510,125072,71653,65239,38250,66357,38577,13964,86251,35708,50755,36010,29448,12209,3844,38222,206337,100876,67827,137088,14167,252225,84163,195270,1306,5703,54198,779,46802,22028,51124,86759,70560,113164,35685,162145,45471,34561,422,2611,6464,47486,19223,38246,9191,18331,89942,243642,212364,15893,17518,22617,6409,30046,126182,59716,36560,104428,18846,26592,19458,50793,147333,30826,1388,27647,10922,14495,33545,19269,135828,39727,41601,46931,233379,49169,131130,182112,16276,82381,118209,142445,128310,19672,28740,82907,33436,3118,102206,28723,24819,41937,38854,5157,3881,111491,1142,9776,421673,152241,29309,14961,87854,6054,15424,3796,82656,54996,2108,55367,239450,154525,9643,118103,106041,64601,68549,48707,30266,25772,18740,9462,229669,91798,112152,191327,14493,72828,8175,66636,236474,25817,87351,129027,76653,20422,22983,71240,27846,44661,12399,46158,77704,53101,35032,11072,17300,109294,33638,24408,1895,11241,760,17584,82479,125877,63150,141075,34259,23274,81698,15732,43577,48340,91584,14688,16379,24481,150280,96420,262050,48635,43727,61819,56268,72003,88178,17281,79912,13218,122519,125295,166396,11811,2171,118930,67746,17636,178278,174656,95661,173039,83845,79689,17473,98555,127696,203415,54730,22925,232239,9309,12136,175026,20740,180188,10747,39816,314017,266131,10040,175732,112550,220651,31974,37393,888,23008,86799,4303,64905,148467,75337,251,3284,370102,50264,9835,5438,23655,4481,29851,329,12855,7162,64931,78141,12804,42372,296771,83547,18624,34874,86271,3360,48665,77735,88767,11463,63527,28889,22258,29140,194315,113924,25499,6406,31334,1845,4802,49184,43455,35469,127594,92970,61038,115005,38840,87761,106838,8811,20572,55637,11162,96721,132425,108925,2948,125457,36356,3502,75270,27622,127192,2561,123095,49394,61155,16897,110064,9699,89448,53356,19628,220310,21622,83036,9885,112214,6087,26713,17901,161912,91492,3440,68594,9266,92238,8087,6866,150194,72175,80701,13459,31836,43243,239700,95846,44749,50647,21945,230538,120612,132371,244604,5193,105637,34661,41341,68775,85393,1874,8771,33718,49672,77403,595452,99507,6490,58895,128742,7704,39239,73217,43816,62824,37804,199976,22361,80005,87514,94832,14089,4574,139975,59142,75523,100268,43906,53442,15152,2547,186002,17011,19513,204282,3343,60568,128318,119250,4298,51871,41336,71759,21921,45074,98169,145889,99427,11350,1237,5520,28799,7803,53702,21026,136352,38293,128690,12158,90132,44600,10184,26957,39459,126025,78904,82999,59373,39301,150198,120529,153042,20177,50089,14764,271571,30530,123161,38975,101562,22941,5648,124654,109243,69817,71675,49162,106884,21241,107795,30258,16572,188262,141456,7688,60718,8271,11044,32440,104608,103419,236109,93156,43293,128929,42107,67180,25201,115254,185488,130954,72813,167547,20537,39969,38432,22582,184022,1139,27199,5655,17767,97412,122606,209377,27070,35871,326617,188954,42680,73512,80911,22629,3011,95021,315242,157737,383,41821,41808,19335,27950,15674,25677,110950,35375,76835,59108,57370,35262,16569,160415,37706,78086,32041,49691,137143,9782,172080,50148,77917,6323,10110,69172,17711,21795,59511,76184,135114,31046,132319,59105,157578,20549,80778,57649,158421,65143,4575,72235,21899,10797,92745,34035,106079,80159,4508,78304,25350,75457,46458,32937,25623,47,8531,104751,84953,8138,36508,187199,66310,115274,13253,32461,38536,1916,42007,187160,35055,26325,84394,35963,94216,45590,97782],MAX_COMMON_PREFIX_LENGTH=15;class RoutingTableRefresh{constructor(e){_(this,"log");_(this,"peerRouting");_(this,"routingTable");_(this,"refreshInterval");_(this,"refreshQueryTimeout");_(this,"commonPrefixLengthRefreshedAt");_(this,"refreshTimeoutId");const{peerRouting:t,routingTable:n,refreshInterval:i,refreshQueryTimeout:o,lan:a}=e;this.log=logger$5(`libp2p:kad-dht:${a?"lan":"wan"}:routing-table:refresh`),this.peerRouting=t,this.routingTable=n,this.refreshInterval=i??TABLE_REFRESH_INTERVAL,this.refreshQueryTimeout=o??TABLE_REFRESH_QUERY_TIMEOUT,this.commonPrefixLengthRefreshedAt=[],this.refreshTable=this.refreshTable.bind(this)}async start(){this.log(`refreshing routing table every ${this.refreshInterval}ms`),this.refreshTable(!0)}async stop(){this.refreshTimeoutId!=null&&clearTimeout(this.refreshTimeoutId)}refreshTable(e=!1){this.log("refreshing routing table");const t=this._maxCommonPrefix(),n=this._getTrackedCommonPrefixLengthsForRefresh(t);this.log(`max common prefix length ${t}`),this.log(`tracked CPLs [ ${n.map(i=>i.toISOString()).join(", ")} ]`),Promise.all(n.map(async(i,o)=>{try{if(await this._refreshCommonPrefixLength(o,i,e),this._numPeersForCpl(t)===0){const a=Math.min(2*(o+1),n.length-1);for(let c=o+1;c<a+1;c++)try{await this._refreshCommonPrefixLength(c,i,e)}catch(l){this.log.error(l)}}}catch(a){this.log.error(a)}})).catch(i=>{this.log.error(i)}).then(()=>{this.refreshTimeoutId=setTimeout(this.refreshTable,this.refreshInterval),this.refreshTimeoutId.unref!=null&&this.refreshTimeoutId.unref()}).catch(i=>{this.log.error(i)})}async _refreshCommonPrefixLength(e,t,n){if(!n&&t.getTime()>Date.now()-this.refreshInterval){this.log("not running refresh for cpl %s as time since last refresh not above interval",e);return}const i=await this._generateRandomPeerId(e);this.log("starting refreshing cpl %s with key %p (routing table size was %s)",e,i,this.routingTable.size);const o=await length$2(this.peerRouting.getClosestPeers(i.toBytes(),{signal:AbortSignal.timeout(this.refreshQueryTimeout)}));this.log(`found ${o} peers that were close to imaginary peer %p`,i),this.log("finished refreshing cpl %s with key %p (routing table size is now %s)",e,i,this.routingTable.size)}_getTrackedCommonPrefixLengthsForRefresh(e){e>MAX_COMMON_PREFIX_LENGTH&&(e=MAX_COMMON_PREFIX_LENGTH);const t=[];for(let n=0;n<=e;n++)t[n]=this.commonPrefixLengthRefreshedAt[n]??new Date;return t}async _generateRandomPeerId(e){if(this.routingTable.kb==null)throw new Error("Routing table not started");const t=randomBytes$5(2),n=(t[1]<<8)+t[0],i=await this._makePeerId(this.routingTable.kb.localNodeId,n,e);return peerIdFromBytes$4(i)}async _makePeerId(e,t,n){if(n>MAX_COMMON_PREFIX_LENGTH)throw new Error(`Cannot generate peer ID for common prefix length greater than ${MAX_COMMON_PREFIX_LENGTH}`);const a=new DataView(e.buffer,e.byteOffset,e.byteLength).getUint16(0,!1)^32768>>n,c=65535<<16-(n+1),l=a&c|t&~c,u=GENERATED_PREFIXES[l],f=new ArrayBuffer(34),g=new DataView(f,0,f.byteLength);return g.setUint8(0,sha256$2.code),g.setUint8(1,32),g.setUint32(2,u,!1),new Uint8Array(g.buffer,g.byteOffset,g.byteLength)}_maxCommonPrefix(){let e=0;for(const t of this._prefixLengths())t>e&&(e=t);return e}_numPeersForCpl(e){let t=0;for(const n of this._prefixLengths())n===e&&t++;return t}*_prefixLengths(){if(this.routingTable.kb!=null)for(const{id:e}of this.routingTable.kb.toIterable()){const t=xor(this.routingTable.kb.localNodeId,e);let n=0;for(const i of t)if(i===0)n++;else break;yield n}}}const log$G=logger$5("libp2p:kad-dht:rpc:handlers:add-provider");class AddProviderHandler{constructor(e){_(this,"providers");const{providers:t}=e;this.providers=t}async handle(e,t){if(log$G("start"),t.key==null||t.key.length===0)throw new CodeError$e("Missing key","ERR_MISSING_KEY");let n;try{n=CID$3.decode(t.key)}catch{throw new CodeError$e("Invalid CID","ERR_INVALID_CID")}(t.providerPeers==null||t.providerPeers.length===0)&&log$G.error("no providers found in message"),await Promise.all(t.providerPeers.map(async i=>{if(!i.id.equals(e)){log$G("invalid provider peer %p from %p",i.id,e);return}if(i.multiaddrs.length<1){log$G("no valid addresses for provider %p. Ignore",e);return}log$G("received provider %p for %s (addrs %s)",e,n,i.multiaddrs.map(o=>o.toString())),await this.providers.addProvider(n,i.id)}))}}const log$F=logger$5("libp2p:kad-dht:rpc:handlers:find-node");class FindNodeHandler{constructor(e,t){_(this,"peerRouting");_(this,"lan");_(this,"components");const{peerRouting:n,lan:i}=t;this.components=e,this.peerRouting=n,this.lan=!!i}async handle(e,t){log$F("incoming request from %p for peers closer to %b",e,t.key);let n=[];equals$4(this.components.peerId.toBytes(),t.key)?n=[{id:this.components.peerId,multiaddrs:this.components.addressManager.getAddresses().map(o=>o.decapsulateCode(getProtocol("p2p").code)),protocols:[]}]:n=await this.peerRouting.getCloserPeersOffline(t.key,e),n=n.map(this.lan?removePublicAddresses:removePrivateAddresses).filter(({multiaddrs:o})=>o.length);const i=new Message$3(t.type,new Uint8Array(0),t.clusterLevel);return n.length>0?i.closerPeers=n:log$F("could not find any peers closer to %b than %p",t.key,e),i}}const log$E=logger$5("libp2p:kad-dht:rpc:handlers:get-providers");class GetProvidersHandler{constructor(e,t){_(this,"components");_(this,"peerRouting");_(this,"providers");_(this,"lan");const{peerRouting:n,providers:i,lan:o}=t;this.components=e,this.peerRouting=n,this.providers=i,this.lan=!!o}async handle(e,t){let n;try{n=CID$3.decode(t.key)}catch{throw new CodeError$e("Invalid CID","ERR_INVALID_CID")}log$E("%p asking for providers for %s",e,n);const[i,o]=await Promise.all([this.providers.getProviders(n),this.peerRouting.getCloserPeersOffline(t.key,e)]),a=await this._getPeers(i),c=await this._getPeers(o.map(({id:u})=>u)),l=new Message$3(t.type,t.key,t.clusterLevel);return a.length>0&&(l.providerPeers=a),c.length>0&&(l.closerPeers=c),log$E("got %s providers %s closerPeers",a.length,c.length),l}async _getAddresses(e){return[]}async _getPeers(e){const t=[],n=this.lan?removePublicAddresses:removePrivateAddresses;for(const i of e)try{const o=await this.components.peerStore.get(i),a=n({id:i,multiaddrs:o.addresses.map(({multiaddr:c})=>c),protocols:o.protocols});a.multiaddrs.length>0&&t.push(a)}catch(o){if(o.code!=="ERR_NOT_FOUND")throw o}return t}}const log$D=logger$5("libp2p:kad-dht:rpc:handlers:get-value");class GetValueHandler{constructor(e,t){_(this,"components");_(this,"peerRouting");const{peerRouting:n}=t;this.components=e,this.peerRouting=n}async handle(e,t){const n=t.key;if(log$D("%p asked for key %b",e,n),n==null||n.length===0)throw new CodeError$e("Invalid key","ERR_INVALID_KEY");const i=new Message$3(MESSAGE_TYPE.GET_VALUE,n,t.clusterLevel);if(isPublicKeyKey(n)){log$D("is public key");const c=fromPublicKeyKey(n);let l;try{const u=await this.components.peerStore.get(c);if(u.id.publicKey==null)throw new CodeError$e("No public key found in key book","ERR_NOT_FOUND");l=u.id.publicKey}catch(u){if(u.code!=="ERR_NOT_FOUND")throw u}if(l!=null)return log$D("returning found public key"),i.record=new Libp2pRecord(n,l,new Date),i}const[o,a]=await Promise.all([this._checkLocalDatastore(n),this.peerRouting.getCloserPeersOffline(t.key,e)]);return o!=null&&(log$D("had record for %b in local datastore",n),i.record=o),a.length>0&&(log$D("had %s closer peers in routing table",a.length),i.closerPeers=a),i}async _checkLocalDatastore(e){log$D("checkLocalDatastore looking for %b",e);const t=bufferToRecordKey(e);let n;try{n=await this.components.datastore.get(t)}catch(o){if(o.code==="ERR_NOT_FOUND")return;throw o}const i=Libp2pRecord.deserialize(n);if(i==null)throw new CodeError$e("Invalid record","ERR_INVALID_RECORD");if(i.timeReceived==null||Date.now()-i.timeReceived.getTime()>MAX_RECORD_AGE){await this.components.datastore.delete(t);return}return i}}const log$C=logger$5("libp2p:kad-dht:rpc:handlers:ping");class PingHandler{async handle(e,t){return log$C("ping from %p",e),t}}class PutValueHandler{constructor(e,t){_(this,"log");_(this,"components");_(this,"validators");const{validators:n}=t;this.components=e,this.log=logger$5("libp2p:kad-dht:rpc:handlers:put-value"),this.validators=n}async handle(e,t){const n=t.key;this.log("%p asked us to store value for key %b",e,n);const i=t.record;if(i==null){const o=`Empty record from: ${e.toString()}`;throw this.log.error(o),new CodeError$e(o,"ERR_EMPTY_RECORD")}try{await verifyRecord(this.validators,i),i.timeReceived=new Date;const o=bufferToRecordKey(i.key);await this.components.datastore.put(o,i.serialize().subarray()),this.log("put record for %b into datastore under key %k",n,o)}catch(o){this.log("did not put record for key %b into datastore %o",n,o)}return t}}class RPC{constructor(e,t){_(this,"handlers");_(this,"routingTable");_(this,"log");const{providers:n,peerRouting:i,validators:o,lan:a}=t;this.log=logger$5("libp2p:kad-dht:rpc"),this.routingTable=t.routingTable,this.handlers={[MESSAGE_TYPE.GET_VALUE]:new GetValueHandler(e,{peerRouting:i}),[MESSAGE_TYPE.PUT_VALUE]:new PutValueHandler(e,{validators:o}),[MESSAGE_TYPE.FIND_NODE]:new FindNodeHandler(e,{peerRouting:i,lan:a}),[MESSAGE_TYPE.ADD_PROVIDER]:new AddProviderHandler({providers:n}),[MESSAGE_TYPE.GET_PROVIDERS]:new GetProvidersHandler(e,{peerRouting:i,providers:n,lan:a}),[MESSAGE_TYPE.PING]:new PingHandler}}async handleMessage(e,t){try{await this.routingTable.add(e)}catch(i){this.log.error("Failed to update the kbucket store",i)}const n=this.handlers[t.type];if(n==null){this.log.error(`no handler found for message type: ${t.type}`);return}return n.handle(e,t)}onIncomingStream(e){Promise.resolve().then(async()=>{const{stream:t,connection:n}=e,i=n.remotePeer;try{await this.routingTable.add(i)}catch(a){this.log.error(a)}const o=this;await pipe(t,a=>decode$h(a),async function*(a){for await(const c of a){const l=Message$3.deserialize(c);o.log("incoming %s from %p",l.type,i);const u=await o.handleMessage(i,l);u!=null&&(yield u.serialize())}},a=>encode$d(a),t)}).catch(t=>{this.log.error(t)})}}class TopologyListener extends TypedEventEmitter$1{constructor(t,n){super();_(this,"log");_(this,"components");_(this,"protocol");_(this,"running");_(this,"registrarId");const{protocol:i,lan:o}=n;this.components=t,this.log=logger$5(`libp2p:kad-dht:topology-listener:${o?"lan":"wan"}`),this.running=!1,this.protocol=i}isStarted(){return this.running}async start(){this.running||(this.running=!0,this.registrarId=await this.components.registrar.register(this.protocol,{onConnect:t=>{this.log("observed peer %p with protocol %s",t,this.protocol),this.dispatchEvent(new CustomEvent$2("peer",{detail:t}))}}))}async stop(){this.running=!1,this.registrarId!=null&&(this.components.registrar.unregister(this.registrarId),this.registrarId=void 0)}}const DEFAULT_MAX_INBOUND_STREAMS$1=32,DEFAULT_MAX_OUTBOUND_STREAMS$1=64;class DefaultKadDHT extends TypedEventEmitter$1{constructor(t,n){super();_(this,"protocol");_(this,"routingTable");_(this,"providers");_(this,"network");_(this,"peerRouting");_(this,"components");_(this,"log");_(this,"running");_(this,"kBucketSize");_(this,"clientMode");_(this,"lan");_(this,"validators");_(this,"selectors");_(this,"queryManager");_(this,"contentFetching");_(this,"contentRouting");_(this,"routingTableRefresh");_(this,"rpc");_(this,"topologyListener");_(this,"querySelf");_(this,"maxInboundStreams");_(this,"maxOutboundStreams");const{kBucketSize:i,clientMode:o,validators:a,selectors:c,querySelfInterval:l,lan:u,protocolPrefix:f,pingTimeout:g,pingConcurrency:$,maxInboundStreams:S,maxOutboundStreams:E,providers:v}=n;this.running=!1,this.components=t,this.lan=!!u,this.log=logger$5(`libp2p:kad-dht:${u===!0?"lan":"wan"}`),this.protocol=`${f??PROTOCOL_PREFIX$3}${u===!0?LAN_PREFIX:""}${PROTOCOL_DHT}`,this.kBucketSize=i??20,this.clientMode=o??!0,this.maxInboundStreams=S??DEFAULT_MAX_INBOUND_STREAMS$1,this.maxOutboundStreams=E??DEFAULT_MAX_OUTBOUND_STREAMS$1,this.routingTable=new RoutingTable(t,{kBucketSize:i,lan:this.lan,pingTimeout:g,pingConcurrency:$,protocol:this.protocol}),this.providers=new Providers(t,v??{}),this.validators={...validators,...a},this.selectors={...selectors,...c},this.network=new Network(t,{protocol:this.protocol,lan:this.lan});const T=pDefer();n.allowQueryWithZeroPeers===!0&&T.resolve(),this.queryManager=new QueryManager(t,{disjointPaths:Math.ceil(this.kBucketSize/2),lan:u,initialQuerySelfHasRun:T,routingTable:this.routingTable}),this.peerRouting=new PeerRouting(t,{routingTable:this.routingTable,network:this.network,validators:this.validators,queryManager:this.queryManager,lan:this.lan}),this.contentFetching=new ContentFetching(t,{validators:this.validators,selectors:this.selectors,peerRouting:this.peerRouting,queryManager:this.queryManager,network:this.network,lan:this.lan}),this.contentRouting=new ContentRouting(t,{network:this.network,peerRouting:this.peerRouting,queryManager:this.queryManager,routingTable:this.routingTable,providers:this.providers,lan:this.lan}),this.routingTableRefresh=new RoutingTableRefresh({peerRouting:this.peerRouting,routingTable:this.routingTable,lan:this.lan}),this.rpc=new RPC(t,{routingTable:this.routingTable,providers:this.providers,peerRouting:this.peerRouting,validators:this.validators,lan:this.lan}),this.topologyListener=new TopologyListener(t,{protocol:this.protocol,lan:this.lan}),this.querySelf=new QuerySelf(t,{peerRouting:this.peerRouting,interval:l,initialInterval:n.initialQuerySelfInterval,lan:this.lan,initialQuerySelfHasRun:T,routingTable:this.routingTable}),this.network.addEventListener("peer",I=>{const A=I.detail;this.onPeerConnect(A).catch(P=>{this.log.error("could not add %p to routing table",A.id,P)}),this.dispatchEvent(new CustomEvent$2("peer",{detail:A}))}),this.topologyListener.addEventListener("peer",I=>{const A=I.detail;Promise.resolve().then(async()=>{const P=await this.components.peerStore.get(A),x={id:A,multiaddrs:P.addresses.map(({multiaddr:D})=>D),protocols:P.protocols};await this.onPeerConnect(x)}).catch(P=>{this.log.error("could not add %p to routing table",A,P)})})}async onPeerConnect(t){if(this.log("peer %p connected with protocols",t.id,t.protocols),this.lan?t=removePublicAddresses(t):t=removePrivateAddresses(t),t.multiaddrs.length===0){this.log("ignoring %p as they do not have any %s addresses in %s",t.id,this.lan?"private":"public",t.multiaddrs.map(n=>n.toString()));return}try{await this.routingTable.add(t.id)}catch(n){this.log.error("could not add %p to routing table",t.id,n)}}isStarted(){return this.running}async getMode(){return this.clientMode?"client":"server"}async setMode(t){await this.components.registrar.unhandle(this.protocol),t==="client"?(this.log("enabling client mode"),this.clientMode=!0):(this.log("enabling server mode"),this.clientMode=!1,await this.components.registrar.handle(this.protocol,this.rpc.onIncomingStream.bind(this.rpc),{maxInboundStreams:this.maxInboundStreams,maxOutboundStreams:this.maxOutboundStreams}))}async start(){this.running=!0,await this.setMode(this.clientMode?"client":"server"),await Promise.all([this.providers.start(),this.queryManager.start(),this.network.start(),this.routingTable.start(),this.topologyListener.start()]),this.querySelf.start(),await this.routingTableRefresh.start()}async stop(){this.running=!1,this.querySelf.stop(),await Promise.all([this.providers.stop(),this.queryManager.stop(),this.network.stop(),this.routingTable.stop(),this.routingTableRefresh.stop(),this.topologyListener.stop()])}async*put(t,n,i={}){yield*this.contentFetching.put(t,n,i)}async*get(t,n={}){yield*this.contentFetching.get(t,n)}async*provide(t,n={}){yield*this.contentRouting.provide(t,this.components.addressManager.getAddresses(),n)}async*findProviders(t,n={}){yield*this.contentRouting.findProviders(t,n)}async*findPeer(t,n={}){yield*this.peerRouting.findPeer(t,n)}async*getClosestPeers(t,n={}){yield*this.peerRouting.getClosestPeers(t,n)}async refreshRoutingTable(){this.routingTableRefresh.refreshTable(!0)}}const log$B=logger$5("libp2p:kad-dht");class DHTContentRouting{constructor(e){_(this,"dht");this.dht=e}async provide(e,t={}){await drain(this.dht.provide(e,t))}async*findProviders(e,t={}){for await(const n of this.dht.findProviders(e,t))n.name==="PROVIDER"&&(yield*n.providers)}async put(e,t,n){await drain(this.dht.put(e,t,n))}async get(e,t){for await(const n of this.dht.get(e,t))if(n.name==="VALUE")return n.value;throw new CodeError$e("Not found","ERR_NOT_FOUND")}}class DHTPeerRouting{constructor(e){_(this,"dht");this.dht=e}async findPeer(e,t={}){for await(const n of this.dht.findPeer(e,t))if(n.name==="FINAL_PEER")return n.peer;throw new CodeError$e("Not found","ERR_NOT_FOUND")}async*getClosestPeers(e,t={}){for await(const n of this.dht.getClosestPeers(e,t))n.name==="FINAL_PEER"&&(yield n.peer)}}const P2P_CIRCUIT_CODE=290,DNS4_CODE=54,DNS6_CODE=55,DNSADDR_CODE=56,IP4_CODE=4,IP6_CODE=41;function multiaddrIsPublic(r){const e=r.stringTuples();for(const t of e)if(t[0]===P2P_CIRCUIT_CODE)return!1;if(e[0][0]===DNS4_CODE||e[0][0]===DNS6_CODE||e[0][0]===DNSADDR_CODE)return!0;if(e[0][0]===IP4_CODE||e[0][0]===IP6_CODE){const t=is_ip_private(`${e[0][1]}`);return t==null||!t}return!1}var kr;class DefaultDualKadDHT extends TypedEventEmitter$1{constructor(t,n={}){super();_(this,"wan");_(this,"lan");_(this,"components");_(this,"contentRouting");_(this,"peerRouting");_(this,kr,"@libp2p/dual-kad-dht");this.components=t,this.wan=new DefaultKadDHT(t,{protocolPrefix:"/ipfs",...n,lan:!1}),this.lan=new DefaultKadDHT(t,{protocolPrefix:"/ipfs",...n,clientMode:!1,lan:!0}),this.contentRouting=new DHTContentRouting(this),this.peerRouting=new DHTPeerRouting(this),this.wan.addEventListener("peer",i=>{this.dispatchEvent(new CustomEvent$2("peer",{detail:i.detail}))}),this.lan.addEventListener("peer",i=>{this.dispatchEvent(new CustomEvent$2("peer",{detail:i.detail}))}),n.clientMode==null&&t.events.addEventListener("self:peer:update",i=>{log$B("received update of self-peer info");const o=i.detail.peer.addresses.some(({multiaddr:a})=>multiaddrIsPublic(a));this.getMode().then(async a=>{o&&a==="client"?await this.setMode("server"):a==="server"&&!o&&await this.setMode("client")}).catch(a=>{log$B.error("error setting dht server mode",a)})})}get[(kr=Symbol.toStringTag,contentRouting)](){return this.contentRouting}get[peerRouting](){return this.peerRouting}get[peerDiscovery](){return this}isStarted(){return this.wan.isStarted()&&this.lan.isStarted()}async getMode(){return this.wan.getMode()}async setMode(t){await this.wan.setMode(t)}async start(){await Promise.all([this.lan.start(),this.wan.start()])}async stop(){await Promise.all([this.lan.stop(),this.wan.stop()])}async*put(t,n,i={}){for await(const o of merge$1(this.lan.put(t,n,i),this.wan.put(t,n,i)))yield o}async*get(t,n={}){let i=!1,o=!1;for await(const a of merge$1(this.lan.get(t,n),this.wan.get(t,n)))yield a,a.name==="DIAL_PEER"&&(i=!0),a.name==="VALUE"&&(i=!0,a.value!=null&&(o=!0)),a.name==="SEND_QUERY"&&(i=!0);if(!i)throw new CodeError$e("No peers found in routing table!","ERR_NO_PEERS_IN_ROUTING_TABLE");o||(yield queryErrorEvent({from:this.components.peerId,error:new CodeError$e("Not found","ERR_NOT_FOUND")},n))}async*provide(t,n={}){let i=0,o=0;const a=[],c=[this.lan];await this.wan.getMode()==="server"&&c.push(this.wan);for await(const l of merge$1(...c.map(u=>u.provide(t,n))))yield l,l.name==="SEND_QUERY"&&i++,l.name==="QUERY_ERROR"&&a.push(l.error),l.name==="PEER_RESPONSE"&&l.messageName==="ADD_PROVIDER"&&(log$B("sent provider record for %s to %p",t,l.from),o++);if(o===0)throw a.length>0?new CodeError$e(`Failed to provide to ${a.length} of ${i} peers`,"ERR_PROVIDES_FAILED",{errors:a}):new CodeError$e("Failed to provide - no peers found","ERR_PROVIDES_FAILED")}async*findProviders(t,n={}){yield*merge$1(this.lan.findProviders(t,n),this.wan.findProviders(t,n))}async*findPeer(t,n={}){let i=!1;for await(const o of merge$1(this.lan.findPeer(t,n),this.wan.findPeer(t,n)))yield o,(o.name==="SEND_QUERY"||o.name==="FINAL_PEER")&&(i=!0);if(!i)throw new CodeError$e("Peer lookup failed","ERR_LOOKUP_FAILED")}async*getClosestPeers(t,n={}){yield*merge$1(this.lan.getClosestPeers(t,n),this.wan.getClosestPeers(t,n))}async refreshRoutingTable(){await Promise.all([this.lan.refreshRoutingTable(),this.wan.refreshRoutingTable()])}}var EventTypes;(function(r){r[r.SEND_QUERY=0]="SEND_QUERY",r[r.PEER_RESPONSE=1]="PEER_RESPONSE",r[r.FINAL_PEER=2]="FINAL_PEER",r[r.QUERY_ERROR=3]="QUERY_ERROR",r[r.PROVIDER=4]="PROVIDER",r[r.VALUE=5]="VALUE",r[r.ADD_PEER=6]="ADD_PEER",r[r.DIAL_PEER=7]="DIAL_PEER"})(EventTypes||(EventTypes={}));var MessageType;(function(r){r[r.PUT_VALUE=0]="PUT_VALUE",r[r.GET_VALUE=1]="GET_VALUE",r[r.ADD_PROVIDER=2]="ADD_PROVIDER",r[r.GET_PROVIDERS=3]="GET_PROVIDERS",r[r.FIND_NODE=4]="FIND_NODE",r[r.PING=5]="PING"})(MessageType||(MessageType={}));function kadDHT(r){return e=>new DefaultDualKadDHT(e,r)}var MessageTypes;(function(r){r[r.NEW_STREAM=0]="NEW_STREAM",r[r.MESSAGE_RECEIVER=1]="MESSAGE_RECEIVER",r[r.MESSAGE_INITIATOR=2]="MESSAGE_INITIATOR",r[r.CLOSE_RECEIVER=3]="CLOSE_RECEIVER",r[r.CLOSE_INITIATOR=4]="CLOSE_INITIATOR",r[r.RESET_RECEIVER=5]="RESET_RECEIVER",r[r.RESET_INITIATOR=6]="RESET_INITIATOR"})(MessageTypes||(MessageTypes={}));const MessageTypeNames=Object.freeze({0:"NEW_STREAM",1:"MESSAGE_RECEIVER",2:"MESSAGE_INITIATOR",3:"CLOSE_RECEIVER",4:"CLOSE_INITIATOR",5:"RESET_RECEIVER",6:"RESET_INITIATOR"}),InitiatorMessageTypes=Object.freeze({NEW_STREAM:MessageTypes.NEW_STREAM,MESSAGE:MessageTypes.MESSAGE_INITIATOR,CLOSE:MessageTypes.CLOSE_INITIATOR,RESET:MessageTypes.RESET_INITIATOR}),ReceiverMessageTypes=Object.freeze({MESSAGE:MessageTypes.MESSAGE_RECEIVER,CLOSE:MessageTypes.CLOSE_RECEIVER,RESET:MessageTypes.RESET_RECEIVER}),MAX_MSG_SIZE=1<<20,MAX_MSG_QUEUE_SIZE=4<<20;let Decoder$3=class{constructor(e=MAX_MSG_SIZE,t=MAX_MSG_QUEUE_SIZE){_(this,"_buffer");_(this,"_headerInfo");_(this,"_maxMessageSize");_(this,"_maxUnprocessedMessageQueueSize");this._buffer=new Uint8ArrayList,this._headerInfo=null,this._maxMessageSize=e,this._maxUnprocessedMessageQueueSize=t}write(e){if(e==null||e.length===0)return[];if(this._buffer.append(e),this._buffer.byteLength>this._maxUnprocessedMessageQueueSize)throw Object.assign(new Error("unprocessed message queue size too large!"),{code:"ERR_MSG_QUEUE_TOO_BIG"});const t=[];for(;this._buffer.length!==0;){if(this._headerInfo==null)try{this._headerInfo=this._decodeHeader(this._buffer)}catch(u){if(u.code==="ERR_MSG_TOO_BIG")throw u;break}const{id:n,type:i,length:o,offset:a}=this._headerInfo;if(this._buffer.length-a<o)break;const l={id:n,type:i};(i===MessageTypes.NEW_STREAM||i===MessageTypes.MESSAGE_INITIATOR||i===MessageTypes.MESSAGE_RECEIVER)&&(l.data=this._buffer.sublist(a,a+o)),t.push(l),this._buffer.consume(a+o),this._headerInfo=null}return t}_decodeHeader(e){const{value:t,offset:n}=readVarInt(e),{value:i,offset:o}=readVarInt(e,n),a=t&7;if(MessageTypeNames[a]==null)throw new Error(`Invalid type received: ${a}`);if(i>this._maxMessageSize)throw Object.assign(new Error("message size too large!"),{code:"ERR_MSG_TOO_BIG"});return{id:t>>3,type:a,offset:n+o,length:i}}};const MSB$4=128,REST$4=127;function readVarInt(r,e=0){let t=0,n=0,i=e,o;const a=r.length;do{if(i>=a||n>49)throw e=0,new RangeError("Could not decode varint");o=r.get(i++),t+=n<28?(o&REST$4)<<n:(o&REST$4)*Math.pow(2,n),n+=7}while(o>=MSB$4);return e=i-e,{value:t,offset:e}}function isAsyncIterable$3(r){return r[Symbol.asyncIterator]!=null}const DEFAULT_BATCH_SIZE=1024*1024,DEFAULT_SERIALIZE=(r,e)=>{e.append(r)};function batchedBytes(r,e){return isAsyncIterable$3(r)?async function*(){let t=new Uint8ArrayList,n=!1,i=pDefer(),o=Number(e?.size??DEFAULT_BATCH_SIZE);if((isNaN(o)||o===0||o<0)&&(o=DEFAULT_BATCH_SIZE),o!==Math.round(o))throw new Error("Batch size must be an integer");const a=e?.yieldAfter??0,c=e?.serialize??DEFAULT_SERIALIZE;for(Promise.resolve().then(async()=>{try{let l;for await(const u of r){if(c(u,t),t.byteLength>=o){clearTimeout(l),i.resolve();continue}l=setTimeout(()=>{i.resolve()},a)}clearTimeout(l),i.resolve()}catch(l){i.reject(l)}finally{n=!0}});!n;)if(await i.promise,i=pDefer(),t.byteLength>0){const l=t;t=new Uint8ArrayList,yield l.subarray()}}():function*(){const t=new Uint8ArrayList;let n=Number(e?.size??DEFAULT_BATCH_SIZE);if((isNaN(n)||n===0||n<0)&&(n=DEFAULT_BATCH_SIZE),n!==Math.round(n))throw new Error("Batch size must be an integer");const i=e?.serialize??DEFAULT_SERIALIZE;for(const o of r)i(o,t),t.byteLength>=n&&(yield t.subarray(0,n),t.consume(n));t.byteLength>0&&(yield t.subarray())}()}function allocUnsafe$2(r){return new Uint8Array(r)}const POOL_SIZE=10*1024;let Encoder$2=class{constructor(){_(this,"_pool");_(this,"_poolOffset");this._pool=allocUnsafe$2(POOL_SIZE),this._poolOffset=0}write(e,t){const n=this._pool;let i=this._poolOffset;encode$a(e.id<<3|e.type,n,i),i+=encodingLength$1(e.id<<3|e.type),(e.type===MessageTypes.NEW_STREAM||e.type===MessageTypes.MESSAGE_INITIATOR||e.type===MessageTypes.MESSAGE_RECEIVER)&&e.data!=null?(encode$a(e.data.length,n,i),i+=encodingLength$1(e.data.length)):(encode$a(0,n,i),i+=encodingLength$1(0));const o=n.subarray(this._poolOffset,i);POOL_SIZE-i<100?(this._pool=allocUnsafe$2(POOL_SIZE),this._poolOffset=0):this._poolOffset=i,t.append(o),(e.type===MessageTypes.NEW_STREAM||e.type===MessageTypes.MESSAGE_INITIATOR||e.type===MessageTypes.MESSAGE_RECEIVER)&&e.data!=null&&t.append(e.data)}};const encoder=new Encoder$2;async function*encode$8(r,e=0){if(e==null||e===0){for await(const t of r){const n=new Uint8ArrayList;for(const i of t)encoder.write(i,n);yield n.subarray()}return}yield*batchedBytes(r,{size:e,serialize:(t,n)=>{for(const i of t)encoder.write(i,n)}})}class MplexStream extends AbstractStream$1{constructor(t){super(t);_(this,"name");_(this,"streamId");_(this,"send");_(this,"types");_(this,"maxDataSize");this.types=t.direction==="outbound"?InitiatorMessageTypes:ReceiverMessageTypes,this.send=t.send,this.name=t.name,this.streamId=t.streamId,this.maxDataSize=t.maxDataSize}async sendNewStream(){await this.send({id:this.streamId,type:InitiatorMessageTypes.NEW_STREAM,data:new Uint8ArrayList(fromString$b(this.name))})}async sendData(t){for(t=t.sublist();t.byteLength>0;){const n=Math.min(t.byteLength,this.maxDataSize);await this.send({id:this.streamId,type:this.types.MESSAGE,data:t.sublist(0,n)}),t.consume(n)}}async sendReset(){await this.send({id:this.streamId,type:this.types.RESET})}async sendCloseWrite(){await this.send({id:this.streamId,type:this.types.CLOSE})}async sendCloseRead(){}}function createStream$1(r){const{id:e,name:t,send:n,onEnd:i,type:o="initiator",maxMsgSize:a=MAX_MSG_SIZE}=r;return new MplexStream({id:o==="initiator"?`i${e}`:`r${e}`,streamId:e,name:`${t??e}`,direction:o==="initiator"?"outbound":"inbound",maxDataSize:a,onEnd:i,send:n,log:logger$5(`libp2p:mplex:stream:${o}:${e}`)})}const log$A=logger$5("libp2p:mplex"),MAX_STREAMS_INBOUND_STREAMS_PER_CONNECTION=1024,MAX_STREAMS_OUTBOUND_STREAMS_PER_CONNECTION=1024,MAX_STREAM_BUFFER_SIZE=1024*1024*4,DISCONNECT_THRESHOLD=5,CLOSE_TIMEOUT$4=500;function printMessage(r){const e={...r,type:`${MessageTypeNames[r.type]} (${r.type})`};return r.type===MessageTypes.NEW_STREAM&&(e.data=toString$b(r.data instanceof Uint8Array?r.data:r.data.subarray())),(r.type===MessageTypes.MESSAGE_INITIATOR||r.type===MessageTypes.MESSAGE_RECEIVER)&&(e.data=toString$b(r.data instanceof Uint8Array?r.data:r.data.subarray(),"base16")),e}class MplexStreamMuxer{constructor(e){_(this,"protocol","/mplex/6.7.0");_(this,"sink");_(this,"source");_(this,"_streamId");_(this,"_streams");_(this,"_init");_(this,"_source");_(this,"closeController");_(this,"rateLimiter");_(this,"closeTimeout");e=e??{},this._streamId=0,this._streams={initiators:new Map,receivers:new Map},this._init=e,this.closeTimeout=e.closeTimeout??CLOSE_TIMEOUT$4,this.sink=this._createSink(),this._source=pushableV({objectMode:!0,onEnd:()=>{for(const t of this._streams.initiators.values())t.destroy();for(const t of this._streams.receivers.values())t.destroy()}}),this.source=pipe(this._source,t=>encode$8(t,this._init.minSendBytes)),this.closeController=new AbortController,this.rateLimiter=new rateLimiterFlexible.RateLimiterMemory({points:e.disconnectThreshold??DISCONNECT_THRESHOLD,duration:1})}get streams(){const e=[];for(const t of this._streams.initiators.values())e.push(t);for(const t of this._streams.receivers.values())e.push(t);return e}newStream(e){if(this.closeController.signal.aborted)throw new Error("Muxer already closed");const t=this._streamId++;e=e==null?t.toString():e.toString();const n=this._streams.initiators;return this._newStream({id:t,name:e,type:"initiator",registry:n})}async close(e){if(this.closeController.signal.aborted)return;const t=e?.signal??AbortSignal.timeout(this.closeTimeout);try{await Promise.all(this.streams.map(async n=>n.close({signal:t}))),this._source.end(),await this._source.onEmpty({signal:t}),this.closeController.abort()}catch(n){this.abort(n)}}abort(e){this.closeController.signal.aborted||(this.streams.forEach(t=>{t.abort(e)}),this.closeController.abort(e))}_newReceiverStream(e){const{id:t,name:n}=e,i=this._streams.receivers;return this._newStream({id:t,name:n,type:"receiver",registry:i})}_newStream(e){const{id:t,name:n,type:i,registry:o}=e;if(log$A("new %s stream %s",i,t),i==="initiator"&&this._streams.initiators.size===(this._init.maxOutboundStreams??MAX_STREAMS_OUTBOUND_STREAMS_PER_CONNECTION))throw new CodeError$e("Too many outbound streams open","ERR_TOO_MANY_OUTBOUND_STREAMS");if(o.has(t))throw new Error(`${i} stream ${t} already exists!`);const l=createStream$1({id:t,name:n,send:async u=>{log$A.enabled&&log$A.trace("%s stream %s send",i,t,printMessage(u)),this._source.push(u)},type:i,onEnd:()=>{log$A("%s stream with id %s and protocol %s ended",i,t,l.protocol),o.delete(t),this._init.onStreamEnd!=null&&this._init.onStreamEnd(l)},maxMsgSize:this._init.maxMsgSize});return o.set(t,l),l}_createSink(){return async t=>{try{t=abortableSource(t,this.closeController.signal,{returnOnAbort:!0});const n=new Decoder$3(this._init.maxMsgSize,this._init.maxUnprocessedMessageQueueSize);for await(const i of t)for(const o of n.write(i))await this._handleIncoming(o);this._source.end()}catch(n){log$A("error in sink",n),this._source.end(n)}}}async _handleIncoming(e){const{id:t,type:n}=e;if(log$A.enabled&&log$A.trace("incoming message",printMessage(e)),e.type===MessageTypes.NEW_STREAM){if(this._streams.receivers.size===(this._init.maxInboundStreams??MAX_STREAMS_INBOUND_STREAMS_PER_CONNECTION)){log$A("too many inbound streams open"),this._source.push({id:t,type:MessageTypes.RESET_RECEIVER});try{await this.rateLimiter.consume("new-stream",1)}catch{log$A("rate limit hit when opening too many new streams over the inbound stream limit - closing remote connection"),this.abort(new Error("Too many open streams"));return}return}const c=this._newReceiverStream({id:t,name:toString$b(e.data instanceof Uint8Array?e.data:e.data.subarray())});this._init.onIncomingStream!=null&&this._init.onIncomingStream(c);return}const o=((n&1)===1?this._streams.initiators:this._streams.receivers).get(t);if(o==null){log$A("missing stream %s for message type %s",t,MessageTypeNames[n]);try{await this.rateLimiter.consume("missing-stream",1)}catch{log$A("rate limit hit when receiving messages for streams that do not exist - closing remote connection"),this.abort(new Error("Too many messages for missing streams"));return}return}const a=this._init.maxStreamBufferSize??MAX_STREAM_BUFFER_SIZE;try{switch(n){case MessageTypes.MESSAGE_INITIATOR:case MessageTypes.MESSAGE_RECEIVER:if(o.sourceReadableLength()>a)throw this._source.push({id:e.id,type:n===MessageTypes.MESSAGE_INITIATOR?MessageTypes.RESET_RECEIVER:MessageTypes.RESET_INITIATOR}),new CodeError$e("Input buffer full - increase Mplex maxBufferSize to accommodate slow consumers","ERR_STREAM_INPUT_BUFFER_FULL");o.sourcePush(e.data);break;case MessageTypes.CLOSE_INITIATOR:case MessageTypes.CLOSE_RECEIVER:o.remoteCloseWrite();break;case MessageTypes.RESET_INITIATOR:case MessageTypes.RESET_RECEIVER:o.reset();break;default:log$A("unknown message type %s",n)}}catch(c){log$A.error("error while processing message",c),o.abort(c)}}}class Mplex{constructor(e={}){_(this,"protocol","/mplex/6.7.0");_(this,"_init");this._init=e}createStreamMuxer(e={}){return new MplexStreamMuxer({...e,...this._init})}}function mplex(r={}){return()=>new Mplex(r)}const inspect$4=Symbol.for("nodejs.util.inspect.custom"),baseDecoder$3=Object.values(bases$2).map(r=>r.decoder).reduce((r,e)=>r.or(e),bases$2.identity.decoder),LIBP2P_KEY_CODE$3=114,MARSHALLED_ED225519_PUBLIC_KEY_LENGTH$3=36,MARSHALLED_SECP256K1_PUBLIC_KEY_LENGTH$3=37;var Nr;let PeerIdImpl$3=class{constructor(e){_(this,"type");_(this,"multihash");_(this,"privateKey");_(this,"publicKey");_(this,"string");_(this,Nr,!0);this.type=e.type,this.multihash=e.multihash,this.privateKey=e.privateKey,Object.defineProperty(this,"string",{enumerable:!1,writable:!0})}get[Symbol.toStringTag](){return`PeerId(${this.toString()})`}toString(){return this.string==null&&(this.string=base58btc$4.encode(this.multihash.bytes).slice(1)),this.string}toCID(){return CID$3.createV1(LIBP2P_KEY_CODE$3,this.multihash)}toBytes(){return this.multihash.bytes}toJSON(){return this.toString()}equals(e){if(e instanceof Uint8Array)return equals$4(this.multihash.bytes,e);if(typeof e=="string")return peerIdFromString$3(e).equals(this);if(e?.multihash?.bytes!=null)return equals$4(this.multihash.bytes,e.multihash.bytes);throw new Error("not valid Id")}[(Nr=symbol$4,inspect$4)](){return`PeerId(${this.toString()})`}},RSAPeerIdImpl$3=class extends PeerIdImpl$3{constructor(t){super({...t,type:"RSA"});_(this,"type","RSA");_(this,"publicKey");this.publicKey=t.publicKey}},Ed25519PeerIdImpl$3=class extends PeerIdImpl$3{constructor(t){super({...t,type:"Ed25519"});_(this,"type","Ed25519");_(this,"publicKey");this.publicKey=t.multihash.digest}},Secp256k1PeerIdImpl$3=class extends PeerIdImpl$3{constructor(t){super({...t,type:"secp256k1"});_(this,"type","secp256k1");_(this,"publicKey");this.publicKey=t.multihash.digest}};function peerIdFromString$3(r,e){if(r.charAt(0)==="1"||r.charAt(0)==="Q"){const t=decode$n(base58btc$4.decode(`z${r}`));return r.startsWith("12D")?new Ed25519PeerIdImpl$3({multihash:t}):r.startsWith("16U")?new Secp256k1PeerIdImpl$3({multihash:t}):new RSAPeerIdImpl$3({multihash:t})}return peerIdFromBytes$3(baseDecoder$3.decode(r))}function peerIdFromBytes$3(r){try{const e=decode$n(r);if(e.code===identity$3.code){if(e.digest.length===MARSHALLED_ED225519_PUBLIC_KEY_LENGTH$3)return new Ed25519PeerIdImpl$3({multihash:e});if(e.digest.length===MARSHALLED_SECP256K1_PUBLIC_KEY_LENGTH$3)return new Secp256k1PeerIdImpl$3({multihash:e})}if(e.code===sha256$2.code)return new RSAPeerIdImpl$3({multihash:e})}catch{return peerIdFromCID$3(CID$3.decode(r))}throw new Error("Supplied PeerID CID is invalid")}function peerIdFromCID$3(r){if(r==null||r.multihash==null||r.version==null||r.version===1&&r.code!==LIBP2P_KEY_CODE$3)throw new Error("Supplied PeerID CID is invalid");const e=r.multihash;if(e.code===sha256$2.code)return new RSAPeerIdImpl$3({multihash:r.multihash});if(e.code===identity$3.code){if(e.digest.length===MARSHALLED_ED225519_PUBLIC_KEY_LENGTH$3)return new Ed25519PeerIdImpl$3({multihash:r.multihash});if(e.digest.length===MARSHALLED_SECP256K1_PUBLIC_KEY_LENGTH$3)return new Secp256k1PeerIdImpl$3({multihash:r.multihash})}throw new Error("Supplied PeerID CID is invalid")}async function peerIdFromKeys$3(r,e){return r.length===MARSHALLED_ED225519_PUBLIC_KEY_LENGTH$3?new Ed25519PeerIdImpl$3({multihash:create$c(identity$3.code,r),privateKey:e}):r.length===MARSHALLED_SECP256K1_PUBLIC_KEY_LENGTH$3?new Secp256k1PeerIdImpl$3({multihash:create$c(identity$3.code,r),privateKey:e}):new RSAPeerIdImpl$3({multihash:await sha256$2.digest(r),publicKey:r,privateKey:e})}var codes$5;(function(r){r.ERR_ALREADY_ABORTED="ERR_ALREADY_ABORTED",r.ERR_DATA_CHANNEL="ERR_DATA_CHANNEL",r.ERR_CONNECTION_CLOSED="ERR_CONNECTION_CLOSED",r.ERR_HASH_NOT_SUPPORTED="ERR_HASH_NOT_SUPPORTED",r.ERR_INVALID_MULTIADDR="ERR_INVALID_MULTIADDR",r.ERR_INVALID_FINGERPRINT="ERR_INVALID_FINGERPRINT",r.ERR_INVALID_PARAMETERS="ERR_INVALID_PARAMETERS",r.ERR_NOT_IMPLEMENTED="ERR_NOT_IMPLEMENTED",r.ERR_TOO_MANY_INBOUND_PROTOCOL_STREAMS="ERR_TOO_MANY_INBOUND_PROTOCOL_STREAMS",r.ERR_TOO_MANY_OUTBOUND_PROTOCOL_STREAMS="ERR_TOO_MANY_OUTBOUND_PROTOCOL_STREAMS"})(codes$5||(codes$5={}));class WebRTCTransportError extends CodeError$e{constructor(e,t){super(`WebRTC transport error: ${e}`,t??""),this.name="WebRTCTransportError"}}class DataChannelError extends WebRTCTransportError{constructor(e,t){super(`[stream: ${e}] data channel error: ${t}`,codes$5.ERR_DATA_CHANNEL),this.name="WebRTC/DataChannelError"}}function dataChannelError(r,e){return new DataChannelError(r,e)}class InappropriateMultiaddrError extends WebRTCTransportError{constructor(e){super(`There was a problem with the Multiaddr which was passed in: ${e}`,codes$5.ERR_INVALID_MULTIADDR),this.name="WebRTC/InappropriateMultiaddrError"}}function inappropriateMultiaddr(r){return new InappropriateMultiaddrError(r)}class InvalidArgumentError extends WebRTCTransportError{constructor(e){super(`There was a problem with a provided argument: ${e}`,codes$5.ERR_INVALID_PARAMETERS),this.name="WebRTC/InvalidArgumentError"}}function invalidArgument(r){return new InvalidArgumentError(r)}class InvalidFingerprintError extends WebRTCTransportError{constructor(e,t){super(`Invalid fingerprint "${e}" within ${t}`,codes$5.ERR_INVALID_FINGERPRINT),this.name="WebRTC/InvalidFingerprintError"}}function invalidFingerprint(r,e){return new InvalidFingerprintError(r,e)}class UnimplementedError extends WebRTCTransportError{constructor(e){super(`A method (${e}) was called though it has been intentionally left unimplemented.`,codes$5.ERR_NOT_IMPLEMENTED),this.name="WebRTC/UnimplementedError"}}function unimplemented(r){return new UnimplementedError(r)}class UnsupportedHashAlgorithmError extends WebRTCTransportError{constructor(e){super(`unsupported hash algorithm: ${e}`,codes$5.ERR_HASH_NOT_SUPPORTED),this.name="WebRTC/UnsupportedHashAlgorithmError"}}function unsupportedHashAlgorithm(r){return new UnsupportedHashAlgorithmError(r)}var __spreadArray=function(r,e,t){if(t||arguments.length===2)for(var n=0,i=e.length,o;n<i;n++)(o||!(n in e))&&(o||(o=Array.prototype.slice.call(e,0,n)),o[n]=e[n]);return r.concat(o||Array.prototype.slice.call(e))},BrowserInfo=function(){function r(e,t,n){this.name=e,this.version=t,this.os=n,this.type="browser"}return r}(),NodeInfo=function(){function r(e){this.version=e,this.type="node",this.name="node",this.os=process.platform}return r}(),SearchBotDeviceInfo=function(){function r(e,t,n,i){this.name=e,this.version=t,this.os=n,this.bot=i,this.type="bot-device"}return r}(),BotInfo=function(){function r(){this.type="bot",this.bot=!0,this.name="bot",this.version=null,this.os=null}return r}(),ReactNativeInfo=function(){function r(){this.type="react-native",this.name="react-native",this.version=null,this.os=null}return r}(),SEARCHBOX_UA_REGEX=/alexa|bot|crawl(er|ing)|facebookexternalhit|feedburner|google web preview|nagios|postrank|pingdom|slurp|spider|yahoo!|yandex/,SEARCHBOT_OS_REGEX=/(nuhk|curl|Googlebot|Yammybot|Openbot|Slurp|MSNBot|Ask\ Jeeves\/Teoma|ia_archiver)/,REQUIRED_VERSION_PARTS=3,userAgentRules=[["aol",/AOLShield\/([0-9\._]+)/],["edge",/Edge\/([0-9\._]+)/],["edge-ios",/EdgiOS\/([0-9\._]+)/],["yandexbrowser",/YaBrowser\/([0-9\._]+)/],["kakaotalk",/KAKAOTALK\s([0-9\.]+)/],["samsung",/SamsungBrowser\/([0-9\.]+)/],["silk",/\bSilk\/([0-9._-]+)\b/],["miui",/MiuiBrowser\/([0-9\.]+)$/],["beaker",/BeakerBrowser\/([0-9\.]+)/],["edge-chromium",/EdgA?\/([0-9\.]+)/],["chromium-webview",/(?!Chrom.*OPR)wv\).*Chrom(?:e|ium)\/([0-9\.]+)(:?\s|$)/],["chrome",/(?!Chrom.*OPR)Chrom(?:e|ium)\/([0-9\.]+)(:?\s|$)/],["phantomjs",/PhantomJS\/([0-9\.]+)(:?\s|$)/],["crios",/CriOS\/([0-9\.]+)(:?\s|$)/],["firefox",/Firefox\/([0-9\.]+)(?:\s|$)/],["fxios",/FxiOS\/([0-9\.]+)/],["opera-mini",/Opera Mini.*Version\/([0-9\.]+)/],["opera",/Opera\/([0-9\.]+)(?:\s|$)/],["opera",/OPR\/([0-9\.]+)(:?\s|$)/],["pie",/^Microsoft Pocket Internet Explorer\/(\d+\.\d+)$/],["pie",/^Mozilla\/\d\.\d+\s\(compatible;\s(?:MSP?IE|MSInternet Explorer) (\d+\.\d+);.*Windows CE.*\)$/],["netfront",/^Mozilla\/\d\.\d+.*NetFront\/(\d.\d)/],["ie",/Trident\/7\.0.*rv\:([0-9\.]+).*\).*Gecko$/],["ie",/MSIE\s([0-9\.]+);.*Trident\/[4-7].0/],["ie",/MSIE\s(7\.0)/],["bb10",/BB10;\sTouch.*Version\/([0-9\.]+)/],["android",/Android\s([0-9\.]+)/],["ios",/Version\/([0-9\._]+).*Mobile.*Safari.*/],["safari",/Version\/([0-9\._]+).*Safari/],["facebook",/FB[AS]V\/([0-9\.]+)/],["instagram",/Instagram\s([0-9\.]+)/],["ios-webview",/AppleWebKit\/([0-9\.]+).*Mobile/],["ios-webview",/AppleWebKit\/([0-9\.]+).*Gecko\)$/],["curl",/^curl\/([0-9\.]+)$/],["searchbot",SEARCHBOX_UA_REGEX]],operatingSystemRules=[["iOS",/iP(hone|od|ad)/],["Android OS",/Android/],["BlackBerry OS",/BlackBerry|BB10/],["Windows Mobile",/IEMobile/],["Amazon OS",/Kindle/],["Windows 3.11",/Win16/],["Windows 95",/(Windows 95)|(Win95)|(Windows_95)/],["Windows 98",/(Windows 98)|(Win98)/],["Windows 2000",/(Windows NT 5.0)|(Windows 2000)/],["Windows XP",/(Windows NT 5.1)|(Windows XP)/],["Windows Server 2003",/(Windows NT 5.2)/],["Windows Vista",/(Windows NT 6.0)/],["Windows 7",/(Windows NT 6.1)/],["Windows 8",/(Windows NT 6.2)/],["Windows 8.1",/(Windows NT 6.3)/],["Windows 10",/(Windows NT 10.0)/],["Windows ME",/Windows ME/],["Windows CE",/Windows CE|WinCE|Microsoft Pocket Internet Explorer/],["Open BSD",/OpenBSD/],["Sun OS",/SunOS/],["Chrome OS",/CrOS/],["Linux",/(Linux)|(X11)/],["Mac OS",/(Mac_PowerPC)|(Macintosh)/],["QNX",/QNX/],["BeOS",/BeOS/],["OS/2",/OS\/2/]];function detect(r){return r?parseUserAgent(r):typeof document>"u"&&typeof navigator<"u"&&navigator.product==="ReactNative"?new ReactNativeInfo:typeof navigator<"u"?parseUserAgent(navigator.userAgent):getNodeVersion()}function matchUserAgent(r){return r!==""&&userAgentRules.reduce(function(e,t){var n=t[0],i=t[1];if(e)return e;var o=i.exec(r);return!!o&&[n,o]},!1)}function parseUserAgent(r){var e=matchUserAgent(r);if(!e)return null;var t=e[0],n=e[1];if(t==="searchbot")return new BotInfo;var i=n[1]&&n[1].split(".").join("_").split("_").slice(0,3);i?i.length<REQUIRED_VERSION_PARTS&&(i=__spreadArray(__spreadArray([],i,!0),createVersionParts(REQUIRED_VERSION_PARTS-i.length),!0)):i=[];var o=i.join("."),a=detectOS(r),c=SEARCHBOT_OS_REGEX.exec(r);return c&&c[1]?new SearchBotDeviceInfo(t,o,a,c[1]):new BrowserInfo(t,o,a)}function detectOS(r){for(var e=0,t=operatingSystemRules.length;e<t;e++){var n=operatingSystemRules[e],i=n[0],o=n[1],a=o.exec(r);if(a)return i}return null}function getNodeVersion(){var r=typeof process<"u"&&process.version;return r?new NodeInfo(process.version.slice(1)):null}function createVersionParts(r){for(var e=[],t=0;t<r;t++)e.push("0");return e}let TimeoutError$1=class extends Error{constructor(e){super(e),this.name="TimeoutError"}},AbortError$4=class extends Error{constructor(e){super(),this.name="AbortError",this.message=e}};const getDOMException$1=r=>globalThis.DOMException===void 0?new AbortError$4(r):new DOMException(r),getAbortedReason$1=r=>{const e=r.reason===void 0?getDOMException$1("This operation was aborted."):r.reason;return e instanceof Error?e:getDOMException$1(e)};function pTimeout$1(r,e){const{milliseconds:t,fallback:n,message:i,customTimers:o={setTimeout,clearTimeout}}=e;let a;const l=new Promise((u,f)=>{if(typeof t!="number"||Math.sign(t)!==1)throw new TypeError(`Expected \`milliseconds\` to be a positive number, got \`${t}\``);if(e.signal){const{signal:$}=e;$.aborted&&f(getAbortedReason$1($)),$.addEventListener("abort",()=>{f(getAbortedReason$1($))})}if(t===Number.POSITIVE_INFINITY){r.then(u,f);return}const g=new TimeoutError$1;a=o.setTimeout.call(void 0,()=>{if(n){try{u(n())}catch($){f($)}return}typeof r.cancel=="function"&&r.cancel(),i===!1?u():i instanceof Error?f(i):(g.message=i??`Promise timed out after ${t} milliseconds`,f(g))},t),(async()=>{try{u(await r)}catch($){f($)}})()}).finally(()=>{l.clear()});return l.clear=()=>{o.clearTimeout.call(void 0,a),a=void 0},l}const log$z=logger$5("libp2p:webrtc:utils"),browser=detect(),isFirefox=browser!=null&&browser.name==="firefox",nopSource=async function*r(){},nopSink=async r=>{},DATA_CHANNEL_DRAIN_TIMEOUT=30*1e3;function drainAndClose(r,e,t=DATA_CHANNEL_DRAIN_TIMEOUT){r.readyState==="open"&&Promise.resolve().then(async()=>{if(r.bufferedAmount>0){log$z("%s drain channel with %d buffered bytes",e,r.bufferedAmount);const n=pDefer();let i=!1;r.bufferedAmountLowThreshold=0;const o=()=>{i||(log$z("%s drain channel closed before drain",e),n.resolve())};r.addEventListener("close",o,{once:!0}),r.addEventListener("bufferedamountlow",()=>{i=!0,r.removeEventListener("close",o),n.resolve()}),await pTimeout$1(n.promise,{milliseconds:t})}}).then(async()=>{r.readyState==="open"&&r.close()}).catch(n=>{log$z.error("error closing outbound stream",n)})}const log$y=logger$5("libp2p:webrtc:maconn");class WebRTCMultiaddrConnection{constructor(e){_(this,"peerConnection");_(this,"remoteAddr");_(this,"timeline");_(this,"metrics");_(this,"source",nopSource());_(this,"sink",nopSink);this.remoteAddr=e.remoteAddr,this.timeline=e.timeline,this.peerConnection=e.peerConnection;const t=this.peerConnection.connectionState;this.peerConnection.onconnectionstatechange=()=>{log$y.trace("peer connection state change",this.peerConnection.connectionState,"initial state",t),(this.peerConnection.connectionState==="disconnected"||this.peerConnection.connectionState==="failed"||this.peerConnection.connectionState==="closed")&&(this.timeline.close=Date.now())}}async close(e){log$y.trace("closing connection"),this.peerConnection.close(),this.timeline.close=Date.now(),this.metrics?.increment({close:!0})}abort(e){log$y.error("closing connection due to error",e),this.peerConnection.close(),this.timeline.close=Date.now(),this.metrics?.increment({abort:!0})}}var Message$2;(function(r){(function(n){n.FIN="FIN",n.STOP_SENDING="STOP_SENDING",n.RESET="RESET",n.FIN_ACK="FIN_ACK"})(r.Flag||(r.Flag={}));let e;(function(n){n[n.FIN=0]="FIN",n[n.STOP_SENDING=1]="STOP_SENDING",n[n.RESET=2]="RESET",n[n.FIN_ACK=3]="FIN_ACK"})(e||(e={})),function(n){n.codec=()=>enumeration(e)}(r.Flag||(r.Flag={}));let t;r.codec=()=>(t==null&&(t=message((n,i,o={})=>{o.lengthDelimited!==!1&&i.fork(),n.flag!=null&&(i.uint32(8),r.Flag.codec().encode(n.flag,i)),n.message!=null&&(i.uint32(18),i.bytes(n.message)),o.lengthDelimited!==!1&&i.ldelim()},(n,i)=>{const o={},a=i==null?n.len:n.pos+i;for(;n.pos<a;){const c=n.uint32();switch(c>>>3){case 1:o.flag=r.Flag.codec().decode(n);break;case 2:o.message=n.bytes();break;default:n.skipType(c&7);break}}return o})),t),r.encode=n=>encodeMessage(n,r.codec()),r.decode=n=>decodeMessage$1(n,r.codec())})(Message$2||(Message$2={}));const MAX_BUFFERED_AMOUNT=16*1024*1024,BUFFERED_AMOUNT_LOW_TIMEOUT=30*1e3,PROTOBUF_OVERHEAD=5,VARINT_LENGTH=2,MAX_MESSAGE_SIZE=16*1024,FIN_ACK_TIMEOUT=5e3;class WebRTCStream extends AbstractStream$1{constructor(t){const n=t.onEnd;t.onEnd=o=>{this.log.trace("readable and writeable ends closed",this.status),Promise.resolve(async()=>{if(!(this.timeline.abort!=null||this.timeline.reset!==null))try{await pTimeout$1(this.receiveFinAck.promise,{milliseconds:this.finAckTimeout})}catch(a){this.log.error("error receiving FIN_ACK",a)}}).then(()=>{this.incomingData.end(),n?.(o)}).catch(a=>{this.log.error("error ending stream",a)})};super(t);_(this,"channel");_(this,"incomingData");_(this,"messageQueue");_(this,"maxBufferedAmount");_(this,"bufferedAmountLowEventTimeout");_(this,"maxMessageSize");_(this,"receiveFinAck");_(this,"finAckTimeout");switch(this.channel=t.channel,this.channel.binaryType="arraybuffer",this.incomingData=pushable(),this.messageQueue=new Uint8ArrayList,this.bufferedAmountLowEventTimeout=t.bufferedAmountLowEventTimeout??BUFFERED_AMOUNT_LOW_TIMEOUT,this.maxBufferedAmount=t.maxBufferedAmount??MAX_BUFFERED_AMOUNT,this.maxMessageSize=(t.maxMessageSize??MAX_MESSAGE_SIZE)-PROTOBUF_OVERHEAD-VARINT_LENGTH,this.receiveFinAck=pDefer(),this.finAckTimeout=t.closeTimeout??FIN_ACK_TIMEOUT,this.channel.readyState){case"open":break;case"closed":case"closing":(this.timeline.close===void 0||this.timeline.close===0)&&(this.timeline.close=Date.now());break;case"connecting":break;default:throw this.log.error("unknown datachannel state %s",this.channel.readyState),new CodeError$e("Unknown datachannel state","ERR_INVALID_STATE")}this.channel.onopen=o=>{this.timeline.open=new Date().getTime(),this.messageQueue!=null&&this.messageQueue.byteLength>0&&(this.log.trace("dataChannel opened, sending queued messages",this.messageQueue.byteLength,this.channel.readyState),this._sendMessage(this.messageQueue).catch(a=>{this.log.error("error sending queued messages",a),this.abort(a)})),this.messageQueue=void 0},this.channel.onclose=o=>{this.receiveFinAck.resolve(),this.close().catch(a=>{this.log.error("error closing stream after channel closed",a)})},this.channel.onerror=o=>{const a=o.error;this.abort(a)},this.channel.onmessage=async o=>{const{data:a}=o;a===null||a.byteLength===0||this.incomingData.push(new Uint8Array(a,0,a.byteLength))};const i=this;Promise.resolve().then(async()=>{for await(const o of decode$h(this.incomingData)){const a=i.processIncomingProtobuf(o);a!=null&&i.sourcePush(new Uint8ArrayList(a))}}).catch(o=>{this.log.error("error processing incoming data channel messages",o)})}sendNewStream(){}async _sendMessage(t,n=!0){if(n&&this.channel.bufferedAmount>this.maxBufferedAmount)try{await pEvent(this.channel,"bufferedamountlow",{timeout:this.bufferedAmountLowEventTimeout})}catch(i){throw i instanceof TimeoutError$2?new CodeError$e(`Timed out waiting for DataChannel buffer to clear after ${this.bufferedAmountLowEventTimeout}ms`,"ERR_BUFFER_CLEAR_TIMEOUT"):i}if(this.channel.readyState==="closed"||this.channel.readyState==="closing")throw new CodeError$e(`Invalid datachannel state - ${this.channel.readyState}`,"ERR_INVALID_STATE");if(this.channel.readyState==="open")for(const i of t)this.channel.send(i);else if(this.channel.readyState==="connecting")this.messageQueue==null&&(this.messageQueue=new Uint8ArrayList),this.messageQueue.append(t);else throw this.log.error("unknown datachannel state %s",this.channel.readyState),new CodeError$e("Unknown datachannel state","ERR_INVALID_STATE")}async sendData(t){for(t=t.sublist();t.byteLength>0;){const n=Math.min(t.byteLength,this.maxMessageSize),i=t.subarray(0,n),o=Message$2.encode({message:i}),a=encode$d.single(o);await this._sendMessage(a),t.consume(n)}}async sendReset(){await this._sendFlag(Message$2.Flag.RESET)}async sendCloseWrite(t){if(await this._sendFlag(Message$2.Flag.FIN)){this.log.trace("awaiting FIN_ACK");try{await raceSignal(this.receiveFinAck.promise,t?.signal,{errorMessage:"sending close-write was aborted before FIN_ACK was received",errorCode:"ERR_FIN_ACK_NOT_RECEIVED"})}catch(i){this.log.error("failed to await FIN_ACK",i)}}else this.log.trace("sending FIN failed, not awaiting FIN_ACK");this.receiveFinAck.resolve()}async sendCloseRead(){await this._sendFlag(Message$2.Flag.STOP_SENDING)}processIncomingProtobuf(t){const n=Message$2.decode(t);if(n.flag!==void 0&&(this.log.trace('incoming flag %s, write status "%s", read status "%s"',n.flag,this.writeStatus,this.readStatus),n.flag===Message$2.Flag.FIN&&(this.remoteCloseWrite(),this.log.trace("sending FIN_ACK"),this._sendFlag(Message$2.Flag.FIN_ACK).catch(i=>{this.log.error("error sending FIN_ACK immediately",i)})),n.flag===Message$2.Flag.RESET&&this.reset(),n.flag===Message$2.Flag.STOP_SENDING&&this.remoteCloseRead(),n.flag===Message$2.Flag.FIN_ACK&&(this.log.trace("received FIN_ACK"),this.receiveFinAck.resolve())),this.readStatus==="ready")return n.message}async _sendFlag(t){if(this.channel.readyState!=="open")return this.log.trace("not sending flag %s because channel is not open",t.toString()),!1;this.log.trace("sending flag %s",t.toString());const n=Message$2.encode({flag:t}),i=encode$d.single(n);try{return await this._sendMessage(i,!1),!0}catch(o){this.log.error("could not send flag %s",t.toString(),o)}return!1}}function createStream(r){const{channel:e,direction:t}=r;return new WebRTCStream({id:t==="inbound"?`i${e.id}`:`r${e.id}`,log:logger$5(`libp2p:webrtc:stream:${t}:${e.id}`),...r})}const log$x=logger$5("libp2p:webrtc:muxer"),PROTOCOL="/webrtc";class DataChannelMuxerFactory{constructor(e){_(this,"protocol");_(this,"peerConnection");_(this,"bufferedStreams",[]);_(this,"metrics");_(this,"dataChannelOptions");this.peerConnection=e.peerConnection,this.metrics=e.metrics,this.protocol=e.protocol??PROTOCOL,this.dataChannelOptions=e.dataChannelOptions??{},this.peerConnection.ondatachannel=({channel:t})=>{const n={},i=createStream({channel:t,direction:"inbound",onEnd:o=>{n.onEnd(o)},...this.dataChannelOptions});n.stream=i,n.channel=t,n.onEnd=()=>{this.bufferedStreams=this.bufferedStreams.filter(o=>o.stream.id!==i.id)},this.bufferedStreams.push(n)}}createStreamMuxer(e){return new DataChannelMuxer({...e,peerConnection:this.peerConnection,dataChannelOptions:this.dataChannelOptions,metrics:this.metrics,streams:this.bufferedStreams,protocol:this.protocol})}}var We,yt;class DataChannelMuxer{constructor(e){ne(this,We);_(this,"init");_(this,"streams");_(this,"protocol");_(this,"peerConnection");_(this,"dataChannelOptions");_(this,"metrics");_(this,"source",nopSource());_(this,"sink",nopSink);this.init=e,this.streams=e.streams.map(t=>t.stream),this.peerConnection=e.peerConnection,this.protocol=e.protocol??PROTOCOL,this.metrics=e.metrics,this.dataChannelOptions=e.dataChannelOptions??{},this.peerConnection.ondatachannel=({channel:t})=>{const n=createStream({channel:t,direction:"inbound",onEnd:()=>{se(this,We,yt).call(this,n,t)},...this.dataChannelOptions});this.streams.push(n),this.metrics?.increment({incoming_stream:!0}),e?.onIncomingStream?.(n)},this.init.streams.length>0&&queueMicrotask(()=>{this.init.streams.forEach(t=>{t.onEnd=()=>{se(this,We,yt).call(this,t.stream,t.channel)},this.metrics?.increment({incoming_stream:!0}),this.init?.onIncomingStream?.(t.stream)})})}async close(e){try{await Promise.all(this.streams.map(async t=>t.close(e)))}catch(t){this.abort(t)}}abort(e){for(const t of this.streams)t.abort(e)}newStream(){const e=this.peerConnection.createDataChannel(""),t=createStream({channel:e,direction:"outbound",onEnd:()=>{se(this,We,yt).call(this,t,e)},...this.dataChannelOptions});return this.streams.push(t),this.metrics?.increment({outgoing_stream:!0}),t}}We=new WeakSet,yt=function(e,t){log$x.trace("stream %s %s %s onEnd",e.direction,e.id,e.protocol),drainAndClose(t,`${e.direction} ${e.id} ${e.protocol}`,this.dataChannelOptions.drainTimeout),this.streams=this.streams.filter(n=>n.id!==e.id),this.metrics?.increment({stream_end:!0}),this.init?.onStreamEnd?.(e)};const RTCPeerConnection=globalThis.RTCPeerConnection,RTCSessionDescription=globalThis.RTCSessionDescription,RTCIceCandidate=globalThis.RTCIceCandidate;let CodeError$a=class extends Error{constructor(t,n){super(t);_(this,"code");this.code=n}};const defaultLengthDecoder=r=>decode$i(r);defaultLengthDecoder.bytes=0;function lpStream(r,e){const t=byteStream(r);return{read:async i=>{let o=-1;const a=new Uint8ArrayList,c=e?.lengthDecoder??defaultLengthDecoder;for(;;){a.append(await t.read(1,i));try{o=c(a)}catch(l){if(l instanceof RangeError)continue;throw l}if(o>-1)break;if(e?.maxLengthLength!=null&&a.byteLength>e.maxLengthLength)throw new CodeError$a("message length length too long","ERR_MSG_LENGTH_TOO_LONG")}if(e?.maxDataLength!=null&&o>e.maxDataLength)throw new CodeError$a("message length too long","ERR_MSG_DATA_TOO_LONG");return t.read(o,i)},write:async(i,o)=>{await t.write(encode$d.single(i,e),o)},unwrap:()=>t.unwrap()}}function pbStream(r,e){const t=lpStream(r,e),n={read:async(i,o)=>{const a=await t.read(o);return i.decode(a)},write:async(i,o,a)=>{await t.write(o.encode(i),a)},pb:i=>({read:async o=>n.read(i,o),write:async(o,a)=>n.write(o,i,a),unwrap:()=>n}),unwrap:()=>t.unwrap()};return n}var Message$1;(function(r){(function(n){n.SDP_OFFER="SDP_OFFER",n.SDP_ANSWER="SDP_ANSWER",n.ICE_CANDIDATE="ICE_CANDIDATE"})(r.Type||(r.Type={}));let e;(function(n){n[n.SDP_OFFER=0]="SDP_OFFER",n[n.SDP_ANSWER=1]="SDP_ANSWER",n[n.ICE_CANDIDATE=2]="ICE_CANDIDATE"})(e||(e={})),function(n){n.codec=()=>enumeration(e)}(r.Type||(r.Type={}));let t;r.codec=()=>(t==null&&(t=message((n,i,o={})=>{o.lengthDelimited!==!1&&i.fork(),n.type!=null&&(i.uint32(8),r.Type.codec().encode(n.type,i)),n.data!=null&&(i.uint32(18),i.string(n.data)),o.lengthDelimited!==!1&&i.ldelim()},(n,i)=>{const o={},a=i==null?n.len:n.pos+i;for(;n.pos<a;){const c=n.uint32();switch(c>>>3){case 1:o.type=r.Type.codec().decode(n);break;case 2:o.data=n.string();break;default:n.skipType(c&7);break}}return o})),t),r.encode=n=>encodeMessage(n,r.codec()),r.decode=n=>decodeMessage$1(n,r.codec())})(Message$1||(Message$1={}));const log$w=logger$5("libp2p:webrtc:peer:util"),readCandidatesUntilConnected=async(r,e,t,n)=>{const i=new AbortController;r.promise.then(()=>{i.abort()},()=>{i.abort()});const o=anySignal([i.signal,n.signal]),a=abortableSource(t.unwrap().unwrap().source,o,{returnOnAbort:!0});try{for await(const c of decode$h(a)){const l=Message$1.decode(c);if(l.type!==Message$1.Type.ICE_CANDIDATE)throw new CodeError$e("ICE candidate message expected","ERR_NOT_ICE_CANDIDATE");let u=JSON.parse(l.data??"null");u===""&&(log$w.trace("end-of-candidates for this generation received"),u={candidate:"",sdpMid:"0",sdpMLineIndex:0}),u===null&&(log$w.trace("end-of-candidates received"),u={candidate:null,sdpMid:"0",sdpMLineIndex:0});const f=new RTCIceCandidate(u);log$w.trace("%s received new ICE candidate",n.direction,f);try{await e.addIceCandidate(f)}catch(g){log$w.error("%s bad candidate received",n.direction,g)}}}catch(c){log$w.error("%s error parsing ICE candidate",n.direction,c)}finally{o.clear()}if(n.signal?.aborted===!0)throw new AbortError$8("Aborted while reading ICE candidates","ERR_ICE_CANDIDATES_READ_ABORTED");await raceSignal(r.promise,n.signal,{errorMessage:"Aborted before connected",errorCode:"ERR_ABORTED_BEFORE_CONNECTED"})};function resolveOnConnected(r,e){r[isFirefox?"oniceconnectionstatechange":"onconnectionstatechange"]=t=>{switch(log$w.trace("receiver peerConnectionState state change: %s",r.connectionState),isFirefox?r.iceConnectionState:r.connectionState){case"connected":e.resolve();break;case"failed":case"disconnected":case"closed":e.reject(new CodeError$e("RTCPeerConnection was closed","ERR_CONNECTION_CLOSED_BEFORE_CONNECTED"));break}}}const log$v=logger$5("libp2p:webrtc:initiate-connection");async function initiateConnection({peerConnection:r,signal:e,metrics:t,multiaddr:n,connectionManager:i,transportManager:o}){const{baseAddr:a}=splitAddr(n);t?.dialerEvents.increment({open:!0}),log$v.trace("dialing base address: %a",a);const c=a.getPeerId();if(c==null)throw new CodeError$e("Relay peer was missing","ERR_INVALID_ADDRESS");const l=i.getConnections(peerIdFromString$3(c));let u,f=!1;l.length===0?(u=await o.dial(a,{signal:e}),f=!0):u=l[0];try{const g=await u.newStream(SIGNALING_PROTO_ID,{signal:e,runOnTransientConnection:!0}),$=pbStream(g).pb(Message$1),S=pDefer(),E=()=>{S.reject(new CodeError$e("SDP handshake aborted","ERR_SDP_HANDSHAKE_ABORTED"))};try{resolveOnConnected(r,S),e?.addEventListener("abort",E);const v=r.createDataChannel("init");r.onicecandidate=({candidate:P})=>{const x=JSON.stringify(P?.toJSON()??null);log$v.trace("initiator sending ICE candidate %s",x),$.write({type:Message$1.Type.ICE_CANDIDATE,data:x},{signal:e}).catch(D=>{log$v.error("error sending ICE candidate",D)})},r.onicecandidateerror=P=>{log$v("initiator ICE candidate error",P)};const T=await r.createOffer();log$v.trace("initiator send SDP offer %s",T.sdp),await $.write({type:Message$1.Type.SDP_OFFER,data:T.sdp},{signal:e}),await r.setLocalDescription(T).catch(P=>{throw log$v.error("could not execute setLocalDescription",P),new CodeError$e("Failed to set localDescription","ERR_SDP_HANDSHAKE_FAILED")});const I=await $.read({signal:e});if(I.type!==Message$1.Type.SDP_ANSWER)throw new CodeError$e("remote should send an SDP answer","ERR_SDP_HANDSHAKE_FAILED");log$v.trace("initiator receive SDP answer %s",I.data);const A=new RTCSessionDescription({type:"answer",sdp:I.data});return await r.setRemoteDescription(A).catch(P=>{throw log$v.error("could not execute setRemoteDescription",P),new CodeError$e("Failed to set remoteDescription","ERR_SDP_HANDSHAKE_FAILED")}),log$v.trace("initiator read candidates until connected"),await readCandidatesUntilConnected(S,r,$,{direction:"initiator",signal:e}),log$v.trace("initiator connected, closing init channel"),v.close(),log$v.trace("initiator closing signalling stream"),await $.unwrap().unwrap().close({signal:e}),log$v.trace("initiator connected to remote address %s",n),{remoteAddress:n}}catch(v){throw r.close(),g.abort(v),v}finally{e?.removeEventListener("abort",E),r.onicecandidate=null,r.onicecandidateerror=null}}finally{if(f)try{await u.close({signal:e})}catch(g){u.abort(g)}}}class WebRTCPeerListener extends TypedEventEmitter$1{constructor(t,n){super();_(this,"peerId");_(this,"transportManager");_(this,"shutdownController");this.peerId=t.peerId,this.transportManager=t.transportManager,this.shutdownController=n.shutdownController}async listen(){this.safeDispatchEvent("listening",{})}getAddrs(){return this.transportManager.getListeners().filter(t=>t!==this).map(t=>t.getAddrs().filter(n=>Circuit.matches(n)).map(n=>n.encapsulate(`/webrtc/p2p/${this.peerId}`))).flat()}async close(){this.shutdownController.abort(),this.safeDispatchEvent("close",{})}}const log$u=logger$5("libp2p:webrtc:signaling-stream-handler");async function handleIncomingStream({peerConnection:r,stream:e,signal:t,connection:n}){log$u.trace("new inbound signaling stream");const i=pbStream(e).pb(Message$1);try{const a=pDefer(),c=pDefer();t.onabort=()=>{a.reject(new CodeError$e("Timed out while trying to connect","ERR_TIMEOUT"))},r.onicecandidate=({candidate:g})=>{c.promise.then(async()=>{const $=JSON.stringify(g?.toJSON()??null);log$u.trace("recipient sending ICE candidate %s",$),await i.write({type:Message$1.Type.ICE_CANDIDATE,data:$},{signal:t})},$=>{log$u.error("cannot set candidate since sending answer failed",$),a.reject($)})},resolveOnConnected(r,a);const l=await i.read({signal:t});if(l.type!==Message$1.Type.SDP_OFFER)throw new CodeError$e(`expected message type SDP_OFFER, received: ${l.type??"undefined"} `,"ERR_SDP_HANDSHAKE_FAILED");log$u.trace("recipient receive SDP offer %s",l.data);const u=new RTCSessionDescription({type:"offer",sdp:l.data});await r.setRemoteDescription(u).catch(g=>{throw log$u.error("could not execute setRemoteDescription",g),new CodeError$e("Failed to set remoteDescription","ERR_SDP_HANDSHAKE_FAILED")});const f=await r.createAnswer().catch(g=>{throw log$u.error("could not execute createAnswer",g),c.reject(g),new CodeError$e("Failed to create answer","ERR_SDP_HANDSHAKE_FAILED")});log$u.trace("recipient send SDP answer %s",f.sdp),await i.write({type:Message$1.Type.SDP_ANSWER,data:f.sdp},{signal:t}),await r.setLocalDescription(f).catch(g=>{throw log$u.error("could not execute setLocalDescription",g),c.reject(g),new CodeError$e("Failed to set localDescription","ERR_SDP_HANDSHAKE_FAILED")}),c.resolve(),log$u.trace("recipient read candidates until connected"),await readCandidatesUntilConnected(a,r,i,{direction:"recipient",signal:t}),log$u.trace("recipient connected, closing signaling stream"),await i.unwrap().unwrap().close({signal:t})}catch(a){if(r.connectionState!=="connected")throw log$u.error("error while handling signaling stream from peer %a",n.remoteAddr,a),r.close(),a;log$u("error while handling signaling stream from peer %a, ignoring as the RTCPeerConnection is already connected",n.remoteAddr,a)}const o=multiaddr$1(`/webrtc/p2p/${n.remoteAddr.getPeerId()}`);return log$u.trace("recipient connected to remote address %s",o),{remoteAddress:o}}const log$t=logger$5("libp2p:webrtc:peer"),WEBRTC_TRANSPORT="/webrtc",CIRCUIT_RELAY_TRANSPORT="/p2p-circuit",SIGNALING_PROTO_ID="/webrtc-signaling/0.0.1",INBOUND_CONNECTION_TIMEOUT=30*1e3;var Lr,Br;class WebRTCTransport{constructor(e,t={}){_(this,"components");_(this,"init");_(this,"_started",!1);_(this,"metrics");_(this,"shutdownController");_(this,Lr,"@libp2p/webrtc");_(this,Br,!0);this.components=e,this.init=t,this.shutdownController=new AbortController,e.metrics!=null&&(this.metrics={dialerEvents:e.metrics.registerCounterGroup("libp2p_webrtc_dialer_events_total",{label:"event",help:"Total count of WebRTC dialer events by type"}),listenerEvents:e.metrics.registerCounterGroup("libp2p_webrtc_listener_events_total",{label:"event",help:"Total count of WebRTC listener events by type"})})}isStarted(){return this._started}async start(){await this.components.registrar.handle(SIGNALING_PROTO_ID,e=>{this._onProtocol(e).catch(t=>{log$t.error("failed to handle incoming connect from %p",e.connection.remotePeer,t)})},{runOnTransientConnection:!0}),this._started=!0}async stop(){await this.components.registrar.unhandle(SIGNALING_PROTO_ID),this._started=!1}createListener(e){return new WebRTCPeerListener(this.components,{shutdownController:this.shutdownController})}filter(e){return e.filter(WebRTC.exactMatch)}async dial(e,t){log$t.trace("dialing address: %a",e);const n=new RTCPeerConnection(this.init.rtcConfiguration),i=new DataChannelMuxerFactory({peerConnection:n,dataChannelOptions:this.init.dataChannel}),{remoteAddress:o}=await initiateConnection({peerConnection:n,multiaddr:e,dataChannelOptions:this.init.dataChannel,signal:t.signal,connectionManager:this.components.connectionManager,transportManager:this.components.transportManager}),a=new WebRTCMultiaddrConnection({peerConnection:n,timeline:{open:Date.now()},remoteAddr:o,metrics:this.metrics?.dialerEvents}),c=await t.upgrader.upgradeOutbound(a,{skipProtection:!0,skipEncryption:!0,muxerFactory:i});return this._closeOnShutdown(n,a),c}async _onProtocol({connection:e,stream:t}){const n=AbortSignal.timeout(this.init.inboundConnectionTimeout??INBOUND_CONNECTION_TIMEOUT),i=new RTCPeerConnection(this.init.rtcConfiguration),o=new DataChannelMuxerFactory({peerConnection:i,dataChannelOptions:this.init.dataChannel});try{const{remoteAddress:a}=await handleIncomingStream({peerConnection:i,connection:e,stream:t,signal:n}),c=new WebRTCMultiaddrConnection({peerConnection:i,timeline:{open:new Date().getTime()},remoteAddr:a,metrics:this.metrics?.listenerEvents});this._closeOnShutdown(i,c),await this.components.upgrader.upgradeInbound(c,{skipEncryption:!0,skipProtection:!0,muxerFactory:o}),await t.close({signal:n})}catch(a){throw t.abort(a),a}}_closeOnShutdown(e,t){const n=()=>{t.close().catch(i=>{log$t.error("could not close WebRTCMultiaddrConnection",i)})};this.shutdownController.signal.addEventListener("abort",n),e.addEventListener("close",()=>{this.shutdownController.signal.removeEventListener("abort",n)})}}Lr=Symbol.toStringTag,Br=symbol$2;function splitAddr(r){const e=r.toString().split(WEBRTC_TRANSPORT+"/");if(e.length!==2)throw new CodeError$e("webrtc protocol was not present in multiaddr",codes$5.ERR_INVALID_MULTIADDR);if(!e[0].includes(CIRCUIT_RELAY_TRANSPORT))throw new CodeError$e("p2p-circuit protocol was not present in multiaddr",codes$5.ERR_INVALID_MULTIADDR);let t=multiaddr$1(e[0]);const i=multiaddr$1("/"+e[1]).getPeerId();if(i==null)throw new CodeError$e("destination peer id was missing",codes$5.ERR_INVALID_MULTIADDR);const o=t.protos().pop();if(o===void 0)throw new CodeError$e("invalid multiaddr",codes$5.ERR_INVALID_MULTIADDR);return o.name!=="p2p"&&(t=t.encapsulate(`/p2p/${i}`)),{baseAddr:t,peerId:peerIdFromString$3(i)}}const NOISE_MSG_MAX_LENGTH_BYTES$2=65535,NOISE_MSG_MAX_LENGTH_BYTES_WITHOUT_TAG$2=NOISE_MSG_MAX_LENGTH_BYTES$2-16,DUMP_SESSION_KEYS$2=!!globalThis.process?.env?.DUMP_SESSION_KEYS,pureJsCrypto$2={hashSHA256(r){return sha256(r)},getHKDF(r,e){const t=extract(sha256,e,r),i=expand(sha256,t,void 0,96),o=i.subarray(0,32),a=i.subarray(32,64),c=i.subarray(64,96);return[o,a,c]},generateX25519KeyPair(){const r=x25519.utils.randomPrivateKey();return{publicKey:x25519.getPublicKey(r),privateKey:r}},generateX25519KeyPairFromSeed(r){return{publicKey:x25519.getPublicKey(r),privateKey:r}},generateX25519SharedKey(r,e){return x25519.getSharedSecret(r,e)},chaCha20Poly1305Encrypt(r,e,t,n){return chacha20poly1305(n,e,t).encrypt(r)},chaCha20Poly1305Decrypt(r,e,t,n,i){return chacha20poly1305(n,e,t).decrypt(r,i)}},defaultCrypto$2=pureJsCrypto$2,uint16BEEncode$2=r=>{const e=allocUnsafe$3(2);return new DataView(e.buffer,e.byteOffset,e.byteLength).setUint16(0,r,!1),e};uint16BEEncode$2.bytes=2;const uint16BEDecode$2=r=>{if(r.length<2)throw RangeError("Could not decode int16BE");return r instanceof Uint8Array?new DataView(r.buffer,r.byteOffset,r.byteLength).getUint16(0,!1):r.getUint16(0)};uint16BEDecode$2.bytes=2;function encode0$2(r){return concat$6([r.ne,r.ciphertext],r.ne.length+r.ciphertext.length)}function encode1$2(r){return concat$6([r.ne,r.ns,r.ciphertext],r.ne.length+r.ns.length+r.ciphertext.length)}function encode2$2(r){return concat$6([r.ns,r.ciphertext],r.ns.length+r.ciphertext.length)}function decode0$2(r){if(r.length<32)throw new Error("Cannot decode stage 0 MessageBuffer: length less than 32 bytes.");return{ne:r.subarray(0,32),ciphertext:r.subarray(32,r.length),ns:alloc$1(0)}}function decode1$2(r){if(r.length<80)throw new Error("Cannot decode stage 1 MessageBuffer: length less than 80 bytes.");return{ne:r.subarray(0,32),ns:r.subarray(32,80),ciphertext:r.subarray(80,r.length)}}function decode2$2(r){if(r.length<48)throw new Error("Cannot decode stage 2 MessageBuffer: length less than 48 bytes.");return{ne:alloc$1(0),ns:r.subarray(0,48),ciphertext:r.subarray(48,r.length)}}const CHACHA_TAG_LENGTH$2=16;function encryptStream$2(r,e){return async function*(t){for await(const n of t)for(let i=0;i<n.length;i+=NOISE_MSG_MAX_LENGTH_BYTES_WITHOUT_TAG$2){let o=i+NOISE_MSG_MAX_LENGTH_BYTES_WITHOUT_TAG$2;o>n.length&&(o=n.length);const a=r.encrypt(n.subarray(i,o),r.session);e?.encryptedPackets.increment(),yield concat$6([uint16BEEncode$2(a.byteLength),a],2+a.byteLength)}}}function decryptStream$2(r,e){return async function*(t){for await(const n of t)for(let i=0;i<n.length;i+=NOISE_MSG_MAX_LENGTH_BYTES$2){let o=i+NOISE_MSG_MAX_LENGTH_BYTES$2;if(o>n.length&&(o=n.length),o-CHACHA_TAG_LENGTH$2<i)throw new Error("Invalid chunk");const a=n.subarray(i,o),c=n.subarray(i,o-CHACHA_TAG_LENGTH$2),{plaintext:l,valid:u}=r.decrypt(a,r.session,c);if(!u)throw e?.decryptErrors.increment(),new Error("Failed to validate decrypted chunk");e?.decryptedPackets.increment(),yield l}}}const PUBLIC_KEY_BYTE_LENGTH$3=32,PRIVATE_KEY_BYTE_LENGTH$3=64,KEYS_BYTE_LENGTH$3=32;async function generateKey$b(){const r=ed25519.utils.randomPrivateKey(),e=ed25519.getPublicKey(r);return{privateKey:concatKeys$3(r,e),publicKey:e}}async function generateKeyFromSeed$3(r){if(r.length!==KEYS_BYTE_LENGTH$3)throw new TypeError('"seed" must be 32 bytes in length.');if(!(r instanceof Uint8Array))throw new TypeError('"seed" must be a node.js Buffer, or Uint8Array.');const e=r,t=ed25519.getPublicKey(e);return{privateKey:concatKeys$3(e,t),publicKey:t}}async function hashAndSign$b(r,e){const t=r.subarray(0,KEYS_BYTE_LENGTH$3);return ed25519.sign(e,t)}async function hashAndVerify$b(r,e,t){return ed25519.verify(e,t,r)}function concatKeys$3(r,e){const t=new Uint8Array(PRIVATE_KEY_BYTE_LENGTH$3);for(let n=0;n<KEYS_BYTE_LENGTH$3;n++)t[n]=r[n],t[KEYS_BYTE_LENGTH$3+n]=e[n];return t}const webcrypto$3={get(r=globalThis){const e=r.crypto;if(e==null||e.subtle==null)throw Object.assign(new Error("Missing Web Crypto API. The most likely cause of this error is that this page is being accessed from an insecure context (i.e. not HTTPS). For more information and possible resolutions see https://github.com/libp2p/js-libp2p-crypto/blob/master/README.md#web-crypto-api"),{code:"ERR_MISSING_WEB_CRYPTO"});return e}},derivedEmptyPasswordKey$3={alg:"A128GCM",ext:!0,k:"scm9jmO_4BJAgdwWGVulLg",key_ops:["encrypt","decrypt"],kty:"oct"};function create$4(r){const e=r?.algorithm??"AES-GCM";let t=r?.keyLength??16;const n=r?.nonceLength??12,i=r?.digest??"SHA-256",o=r?.saltLength??16,a=r?.iterations??32767,c=webcrypto$3.get();t*=8;async function l(g,$){const S=c.getRandomValues(new Uint8Array(o)),E=c.getRandomValues(new Uint8Array(n)),v={name:e,iv:E};typeof $=="string"&&($=fromString$b($));let T;if($.length===0){T=await c.subtle.importKey("jwk",derivedEmptyPasswordKey$3,{name:"AES-GCM"},!0,["encrypt"]);try{const A={name:"PBKDF2",salt:S,iterations:a,hash:{name:i}},P=await c.subtle.importKey("raw",$,{name:"PBKDF2"},!1,["deriveKey"]);T=await c.subtle.deriveKey(A,P,{name:e,length:t},!0,["encrypt"])}catch{T=await c.subtle.importKey("jwk",derivedEmptyPasswordKey$3,{name:"AES-GCM"},!0,["encrypt"])}}else{const A={name:"PBKDF2",salt:S,iterations:a,hash:{name:i}},P=await c.subtle.importKey("raw",$,{name:"PBKDF2"},!1,["deriveKey"]);T=await c.subtle.deriveKey(A,P,{name:e,length:t},!0,["encrypt"])}const I=await c.subtle.encrypt(v,T,g);return concat$6([S,v.iv,new Uint8Array(I)])}async function u(g,$){const S=g.subarray(0,o),E=g.subarray(o,o+n),v=g.subarray(o+n),T={name:e,iv:E};typeof $=="string"&&($=fromString$b($));let I;if($.length===0)try{const P={name:"PBKDF2",salt:S,iterations:a,hash:{name:i}},x=await c.subtle.importKey("raw",$,{name:"PBKDF2"},!1,["deriveKey"]);I=await c.subtle.deriveKey(P,x,{name:e,length:t},!0,["decrypt"])}catch{I=await c.subtle.importKey("jwk",derivedEmptyPasswordKey$3,{name:"AES-GCM"},!0,["decrypt"])}else{const P={name:"PBKDF2",salt:S,iterations:a,hash:{name:i}},x=await c.subtle.importKey("raw",$,{name:"PBKDF2"},!1,["deriveKey"]);I=await c.subtle.deriveKey(P,x,{name:e,length:t},!0,["decrypt"])}const A=await c.subtle.decrypt(T,I,v);return new Uint8Array(A)}return{encrypt:l,decrypt:u}}async function exporter$4(r,e){const n=await create$4().encrypt(r,e);return base64$6.encode(n)}var KeyType$4;(function(r){r.RSA="RSA",r.Ed25519="Ed25519",r.Secp256k1="Secp256k1"})(KeyType$4||(KeyType$4={}));var __KeyTypeValues$4;(function(r){r[r.RSA=0]="RSA",r[r.Ed25519=1]="Ed25519",r[r.Secp256k1=2]="Secp256k1"})(__KeyTypeValues$4||(__KeyTypeValues$4={}));(function(r){r.codec=()=>enumeration(__KeyTypeValues$4)})(KeyType$4||(KeyType$4={}));var PublicKey$4;(function(r){let e;r.codec=()=>(e==null&&(e=message((t,n,i={})=>{i.lengthDelimited!==!1&&n.fork(),t.Type!=null&&(n.uint32(8),KeyType$4.codec().encode(t.Type,n)),t.Data!=null&&(n.uint32(18),n.bytes(t.Data)),i.lengthDelimited!==!1&&n.ldelim()},(t,n)=>{const i={},o=n==null?t.len:t.pos+n;for(;t.pos<o;){const a=t.uint32();switch(a>>>3){case 1:i.Type=KeyType$4.codec().decode(t);break;case 2:i.Data=t.bytes();break;default:t.skipType(a&7);break}}return i})),e),r.encode=t=>encodeMessage(t,r.codec()),r.decode=t=>decodeMessage$1(t,r.codec())})(PublicKey$4||(PublicKey$4={}));var PrivateKey$4;(function(r){let e;r.codec=()=>(e==null&&(e=message((t,n,i={})=>{i.lengthDelimited!==!1&&n.fork(),t.Type!=null&&(n.uint32(8),KeyType$4.codec().encode(t.Type,n)),t.Data!=null&&(n.uint32(18),n.bytes(t.Data)),i.lengthDelimited!==!1&&n.ldelim()},(t,n)=>{const i={},o=n==null?t.len:t.pos+n;for(;t.pos<o;){const a=t.uint32();switch(a>>>3){case 1:i.Type=KeyType$4.codec().decode(t);break;case 2:i.Data=t.bytes();break;default:t.skipType(a&7);break}}return i})),e),r.encode=t=>encodeMessage(t,r.codec()),r.decode=t=>decodeMessage$1(t,r.codec())})(PrivateKey$4||(PrivateKey$4={}));let Ed25519PublicKey$3=class{constructor(e){_(this,"_key");this._key=ensureKey$3(e,PUBLIC_KEY_BYTE_LENGTH$3)}async verify(e,t){return hashAndVerify$b(this._key,t,e)}marshal(){return this._key}get bytes(){return PublicKey$4.encode({Type:KeyType$4.Ed25519,Data:this.marshal()}).subarray()}equals(e){return equals$4(this.bytes,e.bytes)}async hash(){const{bytes:e}=await sha256$2.digest(this.bytes);return e}},Ed25519PrivateKey$3=class{constructor(e,t){_(this,"_key");_(this,"_publicKey");this._key=ensureKey$3(e,PRIVATE_KEY_BYTE_LENGTH$3),this._publicKey=ensureKey$3(t,PUBLIC_KEY_BYTE_LENGTH$3)}async sign(e){return hashAndSign$b(this._key,e)}get public(){return new Ed25519PublicKey$3(this._publicKey)}marshal(){return this._key}get bytes(){return PrivateKey$4.encode({Type:KeyType$4.Ed25519,Data:this.marshal()}).subarray()}equals(e){return equals$4(this.bytes,e.bytes)}async hash(){const{bytes:e}=await sha256$2.digest(this.bytes);return e}async id(){const e=identity$3.digest(this.public.bytes);return base58btc$4.encode(e.bytes).substring(1)}async export(e,t="libp2p-key"){if(t==="libp2p-key")return exporter$4(this.bytes,e);throw new CodeError$e(`export format '${t}' is not supported`,"ERR_INVALID_EXPORT_FORMAT")}};function unmarshalEd25519PrivateKey$3(r){if(r.length>PRIVATE_KEY_BYTE_LENGTH$3){r=ensureKey$3(r,PRIVATE_KEY_BYTE_LENGTH$3+PUBLIC_KEY_BYTE_LENGTH$3);const n=r.subarray(0,PRIVATE_KEY_BYTE_LENGTH$3),i=r.subarray(PRIVATE_KEY_BYTE_LENGTH$3,r.length);return new Ed25519PrivateKey$3(n,i)}r=ensureKey$3(r,PRIVATE_KEY_BYTE_LENGTH$3);const e=r.subarray(0,PRIVATE_KEY_BYTE_LENGTH$3),t=r.subarray(PUBLIC_KEY_BYTE_LENGTH$3);return new Ed25519PrivateKey$3(e,t)}function unmarshalEd25519PublicKey$3(r){return r=ensureKey$3(r,PUBLIC_KEY_BYTE_LENGTH$3),new Ed25519PublicKey$3(r)}async function generateKeyPair$c(){const{privateKey:r,publicKey:e}=await generateKey$b();return new Ed25519PrivateKey$3(r,e)}async function generateKeyPairFromSeed$3(r){const{privateKey:e,publicKey:t}=await generateKeyFromSeed$3(r);return new Ed25519PrivateKey$3(e,t)}function ensureKey$3(r,e){if(r=Uint8Array.from(r??[]),r.length!==e)throw new CodeError$e(`Key must be a Uint8Array of length ${e}, got ${r.length}`,"ERR_INVALID_KEY_TYPE");return r}const Ed25519$3=Object.freeze(Object.defineProperty({__proto__:null,Ed25519PrivateKey:Ed25519PrivateKey$3,Ed25519PublicKey:Ed25519PublicKey$3,generateKeyPair:generateKeyPair$c,generateKeyPairFromSeed:generateKeyPairFromSeed$3,unmarshalEd25519PrivateKey:unmarshalEd25519PrivateKey$3,unmarshalEd25519PublicKey:unmarshalEd25519PublicKey$3},Symbol.toStringTag,{value:"Module"}));function bigIntegerToUintBase64url$3(r,e){let t=Uint8Array.from(r.abs().toByteArray());if(t=t[0]===0?t.subarray(1):t,e!=null){if(t.length>e)throw new Error("byte array longer than desired length");t=concat$6([new Uint8Array(e-t.length),t])}return toString$b(t,"base64url")}function base64urlToBigInteger$3(r){const e=base64urlToBuffer$3(r);return new forge$n.jsbn.BigInteger(toString$b(e,"base16"),16)}function base64urlToBuffer$3(r,e){let t=fromString$b(r,"base64urlpad");if(e!=null){if(t.length>e)throw new Error("byte array longer than desired length");t=concat$6([new Uint8Array(e-t.length),t])}return t}const bits$4={"P-256":256,"P-384":384,"P-521":521},curveTypes$4=Object.keys(bits$4);curveTypes$4.join(" / ");function randomBytes$4(r){if(isNaN(r)||r<=0)throw new CodeError$e("random bytes length must be a Number bigger than 0","ERR_INVALID_LENGTH");return randomBytes$a(r)}function convert$5(r,e){return e.map(t=>base64urlToBigInteger$3(r[t]))}function jwk2priv$3(r){return forge$n.pki.setRsaPrivateKey(...convert$5(r,["n","e","d","p","q","dp","dq","qi"]))}function jwk2pub$3(r){return forge$n.pki.setRsaPublicKey(...convert$5(r,["n","e"]))}function pkcs1ToJwk$3(r){const e=forge$n.asn1.fromDer(toString$b(r,"ascii")),t=forge$n.pki.privateKeyFromAsn1(e);return{kty:"RSA",n:bigIntegerToUintBase64url$3(t.n),e:bigIntegerToUintBase64url$3(t.e),d:bigIntegerToUintBase64url$3(t.d),p:bigIntegerToUintBase64url$3(t.p),q:bigIntegerToUintBase64url$3(t.q),dp:bigIntegerToUintBase64url$3(t.dP),dq:bigIntegerToUintBase64url$3(t.dQ),qi:bigIntegerToUintBase64url$3(t.qInv),alg:"RS256"}}function jwkToPkcs1$3(r){if(r.n==null||r.e==null||r.d==null||r.p==null||r.q==null||r.dp==null||r.dq==null||r.qi==null)throw new CodeError$e("JWK was missing components","ERR_INVALID_PARAMETERS");const e=forge$n.pki.privateKeyToAsn1({n:base64urlToBigInteger$3(r.n),e:base64urlToBigInteger$3(r.e),d:base64urlToBigInteger$3(r.d),p:base64urlToBigInteger$3(r.p),q:base64urlToBigInteger$3(r.q),dP:base64urlToBigInteger$3(r.dp),dQ:base64urlToBigInteger$3(r.dq),qInv:base64urlToBigInteger$3(r.qi)});return fromString$b(forge$n.asn1.toDer(e).getBytes(),"ascii")}function pkixToJwk$3(r){const e=forge$n.asn1.fromDer(toString$b(r,"ascii")),t=forge$n.pki.publicKeyFromAsn1(e);return{kty:"RSA",n:bigIntegerToUintBase64url$3(t.n),e:bigIntegerToUintBase64url$3(t.e)}}function jwkToPkix$3(r){if(r.n==null||r.e==null)throw new CodeError$e("JWK was missing components","ERR_INVALID_PARAMETERS");const e=forge$n.pki.publicKeyToAsn1({n:base64urlToBigInteger$3(r.n),e:base64urlToBigInteger$3(r.e)});return fromString$b(forge$n.asn1.toDer(e).getBytes(),"ascii")}async function generateKey$a(r){const e=await webcrypto$3.get().subtle.generateKey({name:"RSASSA-PKCS1-v1_5",modulusLength:r,publicExponent:new Uint8Array([1,0,1]),hash:{name:"SHA-256"}},!0,["sign","verify"]),t=await exportKey$3(e);return{privateKey:t[0],publicKey:t[1]}}async function unmarshalPrivateKey$6(r){const t=[await webcrypto$3.get().subtle.importKey("jwk",r,{name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-256"}},!0,["sign"]),await derivePublicFromPrivate$3(r)],n=await exportKey$3({privateKey:t[0],publicKey:t[1]});return{privateKey:n[0],publicKey:n[1]}}async function hashAndSign$a(r,e){const t=await webcrypto$3.get().subtle.importKey("jwk",r,{name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-256"}},!1,["sign"]),n=await webcrypto$3.get().subtle.sign({name:"RSASSA-PKCS1-v1_5"},t,Uint8Array.from(e));return new Uint8Array(n,0,n.byteLength)}async function hashAndVerify$a(r,e,t){const n=await webcrypto$3.get().subtle.importKey("jwk",r,{name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-256"}},!1,["verify"]);return webcrypto$3.get().subtle.verify({name:"RSASSA-PKCS1-v1_5"},n,e,t)}async function exportKey$3(r){if(r.privateKey==null||r.publicKey==null)throw new CodeError$e("Private and public key are required","ERR_INVALID_PARAMETERS");return Promise.all([webcrypto$3.get().subtle.exportKey("jwk",r.privateKey),webcrypto$3.get().subtle.exportKey("jwk",r.publicKey)])}async function derivePublicFromPrivate$3(r){return webcrypto$3.get().subtle.importKey("jwk",{kty:r.kty,n:r.n,e:r.e},{name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-256"}},!0,["verify"])}function convertKey$3(r,e,t,n){const i=e?jwk2pub$3(r):jwk2priv$3(r),o=toString$b(Uint8Array.from(t),"ascii"),a=n(o,i);return fromString$b(a,"ascii")}function encrypt$3(r,e){return convertKey$3(r,!0,e,(t,n)=>n.encrypt(t))}function decrypt$3(r,e){return convertKey$3(r,!1,e,(t,n)=>n.decrypt(t))}function keySize$3(r){if(r.kty!=="RSA")throw new CodeError$e("invalid key type","ERR_INVALID_KEY_TYPE");if(r.n==null)throw new CodeError$e("invalid key modulus","ERR_INVALID_KEY_MODULUS");return fromString$b(r.n,"base64url").length*8}const MAX_KEY_SIZE$3=8192;let RsaPublicKey$3=class{constructor(e){_(this,"_key");this._key=e}async verify(e,t){return hashAndVerify$a(this._key,t,e)}marshal(){return jwkToPkix$3(this._key)}get bytes(){return PublicKey$4.encode({Type:KeyType$4.RSA,Data:this.marshal()}).subarray()}encrypt(e){return encrypt$3(this._key,e)}equals(e){return equals$4(this.bytes,e.bytes)}async hash(){const{bytes:e}=await sha256$2.digest(this.bytes);return e}},RsaPrivateKey$3=class{constructor(e,t){_(this,"_key");_(this,"_publicKey");this._key=e,this._publicKey=t}genSecret(){return randomBytes$4(16)}async sign(e){return hashAndSign$a(this._key,e)}get public(){if(this._publicKey==null)throw new CodeError$e("public key not provided","ERR_PUBKEY_NOT_PROVIDED");return new RsaPublicKey$3(this._publicKey)}decrypt(e){return decrypt$3(this._key,e)}marshal(){return jwkToPkcs1$3(this._key)}get bytes(){return PrivateKey$4.encode({Type:KeyType$4.RSA,Data:this.marshal()}).subarray()}equals(e){return equals$4(this.bytes,e.bytes)}async hash(){const{bytes:e}=await sha256$2.digest(this.bytes);return e}async id(){const e=await this.public.hash();return toString$b(e,"base58btc")}async export(e,t="pkcs-8"){if(t==="pkcs-8"){const n=new forge$n.util.ByteBuffer(this.marshal()),i=forge$n.asn1.fromDer(n),o=forge$n.pki.privateKeyFromAsn1(i),a={algorithm:"aes256",count:1e4,saltSize:128/8,prfAlgorithm:"sha512"};return forge$n.pki.encryptRsaPrivateKey(o,e,a)}else{if(t==="libp2p-key")return exporter$4(this.bytes,e);throw new CodeError$e(`export format '${t}' is not supported`,"ERR_INVALID_EXPORT_FORMAT")}}};async function unmarshalRsaPrivateKey$3(r){const e=pkcs1ToJwk$3(r);if(keySize$3(e)>MAX_KEY_SIZE$3)throw new CodeError$e("key size is too large","ERR_KEY_SIZE_TOO_LARGE");const t=await unmarshalPrivateKey$6(e);return new RsaPrivateKey$3(t.privateKey,t.publicKey)}function unmarshalRsaPublicKey$3(r){const e=pkixToJwk$3(r);if(keySize$3(e)>MAX_KEY_SIZE$3)throw new CodeError$e("key size is too large","ERR_KEY_SIZE_TOO_LARGE");return new RsaPublicKey$3(e)}async function fromJwk$3(r){if(keySize$3(r)>MAX_KEY_SIZE$3)throw new CodeError$e("key size is too large","ERR_KEY_SIZE_TOO_LARGE");const e=await unmarshalPrivateKey$6(r);return new RsaPrivateKey$3(e.privateKey,e.publicKey)}async function generateKeyPair$b(r){if(r>MAX_KEY_SIZE$3)throw new CodeError$e("key size is too large","ERR_KEY_SIZE_TOO_LARGE");const e=await generateKey$a(r);return new RsaPrivateKey$3(e.privateKey,e.publicKey)}const RSA$3=Object.freeze(Object.defineProperty({__proto__:null,MAX_KEY_SIZE:MAX_KEY_SIZE$3,RsaPrivateKey:RsaPrivateKey$3,RsaPublicKey:RsaPublicKey$3,fromJwk:fromJwk$3,generateKeyPair:generateKeyPair$b,unmarshalRsaPrivateKey:unmarshalRsaPrivateKey$3,unmarshalRsaPublicKey:unmarshalRsaPublicKey$3},Symbol.toStringTag,{value:"Module"}));function generateKey$9(){return secp256k1.utils.randomPrivateKey()}async function hashAndSign$9(r,e){const{digest:t}=await sha256$2.digest(e);try{return secp256k1.sign(t,r).toDERRawBytes()}catch(n){throw new CodeError$e(String(n),"ERR_INVALID_INPUT")}}async function hashAndVerify$9(r,e,t){try{const{digest:n}=await sha256$2.digest(t);return secp256k1.verify(e,n,r)}catch(n){throw new CodeError$e(String(n),"ERR_INVALID_INPUT")}}function compressPublicKey$3(r){return secp256k1.ProjectivePoint.fromHex(r).toRawBytes(!0)}function validatePrivateKey$3(r){try{secp256k1.getPublicKey(r,!0)}catch(e){throw new CodeError$e(String(e),"ERR_INVALID_PRIVATE_KEY")}}function validatePublicKey$3(r){try{secp256k1.ProjectivePoint.fromHex(r)}catch(e){throw new CodeError$e(String(e),"ERR_INVALID_PUBLIC_KEY")}}function computePublicKey$3(r){try{return secp256k1.getPublicKey(r,!0)}catch(e){throw new CodeError$e(String(e),"ERR_INVALID_PRIVATE_KEY")}}let Secp256k1PublicKey$3=class{constructor(e){_(this,"_key");validatePublicKey$3(e),this._key=e}async verify(e,t){return hashAndVerify$9(this._key,t,e)}marshal(){return compressPublicKey$3(this._key)}get bytes(){return PublicKey$4.encode({Type:KeyType$4.Secp256k1,Data:this.marshal()}).subarray()}equals(e){return equals$4(this.bytes,e.bytes)}async hash(){const{bytes:e}=await sha256$2.digest(this.bytes);return e}},Secp256k1PrivateKey$3=class{constructor(e,t){_(this,"_key");_(this,"_publicKey");this._key=e,this._publicKey=t??computePublicKey$3(e),validatePrivateKey$3(this._key),validatePublicKey$3(this._publicKey)}async sign(e){return hashAndSign$9(this._key,e)}get public(){return new Secp256k1PublicKey$3(this._publicKey)}marshal(){return this._key}get bytes(){return PrivateKey$4.encode({Type:KeyType$4.Secp256k1,Data:this.marshal()}).subarray()}equals(e){return equals$4(this.bytes,e.bytes)}async hash(){const{bytes:e}=await sha256$2.digest(this.bytes);return e}async id(){const e=await this.public.hash();return toString$b(e,"base58btc")}async export(e,t="libp2p-key"){if(t==="libp2p-key")return exporter$4(this.bytes,e);throw new CodeError$e(`export format '${t}' is not supported`,"ERR_INVALID_EXPORT_FORMAT")}};function unmarshalSecp256k1PrivateKey$3(r){return new Secp256k1PrivateKey$3(r)}function unmarshalSecp256k1PublicKey$3(r){return new Secp256k1PublicKey$3(r)}async function generateKeyPair$a(){const r=generateKey$9();return new Secp256k1PrivateKey$3(r)}const Secp256k1$3=Object.freeze(Object.defineProperty({__proto__:null,Secp256k1PrivateKey:Secp256k1PrivateKey$3,Secp256k1PublicKey:Secp256k1PublicKey$3,generateKeyPair:generateKeyPair$a,unmarshalSecp256k1PrivateKey:unmarshalSecp256k1PrivateKey$3,unmarshalSecp256k1PublicKey:unmarshalSecp256k1PublicKey$3},Symbol.toStringTag,{value:"Module"})),supportedKeys$3={rsa:RSA$3,ed25519:Ed25519$3,secp256k1:Secp256k1$3};function unsupportedKey$3(r){const e=Object.keys(supportedKeys$3).join(" / ");return new CodeError$e(`invalid or unsupported key type ${r}. Must be ${e}`,"ERR_UNSUPPORTED_KEY_TYPE")}function unmarshalPublicKey$3(r){const e=PublicKey$4.decode(r),t=e.Data??new Uint8Array;switch(e.Type){case KeyType$4.RSA:return supportedKeys$3.rsa.unmarshalRsaPublicKey(t);case KeyType$4.Ed25519:return supportedKeys$3.ed25519.unmarshalEd25519PublicKey(t);case KeyType$4.Secp256k1:return supportedKeys$3.secp256k1.unmarshalSecp256k1PublicKey(t);default:throw unsupportedKey$3(e.Type??"unknown")}}async function unmarshalPrivateKey$5(r){const e=PrivateKey$4.decode(r),t=e.Data??new Uint8Array;switch(e.Type){case KeyType$4.RSA:return supportedKeys$3.rsa.unmarshalRsaPrivateKey(t);case KeyType$4.Ed25519:return supportedKeys$3.ed25519.unmarshalEd25519PrivateKey(t);case KeyType$4.Secp256k1:return supportedKeys$3.secp256k1.unmarshalSecp256k1PrivateKey(t);default:throw unsupportedKey$3(e.Type??"RSA")}}var NoiseExtensions$2;(function(r){let e;r.codec=()=>(e==null&&(e=message((t,n,i={})=>{if(i.lengthDelimited!==!1&&n.fork(),t.webtransportCerthashes!=null)for(const o of t.webtransportCerthashes)n.uint32(10),n.bytes(o);i.lengthDelimited!==!1&&n.ldelim()},(t,n)=>{const i={webtransportCerthashes:[]},o=n==null?t.len:t.pos+n;for(;t.pos<o;){const a=t.uint32();switch(a>>>3){case 1:{i.webtransportCerthashes.push(t.bytes());break}default:{t.skipType(a&7);break}}}return i})),e),r.encode=t=>encodeMessage(t,r.codec()),r.decode=t=>decodeMessage$1(t,r.codec())})(NoiseExtensions$2||(NoiseExtensions$2={}));var NoiseHandshakePayload$2;(function(r){let e;r.codec=()=>(e==null&&(e=message((t,n,i={})=>{i.lengthDelimited!==!1&&n.fork(),t.identityKey!=null&&t.identityKey.byteLength>0&&(n.uint32(10),n.bytes(t.identityKey)),t.identitySig!=null&&t.identitySig.byteLength>0&&(n.uint32(18),n.bytes(t.identitySig)),t.extensions!=null&&(n.uint32(34),NoiseExtensions$2.codec().encode(t.extensions,n)),i.lengthDelimited!==!1&&n.ldelim()},(t,n)=>{const i={identityKey:alloc$1(0),identitySig:alloc$1(0)},o=n==null?t.len:t.pos+n;for(;t.pos<o;){const a=t.uint32();switch(a>>>3){case 1:{i.identityKey=t.bytes();break}case 2:{i.identitySig=t.bytes();break}case 4:{i.extensions=NoiseExtensions$2.codec().decode(t,t.uint32());break}default:{t.skipType(a&7);break}}}return i})),e),r.encode=t=>encodeMessage(t,r.codec()),r.decode=t=>decodeMessage$1(t,r.codec())})(NoiseHandshakePayload$2||(NoiseHandshakePayload$2={}));async function getPayload$2(r,e,t){const n=await signPayload$2(r,getHandshakePayload$2(e));if(r.publicKey==null)throw new Error("PublicKey was missing from local PeerId");return createHandshakePayload$2(r.publicKey,n,t)}function createHandshakePayload$2(r,e,t){return NoiseHandshakePayload$2.encode({identityKey:r,identitySig:e,extensions:t??{webtransportCerthashes:[]}}).subarray()}async function signPayload$2(r,e){if(r.privateKey==null)throw new Error("PrivateKey was missing from PeerId");return(await unmarshalPrivateKey$5(r.privateKey)).sign(e)}async function getPeerIdFromPayload$2(r){return peerIdFromKeys$3(r.identityKey)}function decodePayload$2(r){return NoiseHandshakePayload$2.decode(r)}function getHandshakePayload$2(r){const e=fromString$b("noise-libp2p-static-key:");return concat$6([e,r],e.length+r.length)}async function verifySignedPayload$2(r,e,t){const n=await peerIdFromKeys$3(e.identityKey);if(!n.equals(t))throw new Error(`Payload identity key ${n.toString()} does not match expected remote peer ${t.toString()}`);const i=getHandshakePayload$2(r);if(n.publicKey==null)throw new Error("PublicKey was missing from PeerId");if(e.identitySig==null)throw new Error("Signature was missing from message");if(!await unmarshalPublicKey$3(n.publicKey).verify(i,e.identitySig))throw new Error("Static key doesn't match to peer that signed payload!");return n}function isValidPublicKey$2(r){return!(!(r instanceof Uint8Array)||r.length!==32)}const log$s=logger$5("libp2p:noise");let keyLogger$1;DUMP_SESSION_KEYS$2?keyLogger$1=log$s:keyLogger$1=Object.assign(()=>{},{enabled:!1,trace:()=>{},error:()=>{}});function logLocalStaticKeys$2(r){keyLogger$1(`LOCAL_STATIC_PUBLIC_KEY ${toString$b(r.publicKey,"hex")}`),keyLogger$1(`LOCAL_STATIC_PRIVATE_KEY ${toString$b(r.privateKey,"hex")}`)}function logLocalEphemeralKeys$2(r){r?(keyLogger$1(`LOCAL_PUBLIC_EPHEMERAL_KEY ${toString$b(r.publicKey,"hex")}`),keyLogger$1(`LOCAL_PRIVATE_EPHEMERAL_KEY ${toString$b(r.privateKey,"hex")}`)):keyLogger$1("Missing local ephemeral keys.")}function logRemoteStaticKey$2(r){keyLogger$1(`REMOTE_STATIC_PUBLIC_KEY ${toString$b(r,"hex")}`)}function logRemoteEphemeralKey$2(r){keyLogger$1(`REMOTE_EPHEMERAL_PUBLIC_KEY ${toString$b(r,"hex")}`)}function logCipherState$2(r){r.cs1&&r.cs2?(keyLogger$1(`CIPHER_STATE_1 ${r.cs1.n.getUint64()} ${toString$b(r.cs1.k,"hex")}`),keyLogger$1(`CIPHER_STATE_2 ${r.cs2.n.getUint64()} ${toString$b(r.cs2.k,"hex")}`)):keyLogger$1("Missing cipher state.")}const MIN_NONCE$2=0,MAX_NONCE$2=4294967295,ERR_MAX_NONCE$2="Cipherstate has reached maximum n, a new handshake must be performed";let Nonce$2=class{constructor(e=MIN_NONCE$2){_(this,"n");_(this,"bytes");_(this,"view");this.n=e,this.bytes=alloc$1(12),this.view=new DataView(this.bytes.buffer,this.bytes.byteOffset,this.bytes.byteLength),this.view.setUint32(4,e,!0)}increment(){this.n++,this.view.setUint32(4,this.n,!0)}getBytes(){return this.bytes}getUint64(){return this.n}assertValue(){if(this.n>MAX_NONCE$2)throw new Error(ERR_MAX_NONCE$2)}},AbstractHandshake$2=class{constructor(e){_(this,"crypto");this.crypto=e}encryptWithAd(e,t,n){const i=this.encrypt(e.k,e.n,t,n);return e.n.increment(),i}decryptWithAd(e,t,n,i){const{plaintext:o,valid:a}=this.decrypt(e.k,e.n,t,n,i);return a&&e.n.increment(),{plaintext:o,valid:a}}hasKey(e){return!this.isEmptyKey(e.k)}createEmptyKey(){return alloc$1(32)}isEmptyKey(e){const t=this.createEmptyKey();return equals$4(t,e)}encrypt(e,t,n,i){return t.assertValue(),this.crypto.chaCha20Poly1305Encrypt(i,t.getBytes(),n,e)}encryptAndHash(e,t){let n;return this.hasKey(e.cs)?n=this.encryptWithAd(e.cs,e.h,t):n=t,this.mixHash(e,n),n}decrypt(e,t,n,i,o){t.assertValue();const a=this.crypto.chaCha20Poly1305Decrypt(i,t.getBytes(),n,e,o);return a?{plaintext:a,valid:!0}:{plaintext:alloc$1(0),valid:!1}}decryptAndHash(e,t){let n,i=!0;return this.hasKey(e.cs)?{plaintext:n,valid:i}=this.decryptWithAd(e.cs,e.h,t):n=t,this.mixHash(e,t),{plaintext:n,valid:i}}dh(e,t){try{const n=this.crypto.generateX25519SharedKey(e,t);return n.length===32?n:n.subarray(0,32)}catch(n){const i=n;return log$s.error(i),alloc$1(32)}}mixHash(e,t){e.h=this.getHash(e.h,t)}getHash(e,t){return this.crypto.hashSHA256(concat$6([e,t],e.length+t.length))}mixKey(e,t){const[n,i]=this.crypto.getHKDF(e.ck,t);e.cs=this.initializeKey(i),e.ck=n}initializeKey(e){return{k:e,n:new Nonce$2}}initializeSymmetric(e){const t=fromString$b(e,"utf-8"),n=this.hashProtocolName(t),i=n,o=this.createEmptyKey();return{cs:this.initializeKey(o),ck:i,h:n}}hashProtocolName(e){if(e.length<=32){const t=alloc$1(32);return t.set(e),t}else return this.getHash(e,alloc$1(0))}split(e){const[t,n]=this.crypto.getHKDF(e.ck,alloc$1(0)),i=this.initializeKey(t),o=this.initializeKey(n);return{cs1:i,cs2:o}}writeMessageRegular(e,t){const n=this.encryptWithAd(e,alloc$1(0),t),i=this.createEmptyKey(),o=alloc$1(0);return{ne:i,ns:o,ciphertext:n}}readMessageRegular(e,t){return this.decryptWithAd(e,alloc$1(0),t.ciphertext)}},XX$2=class extends AbstractHandshake$2{initializeInitiator(e,t,n,i){const o="Noise_XX_25519_ChaChaPoly_SHA256",a=this.initializeSymmetric(o);this.mixHash(a,e);const c=alloc$1(32);return{ss:a,s:t,rs:n,psk:i,re:c}}initializeResponder(e,t,n,i){const o="Noise_XX_25519_ChaChaPoly_SHA256",a=this.initializeSymmetric(o);this.mixHash(a,e);const c=alloc$1(32);return{ss:a,s:t,rs:n,psk:i,re:c}}writeMessageA(e,t,n){const i=alloc$1(0);n!==void 0?e.e=n:e.e=this.crypto.generateX25519KeyPair();const o=e.e.publicKey;this.mixHash(e.ss,o);const a=this.encryptAndHash(e.ss,t);return{ne:o,ns:i,ciphertext:a}}writeMessageB(e,t){e.e=this.crypto.generateX25519KeyPair();const n=e.e.publicKey;this.mixHash(e.ss,n),this.mixKey(e.ss,this.dh(e.e.privateKey,e.re));const i=e.s.publicKey,o=this.encryptAndHash(e.ss,i);this.mixKey(e.ss,this.dh(e.s.privateKey,e.re));const a=this.encryptAndHash(e.ss,t);return{ne:n,ns:o,ciphertext:a}}writeMessageC(e,t){const n=e.s.publicKey,i=this.encryptAndHash(e.ss,n);this.mixKey(e.ss,this.dh(e.s.privateKey,e.re));const o=this.encryptAndHash(e.ss,t),c={ne:this.createEmptyKey(),ns:i,ciphertext:o},{cs1:l,cs2:u}=this.split(e.ss);return{h:e.ss.h,messageBuffer:c,cs1:l,cs2:u}}readMessageA(e,t){return isValidPublicKey$2(t.ne)&&(e.re=t.ne),this.mixHash(e.ss,e.re),this.decryptAndHash(e.ss,t.ciphertext)}readMessageB(e,t){if(isValidPublicKey$2(t.ne)&&(e.re=t.ne),this.mixHash(e.ss,e.re),!e.e)throw new Error("Handshake state `e` param is missing.");this.mixKey(e.ss,this.dh(e.e.privateKey,e.re));const{plaintext:n,valid:i}=this.decryptAndHash(e.ss,t.ns);i&&isValidPublicKey$2(n)&&(e.rs=n),this.mixKey(e.ss,this.dh(e.e.privateKey,e.rs));const{plaintext:o,valid:a}=this.decryptAndHash(e.ss,t.ciphertext);return{plaintext:o,valid:i&&a}}readMessageC(e,t){const{plaintext:n,valid:i}=this.decryptAndHash(e.ss,t.ns);if(i&&isValidPublicKey$2(n)&&(e.rs=n),!e.e)throw new Error("Handshake state `e` param is missing.");this.mixKey(e.ss,this.dh(e.e.privateKey,e.rs));const{plaintext:o,valid:a}=this.decryptAndHash(e.ss,t.ciphertext),{cs1:c,cs2:l}=this.split(e.ss);return{h:e.ss.h,plaintext:o,valid:i&&a,cs1:c,cs2:l}}initSession(e,t,n){const i=this.createEmptyKey(),o=alloc$1(32);let a;return e?a=this.initializeInitiator(t,n,o,i):a=this.initializeResponder(t,n,o,i),{hs:a,i:e,mc:0}}sendMessage(e,t,n){let i;if(e.mc===0)i=this.writeMessageA(e.hs,t,n);else if(e.mc===1)i=this.writeMessageB(e.hs,t);else if(e.mc===2){const{h:o,messageBuffer:a,cs1:c,cs2:l}=this.writeMessageC(e.hs,t);i=a,e.h=o,e.cs1=c,e.cs2=l}else if(e.mc>2)if(e.i){if(!e.cs1)throw new Error("CS1 (cipher state) is not defined");i=this.writeMessageRegular(e.cs1,t)}else{if(!e.cs2)throw new Error("CS2 (cipher state) is not defined");i=this.writeMessageRegular(e.cs2,t)}else throw new Error("Session invalid.");return e.mc++,i}recvMessage(e,t){let n=alloc$1(0),i=!1;if(e.mc===0)({plaintext:n,valid:i}=this.readMessageA(e.hs,t));else if(e.mc===1)({plaintext:n,valid:i}=this.readMessageB(e.hs,t));else if(e.mc===2){const{h:o,plaintext:a,valid:c,cs1:l,cs2:u}=this.readMessageC(e.hs,t);n=a,i=c,e.h=o,e.cs1=l,e.cs2=u}return e.mc++,{plaintext:n,valid:i}}},XXHandshake$2=class{constructor(e,t,n,i,o,a,c,l){_(this,"isInitiator");_(this,"session");_(this,"remotePeer");_(this,"remoteExtensions",{webtransportCerthashes:[]});_(this,"payload");_(this,"connection");_(this,"xx");_(this,"staticKeypair");_(this,"prologue");this.isInitiator=e,this.payload=t,this.prologue=n,this.staticKeypair=o,this.connection=a,c&&(this.remotePeer=c),this.xx=l??new XX$2(i),this.session=this.xx.initSession(this.isInitiator,this.prologue,this.staticKeypair)}async propose(){if(logLocalStaticKeys$2(this.session.hs.s),this.isInitiator){log$s.trace("Stage 0 - Initiator starting to send first message.");const e=this.xx.sendMessage(this.session,alloc$1(0));await this.connection.write(encode0$2(e)),log$s.trace("Stage 0 - Initiator finished sending first message."),logLocalEphemeralKeys$2(this.session.hs.e)}else{log$s.trace("Stage 0 - Responder waiting to receive first message...");const e=decode0$2((await this.connection.read()).subarray()),{valid:t}=this.xx.recvMessage(this.session,e);if(!t)throw new InvalidCryptoExchangeError$1("xx handshake stage 0 validation fail");log$s.trace("Stage 0 - Responder received first message."),logRemoteEphemeralKey$2(this.session.hs.re)}}async exchange(){if(this.isInitiator){log$s.trace("Stage 1 - Initiator waiting to receive first message from responder...");const e=decode1$2((await this.connection.read()).subarray()),{plaintext:t,valid:n}=this.xx.recvMessage(this.session,e);if(!n)throw new InvalidCryptoExchangeError$1("xx handshake stage 1 validation fail");log$s.trace("Stage 1 - Initiator received the message."),logRemoteEphemeralKey$2(this.session.hs.re),logRemoteStaticKey$2(this.session.hs.rs),log$s.trace("Initiator going to check remote's signature...");try{const i=decodePayload$2(t);this.remotePeer=this.remotePeer||await getPeerIdFromPayload$2(i),await verifySignedPayload$2(this.session.hs.rs,i,this.remotePeer),this.setRemoteNoiseExtension(i.extensions)}catch(i){const o=i;throw new UnexpectedPeerError$1(`Error occurred while verifying signed payload: ${o.message}`)}log$s.trace("All good with the signature!")}else{log$s.trace("Stage 1 - Responder sending out first message with signed payload and static key.");const e=this.xx.sendMessage(this.session,this.payload);await this.connection.write(encode1$2(e)),log$s.trace("Stage 1 - Responder sent the second handshake message with signed payload."),logLocalEphemeralKeys$2(this.session.hs.e)}}async finish(){if(this.isInitiator){log$s.trace("Stage 2 - Initiator sending third handshake message.");const e=this.xx.sendMessage(this.session,this.payload);await this.connection.write(encode2$2(e)),log$s.trace("Stage 2 - Initiator sent message with signed payload.")}else{log$s.trace("Stage 2 - Responder waiting for third handshake message...");const e=decode2$2((await this.connection.read()).subarray()),{plaintext:t,valid:n}=this.xx.recvMessage(this.session,e);if(!n)throw new InvalidCryptoExchangeError$1("xx handshake stage 2 validation fail");log$s.trace("Stage 2 - Responder received the message, finished handshake.");try{const i=decodePayload$2(t);this.remotePeer=this.remotePeer||await getPeerIdFromPayload$2(i),await verifySignedPayload$2(this.session.hs.rs,i,this.remotePeer),this.setRemoteNoiseExtension(i.extensions)}catch(i){const o=i;throw new UnexpectedPeerError$1(`Error occurred while verifying signed payload: ${o.message}`)}}logCipherState$2(this.session)}encrypt(e,t){const n=this.getCS(t);return this.xx.encryptWithAd(n,alloc$1(0),e)}decrypt(e,t,n){const i=this.getCS(t,!1);return this.xx.decryptWithAd(i,alloc$1(0),e,n)}getRemoteStaticKey(){return this.session.hs.rs}getCS(e,t=!0){if(!e.cs1||!e.cs2)throw new InvalidCryptoExchangeError$1("Handshake not completed properly, cipher state does not exist.");return this.isInitiator?t?e.cs1:e.cs2:t?e.cs2:e.cs1}setRemoteNoiseExtension(e){e&&(this.remoteExtensions=e)}};function registerMetrics$2(r){return{xxHandshakeSuccesses:r.registerCounter("libp2p_noise_xxhandshake_successes_total",{help:"Total count of noise xxHandshakes successes_"}),xxHandshakeErrors:r.registerCounter("libp2p_noise_xxhandshake_error_total",{help:"Total count of noise xxHandshakes errors"}),encryptedPackets:r.registerCounter("libp2p_noise_encrypted_packets_total",{help:"Total count of noise encrypted packets successfully"}),decryptedPackets:r.registerCounter("libp2p_noise_decrypted_packets_total",{help:"Total count of noise decrypted packets"}),decryptErrors:r.registerCounter("libp2p_noise_decrypt_errors_total",{help:"Total count of noise decrypt errors"})}}let Noise$2=class{constructor(e={}){_(this,"protocol","/noise");_(this,"crypto");_(this,"prologue");_(this,"staticKeys");_(this,"extensions");_(this,"metrics");const{staticNoiseKey:t,extensions:n,crypto:i,prologueBytes:o,metrics:a}=e;this.crypto=i??defaultCrypto$2,this.extensions=n,this.metrics=a?registerMetrics$2(a):void 0,t?this.staticKeys=this.crypto.generateX25519KeyPairFromSeed(t):this.staticKeys=this.crypto.generateX25519KeyPair(),this.prologue=o??alloc$1(0)}async secureOutbound(e,t,n){const i=lpStream$1(t,{lengthEncoder:uint16BEEncode$2,lengthDecoder:uint16BEDecode$2,maxDataLength:NOISE_MSG_MAX_LENGTH_BYTES$2}),o=await this.performHandshake({connection:i,isInitiator:!0,localPeer:e,remotePeer:n});return{conn:await this.createSecureConnection(i,o),remoteExtensions:o.remoteExtensions,remotePeer:o.remotePeer}}async secureInbound(e,t,n){const i=lpStream$1(t,{lengthEncoder:uint16BEEncode$2,lengthDecoder:uint16BEDecode$2,maxDataLength:NOISE_MSG_MAX_LENGTH_BYTES$2}),o=await this.performHandshake({connection:i,isInitiator:!1,localPeer:e,remotePeer:n});return{conn:await this.createSecureConnection(i,o),remotePeer:o.remotePeer,remoteExtensions:o.remoteExtensions}}async performHandshake(e){const t=await getPayload$2(e.localPeer,this.staticKeys.publicKey,this.extensions);return this.performXXHandshake(e,t)}async performXXHandshake(e,t){const{isInitiator:n,remotePeer:i,connection:o}=e,a=new XXHandshake$2(n,t,this.prologue,this.crypto,this.staticKeys,o,i);try{await a.propose(),await a.exchange(),await a.finish(),this.metrics?.xxHandshakeSuccesses.increment()}catch(c){if(this.metrics?.xxHandshakeErrors.increment(),c instanceof Error)throw c.message=`Error occurred during XX handshake: ${c.message}`,c}return a}async createSecureConnection(e,t){const[n,i]=duplexPair(),o=e.unwrap();return await pipe(n,encryptStream$2(t,this.metrics),o,a=>decode$h(a,{lengthDecoder:uint16BEDecode$2}),decryptStream$2(t,this.metrics),n),i}};function noise$2(r={}){return()=>new Noise$2(r)}var src$5={exports:{}};function base$3(r){if(r.length>=255)throw new TypeError("Alphabet too long");for(var e=new Uint8Array(256),t=0;t<e.length;t++)e[t]=255;for(var n=0;n<r.length;n++){var i=r.charAt(n),o=i.charCodeAt(0);if(e[o]!==255)throw new TypeError(i+" is ambiguous");e[o]=n}var a=r.length,c=r.charAt(0),l=Math.log(a)/Math.log(256),u=Math.log(256)/Math.log(a);function f(S){if(S instanceof Uint8Array||(ArrayBuffer.isView(S)?S=new Uint8Array(S.buffer,S.byteOffset,S.byteLength):Array.isArray(S)&&(S=Uint8Array.from(S))),!(S instanceof Uint8Array))throw new TypeError("Expected Uint8Array");if(S.length===0)return"";for(var E=0,v=0,T=0,I=S.length;T!==I&&S[T]===0;)T++,E++;for(var A=(I-T)*u+1>>>0,P=new Uint8Array(A);T!==I;){for(var x=S[T],D=0,C=A-1;(x!==0||D<v)&&C!==-1;C--,D++)x+=256*P[C]>>>0,P[C]=x%a>>>0,x=x/a>>>0;if(x!==0)throw new Error("Non-zero carry");v=D,T++}for(var k=A-v;k!==A&&P[k]===0;)k++;for(var N=c.repeat(E);k<A;++k)N+=r.charAt(P[k]);return N}function g(S){if(typeof S!="string")throw new TypeError("Expected String");if(S.length===0)return new Uint8Array;var E=0;if(S[E]!==" "){for(var v=0,T=0;S[E]===c;)v++,E++;for(var I=(S.length-E)*l+1>>>0,A=new Uint8Array(I);S[E];){var P=e[S.charCodeAt(E)];if(P===255)return;for(var x=0,D=I-1;(P!==0||x<T)&&D!==-1;D--,x++)P+=a*A[D]>>>0,A[D]=P%256>>>0,P=P/256>>>0;if(P!==0)throw new Error("Non-zero carry");T=x,E++}if(S[E]!==" "){for(var C=I-T;C!==I&&A[C]===0;)C++;for(var k=new Uint8Array(v+(I-C)),N=v;C!==I;)k[N++]=A[C++];return k}}}function $(S){var E=g(S);if(E)return E;throw new Error("Non-base"+a+" character")}return{encode:f,decodeUnsafe:g,decode:$}}var src$4=base$3;const textDecoder=new TextDecoder,decodeText$1=r=>textDecoder.decode(r),textEncoder=new TextEncoder,encodeText$2=r=>textEncoder.encode(r);function concat$4(r,e){const t=new Uint8Array(e);let n=0;for(const i of r)t.set(i,n),n+=i.length;return t}var util={decodeText:decodeText$1,encodeText:encodeText$2,concat:concat$4};const{encodeText:encodeText$1}=util;let Base$1=class{constructor(e,t,n,i){this.name=e,this.code=t,this.codeBuf=encodeText$1(this.code),this.alphabet=i,this.codec=n(i)}encode(e){return this.codec.encode(e)}decode(e){for(const t of e)if(this.alphabet&&this.alphabet.indexOf(t)<0)throw new Error(`invalid character '${t}' in '${e}'`);return this.codec.decode(e)}};var base$2=Base$1;const decode$9=(r,e,t)=>{const n={};for(let u=0;u<e.length;++u)n[e[u]]=u;let i=r.length;for(;r[i-1]==="=";)--i;const o=new Uint8Array(i*t/8|0);let a=0,c=0,l=0;for(let u=0;u<i;++u){const f=n[r[u]];if(f===void 0)throw new SyntaxError("Invalid character "+r[u]);c=c<<t|f,a+=t,a>=8&&(a-=8,o[l++]=255&c>>a)}if(a>=t||255&c<<8-a)throw new SyntaxError("Unexpected end of data");return o},encode$7=(r,e,t)=>{const n=e[e.length-1]==="=",i=(1<<t)-1;let o="",a=0,c=0;for(let l=0;l<r.length;++l)for(c=c<<8|r[l],a+=8;a>t;)a-=t,o+=e[i&c>>a];if(a&&(o+=e[i&c<<t-a]),n)for(;o.length*t&7;)o+="=";return o},rfc4648$3=r=>e=>({encode(t){return encode$7(t,e,r)},decode(t){return decode$9(t,e,r)}});var rfc4648_1={rfc4648:rfc4648$3};const baseX$2=src$4,Base=base$2,{rfc4648:rfc4648$2}=rfc4648_1,{decodeText,encodeText}=util,identity$2=()=>({encode:decodeText,decode:encodeText}),constants$1=[["identity","\0",identity$2,""],["base2","0",rfc4648$2(1),"01"],["base8","7",rfc4648$2(3),"01234567"],["base10","9",baseX$2,"0123456789"],["base16","f",rfc4648$2(4),"0123456789abcdef"],["base16upper","F",rfc4648$2(4),"0123456789ABCDEF"],["base32hex","v",rfc4648$2(5),"0123456789abcdefghijklmnopqrstuv"],["base32hexupper","V",rfc4648$2(5),"0123456789ABCDEFGHIJKLMNOPQRSTUV"],["base32hexpad","t",rfc4648$2(5),"0123456789abcdefghijklmnopqrstuv="],["base32hexpadupper","T",rfc4648$2(5),"0123456789ABCDEFGHIJKLMNOPQRSTUV="],["base32","b",rfc4648$2(5),"abcdefghijklmnopqrstuvwxyz234567"],["base32upper","B",rfc4648$2(5),"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567"],["base32pad","c",rfc4648$2(5),"abcdefghijklmnopqrstuvwxyz234567="],["base32padupper","C",rfc4648$2(5),"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567="],["base32z","h",rfc4648$2(5),"ybndrfg8ejkmcpqxot1uwisza345h769"],["base36","k",baseX$2,"0123456789abcdefghijklmnopqrstuvwxyz"],["base36upper","K",baseX$2,"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"],["base58btc","z",baseX$2,"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"],["base58flickr","Z",baseX$2,"123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"],["base64","m",rfc4648$2(6),"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"],["base64pad","M",rfc4648$2(6),"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/="],["base64url","u",rfc4648$2(6),"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_"],["base64urlpad","U",rfc4648$2(6),"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_="]],names$2=constants$1.reduce((r,e)=>(r[e[0]]=new Base(e[0],e[1],e[2],e[3]),r),{}),codes$4=constants$1.reduce((r,e)=>(r[e[1]]=names$2[e[0]],r),{});var constants_1={names:names$2,codes:codes$4};(function(r,e){const t=constants_1,{encodeText:n,decodeText:i,concat:o}=util;function a(v,T){if(!T)throw new Error("requires an encoded Uint8Array");const{name:I,codeBuf:A}=g(v);return f(I,T),o([A,T],A.length+T.length)}function c(v,T){const I=g(v),A=n(I.encode(T));return o([I.codeBuf,A],I.codeBuf.length+A.length)}function l(v){v instanceof Uint8Array&&(v=i(v));const T=v[0];return["f","F","v","V","t","T","b","B","c","C","h","k","K"].includes(T)&&(v=v.toLowerCase()),g(v[0]).decode(v.substring(1))}function u(v){if(v instanceof Uint8Array&&(v=i(v)),Object.prototype.toString.call(v)!=="[object String]")return!1;try{return g(v[0]).name}catch{return!1}}function f(v,T){g(v).decode(i(T))}function g(v){if(Object.prototype.hasOwnProperty.call(t.names,v))return t.names[v];if(Object.prototype.hasOwnProperty.call(t.codes,v))return t.codes[v];throw new Error(`Unsupported encoding: ${v}`)}function $(v){return v instanceof Uint8Array&&(v=i(v)),g(v[0])}e=r.exports=a,e.encode=c,e.decode=l,e.isEncoded=u,e.encoding=g,e.encodingFromData=$;const S=Object.freeze(t.names),E=Object.freeze(t.codes);e.names=S,e.codes=E})(src$5,src$5.exports);var srcExports=src$5.exports,encode_1$1=encode$6,MSB$3=128,REST$3=127,MSBALL$1=~REST$3,INT$1=Math.pow(2,31);function encode$6(r,e,t){e=e||[],t=t||0;for(var n=t;r>=INT$1;)e[t++]=r&255|MSB$3,r/=128;for(;r&MSBALL$1;)e[t++]=r&255|MSB$3,r>>>=7;return e[t]=r|0,encode$6.bytes=t-n+1,e}var decode$8=read$2,MSB$2=128,REST$2=127;function read$2(r,n){var t=0,n=n||0,i=0,o=n,a,c=r.length;do{if(o>=c)throw read$2.bytes=0,new RangeError("Could not decode varint");a=r[o++],t+=i<28?(a&REST$2)<<i:(a&REST$2)*Math.pow(2,i),i+=7}while(a>=MSB$2);return read$2.bytes=o-n,t}var N1$1=Math.pow(2,7),N2$1=Math.pow(2,14),N3$1=Math.pow(2,21),N4$1=Math.pow(2,28),N5$1=Math.pow(2,35),N6$1=Math.pow(2,42),N7$1=Math.pow(2,49),N8$1=Math.pow(2,56),N9$1=Math.pow(2,63),length$1=function(r){return r<N1$1?1:r<N2$1?2:r<N3$1?3:r<N4$1?4:r<N5$1?5:r<N6$1?6:r<N7$1?7:r<N8$1?8:r<N9$1?9:10},varint$5={encode:encode_1$1,decode:decode$8,encodingLength:length$1};const names$1=Object.freeze({identity:0,sha1:17,"sha2-256":18,"sha2-512":19,"sha3-512":20,"sha3-384":21,"sha3-256":22,"sha3-224":23,"shake-128":24,"shake-256":25,"keccak-224":26,"keccak-256":27,"keccak-384":28,"keccak-512":29,blake3:30,"murmur3-128":34,"murmur3-32":35,"dbl-sha2-256":86,md4:212,md5:213,bmt:214,"sha2-256-trunc254-padded":4114,"ripemd-128":4178,"ripemd-160":4179,"ripemd-256":4180,"ripemd-320":4181,x11:4352,kangarootwelve:7425,"sm3-256":21325,"blake2b-8":45569,"blake2b-16":45570,"blake2b-24":45571,"blake2b-32":45572,"blake2b-40":45573,"blake2b-48":45574,"blake2b-56":45575,"blake2b-64":45576,"blake2b-72":45577,"blake2b-80":45578,"blake2b-88":45579,"blake2b-96":45580,"blake2b-104":45581,"blake2b-112":45582,"blake2b-120":45583,"blake2b-128":45584,"blake2b-136":45585,"blake2b-144":45586,"blake2b-152":45587,"blake2b-160":45588,"blake2b-168":45589,"blake2b-176":45590,"blake2b-184":45591,"blake2b-192":45592,"blake2b-200":45593,"blake2b-208":45594,"blake2b-216":45595,"blake2b-224":45596,"blake2b-232":45597,"blake2b-240":45598,"blake2b-248":45599,"blake2b-256":45600,"blake2b-264":45601,"blake2b-272":45602,"blake2b-280":45603,"blake2b-288":45604,"blake2b-296":45605,"blake2b-304":45606,"blake2b-312":45607,"blake2b-320":45608,"blake2b-328":45609,"blake2b-336":45610,"blake2b-344":45611,"blake2b-352":45612,"blake2b-360":45613,"blake2b-368":45614,"blake2b-376":45615,"blake2b-384":45616,"blake2b-392":45617,"blake2b-400":45618,"blake2b-408":45619,"blake2b-416":45620,"blake2b-424":45621,"blake2b-432":45622,"blake2b-440":45623,"blake2b-448":45624,"blake2b-456":45625,"blake2b-464":45626,"blake2b-472":45627,"blake2b-480":45628,"blake2b-488":45629,"blake2b-496":45630,"blake2b-504":45631,"blake2b-512":45632,"blake2s-8":45633,"blake2s-16":45634,"blake2s-24":45635,"blake2s-32":45636,"blake2s-40":45637,"blake2s-48":45638,"blake2s-56":45639,"blake2s-64":45640,"blake2s-72":45641,"blake2s-80":45642,"blake2s-88":45643,"blake2s-96":45644,"blake2s-104":45645,"blake2s-112":45646,"blake2s-120":45647,"blake2s-128":45648,"blake2s-136":45649,"blake2s-144":45650,"blake2s-152":45651,"blake2s-160":45652,"blake2s-168":45653,"blake2s-176":45654,"blake2s-184":45655,"blake2s-192":45656,"blake2s-200":45657,"blake2s-208":45658,"blake2s-216":45659,"blake2s-224":45660,"blake2s-232":45661,"blake2s-240":45662,"blake2s-248":45663,"blake2s-256":45664,"skein256-8":45825,"skein256-16":45826,"skein256-24":45827,"skein256-32":45828,"skein256-40":45829,"skein256-48":45830,"skein256-56":45831,"skein256-64":45832,"skein256-72":45833,"skein256-80":45834,"skein256-88":45835,"skein256-96":45836,"skein256-104":45837,"skein256-112":45838,"skein256-120":45839,"skein256-128":45840,"skein256-136":45841,"skein256-144":45842,"skein256-152":45843,"skein256-160":45844,"skein256-168":45845,"skein256-176":45846,"skein256-184":45847,"skein256-192":45848,"skein256-200":45849,"skein256-208":45850,"skein256-216":45851,"skein256-224":45852,"skein256-232":45853,"skein256-240":45854,"skein256-248":45855,"skein256-256":45856,"skein512-8":45857,"skein512-16":45858,"skein512-24":45859,"skein512-32":45860,"skein512-40":45861,"skein512-48":45862,"skein512-56":45863,"skein512-64":45864,"skein512-72":45865,"skein512-80":45866,"skein512-88":45867,"skein512-96":45868,"skein512-104":45869,"skein512-112":45870,"skein512-120":45871,"skein512-128":45872,"skein512-136":45873,"skein512-144":45874,"skein512-152":45875,"skein512-160":45876,"skein512-168":45877,"skein512-176":45878,"skein512-184":45879,"skein512-192":45880,"skein512-200":45881,"skein512-208":45882,"skein512-216":45883,"skein512-224":45884,"skein512-232":45885,"skein512-240":45886,"skein512-248":45887,"skein512-256":45888,"skein512-264":45889,"skein512-272":45890,"skein512-280":45891,"skein512-288":45892,"skein512-296":45893,"skein512-304":45894,"skein512-312":45895,"skein512-320":45896,"skein512-328":45897,"skein512-336":45898,"skein512-344":45899,"skein512-352":45900,"skein512-360":45901,"skein512-368":45902,"skein512-376":45903,"skein512-384":45904,"skein512-392":45905,"skein512-400":45906,"skein512-408":45907,"skein512-416":45908,"skein512-424":45909,"skein512-432":45910,"skein512-440":45911,"skein512-448":45912,"skein512-456":45913,"skein512-464":45914,"skein512-472":45915,"skein512-480":45916,"skein512-488":45917,"skein512-496":45918,"skein512-504":45919,"skein512-512":45920,"skein1024-8":45921,"skein1024-16":45922,"skein1024-24":45923,"skein1024-32":45924,"skein1024-40":45925,"skein1024-48":45926,"skein1024-56":45927,"skein1024-64":45928,"skein1024-72":45929,"skein1024-80":45930,"skein1024-88":45931,"skein1024-96":45932,"skein1024-104":45933,"skein1024-112":45934,"skein1024-120":45935,"skein1024-128":45936,"skein1024-136":45937,"skein1024-144":45938,"skein1024-152":45939,"skein1024-160":45940,"skein1024-168":45941,"skein1024-176":45942,"skein1024-184":45943,"skein1024-192":45944,"skein1024-200":45945,"skein1024-208":45946,"skein1024-216":45947,"skein1024-224":45948,"skein1024-232":45949,"skein1024-240":45950,"skein1024-248":45951,"skein1024-256":45952,"skein1024-264":45953,"skein1024-272":45954,"skein1024-280":45955,"skein1024-288":45956,"skein1024-296":45957,"skein1024-304":45958,"skein1024-312":45959,"skein1024-320":45960,"skein1024-328":45961,"skein1024-336":45962,"skein1024-344":45963,"skein1024-352":45964,"skein1024-360":45965,"skein1024-368":45966,"skein1024-376":45967,"skein1024-384":45968,"skein1024-392":45969,"skein1024-400":45970,"skein1024-408":45971,"skein1024-416":45972,"skein1024-424":45973,"skein1024-432":45974,"skein1024-440":45975,"skein1024-448":45976,"skein1024-456":45977,"skein1024-464":45978,"skein1024-472":45979,"skein1024-480":45980,"skein1024-488":45981,"skein1024-496":45982,"skein1024-504":45983,"skein1024-512":45984,"skein1024-520":45985,"skein1024-528":45986,"skein1024-536":45987,"skein1024-544":45988,"skein1024-552":45989,"skein1024-560":45990,"skein1024-568":45991,"skein1024-576":45992,"skein1024-584":45993,"skein1024-592":45994,"skein1024-600":45995,"skein1024-608":45996,"skein1024-616":45997,"skein1024-624":45998,"skein1024-632":45999,"skein1024-640":46e3,"skein1024-648":46001,"skein1024-656":46002,"skein1024-664":46003,"skein1024-672":46004,"skein1024-680":46005,"skein1024-688":46006,"skein1024-696":46007,"skein1024-704":46008,"skein1024-712":46009,"skein1024-720":46010,"skein1024-728":46011,"skein1024-736":46012,"skein1024-744":46013,"skein1024-752":46014,"skein1024-760":46015,"skein1024-768":46016,"skein1024-776":46017,"skein1024-784":46018,"skein1024-792":46019,"skein1024-800":46020,"skein1024-808":46021,"skein1024-816":46022,"skein1024-824":46023,"skein1024-832":46024,"skein1024-840":46025,"skein1024-848":46026,"skein1024-856":46027,"skein1024-864":46028,"skein1024-872":46029,"skein1024-880":46030,"skein1024-888":46031,"skein1024-896":46032,"skein1024-904":46033,"skein1024-912":46034,"skein1024-920":46035,"skein1024-928":46036,"skein1024-936":46037,"skein1024-944":46038,"skein1024-952":46039,"skein1024-960":46040,"skein1024-968":46041,"skein1024-976":46042,"skein1024-984":46043,"skein1024-992":46044,"skein1024-1000":46045,"skein1024-1008":46046,"skein1024-1016":46047,"skein1024-1024":46048,"poseidon-bls12_381-a2-fc1":46081,"poseidon-bls12_381-a2-fc1-sc":46082});var constants={names:names$1};function base$1(r,e){if(r.length>=255)throw new TypeError("Alphabet too long");for(var t=new Uint8Array(256),n=0;n<t.length;n++)t[n]=255;for(var i=0;i<r.length;i++){var o=r.charAt(i),a=o.charCodeAt(0);if(t[a]!==255)throw new TypeError(o+" is ambiguous");t[a]=i}var c=r.length,l=r.charAt(0),u=Math.log(c)/Math.log(256),f=Math.log(256)/Math.log(c);function g(E){if(E instanceof Uint8Array||(ArrayBuffer.isView(E)?E=new Uint8Array(E.buffer,E.byteOffset,E.byteLength):Array.isArray(E)&&(E=Uint8Array.from(E))),!(E instanceof Uint8Array))throw new TypeError("Expected Uint8Array");if(E.length===0)return"";for(var v=0,T=0,I=0,A=E.length;I!==A&&E[I]===0;)I++,v++;for(var P=(A-I)*f+1>>>0,x=new Uint8Array(P);I!==A;){for(var D=E[I],C=0,k=P-1;(D!==0||C<T)&&k!==-1;k--,C++)D+=256*x[k]>>>0,x[k]=D%c>>>0,D=D/c>>>0;if(D!==0)throw new Error("Non-zero carry");T=C,I++}for(var N=P-T;N!==P&&x[N]===0;)N++;for(var L=l.repeat(v);N<P;++N)L+=r.charAt(x[N]);return L}function $(E){if(typeof E!="string")throw new TypeError("Expected String");if(E.length===0)return new Uint8Array;var v=0;if(E[v]!==" "){for(var T=0,I=0;E[v]===l;)T++,v++;for(var A=(E.length-v)*u+1>>>0,P=new Uint8Array(A);E[v];){var x=t[E.charCodeAt(v)];if(x===255)return;for(var D=0,C=A-1;(x!==0||D<I)&&C!==-1;C--,D++)x+=c*P[C]>>>0,P[C]=x%256>>>0,x=x/256>>>0;if(x!==0)throw new Error("Non-zero carry");I=D,v++}if(E[v]!==" "){for(var k=A-I;k!==A&&P[k]===0;)k++;for(var N=new Uint8Array(T+(A-k)),L=T;k!==A;)N[L++]=P[k++];return N}}}function S(E){var v=$(E);if(v)return v;throw new Error(`Non-${e} character`)}return{encode:g,decodeUnsafe:$,decode:S}}var src$3=base$1,_brrp__multiformats_scope_baseX$1=src$3;const coerce$1=r=>{if(r instanceof Uint8Array&&r.constructor.name==="Uint8Array")return r;if(r instanceof ArrayBuffer)return new Uint8Array(r);if(ArrayBuffer.isView(r))return new Uint8Array(r.buffer,r.byteOffset,r.byteLength);throw new Error("Unknown type, must be binary type")},fromString$6=r=>new TextEncoder().encode(r),toString$6=r=>new TextDecoder().decode(r);let Encoder$1=class{constructor(e,t,n){this.name=e,this.prefix=t,this.baseEncode=n}encode(e){if(e instanceof Uint8Array)return`${this.prefix}${this.baseEncode(e)}`;throw Error("Unknown type, must be binary type")}},Decoder$2=class{constructor(e,t,n){if(this.name=e,this.prefix=t,t.codePointAt(0)===void 0)throw new Error("Invalid prefix character");this.prefixCodePoint=t.codePointAt(0),this.baseDecode=n}decode(e){if(typeof e=="string"){if(e.codePointAt(0)!==this.prefixCodePoint)throw Error(`Unable to decode multibase string ${JSON.stringify(e)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);return this.baseDecode(e.slice(this.prefix.length))}else throw Error("Can only multibase decode strings")}or(e){return or$1(this,e)}},ComposedDecoder$1=class{constructor(e){this.decoders=e}or(e){return or$1(this,e)}decode(e){const t=e[0],n=this.decoders[t];if(n)return n.decode(e);throw RangeError(`Unable to decode multibase string ${JSON.stringify(e)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`)}};const or$1=(r,e)=>new ComposedDecoder$1({...r.decoders||{[r.prefix]:r},...e.decoders||{[e.prefix]:e}});let Codec$1=class{constructor(e,t,n,i){this.name=e,this.prefix=t,this.baseEncode=n,this.baseDecode=i,this.encoder=new Encoder$1(e,t,n),this.decoder=new Decoder$2(e,t,i)}encode(e){return this.encoder.encode(e)}decode(e){return this.decoder.decode(e)}};const from$1=({name:r,prefix:e,encode:t,decode:n})=>new Codec$1(r,e,t,n),baseX$1=({prefix:r,name:e,alphabet:t})=>{const{encode:n,decode:i}=_brrp__multiformats_scope_baseX$1(t,e);return from$1({prefix:r,name:e,encode:n,decode:o=>coerce$1(i(o))})},decode$7=(r,e,t,n)=>{const i={};for(let f=0;f<e.length;++f)i[e[f]]=f;let o=r.length;for(;r[o-1]==="=";)--o;const a=new Uint8Array(o*t/8|0);let c=0,l=0,u=0;for(let f=0;f<o;++f){const g=i[r[f]];if(g===void 0)throw new SyntaxError(`Non-${n} character`);l=l<<t|g,c+=t,c>=8&&(c-=8,a[u++]=255&l>>c)}if(c>=t||255&l<<8-c)throw new SyntaxError("Unexpected end of data");return a},encode$5=(r,e,t)=>{const n=e[e.length-1]==="=",i=(1<<t)-1;let o="",a=0,c=0;for(let l=0;l<r.length;++l)for(c=c<<8|r[l],a+=8;a>t;)a-=t,o+=e[i&c>>a];if(a&&(o+=e[i&c<<t-a]),n)for(;o.length*t&7;)o+="=";return o},rfc4648$1=({name:r,prefix:e,bitsPerChar:t,alphabet:n})=>from$1({prefix:e,name:r,encode(i){return encode$5(i,n,t)},decode(i){return decode$7(i,n,t,r)}}),identity$1=from$1({prefix:"\0",name:"identity",encode:r=>toString$6(r),decode:r=>fromString$6(r)}),identityBase$1=Object.freeze(Object.defineProperty({__proto__:null,identity:identity$1},Symbol.toStringTag,{value:"Module"})),base2$2=rfc4648$1({prefix:"0",name:"base2",alphabet:"01",bitsPerChar:1}),base2$3=Object.freeze(Object.defineProperty({__proto__:null,base2:base2$2},Symbol.toStringTag,{value:"Module"})),base8$2=rfc4648$1({prefix:"7",name:"base8",alphabet:"01234567",bitsPerChar:3}),base8$3=Object.freeze(Object.defineProperty({__proto__:null,base8:base8$2},Symbol.toStringTag,{value:"Module"})),base10$2=baseX$1({prefix:"9",name:"base10",alphabet:"0123456789"}),base10$3=Object.freeze(Object.defineProperty({__proto__:null,base10:base10$2},Symbol.toStringTag,{value:"Module"})),base16$2=rfc4648$1({prefix:"f",name:"base16",alphabet:"0123456789abcdef",bitsPerChar:4}),base16upper$1=rfc4648$1({prefix:"F",name:"base16upper",alphabet:"0123456789ABCDEF",bitsPerChar:4}),base16$3=Object.freeze(Object.defineProperty({__proto__:null,base16:base16$2,base16upper:base16upper$1},Symbol.toStringTag,{value:"Module"})),base32$3=rfc4648$1({prefix:"b",name:"base32",alphabet:"abcdefghijklmnopqrstuvwxyz234567",bitsPerChar:5}),base32upper$1=rfc4648$1({prefix:"B",name:"base32upper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567",bitsPerChar:5}),base32pad$1=rfc4648$1({prefix:"c",name:"base32pad",alphabet:"abcdefghijklmnopqrstuvwxyz234567=",bitsPerChar:5}),base32padupper$1=rfc4648$1({prefix:"C",name:"base32padupper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=",bitsPerChar:5}),base32hex$1=rfc4648$1({prefix:"v",name:"base32hex",alphabet:"0123456789abcdefghijklmnopqrstuv",bitsPerChar:5}),base32hexupper$1=rfc4648$1({prefix:"V",name:"base32hexupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV",bitsPerChar:5}),base32hexpad$1=rfc4648$1({prefix:"t",name:"base32hexpad",alphabet:"0123456789abcdefghijklmnopqrstuv=",bitsPerChar:5}),base32hexpadupper$1=rfc4648$1({prefix:"T",name:"base32hexpadupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV=",bitsPerChar:5}),base32z$1=rfc4648$1({prefix:"h",name:"base32z",alphabet:"ybndrfg8ejkmcpqxot1uwisza345h769",bitsPerChar:5}),base32$4=Object.freeze(Object.defineProperty({__proto__:null,base32:base32$3,base32hex:base32hex$1,base32hexpad:base32hexpad$1,base32hexpadupper:base32hexpadupper$1,base32hexupper:base32hexupper$1,base32pad:base32pad$1,base32padupper:base32padupper$1,base32upper:base32upper$1,base32z:base32z$1},Symbol.toStringTag,{value:"Module"})),base36$2=baseX$1({prefix:"k",name:"base36",alphabet:"0123456789abcdefghijklmnopqrstuvwxyz"}),base36upper$1=baseX$1({prefix:"K",name:"base36upper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"}),base36$3=Object.freeze(Object.defineProperty({__proto__:null,base36:base36$2,base36upper:base36upper$1},Symbol.toStringTag,{value:"Module"})),base58btc$3=baseX$1({name:"base58btc",prefix:"z",alphabet:"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"}),base58flickr$1=baseX$1({name:"base58flickr",prefix:"Z",alphabet:"123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"}),base58$1=Object.freeze(Object.defineProperty({__proto__:null,base58btc:base58btc$3,base58flickr:base58flickr$1},Symbol.toStringTag,{value:"Module"})),base64$2=rfc4648$1({prefix:"m",name:"base64",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",bitsPerChar:6}),base64pad$1=rfc4648$1({prefix:"M",name:"base64pad",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",bitsPerChar:6}),base64url$1=rfc4648$1({prefix:"u",name:"base64url",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_",bitsPerChar:6}),base64urlpad$1=rfc4648$1({prefix:"U",name:"base64urlpad",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=",bitsPerChar:6}),base64$3=Object.freeze(Object.defineProperty({__proto__:null,base64:base64$2,base64pad:base64pad$1,base64url:base64url$1,base64urlpad:base64urlpad$1},Symbol.toStringTag,{value:"Module"})),alphabet$1=Array.from("🚀🪐☄🛰🌌🌑🌒🌓🌔🌕🌖🌗🌘🌍🌏🌎🐉☀💻🖥💾💿😂❤😍🤣😊🙏💕😭😘👍😅👏😁🔥🥰💔💖💙😢🤔😆🙄💪😉☺👌🤗💜😔😎😇🌹🤦🎉💞✌✨🤷😱😌🌸🙌😋💗💚😏💛🙂💓🤩😄😀🖤😃💯🙈👇🎶😒🤭❣😜💋👀😪😑💥🙋😞😩😡🤪👊🥳😥🤤👉💃😳✋😚😝😴🌟😬🙃🍀🌷😻😓⭐✅🥺🌈😈🤘💦✔😣🏃💐☹🎊💘😠☝😕🌺🎂🌻😐🖕💝🙊😹🗣💫💀👑🎵🤞😛🔴😤🌼😫⚽🤙☕🏆🤫👈😮🙆🍻🍃🐶💁😲🌿🧡🎁⚡🌞🎈❌✊👋😰🤨😶🤝🚶💰🍓💢🤟🙁🚨💨🤬✈🎀🍺🤓😙💟🌱😖👶🥴▶➡❓💎💸⬇😨🌚🦋😷🕺⚠🙅😟😵👎🤲🤠🤧📌🔵💅🧐🐾🍒😗🤑🌊🤯🐷☎💧😯💆👆🎤🙇🍑❄🌴💣🐸💌📍🥀🤢👅💡💩👐📸👻🤐🤮🎼🥵🚩🍎🍊👼💍📣🥂"),alphabetBytesToChars$1=alphabet$1.reduce((r,e,t)=>(r[t]=e,r),[]),alphabetCharsToBytes$1=alphabet$1.reduce((r,e,t)=>(r[e.codePointAt(0)]=t,r),[]);function encode$4(r){return r.reduce((e,t)=>(e+=alphabetBytesToChars$1[t],e),"")}function decode$6(r){const e=[];for(const t of r){const n=alphabetCharsToBytes$1[t.codePointAt(0)];if(n===void 0)throw new Error(`Non-base256emoji character: ${t}`);e.push(n)}return new Uint8Array(e)}const base256emoji$2=from$1({prefix:"🚀",name:"base256emoji",encode:encode$4,decode:decode$6}),base256emoji$3=Object.freeze(Object.defineProperty({__proto__:null,base256emoji:base256emoji$2},Symbol.toStringTag,{value:"Module"}));new TextEncoder;new TextDecoder;const bases$1={...identityBase$1,...base2$3,...base8$3,...base10$3,...base16$3,...base32$4,...base36$3,...base58$1,...base64$3,...base256emoji$3};function asUint8Array$1(r){return globalThis.Buffer!=null?new Uint8Array(r.buffer,r.byteOffset,r.byteLength):r}function allocUnsafe$1(r=0){return globalThis.Buffer!=null&&globalThis.Buffer.allocUnsafe!=null?asUint8Array$1(globalThis.Buffer.allocUnsafe(r)):new Uint8Array(r)}function createCodec$1(r,e,t,n){return{name:r,prefix:e,encoder:{name:r,prefix:e,encode:t},decoder:{decode:n}}}const string$1=createCodec$1("utf8","u",r=>"u"+new TextDecoder("utf8").decode(r),r=>new TextEncoder().encode(r.substring(1))),ascii$1=createCodec$1("ascii","a",r=>{let e="a";for(let t=0;t<r.length;t++)e+=String.fromCharCode(r[t]);return e},r=>{r=r.substring(1);const e=allocUnsafe$1(r.length);for(let t=0;t<r.length;t++)e[t]=r.charCodeAt(t);return e}),BASES$1={utf8:string$1,"utf-8":string$1,hex:bases$1.base16,latin1:ascii$1,ascii:ascii$1,binary:ascii$1,...bases$1};function toString$4(r,e="utf8"){const t=BASES$1[e];if(!t)throw new Error(`Unsupported encoding "${e}"`);return(e==="utf8"||e==="utf-8")&&globalThis.Buffer!=null&&globalThis.Buffer.from!=null?globalThis.Buffer.from(r.buffer,r.byteOffset,r.byteLength).toString("utf8"):t.encoder.encode(r).substring(1)}const toString$5=Object.freeze(Object.defineProperty({__proto__:null,toString:toString$4},Symbol.toStringTag,{value:"Module"})),require$$3$3=getAugmentedNamespace(toString$5);function fromString$4(r,e="utf8"){const t=BASES$1[e];if(!t)throw new Error(`Unsupported encoding "${e}"`);return(e==="utf8"||e==="utf-8")&&globalThis.Buffer!=null&&globalThis.Buffer.from!=null?asUint8Array$1(globalThis.Buffer.from(r,"utf-8")):t.decoder.decode(`${t.prefix}${r}`)}const fromString$5=Object.freeze(Object.defineProperty({__proto__:null,fromString:fromString$4},Symbol.toStringTag,{value:"Module"})),require$$4$1=getAugmentedNamespace(fromString$5);function concat$2(r,e){e||(e=r.reduce((i,o)=>i+o.length,0));const t=allocUnsafe$1(e);let n=0;for(const i of r)t.set(i,n),n+=i.length;return asUint8Array$1(t)}const concat$3=Object.freeze(Object.defineProperty({__proto__:null,concat:concat$2},Symbol.toStringTag,{value:"Module"})),require$$5$1=getAugmentedNamespace(concat$3),multibase=srcExports,varint$4=varint$5,{names}=constants,{toString:uint8ArrayToString$4}=require$$3$3,{fromString:uint8ArrayFromString$1}=require$$4$1,{concat:uint8ArrayConcat$2}=require$$5$1,codes$3={};for(const r in names){const e=r;codes$3[names[e]]=e}Object.freeze(codes$3);function toHexString(r){if(!(r instanceof Uint8Array))throw new Error("must be passed a Uint8Array");return uint8ArrayToString$4(r,"base16")}function fromHexString(r){return uint8ArrayFromString$1(r,"base16")}function toB58String(r){if(!(r instanceof Uint8Array))throw new Error("must be passed a Uint8Array");return uint8ArrayToString$4(multibase.encode("base58btc",r)).slice(1)}function fromB58String(r){const e=r instanceof Uint8Array?uint8ArrayToString$4(r):r;return multibase.decode("z"+e)}function decode$5(r){if(!(r instanceof Uint8Array))throw new Error("multihash must be a Uint8Array");if(r.length<2)throw new Error("multihash too short. must be > 2 bytes.");const e=varint$4.decode(r);if(!isValidCode(e))throw new Error(`multihash unknown function code: 0x${e.toString(16)}`);r=r.slice(varint$4.decode.bytes);const t=varint$4.decode(r);if(t<0)throw new Error(`multihash invalid length: ${t}`);if(r=r.slice(varint$4.decode.bytes),r.length!==t)throw new Error(`multihash length inconsistent: 0x${uint8ArrayToString$4(r,"base16")}`);return{code:e,name:codes$3[e],length:t,digest:r}}function encode$3(r,e,t){if(!r||e===void 0)throw new Error("multihash encode requires at least two args: digest, code");const n=coerceCode(e);if(!(r instanceof Uint8Array))throw new Error("digest should be a Uint8Array");if(t==null&&(t=r.length),t&&r.length!==t)throw new Error("digest length should be equal to specified length.");const i=varint$4.encode(n),o=varint$4.encode(t);return uint8ArrayConcat$2([i,o,r],i.length+o.length+r.length)}function coerceCode(r){let e=r;if(typeof r=="string"){if(names[r]===void 0)throw new Error(`Unrecognized hash function named: ${r}`);e=names[r]}if(typeof e!="number")throw new Error(`Hash function code should be a number. Got: ${e}`);if(codes$3[e]===void 0&&!isAppCode(e))throw new Error(`Unrecognized function code: ${e}`);return e}function isAppCode(r){return r>0&&r<16}function isValidCode(r){return!!(isAppCode(r)||codes$3[r])}function validate$1(r){decode$5(r)}function prefix(r){return validate$1(r),r.subarray(0,2)}var src$2={names,codes:codes$3,toHexString,fromHexString,toB58String,fromB58String,decode:decode$5,encode:encode$3,coerceCode,isAppCode,validate:validate$1,prefix,isValidCode};const log$r=logger$5("libp2p:webrtc:sdp"),mbdecoder=Object.values(bases$2).map(r=>r.decoder).reduce((r,e)=>r.or(e));function getLocalFingerprint(r){const e=r.getConfiguration().certificates?.at(0);if(e==null||e.getFingerprints==null){log$r.trace("fetching fingerprint from local SDP");const n=r.localDescription;return n==null?void 0:getFingerprintFromSdp(n.sdp)}if(log$r.trace("fetching fingerprint from local certificate"),e.getFingerprints().length===0)return;const t=e.getFingerprints()[0].value;if(t==null)throw invalidFingerprint("","no fingerprint on local certificate");return t}const fingerprintRegex=/^a=fingerprint:(?:\w+-[0-9]+)\s(?<fingerprint>(:?[0-9a-fA-F]{2})+)$/m;function getFingerprintFromSdp(r){return r.match(fingerprintRegex)?.groups?.fingerprint}function ipv(r){for(const e of r.protoNames())if(e.startsWith("ip"))return e.toUpperCase();return log$r("Warning: multiaddr does not appear to contain IP4 or IP6, defaulting to IP6",r),"IP6"}function certhash(r){const t=r.stringTuples().filter(n=>n[0]===CERTHASH_CODE).map(n=>n[1])[0];if(t===void 0||t==="")throw inappropriateMultiaddr(`Couldn't find a certhash component of multiaddr: ${r.toString()}`);return t}function decodeCerthash(r){const e=mbdecoder.decode(r);return src$2.decode(e)}function ma2Fingerprint(r){const e=decodeCerthash(certhash(r)),t=toSupportedHashFunction(e.name),n=e.digest.reduce((o,a)=>o+a.toString(16).padStart(2,"0"),""),i=n.match(/.{1,2}/g);if(i==null)throw invalidFingerprint(n,r.toString());return[`${t.toUpperCase()} ${i.join(":").toUpperCase()}`,n]}function toSupportedHashFunction(r){switch(r){case"sha1":return"sha-1";case"sha2-256":return"sha-256";case"sha2-512":return"sha-512";default:throw unsupportedHashAlgorithm(r)}}function ma2sdp(r,e){const{host:t,port:n}=r.toOptions(),i=ipv(r),[o]=ma2Fingerprint(r);return`v=0
o=- 0 0 IN ${i} ${t}
s=-
c=IN ${i} ${t}
t=0 0
a=ice-lite
m=application ${n} UDP/DTLS/SCTP webrtc-datachannel
a=mid:0
a=setup:passive
a=ice-ufrag:${e}
a=ice-pwd:${e}
a=fingerprint:${o}
a=sctp-port:5000
a=max-message-size:16384
a=candidate:1467250027 1 UDP 1467250027 ${t} ${n} typ host\r
`}function fromMultiAddr(r,e){return{type:"answer",sdp:ma2sdp(r,e)}}function munge(r,e){if(r.sdp===void 0)throw invalidArgument("Can't munge a missing SDP");return r.sdp=r.sdp.replace(/\na=ice-ufrag:[^\n]*\n/,`
a=ice-ufrag:`+e+`
`).replace(/\na=ice-pwd:[^\n]*\n/,`
a=ice-pwd:`+e+`
`),r}const charset=Array.from("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"),genUfrag=r=>[...Array(r)].map(()=>charset.at(Math.floor(Math.random()*charset.length))).join(""),log$q=logger$5("libp2p:webrtc:transport"),HANDSHAKE_TIMEOUT_MS=1e4;getProtocol("webrtc-direct").code;const CERTHASH_CODE=getProtocol("certhash").code;var Or,Mr;class WebRTCDirectTransport{constructor(e,t={}){_(this,"metrics");_(this,"components");_(this,"init");_(this,Or,"@libp2p/webrtc-direct");_(this,Mr,!0);this.components=e,this.init=t,e.metrics!=null&&(this.metrics={dialerEvents:e.metrics.registerCounterGroup("libp2p_webrtc-direct_dialer_events_total",{label:"event",help:"Total count of WebRTC-direct dial events by type"})})}async dial(e,t){const n=await this._connect(e,t);return log$q("dialing address: %a",e),n}createListener(e){throw unimplemented("WebRTCTransport.createListener")}filter(e){return e.filter(WebRTCDirect$1.exactMatch)}async _connect(e,t){const n=new AbortController,i=n.signal,o=e.getPeerId();if(o===null)throw inappropriateMultiaddr("we need to have the remote's PeerId");const a=peerIdFromString$3(o),c=decodeCerthash(certhash(e)),l=await RTCPeerConnection.generateCertificate({name:"ECDSA",namedCurve:"P-256",hash:toSupportedHashFunction(c.name)}),u=new RTCPeerConnection({certificates:[l]});try{const f=new Promise((N,L)=>{const M=u.createDataChannel("",{negotiated:!0,id:0}),U=setTimeout(()=>{const z=`Data channel was never opened: state: ${M.readyState}`;log$q.error(z),this.metrics?.dialerEvents.increment({open_error:!0}),L(dataChannelError("data",z))},HANDSHAKE_TIMEOUT_MS);M.onopen=z=>{clearTimeout(U),N(M)},M.onerror=z=>{clearTimeout(U);const j=`Error opening a data channel for handshaking: ${z.target?.toString()??"not specified"}`;log$q.error(j),this.metrics?.dialerEvents.increment({unknown_error:!0}),L(dataChannelError("data",j))}}),g="libp2p+webrtc+v1/"+genUfrag(32),$=await u.createOffer(),S=munge($,g);await u.setLocalDescription(S);const E=fromMultiAddr(e,g);await u.setRemoteDescription(E);const v=await f,T=this.components.peerId,I=this.generateNoisePrologue(u,c.code,e),A=noise$2({prologueBytes:I})(),P=createStream({channel:v,direction:"inbound",...this.init.dataChannel??{}}),x={...P,sink:P.sink.bind(P),source:async function*(){for await(const N of P.source)for(const L of N)yield L}()},D=new WebRTCMultiaddrConnection({peerConnection:u,remoteAddr:e,timeline:{open:Date.now()},metrics:this.metrics?.dialerEvents}),C=isFirefox?"iceconnectionstatechange":"connectionstatechange";u.addEventListener(C,()=>{switch(u.connectionState){case"failed":case"disconnected":case"closed":D.close().catch(N=>{log$q.error("error closing connection",N)}).finally(()=>{n.abort()});break;default:break}},{signal:i}),this.metrics?.dialerEvents.increment({peer_connection:!0});const k=new DataChannelMuxerFactory({peerConnection:u,metrics:this.metrics?.dialerEvents,dataChannelOptions:this.init.dataChannel});return await A.secureInbound(T,x,a),await t.upgrader.upgradeOutbound(D,{skipProtection:!0,skipEncryption:!0,muxerFactory:k})}catch(f){throw u.close(),f}}generateNoisePrologue(e,t,n){if(e.getConfiguration().certificates?.length===0)throw invalidArgument("no local certificate");const i=getLocalFingerprint(e);if(i==null)throw invalidArgument("no local fingerprint found");const o=i.trim().toLowerCase().replaceAll(":",""),a=fromString$b(o,"hex"),c=src$2.encode(a,t),l=mbdecoder.decode(certhash(n)),u=fromString$b("libp2p-webrtc-noise:");return concat$6([u,c,l])}}Or=Symbol.toStringTag,Mr=symbol$2;function webRTCDirect(r){return e=>new WebRTCDirectTransport(e,r)}function webRTC(r){return e=>new WebRTCTransport(e,r)}function extractSNI(r){let e;try{e=getProtocol("sni").code}catch{return null}for(const[t,n]of r)if(t===e&&n!==void 0)return n;return null}function hasTLS(r){return r.some(([e,t])=>e===getProtocol("tls").code)}function interpretNext(r,e,t){const n=interpreters[getProtocol(r).name];if(n===void 0)throw new Error(`Can't interpret protocol ${getProtocol(r).name}`);const i=n(e,t);return r===getProtocol("ip6").code?`[${i}]`:i}const interpreters={ip4:(r,e)=>r,ip6:(r,e)=>e.length===0?r:`[${r}]`,tcp:(r,e)=>{const t=e.pop();if(t===void 0)throw new Error("Unexpected end of multiaddr");return`tcp://${interpretNext(t[0],t[1]??"",e)}:${r}`},udp:(r,e)=>{const t=e.pop();if(t===void 0)throw new Error("Unexpected end of multiaddr");return`udp://${interpretNext(t[0],t[1]??"",e)}:${r}`},dnsaddr:(r,e)=>r,dns4:(r,e)=>r,dns6:(r,e)=>r,dns:(r,e)=>r,ipfs:(r,e)=>{const t=e.pop();if(t===void 0)throw new Error("Unexpected end of multiaddr");return`${interpretNext(t[0],t[1]??"",e)}/ipfs/${r}`},p2p:(r,e)=>{const t=e.pop();if(t===void 0)throw new Error("Unexpected end of multiaddr");return`${interpretNext(t[0],t[1]??"",e)}/p2p/${r}`},http:(r,e)=>{const t=hasTLS(e),n=extractSNI(e);if(t&&n!==null)return`https://${n}`;const i=t?"https://":"http://",o=e.pop();if(o===void 0)throw new Error("Unexpected end of multiaddr");let a=interpretNext(o[0],o[1]??"",e);return a=a.replace("tcp://",""),`${i}${a}`},tls:(r,e)=>{const t=e.pop();if(t===void 0)throw new Error("Unexpected end of multiaddr");return interpretNext(t[0],t[1]??"",e)},sni:(r,e)=>{const t=e.pop();if(t===void 0)throw new Error("Unexpected end of multiaddr");return interpretNext(t[0],t[1]??"",e)},https:(r,e)=>{const t=e.pop();if(t===void 0)throw new Error("Unexpected end of multiaddr");let n=interpretNext(t[0],t[1]??"",e);return n=n.replace("tcp://",""),`https://${n}`},ws:(r,e)=>{const t=hasTLS(e),n=extractSNI(e);if(t&&n!==null)return`wss://${n}`;const i=t?"wss://":"ws://",o=e.pop();if(o===void 0)throw new Error("Unexpected end of multiaddr");let a=interpretNext(o[0],o[1]??"",e);return a=a.replace("tcp://",""),`${i}${a}`},wss:(r,e)=>{const t=e.pop();if(t===void 0)throw new Error("Unexpected end of multiaddr");let n=interpretNext(t[0],t[1]??"",e);return n=n.replace("tcp://",""),`wss://${n}`},"p2p-websocket-star":(r,e)=>{const t=e.pop();if(t===void 0)throw new Error("Unexpected end of multiaddr");return`${interpretNext(t[0],t[1]??"",e)}/p2p-websocket-star`},"p2p-webrtc-star":(r,e)=>{const t=e.pop();if(t===void 0)throw new Error("Unexpected end of multiaddr");return`${interpretNext(t[0],t[1]??"",e)}/p2p-webrtc-star`},"p2p-webrtc-direct":(r,e)=>{const t=e.pop();if(t===void 0)throw new Error("Unexpected end of multiaddr");return`${interpretNext(t[0],t[1]??"",e)}/p2p-webrtc-direct`}};function multiaddrToUri(r,e){const n=multiaddr$1(r).stringTuples(),i=n.pop();if(i===void 0)throw new Error("Unexpected end of multiaddr");const o=getProtocol(i[0]),a=interpreters[o.name];if(a==null)throw new Error(`No interpreter found for ${o.name}`);let c=a(i[1]??"",n);return e?.assumeHttp!==!1&&i[0]===getProtocol("tcp").code&&(c=c.replace("tcp://","http://"),(i[1]==="443"||i[1]==="80")&&(i[1]==="443"&&(c=c.replace("http://","https://")),c=c.substring(0,c.lastIndexOf(":")))),c}const ready=async r=>{if(r.readyState>=2)throw new Error("socket closed");r.readyState!==1&&await new Promise((e,t)=>{function n(){r.removeEventListener("open",i),r.removeEventListener("error",o)}function i(){n(),e()}function o(a){n(),t(a.error??new Error(`connect ECONNREFUSED ${r.url}`))}r.addEventListener("open",i),r.addEventListener("error",o)})},sink=(r,e)=>(e=e??{},e.closeOnEnd=e.closeOnEnd!==!1,async n=>{for await(const i of n){try{await ready(r)}catch(o){if(o.message==="socket closed")break;throw o}if(r.readyState===r.CLOSING||r.readyState===r.CLOSED)break;r.send(i)}e.closeOnEnd!=null&&r.readyState<=1&&await new Promise((i,o)=>{r.addEventListener("close",a=>{if(a.wasClean||a.code===1006)i();else{const c=Object.assign(new Error("ws error"),{event:a});o(c)}}),setTimeout(()=>{r.close()})})});var dom={},eventIterator={};Object.defineProperty(eventIterator,"__esModule",{value:!0});class EventQueue{constructor(){this.pullQueue=[],this.pushQueue=[],this.eventHandlers={},this.isPaused=!1,this.isStopped=!1}push(e){if(this.isStopped)return;const t={value:e,done:!1};if(this.pullQueue.length){const n=this.pullQueue.shift();n&&n.resolve(t)}else this.pushQueue.push(Promise.resolve(t)),this.highWaterMark!==void 0&&this.pushQueue.length>=this.highWaterMark&&!this.isPaused&&(this.isPaused=!0,this.eventHandlers.highWater?this.eventHandlers.highWater():console&&console.warn(`EventIterator queue reached ${this.pushQueue.length} items`))}stop(){if(!this.isStopped){this.isStopped=!0,this.remove();for(const e of this.pullQueue)e.resolve({value:void 0,done:!0});this.pullQueue.length=0}}fail(e){if(!this.isStopped)if(this.isStopped=!0,this.remove(),this.pullQueue.length){for(const t of this.pullQueue)t.reject(e);this.pullQueue.length=0}else{const t=Promise.reject(e);t.catch(()=>{}),this.pushQueue.push(t)}}remove(){Promise.resolve().then(()=>{this.removeCallback&&this.removeCallback()})}[Symbol.asyncIterator](){return{next:e=>{const t=this.pushQueue.shift();return t?(this.lowWaterMark!==void 0&&this.pushQueue.length<=this.lowWaterMark&&this.isPaused&&(this.isPaused=!1,this.eventHandlers.lowWater&&this.eventHandlers.lowWater()),t):this.isStopped?Promise.resolve({value:void 0,done:!0}):new Promise((n,i)=>{this.pullQueue.push({resolve:n,reject:i})})},return:()=>(this.isStopped=!0,this.pushQueue.length=0,this.remove(),Promise.resolve({value:void 0,done:!0}))}}}let EventIterator$1=class{constructor(e,{highWaterMark:t=100,lowWaterMark:n=1}={}){const i=new EventQueue;i.highWaterMark=t,i.lowWaterMark=n,i.removeCallback=e({push:o=>i.push(o),stop:()=>i.stop(),fail:o=>i.fail(o),on:(o,a)=>{i.eventHandlers[o]=a}})||(()=>{}),this[Symbol.asyncIterator]=()=>i[Symbol.asyncIterator](),Object.freeze(this)}};eventIterator.EventIterator=EventIterator$1;eventIterator.default=EventIterator$1;Object.defineProperty(dom,"__esModule",{value:!0});const event_iterator_1=eventIterator;var EventIterator=dom.EventIterator=event_iterator_1.EventIterator;function subscribe(r,e,t){return new event_iterator_1.EventIterator(({push:n})=>(this.addEventListener(r,n,e),()=>this.removeEventListener(r,n,e)),t)}dom.subscribe=subscribe;dom.default=event_iterator_1.EventIterator;function isArrayBuffer(r){return r instanceof ArrayBuffer||r?.constructor?.name==="ArrayBuffer"&&typeof r?.byteLength=="number"}const source=r=>{r.binaryType="arraybuffer";const e=async()=>{await new Promise((o,a)=>{if(n){o();return}if(i!=null){a(i);return}const c=f=>{r.removeEventListener("open",l),r.removeEventListener("error",u),f()},l=()=>{c(o)},u=f=>{c(()=>{a(f.error??new Error(`connect ECONNREFUSED ${r.url}`))})};r.addEventListener("open",l),r.addEventListener("error",u)})},t=async function*(){const o=new EventIterator(({push:a,stop:c,fail:l})=>{const u=g=>{let $=null;typeof g.data=="string"&&($=fromString$b(g.data)),isArrayBuffer(g.data)&&($=new Uint8Array(g.data)),g.data instanceof Uint8Array&&($=g.data),$!=null&&a($)},f=g=>{l(g.error??new Error("Socket error"))};return r.addEventListener("message",u),r.addEventListener("error",f),r.addEventListener("close",c),()=>{r.removeEventListener("message",u),r.removeEventListener("error",f),r.removeEventListener("close",c)}},{highWaterMark:1/0});await e();for await(const a of o)yield isArrayBuffer(a)?new Uint8Array(a):a}();let n=r.readyState===1,i;return r.addEventListener("open",()=>{n=!0,i=null}),r.addEventListener("close",()=>{n=!1,i=null}),r.addEventListener("error",o=>{n||(i=o.error??new Error(`connect ECONNREFUSED ${r.url}`))}),Object.assign(t,{connected:e})},duplex=(r,e)=>{e=e??{};const t=source(r);let n=e.remoteAddress,i=e.remotePort;if(r.url!=null)try{const a=new URL(r.url);n=a.hostname,i=parseInt(a.port,10)}catch{}if(n==null||i==null)throw new Error("Remote connection did not have address and/or port");return{sink:sink(r,e),source:t,connected:async()=>{await t.connected()},close:async()=>{(r.readyState===r.CONNECTING||r.readyState===r.OPEN)&&await new Promise(a=>{r.addEventListener("close",()=>{a()}),r.close()})},destroy:()=>{r.terminate!=null?r.terminate():r.close()},remoteAddress:n,remotePort:i,socket:r}},WebSocket$1=WebSocket,isReactNative$1=typeof navigator<"u"&&navigator.product==="ReactNative";function getDefaultBase(){return isReactNative$1?"http://localhost":self.location?self.location.protocol+"//"+self.location.host:""}const URL$1=self.URL,defaultBase$1=getDefaultBase();let URLWithLegacySupport$2=class{constructor(e="",t=defaultBase$1){this.super=new URL$1(e,t),this.path=this.pathname+this.search,this.auth=this.username&&this.password?this.username+":"+this.password:null,this.query=this.search&&this.search.startsWith("?")?this.search.slice(1):null}get hash(){return this.super.hash}get host(){return this.super.host}get hostname(){return this.super.hostname}get href(){return this.super.href}get origin(){return this.super.origin}get password(){return this.super.password}get pathname(){return this.super.pathname}get port(){return this.super.port}get protocol(){return this.super.protocol}get search(){return this.super.search}get searchParams(){return this.super.searchParams}get username(){return this.super.username}set hash(e){this.super.hash=e}set host(e){this.super.host=e}set hostname(e){this.super.hostname=e}set href(e){this.super.href=e}set password(e){this.super.password=e}set pathname(e){this.super.pathname=e}set port(e){this.super.port=e}set protocol(e){this.super.protocol=e}set search(e){this.super.search=e}set username(e){this.super.username=e}static createObjectURL(e){return URL$1.createObjectURL(e)}static revokeObjectURL(e){URL$1.revokeObjectURL(e)}toJSON(){return this.super.toJSON()}toString(){return this.super.toString()}format(){return this.toString()}};function format$2(r){if(typeof r=="string")return new URL$1(r).toString();if(!(r instanceof URL$1)){const e=r.username&&r.password?`${r.username}:${r.password}@`:"",t=r.auth?r.auth+"@":"",n=r.port?":"+r.port:"",i=r.protocol?r.protocol+"//":"",o=r.host||"",a=r.hostname||"",c=r.search||(r.query?"?"+r.query:""),l=r.hash||"",u=r.pathname||"",f=r.path||u+c;return`${i}${e||t}${o||a+n}${f}${l}`}}var urlBrowser={URLWithLegacySupport:URLWithLegacySupport$2,URLSearchParams:self.URLSearchParams,defaultBase:defaultBase$1,format:format$2};const{URLWithLegacySupport:URLWithLegacySupport$1,format:format$1}=urlBrowser;var relative$1=(r,e={},t={},n)=>{let i=e.protocol?e.protocol.replace(":",""):"http";i=(t[i]||n||i)+":";let o;try{o=new URLWithLegacySupport$1(r)}catch{o={}}const a=Object.assign({},e,{protocol:i||o.protocol,host:e.host||o.host});return new URLWithLegacySupport$1(r,format$1(a)).toString()};const{URLWithLegacySupport,format,URLSearchParams,defaultBase}=urlBrowser,relative=relative$1;var isoUrl={URL:URLWithLegacySupport,URLSearchParams,format,relative,defaultBase};const map={http:"ws",https:"wss"},def="ws",wsurl=(r,e)=>isoUrl.relative(r,e,map,def);function connect(r,e){const t=typeof window>"u"?"":window.location;e=e??{};const n=wsurl(r,t.toString()),i=new WebSocket$1(n,e.websocket);return duplex(i,e)}function isElectron$1(){return!!(typeof window<"u"&&typeof window.process=="object"&&window.process.type==="renderer"||typeof process<"u"&&typeof process.versions=="object"&&process.versions.electron||typeof navigator=="object"&&typeof navigator.userAgent=="string"&&navigator.userAgent.indexOf("Electron")>=0)}var isElectron_1=isElectron$1;const detectElectron=getDefaultExportFromCjs(isElectron_1),isEnvWithDom=typeof window=="object"&&typeof document=="object"&&document.nodeType===9,isElectron=detectElectron(),isBrowser=isEnvWithDom&&!isElectron,isElectronMain=isElectron&&!isEnvWithDom,isElectronRenderer=isElectron&&isEnvWithDom,isNode=typeof globalThis.process<"u"&&typeof globalThis.process.release<"u"&&globalThis.process.release.name==="node"&&!isElectron,isWebWorker=typeof importScripts=="function"&&typeof self<"u"&&typeof WorkerGlobalScope<"u"&&self instanceof WorkerGlobalScope,isReactNative=typeof navigator<"u"&&navigator.product==="ReactNative",CODE_P2P$1=421,CODE_CIRCUIT$1=290,CLOSE_TIMEOUT$3=500;function all$1(r){return r.filter(e=>{if(e.protoCodes().includes(CODE_CIRCUIT$1))return!1;const t=e.decapsulateCode(CODE_P2P$1);return WebSockets$2.matches(t)||WebSocketsSecure.matches(t)})}function wss$1(r){return r.filter(e=>{if(e.protoCodes().includes(CODE_CIRCUIT$1))return!1;const t=e.decapsulateCode(CODE_P2P$1);return WebSocketsSecure.matches(t)})}function createListener$2(){throw new Error("WebSocket Servers can not be created in the browser!")}const log$p=logger$5("libp2p:websockets:socket");function socketToMaConn$1(r,e,t){t=t??{};const n={async sink(i){t?.signal!=null&&(i=abortableSource(i,t.signal));try{await r.sink(i)}catch(o){o.type!=="aborted"&&log$p.error(o)}},source:t.signal!=null?abortableSource(r.source,t.signal):r.source,remoteAddr:e,timeline:{open:Date.now()},async close(i={}){const o=Date.now();if(i.signal==null){const c=AbortSignal.timeout(CLOSE_TIMEOUT$3);i={...i,signal:c}}const a=()=>{const{host:c,port:l}=n.remoteAddr.toOptions();log$p("timeout closing stream to %s:%s after %dms, destroying it manually",c,l,Date.now()-o),this.abort(new CodeError$e("Socket close timeout","ERR_SOCKET_CLOSE_TIMEOUT"))};i.signal?.addEventListener("abort",a);try{await r.close()}catch(c){log$p.error("error closing WebSocket gracefully",c),this.abort(c)}finally{i.signal?.removeEventListener("abort",a),n.timeline.close=Date.now()}},abort(i){const{host:o,port:a}=n.remoteAddr.toOptions();log$p("timeout closing stream to %s:%s due to error",o,a,i),r.destroy(),n.timeline.close=Date.now()}};return r.socket.addEventListener("close",()=>{n.timeline.close==null&&(n.timeline.close=Date.now())},{once:!0}),n}const log$o=logger$5("libp2p:websockets");var Kr,Fr,Xt;let WebSockets$1=(Xt=class{constructor(e){_(this,"init");_(this,Kr,"@libp2p/websockets");_(this,Fr,!0);this.init=e}async dial(e,t){log$o("dialing %s",e),t=t??{};const n=await this._connect(e,t),i=socketToMaConn$1(n,e);log$o("new outbound connection %s",i.remoteAddr);const o=await t.upgrader.upgradeOutbound(i);return log$o("outbound connection %s upgraded",i.remoteAddr),o}async _connect(e,t){if(t?.signal?.aborted===!0)throw new AbortError$g;const n=e.toOptions();log$o("dialing %s:%s",n.host,n.port);const i=pDefer(),o=connect(multiaddrToUri(e),this.init);if(o.socket.addEventListener("error",()=>{const l=new CodeError$e(`Could not connect to ${e.toString()}`,"ERR_CONNECTION_FAILED");log$o.error("connection error:",l),i.reject(l)}),t.signal==null)return await Promise.race([o.connected(),i.promise]),log$o("connected %s",e),o;let a;const c=new Promise((l,u)=>{if(a=()=>{u(new AbortError$g),o.close().catch(f=>{log$o.error("error closing raw socket",f)})},t?.signal?.aborted===!0){a();return}t?.signal?.addEventListener("abort",a)});try{await Promise.race([c,i.promise,o.connected()])}finally{a!=null&&t?.signal?.removeEventListener("abort",a)}return log$o("connected %s",e),o}createListener(e){return createListener$2({...this.init,...e})}filter(e){return e=Array.isArray(e)?e:[e],this.init?.filter!=null?this.init?.filter(e):isBrowser||isWebWorker?wss$1(e):all$1(e)}},Kr=Symbol.toStringTag,Fr=symbol$2,Xt);function webSockets$1(r={}){return()=>new WebSockets$1(r)}const NOISE_MSG_MAX_LENGTH_BYTES$1=65535,NOISE_MSG_MAX_LENGTH_BYTES_WITHOUT_TAG$1=NOISE_MSG_MAX_LENGTH_BYTES$1-16,DUMP_SESSION_KEYS$1=!!globalThis.process?.env?.DUMP_SESSION_KEYS,pureJsCrypto$1={hashSHA256(r){return sha256(r)},getHKDF(r,e){const t=extract(sha256,e,r),i=expand(sha256,t,void 0,96),o=i.subarray(0,32),a=i.subarray(32,64),c=i.subarray(64,96);return[o,a,c]},generateX25519KeyPair(){const r=x25519.utils.randomPrivateKey();return{publicKey:x25519.getPublicKey(r),privateKey:r}},generateX25519KeyPairFromSeed(r){return{publicKey:x25519.getPublicKey(r),privateKey:r}},generateX25519SharedKey(r,e){return x25519.getSharedSecret(r,e)},chaCha20Poly1305Encrypt(r,e,t,n){return chacha20poly1305(n,e,t).encrypt(r)},chaCha20Poly1305Decrypt(r,e,t,n,i){return chacha20poly1305(n,e,t).decrypt(r,i)}},defaultCrypto$1=pureJsCrypto$1,uint16BEEncode$1=r=>{const e=allocUnsafe$3(2);return new DataView(e.buffer,e.byteOffset,e.byteLength).setUint16(0,r,!1),e};uint16BEEncode$1.bytes=2;const uint16BEDecode$1=r=>{if(r.length<2)throw RangeError("Could not decode int16BE");return r instanceof Uint8Array?new DataView(r.buffer,r.byteOffset,r.byteLength).getUint16(0,!1):r.getUint16(0)};uint16BEDecode$1.bytes=2;function encode0$1(r){return concat$6([r.ne,r.ciphertext],r.ne.length+r.ciphertext.length)}function encode1$1(r){return concat$6([r.ne,r.ns,r.ciphertext],r.ne.length+r.ns.length+r.ciphertext.length)}function encode2$1(r){return concat$6([r.ns,r.ciphertext],r.ns.length+r.ciphertext.length)}function decode0$1(r){if(r.length<32)throw new Error("Cannot decode stage 0 MessageBuffer: length less than 32 bytes.");return{ne:r.subarray(0,32),ciphertext:r.subarray(32,r.length),ns:alloc$1(0)}}function decode1$1(r){if(r.length<80)throw new Error("Cannot decode stage 1 MessageBuffer: length less than 80 bytes.");return{ne:r.subarray(0,32),ns:r.subarray(32,80),ciphertext:r.subarray(80,r.length)}}function decode2$1(r){if(r.length<48)throw new Error("Cannot decode stage 2 MessageBuffer: length less than 48 bytes.");return{ne:alloc$1(0),ns:r.subarray(0,48),ciphertext:r.subarray(48,r.length)}}const CHACHA_TAG_LENGTH$1=16;function encryptStream$1(r,e){return async function*(t){for await(const n of t)for(let i=0;i<n.length;i+=NOISE_MSG_MAX_LENGTH_BYTES_WITHOUT_TAG$1){let o=i+NOISE_MSG_MAX_LENGTH_BYTES_WITHOUT_TAG$1;o>n.length&&(o=n.length);const a=r.encrypt(n.subarray(i,o),r.session);e?.encryptedPackets.increment(),yield concat$6([uint16BEEncode$1(a.byteLength),a],2+a.byteLength)}}}function decryptStream$1(r,e){return async function*(t){for await(const n of t)for(let i=0;i<n.length;i+=NOISE_MSG_MAX_LENGTH_BYTES$1){let o=i+NOISE_MSG_MAX_LENGTH_BYTES$1;if(o>n.length&&(o=n.length),o-CHACHA_TAG_LENGTH$1<i)throw new Error("Invalid chunk");const a=n.subarray(i,o),c=n.subarray(i,o-CHACHA_TAG_LENGTH$1),{plaintext:l,valid:u}=r.decrypt(a,r.session,c);if(!u)throw e?.decryptErrors.increment(),new Error("Failed to validate decrypted chunk");e?.decryptedPackets.increment(),yield l}}}const PUBLIC_KEY_BYTE_LENGTH$2=32,PRIVATE_KEY_BYTE_LENGTH$2=64,KEYS_BYTE_LENGTH$2=32;async function generateKey$8(){const r=ed25519.utils.randomPrivateKey(),e=ed25519.getPublicKey(r);return{privateKey:concatKeys$2(r,e),publicKey:e}}async function generateKeyFromSeed$2(r){if(r.length!==KEYS_BYTE_LENGTH$2)throw new TypeError('"seed" must be 32 bytes in length.');if(!(r instanceof Uint8Array))throw new TypeError('"seed" must be a node.js Buffer, or Uint8Array.');const e=r,t=ed25519.getPublicKey(e);return{privateKey:concatKeys$2(e,t),publicKey:t}}async function hashAndSign$8(r,e){const t=r.subarray(0,KEYS_BYTE_LENGTH$2);return ed25519.sign(e,t)}async function hashAndVerify$8(r,e,t){return ed25519.verify(e,t,r)}function concatKeys$2(r,e){const t=new Uint8Array(PRIVATE_KEY_BYTE_LENGTH$2);for(let n=0;n<KEYS_BYTE_LENGTH$2;n++)t[n]=r[n],t[KEYS_BYTE_LENGTH$2+n]=e[n];return t}const webcrypto$2={get(r=globalThis){const e=r.crypto;if(e==null||e.subtle==null)throw Object.assign(new Error("Missing Web Crypto API. The most likely cause of this error is that this page is being accessed from an insecure context (i.e. not HTTPS). For more information and possible resolutions see https://github.com/libp2p/js-libp2p-crypto/blob/master/README.md#web-crypto-api"),{code:"ERR_MISSING_WEB_CRYPTO"});return e}},derivedEmptyPasswordKey$2={alg:"A128GCM",ext:!0,k:"scm9jmO_4BJAgdwWGVulLg",key_ops:["encrypt","decrypt"],kty:"oct"};function create$3(r){const e=r?.algorithm??"AES-GCM";let t=r?.keyLength??16;const n=r?.nonceLength??12,i=r?.digest??"SHA-256",o=r?.saltLength??16,a=r?.iterations??32767,c=webcrypto$2.get();t*=8;async function l(g,$){const S=c.getRandomValues(new Uint8Array(o)),E=c.getRandomValues(new Uint8Array(n)),v={name:e,iv:E};typeof $=="string"&&($=fromString$b($));let T;if($.length===0){T=await c.subtle.importKey("jwk",derivedEmptyPasswordKey$2,{name:"AES-GCM"},!0,["encrypt"]);try{const A={name:"PBKDF2",salt:S,iterations:a,hash:{name:i}},P=await c.subtle.importKey("raw",$,{name:"PBKDF2"},!1,["deriveKey"]);T=await c.subtle.deriveKey(A,P,{name:e,length:t},!0,["encrypt"])}catch{T=await c.subtle.importKey("jwk",derivedEmptyPasswordKey$2,{name:"AES-GCM"},!0,["encrypt"])}}else{const A={name:"PBKDF2",salt:S,iterations:a,hash:{name:i}},P=await c.subtle.importKey("raw",$,{name:"PBKDF2"},!1,["deriveKey"]);T=await c.subtle.deriveKey(A,P,{name:e,length:t},!0,["encrypt"])}const I=await c.subtle.encrypt(v,T,g);return concat$6([S,v.iv,new Uint8Array(I)])}async function u(g,$){const S=g.subarray(0,o),E=g.subarray(o,o+n),v=g.subarray(o+n),T={name:e,iv:E};typeof $=="string"&&($=fromString$b($));let I;if($.length===0)try{const P={name:"PBKDF2",salt:S,iterations:a,hash:{name:i}},x=await c.subtle.importKey("raw",$,{name:"PBKDF2"},!1,["deriveKey"]);I=await c.subtle.deriveKey(P,x,{name:e,length:t},!0,["decrypt"])}catch{I=await c.subtle.importKey("jwk",derivedEmptyPasswordKey$2,{name:"AES-GCM"},!0,["decrypt"])}else{const P={name:"PBKDF2",salt:S,iterations:a,hash:{name:i}},x=await c.subtle.importKey("raw",$,{name:"PBKDF2"},!1,["deriveKey"]);I=await c.subtle.deriveKey(P,x,{name:e,length:t},!0,["decrypt"])}const A=await c.subtle.decrypt(T,I,v);return new Uint8Array(A)}return{encrypt:l,decrypt:u}}async function exporter$3(r,e){const n=await create$3().encrypt(r,e);return base64$6.encode(n)}var KeyType$3;(function(r){r.RSA="RSA",r.Ed25519="Ed25519",r.Secp256k1="Secp256k1"})(KeyType$3||(KeyType$3={}));var __KeyTypeValues$3;(function(r){r[r.RSA=0]="RSA",r[r.Ed25519=1]="Ed25519",r[r.Secp256k1=2]="Secp256k1"})(__KeyTypeValues$3||(__KeyTypeValues$3={}));(function(r){r.codec=()=>enumeration(__KeyTypeValues$3)})(KeyType$3||(KeyType$3={}));var PublicKey$3;(function(r){let e;r.codec=()=>(e==null&&(e=message((t,n,i={})=>{i.lengthDelimited!==!1&&n.fork(),t.Type!=null&&(n.uint32(8),KeyType$3.codec().encode(t.Type,n)),t.Data!=null&&(n.uint32(18),n.bytes(t.Data)),i.lengthDelimited!==!1&&n.ldelim()},(t,n)=>{const i={},o=n==null?t.len:t.pos+n;for(;t.pos<o;){const a=t.uint32();switch(a>>>3){case 1:i.Type=KeyType$3.codec().decode(t);break;case 2:i.Data=t.bytes();break;default:t.skipType(a&7);break}}return i})),e),r.encode=t=>encodeMessage(t,r.codec()),r.decode=t=>decodeMessage$1(t,r.codec())})(PublicKey$3||(PublicKey$3={}));var PrivateKey$3;(function(r){let e;r.codec=()=>(e==null&&(e=message((t,n,i={})=>{i.lengthDelimited!==!1&&n.fork(),t.Type!=null&&(n.uint32(8),KeyType$3.codec().encode(t.Type,n)),t.Data!=null&&(n.uint32(18),n.bytes(t.Data)),i.lengthDelimited!==!1&&n.ldelim()},(t,n)=>{const i={},o=n==null?t.len:t.pos+n;for(;t.pos<o;){const a=t.uint32();switch(a>>>3){case 1:i.Type=KeyType$3.codec().decode(t);break;case 2:i.Data=t.bytes();break;default:t.skipType(a&7);break}}return i})),e),r.encode=t=>encodeMessage(t,r.codec()),r.decode=t=>decodeMessage$1(t,r.codec())})(PrivateKey$3||(PrivateKey$3={}));let Ed25519PublicKey$2=class{constructor(e){_(this,"_key");this._key=ensureKey$2(e,PUBLIC_KEY_BYTE_LENGTH$2)}async verify(e,t){return hashAndVerify$8(this._key,t,e)}marshal(){return this._key}get bytes(){return PublicKey$3.encode({Type:KeyType$3.Ed25519,Data:this.marshal()}).subarray()}equals(e){return equals$4(this.bytes,e.bytes)}async hash(){const{bytes:e}=await sha256$2.digest(this.bytes);return e}},Ed25519PrivateKey$2=class{constructor(e,t){_(this,"_key");_(this,"_publicKey");this._key=ensureKey$2(e,PRIVATE_KEY_BYTE_LENGTH$2),this._publicKey=ensureKey$2(t,PUBLIC_KEY_BYTE_LENGTH$2)}async sign(e){return hashAndSign$8(this._key,e)}get public(){return new Ed25519PublicKey$2(this._publicKey)}marshal(){return this._key}get bytes(){return PrivateKey$3.encode({Type:KeyType$3.Ed25519,Data:this.marshal()}).subarray()}equals(e){return equals$4(this.bytes,e.bytes)}async hash(){const{bytes:e}=await sha256$2.digest(this.bytes);return e}async id(){const e=identity$3.digest(this.public.bytes);return base58btc$4.encode(e.bytes).substring(1)}async export(e,t="libp2p-key"){if(t==="libp2p-key")return exporter$3(this.bytes,e);throw new CodeError$e(`export format '${t}' is not supported`,"ERR_INVALID_EXPORT_FORMAT")}};function unmarshalEd25519PrivateKey$2(r){if(r.length>PRIVATE_KEY_BYTE_LENGTH$2){r=ensureKey$2(r,PRIVATE_KEY_BYTE_LENGTH$2+PUBLIC_KEY_BYTE_LENGTH$2);const n=r.subarray(0,PRIVATE_KEY_BYTE_LENGTH$2),i=r.subarray(PRIVATE_KEY_BYTE_LENGTH$2,r.length);return new Ed25519PrivateKey$2(n,i)}r=ensureKey$2(r,PRIVATE_KEY_BYTE_LENGTH$2);const e=r.subarray(0,PRIVATE_KEY_BYTE_LENGTH$2),t=r.subarray(PUBLIC_KEY_BYTE_LENGTH$2);return new Ed25519PrivateKey$2(e,t)}function unmarshalEd25519PublicKey$2(r){return r=ensureKey$2(r,PUBLIC_KEY_BYTE_LENGTH$2),new Ed25519PublicKey$2(r)}async function generateKeyPair$9(){const{privateKey:r,publicKey:e}=await generateKey$8();return new Ed25519PrivateKey$2(r,e)}async function generateKeyPairFromSeed$2(r){const{privateKey:e,publicKey:t}=await generateKeyFromSeed$2(r);return new Ed25519PrivateKey$2(e,t)}function ensureKey$2(r,e){if(r=Uint8Array.from(r??[]),r.length!==e)throw new CodeError$e(`Key must be a Uint8Array of length ${e}, got ${r.length}`,"ERR_INVALID_KEY_TYPE");return r}const Ed25519$2=Object.freeze(Object.defineProperty({__proto__:null,Ed25519PrivateKey:Ed25519PrivateKey$2,Ed25519PublicKey:Ed25519PublicKey$2,generateKeyPair:generateKeyPair$9,generateKeyPairFromSeed:generateKeyPairFromSeed$2,unmarshalEd25519PrivateKey:unmarshalEd25519PrivateKey$2,unmarshalEd25519PublicKey:unmarshalEd25519PublicKey$2},Symbol.toStringTag,{value:"Module"}));function bigIntegerToUintBase64url$2(r,e){let t=Uint8Array.from(r.abs().toByteArray());if(t=t[0]===0?t.subarray(1):t,e!=null){if(t.length>e)throw new Error("byte array longer than desired length");t=concat$6([new Uint8Array(e-t.length),t])}return toString$b(t,"base64url")}function base64urlToBigInteger$2(r){const e=base64urlToBuffer$2(r);return new forge$n.jsbn.BigInteger(toString$b(e,"base16"),16)}function base64urlToBuffer$2(r,e){let t=fromString$b(r,"base64urlpad");if(e!=null){if(t.length>e)throw new Error("byte array longer than desired length");t=concat$6([new Uint8Array(e-t.length),t])}return t}const bits$3={"P-256":256,"P-384":384,"P-521":521},curveTypes$3=Object.keys(bits$3);curveTypes$3.join(" / ");function randomBytes$3(r){if(isNaN(r)||r<=0)throw new CodeError$e("random bytes length must be a Number bigger than 0","ERR_INVALID_LENGTH");return randomBytes$a(r)}function convert$4(r,e){return e.map(t=>base64urlToBigInteger$2(r[t]))}function jwk2priv$2(r){return forge$n.pki.setRsaPrivateKey(...convert$4(r,["n","e","d","p","q","dp","dq","qi"]))}function jwk2pub$2(r){return forge$n.pki.setRsaPublicKey(...convert$4(r,["n","e"]))}function pkcs1ToJwk$2(r){const e=forge$n.asn1.fromDer(toString$b(r,"ascii")),t=forge$n.pki.privateKeyFromAsn1(e);return{kty:"RSA",n:bigIntegerToUintBase64url$2(t.n),e:bigIntegerToUintBase64url$2(t.e),d:bigIntegerToUintBase64url$2(t.d),p:bigIntegerToUintBase64url$2(t.p),q:bigIntegerToUintBase64url$2(t.q),dp:bigIntegerToUintBase64url$2(t.dP),dq:bigIntegerToUintBase64url$2(t.dQ),qi:bigIntegerToUintBase64url$2(t.qInv),alg:"RS256"}}function jwkToPkcs1$2(r){if(r.n==null||r.e==null||r.d==null||r.p==null||r.q==null||r.dp==null||r.dq==null||r.qi==null)throw new CodeError$e("JWK was missing components","ERR_INVALID_PARAMETERS");const e=forge$n.pki.privateKeyToAsn1({n:base64urlToBigInteger$2(r.n),e:base64urlToBigInteger$2(r.e),d:base64urlToBigInteger$2(r.d),p:base64urlToBigInteger$2(r.p),q:base64urlToBigInteger$2(r.q),dP:base64urlToBigInteger$2(r.dp),dQ:base64urlToBigInteger$2(r.dq),qInv:base64urlToBigInteger$2(r.qi)});return fromString$b(forge$n.asn1.toDer(e).getBytes(),"ascii")}function pkixToJwk$2(r){const e=forge$n.asn1.fromDer(toString$b(r,"ascii")),t=forge$n.pki.publicKeyFromAsn1(e);return{kty:"RSA",n:bigIntegerToUintBase64url$2(t.n),e:bigIntegerToUintBase64url$2(t.e)}}function jwkToPkix$2(r){if(r.n==null||r.e==null)throw new CodeError$e("JWK was missing components","ERR_INVALID_PARAMETERS");const e=forge$n.pki.publicKeyToAsn1({n:base64urlToBigInteger$2(r.n),e:base64urlToBigInteger$2(r.e)});return fromString$b(forge$n.asn1.toDer(e).getBytes(),"ascii")}async function generateKey$7(r){const e=await webcrypto$2.get().subtle.generateKey({name:"RSASSA-PKCS1-v1_5",modulusLength:r,publicExponent:new Uint8Array([1,0,1]),hash:{name:"SHA-256"}},!0,["sign","verify"]),t=await exportKey$2(e);return{privateKey:t[0],publicKey:t[1]}}async function unmarshalPrivateKey$4(r){const t=[await webcrypto$2.get().subtle.importKey("jwk",r,{name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-256"}},!0,["sign"]),await derivePublicFromPrivate$2(r)],n=await exportKey$2({privateKey:t[0],publicKey:t[1]});return{privateKey:n[0],publicKey:n[1]}}async function hashAndSign$7(r,e){const t=await webcrypto$2.get().subtle.importKey("jwk",r,{name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-256"}},!1,["sign"]),n=await webcrypto$2.get().subtle.sign({name:"RSASSA-PKCS1-v1_5"},t,Uint8Array.from(e));return new Uint8Array(n,0,n.byteLength)}async function hashAndVerify$7(r,e,t){const n=await webcrypto$2.get().subtle.importKey("jwk",r,{name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-256"}},!1,["verify"]);return webcrypto$2.get().subtle.verify({name:"RSASSA-PKCS1-v1_5"},n,e,t)}async function exportKey$2(r){if(r.privateKey==null||r.publicKey==null)throw new CodeError$e("Private and public key are required","ERR_INVALID_PARAMETERS");return Promise.all([webcrypto$2.get().subtle.exportKey("jwk",r.privateKey),webcrypto$2.get().subtle.exportKey("jwk",r.publicKey)])}async function derivePublicFromPrivate$2(r){return webcrypto$2.get().subtle.importKey("jwk",{kty:r.kty,n:r.n,e:r.e},{name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-256"}},!0,["verify"])}function convertKey$2(r,e,t,n){const i=e?jwk2pub$2(r):jwk2priv$2(r),o=toString$b(Uint8Array.from(t),"ascii"),a=n(o,i);return fromString$b(a,"ascii")}function encrypt$2(r,e){return convertKey$2(r,!0,e,(t,n)=>n.encrypt(t))}function decrypt$2(r,e){return convertKey$2(r,!1,e,(t,n)=>n.decrypt(t))}function keySize$2(r){if(r.kty!=="RSA")throw new CodeError$e("invalid key type","ERR_INVALID_KEY_TYPE");if(r.n==null)throw new CodeError$e("invalid key modulus","ERR_INVALID_KEY_MODULUS");return fromString$b(r.n,"base64url").length*8}const MAX_KEY_SIZE$2=8192;let RsaPublicKey$2=class{constructor(e){_(this,"_key");this._key=e}async verify(e,t){return hashAndVerify$7(this._key,t,e)}marshal(){return jwkToPkix$2(this._key)}get bytes(){return PublicKey$3.encode({Type:KeyType$3.RSA,Data:this.marshal()}).subarray()}encrypt(e){return encrypt$2(this._key,e)}equals(e){return equals$4(this.bytes,e.bytes)}async hash(){const{bytes:e}=await sha256$2.digest(this.bytes);return e}},RsaPrivateKey$2=class{constructor(e,t){_(this,"_key");_(this,"_publicKey");this._key=e,this._publicKey=t}genSecret(){return randomBytes$3(16)}async sign(e){return hashAndSign$7(this._key,e)}get public(){if(this._publicKey==null)throw new CodeError$e("public key not provided","ERR_PUBKEY_NOT_PROVIDED");return new RsaPublicKey$2(this._publicKey)}decrypt(e){return decrypt$2(this._key,e)}marshal(){return jwkToPkcs1$2(this._key)}get bytes(){return PrivateKey$3.encode({Type:KeyType$3.RSA,Data:this.marshal()}).subarray()}equals(e){return equals$4(this.bytes,e.bytes)}async hash(){const{bytes:e}=await sha256$2.digest(this.bytes);return e}async id(){const e=await this.public.hash();return toString$b(e,"base58btc")}async export(e,t="pkcs-8"){if(t==="pkcs-8"){const n=new forge$n.util.ByteBuffer(this.marshal()),i=forge$n.asn1.fromDer(n),o=forge$n.pki.privateKeyFromAsn1(i),a={algorithm:"aes256",count:1e4,saltSize:128/8,prfAlgorithm:"sha512"};return forge$n.pki.encryptRsaPrivateKey(o,e,a)}else{if(t==="libp2p-key")return exporter$3(this.bytes,e);throw new CodeError$e(`export format '${t}' is not supported`,"ERR_INVALID_EXPORT_FORMAT")}}};async function unmarshalRsaPrivateKey$2(r){const e=pkcs1ToJwk$2(r);if(keySize$2(e)>MAX_KEY_SIZE$2)throw new CodeError$e("key size is too large","ERR_KEY_SIZE_TOO_LARGE");const t=await unmarshalPrivateKey$4(e);return new RsaPrivateKey$2(t.privateKey,t.publicKey)}function unmarshalRsaPublicKey$2(r){const e=pkixToJwk$2(r);if(keySize$2(e)>MAX_KEY_SIZE$2)throw new CodeError$e("key size is too large","ERR_KEY_SIZE_TOO_LARGE");return new RsaPublicKey$2(e)}async function fromJwk$2(r){if(keySize$2(r)>MAX_KEY_SIZE$2)throw new CodeError$e("key size is too large","ERR_KEY_SIZE_TOO_LARGE");const e=await unmarshalPrivateKey$4(r);return new RsaPrivateKey$2(e.privateKey,e.publicKey)}async function generateKeyPair$8(r){if(r>MAX_KEY_SIZE$2)throw new CodeError$e("key size is too large","ERR_KEY_SIZE_TOO_LARGE");const e=await generateKey$7(r);return new RsaPrivateKey$2(e.privateKey,e.publicKey)}const RSA$2=Object.freeze(Object.defineProperty({__proto__:null,MAX_KEY_SIZE:MAX_KEY_SIZE$2,RsaPrivateKey:RsaPrivateKey$2,RsaPublicKey:RsaPublicKey$2,fromJwk:fromJwk$2,generateKeyPair:generateKeyPair$8,unmarshalRsaPrivateKey:unmarshalRsaPrivateKey$2,unmarshalRsaPublicKey:unmarshalRsaPublicKey$2},Symbol.toStringTag,{value:"Module"}));function generateKey$6(){return secp256k1.utils.randomPrivateKey()}async function hashAndSign$6(r,e){const{digest:t}=await sha256$2.digest(e);try{return secp256k1.sign(t,r).toDERRawBytes()}catch(n){throw new CodeError$e(String(n),"ERR_INVALID_INPUT")}}async function hashAndVerify$6(r,e,t){try{const{digest:n}=await sha256$2.digest(t);return secp256k1.verify(e,n,r)}catch(n){throw new CodeError$e(String(n),"ERR_INVALID_INPUT")}}function compressPublicKey$2(r){return secp256k1.ProjectivePoint.fromHex(r).toRawBytes(!0)}function validatePrivateKey$2(r){try{secp256k1.getPublicKey(r,!0)}catch(e){throw new CodeError$e(String(e),"ERR_INVALID_PRIVATE_KEY")}}function validatePublicKey$2(r){try{secp256k1.ProjectivePoint.fromHex(r)}catch(e){throw new CodeError$e(String(e),"ERR_INVALID_PUBLIC_KEY")}}function computePublicKey$2(r){try{return secp256k1.getPublicKey(r,!0)}catch(e){throw new CodeError$e(String(e),"ERR_INVALID_PRIVATE_KEY")}}let Secp256k1PublicKey$2=class{constructor(e){_(this,"_key");validatePublicKey$2(e),this._key=e}async verify(e,t){return hashAndVerify$6(this._key,t,e)}marshal(){return compressPublicKey$2(this._key)}get bytes(){return PublicKey$3.encode({Type:KeyType$3.Secp256k1,Data:this.marshal()}).subarray()}equals(e){return equals$4(this.bytes,e.bytes)}async hash(){const{bytes:e}=await sha256$2.digest(this.bytes);return e}},Secp256k1PrivateKey$2=class{constructor(e,t){_(this,"_key");_(this,"_publicKey");this._key=e,this._publicKey=t??computePublicKey$2(e),validatePrivateKey$2(this._key),validatePublicKey$2(this._publicKey)}async sign(e){return hashAndSign$6(this._key,e)}get public(){return new Secp256k1PublicKey$2(this._publicKey)}marshal(){return this._key}get bytes(){return PrivateKey$3.encode({Type:KeyType$3.Secp256k1,Data:this.marshal()}).subarray()}equals(e){return equals$4(this.bytes,e.bytes)}async hash(){const{bytes:e}=await sha256$2.digest(this.bytes);return e}async id(){const e=await this.public.hash();return toString$b(e,"base58btc")}async export(e,t="libp2p-key"){if(t==="libp2p-key")return exporter$3(this.bytes,e);throw new CodeError$e(`export format '${t}' is not supported`,"ERR_INVALID_EXPORT_FORMAT")}};function unmarshalSecp256k1PrivateKey$2(r){return new Secp256k1PrivateKey$2(r)}function unmarshalSecp256k1PublicKey$2(r){return new Secp256k1PublicKey$2(r)}async function generateKeyPair$7(){const r=generateKey$6();return new Secp256k1PrivateKey$2(r)}const Secp256k1$2=Object.freeze(Object.defineProperty({__proto__:null,Secp256k1PrivateKey:Secp256k1PrivateKey$2,Secp256k1PublicKey:Secp256k1PublicKey$2,generateKeyPair:generateKeyPair$7,unmarshalSecp256k1PrivateKey:unmarshalSecp256k1PrivateKey$2,unmarshalSecp256k1PublicKey:unmarshalSecp256k1PublicKey$2},Symbol.toStringTag,{value:"Module"})),supportedKeys$2={rsa:RSA$2,ed25519:Ed25519$2,secp256k1:Secp256k1$2};function unsupportedKey$2(r){const e=Object.keys(supportedKeys$2).join(" / ");return new CodeError$e(`invalid or unsupported key type ${r}. Must be ${e}`,"ERR_UNSUPPORTED_KEY_TYPE")}function unmarshalPublicKey$2(r){const e=PublicKey$3.decode(r),t=e.Data??new Uint8Array;switch(e.Type){case KeyType$3.RSA:return supportedKeys$2.rsa.unmarshalRsaPublicKey(t);case KeyType$3.Ed25519:return supportedKeys$2.ed25519.unmarshalEd25519PublicKey(t);case KeyType$3.Secp256k1:return supportedKeys$2.secp256k1.unmarshalSecp256k1PublicKey(t);default:throw unsupportedKey$2(e.Type??"unknown")}}async function unmarshalPrivateKey$3(r){const e=PrivateKey$3.decode(r),t=e.Data??new Uint8Array;switch(e.Type){case KeyType$3.RSA:return supportedKeys$2.rsa.unmarshalRsaPrivateKey(t);case KeyType$3.Ed25519:return supportedKeys$2.ed25519.unmarshalEd25519PrivateKey(t);case KeyType$3.Secp256k1:return supportedKeys$2.secp256k1.unmarshalSecp256k1PrivateKey(t);default:throw unsupportedKey$2(e.Type??"RSA")}}const inspect$3=Symbol.for("nodejs.util.inspect.custom"),baseDecoder$2=Object.values(bases$2).map(r=>r.decoder).reduce((r,e)=>r.or(e),bases$2.identity.decoder),LIBP2P_KEY_CODE$2=114,MARSHALLED_ED225519_PUBLIC_KEY_LENGTH$2=36,MARSHALLED_SECP256K1_PUBLIC_KEY_LENGTH$2=37;var Ur;let PeerIdImpl$2=class{constructor(e){_(this,"type");_(this,"multihash");_(this,"privateKey");_(this,"publicKey");_(this,"string");_(this,Ur,!0);this.type=e.type,this.multihash=e.multihash,this.privateKey=e.privateKey,Object.defineProperty(this,"string",{enumerable:!1,writable:!0})}get[Symbol.toStringTag](){return`PeerId(${this.toString()})`}toString(){return this.string==null&&(this.string=base58btc$4.encode(this.multihash.bytes).slice(1)),this.string}toCID(){return CID$3.createV1(LIBP2P_KEY_CODE$2,this.multihash)}toBytes(){return this.multihash.bytes}toJSON(){return this.toString()}equals(e){if(e instanceof Uint8Array)return equals$4(this.multihash.bytes,e);if(typeof e=="string")return peerIdFromString$2(e).equals(this);if(e?.multihash?.bytes!=null)return equals$4(this.multihash.bytes,e.multihash.bytes);throw new Error("not valid Id")}[(Ur=symbol$4,inspect$3)](){return`PeerId(${this.toString()})`}},RSAPeerIdImpl$2=class extends PeerIdImpl$2{constructor(t){super({...t,type:"RSA"});_(this,"type","RSA");_(this,"publicKey");this.publicKey=t.publicKey}},Ed25519PeerIdImpl$2=class extends PeerIdImpl$2{constructor(t){super({...t,type:"Ed25519"});_(this,"type","Ed25519");_(this,"publicKey");this.publicKey=t.multihash.digest}},Secp256k1PeerIdImpl$2=class extends PeerIdImpl$2{constructor(t){super({...t,type:"secp256k1"});_(this,"type","secp256k1");_(this,"publicKey");this.publicKey=t.multihash.digest}};function peerIdFromString$2(r,e){if(r.charAt(0)==="1"||r.charAt(0)==="Q"){const t=decode$n(base58btc$4.decode(`z${r}`));return r.startsWith("12D")?new Ed25519PeerIdImpl$2({multihash:t}):r.startsWith("16U")?new Secp256k1PeerIdImpl$2({multihash:t}):new RSAPeerIdImpl$2({multihash:t})}return peerIdFromBytes$2(baseDecoder$2.decode(r))}function peerIdFromBytes$2(r){try{const e=decode$n(r);if(e.code===identity$3.code){if(e.digest.length===MARSHALLED_ED225519_PUBLIC_KEY_LENGTH$2)return new Ed25519PeerIdImpl$2({multihash:e});if(e.digest.length===MARSHALLED_SECP256K1_PUBLIC_KEY_LENGTH$2)return new Secp256k1PeerIdImpl$2({multihash:e})}if(e.code===sha256$2.code)return new RSAPeerIdImpl$2({multihash:e})}catch{return peerIdFromCID$2(CID$3.decode(r))}throw new Error("Supplied PeerID CID is invalid")}function peerIdFromCID$2(r){if(r==null||r.multihash==null||r.version==null||r.version===1&&r.code!==LIBP2P_KEY_CODE$2)throw new Error("Supplied PeerID CID is invalid");const e=r.multihash;if(e.code===sha256$2.code)return new RSAPeerIdImpl$2({multihash:r.multihash});if(e.code===identity$3.code){if(e.digest.length===MARSHALLED_ED225519_PUBLIC_KEY_LENGTH$2)return new Ed25519PeerIdImpl$2({multihash:r.multihash});if(e.digest.length===MARSHALLED_SECP256K1_PUBLIC_KEY_LENGTH$2)return new Secp256k1PeerIdImpl$2({multihash:r.multihash})}throw new Error("Supplied PeerID CID is invalid")}async function peerIdFromKeys$2(r,e){return r.length===MARSHALLED_ED225519_PUBLIC_KEY_LENGTH$2?new Ed25519PeerIdImpl$2({multihash:create$c(identity$3.code,r),privateKey:e}):r.length===MARSHALLED_SECP256K1_PUBLIC_KEY_LENGTH$2?new Secp256k1PeerIdImpl$2({multihash:create$c(identity$3.code,r),privateKey:e}):new RSAPeerIdImpl$2({multihash:await sha256$2.digest(r),publicKey:r,privateKey:e})}var NoiseExtensions$1;(function(r){let e;r.codec=()=>(e==null&&(e=message((t,n,i={})=>{if(i.lengthDelimited!==!1&&n.fork(),t.webtransportCerthashes!=null)for(const o of t.webtransportCerthashes)n.uint32(10),n.bytes(o);i.lengthDelimited!==!1&&n.ldelim()},(t,n)=>{const i={webtransportCerthashes:[]},o=n==null?t.len:t.pos+n;for(;t.pos<o;){const a=t.uint32();switch(a>>>3){case 1:{i.webtransportCerthashes.push(t.bytes());break}default:{t.skipType(a&7);break}}}return i})),e),r.encode=t=>encodeMessage(t,r.codec()),r.decode=t=>decodeMessage$1(t,r.codec())})(NoiseExtensions$1||(NoiseExtensions$1={}));var NoiseHandshakePayload$1;(function(r){let e;r.codec=()=>(e==null&&(e=message((t,n,i={})=>{i.lengthDelimited!==!1&&n.fork(),t.identityKey!=null&&t.identityKey.byteLength>0&&(n.uint32(10),n.bytes(t.identityKey)),t.identitySig!=null&&t.identitySig.byteLength>0&&(n.uint32(18),n.bytes(t.identitySig)),t.extensions!=null&&(n.uint32(34),NoiseExtensions$1.codec().encode(t.extensions,n)),i.lengthDelimited!==!1&&n.ldelim()},(t,n)=>{const i={identityKey:alloc$1(0),identitySig:alloc$1(0)},o=n==null?t.len:t.pos+n;for(;t.pos<o;){const a=t.uint32();switch(a>>>3){case 1:{i.identityKey=t.bytes();break}case 2:{i.identitySig=t.bytes();break}case 4:{i.extensions=NoiseExtensions$1.codec().decode(t,t.uint32());break}default:{t.skipType(a&7);break}}}return i})),e),r.encode=t=>encodeMessage(t,r.codec()),r.decode=t=>decodeMessage$1(t,r.codec())})(NoiseHandshakePayload$1||(NoiseHandshakePayload$1={}));async function getPayload$1(r,e,t){const n=await signPayload$1(r,getHandshakePayload$1(e));if(r.publicKey==null)throw new Error("PublicKey was missing from local PeerId");return createHandshakePayload$1(r.publicKey,n,t)}function createHandshakePayload$1(r,e,t){return NoiseHandshakePayload$1.encode({identityKey:r,identitySig:e,extensions:t??{webtransportCerthashes:[]}}).subarray()}async function signPayload$1(r,e){if(r.privateKey==null)throw new Error("PrivateKey was missing from PeerId");return(await unmarshalPrivateKey$3(r.privateKey)).sign(e)}async function getPeerIdFromPayload$1(r){return peerIdFromKeys$2(r.identityKey)}function decodePayload$1(r){return NoiseHandshakePayload$1.decode(r)}function getHandshakePayload$1(r){const e=fromString$b("noise-libp2p-static-key:");return concat$6([e,r],e.length+r.length)}async function verifySignedPayload$1(r,e,t){const n=await peerIdFromKeys$2(e.identityKey);if(!n.equals(t))throw new Error(`Payload identity key ${n.toString()} does not match expected remote peer ${t.toString()}`);const i=getHandshakePayload$1(r);if(n.publicKey==null)throw new Error("PublicKey was missing from PeerId");if(e.identitySig==null)throw new Error("Signature was missing from message");if(!await unmarshalPublicKey$2(n.publicKey).verify(i,e.identitySig))throw new Error("Static key doesn't match to peer that signed payload!");return n}function isValidPublicKey$1(r){return!(!(r instanceof Uint8Array)||r.length!==32)}const log$n=logger$5("libp2p:noise");let keyLogger;DUMP_SESSION_KEYS$1?keyLogger=log$n:keyLogger=Object.assign(()=>{},{enabled:!1,trace:()=>{},error:()=>{}});function logLocalStaticKeys$1(r){keyLogger(`LOCAL_STATIC_PUBLIC_KEY ${toString$b(r.publicKey,"hex")}`),keyLogger(`LOCAL_STATIC_PRIVATE_KEY ${toString$b(r.privateKey,"hex")}`)}function logLocalEphemeralKeys$1(r){r?(keyLogger(`LOCAL_PUBLIC_EPHEMERAL_KEY ${toString$b(r.publicKey,"hex")}`),keyLogger(`LOCAL_PRIVATE_EPHEMERAL_KEY ${toString$b(r.privateKey,"hex")}`)):keyLogger("Missing local ephemeral keys.")}function logRemoteStaticKey$1(r){keyLogger(`REMOTE_STATIC_PUBLIC_KEY ${toString$b(r,"hex")}`)}function logRemoteEphemeralKey$1(r){keyLogger(`REMOTE_EPHEMERAL_PUBLIC_KEY ${toString$b(r,"hex")}`)}function logCipherState$1(r){r.cs1&&r.cs2?(keyLogger(`CIPHER_STATE_1 ${r.cs1.n.getUint64()} ${toString$b(r.cs1.k,"hex")}`),keyLogger(`CIPHER_STATE_2 ${r.cs2.n.getUint64()} ${toString$b(r.cs2.k,"hex")}`)):keyLogger("Missing cipher state.")}const MIN_NONCE$1=0,MAX_NONCE$1=4294967295,ERR_MAX_NONCE$1="Cipherstate has reached maximum n, a new handshake must be performed";let Nonce$1=class{constructor(e=MIN_NONCE$1){_(this,"n");_(this,"bytes");_(this,"view");this.n=e,this.bytes=alloc$1(12),this.view=new DataView(this.bytes.buffer,this.bytes.byteOffset,this.bytes.byteLength),this.view.setUint32(4,e,!0)}increment(){this.n++,this.view.setUint32(4,this.n,!0)}getBytes(){return this.bytes}getUint64(){return this.n}assertValue(){if(this.n>MAX_NONCE$1)throw new Error(ERR_MAX_NONCE$1)}},AbstractHandshake$1=class{constructor(e){_(this,"crypto");this.crypto=e}encryptWithAd(e,t,n){const i=this.encrypt(e.k,e.n,t,n);return e.n.increment(),i}decryptWithAd(e,t,n,i){const{plaintext:o,valid:a}=this.decrypt(e.k,e.n,t,n,i);return a&&e.n.increment(),{plaintext:o,valid:a}}hasKey(e){return!this.isEmptyKey(e.k)}createEmptyKey(){return alloc$1(32)}isEmptyKey(e){const t=this.createEmptyKey();return equals$4(t,e)}encrypt(e,t,n,i){return t.assertValue(),this.crypto.chaCha20Poly1305Encrypt(i,t.getBytes(),n,e)}encryptAndHash(e,t){let n;return this.hasKey(e.cs)?n=this.encryptWithAd(e.cs,e.h,t):n=t,this.mixHash(e,n),n}decrypt(e,t,n,i,o){t.assertValue();const a=this.crypto.chaCha20Poly1305Decrypt(i,t.getBytes(),n,e,o);return a?{plaintext:a,valid:!0}:{plaintext:alloc$1(0),valid:!1}}decryptAndHash(e,t){let n,i=!0;return this.hasKey(e.cs)?{plaintext:n,valid:i}=this.decryptWithAd(e.cs,e.h,t):n=t,this.mixHash(e,t),{plaintext:n,valid:i}}dh(e,t){try{const n=this.crypto.generateX25519SharedKey(e,t);return n.length===32?n:n.subarray(0,32)}catch(n){const i=n;return log$n.error(i),alloc$1(32)}}mixHash(e,t){e.h=this.getHash(e.h,t)}getHash(e,t){return this.crypto.hashSHA256(concat$6([e,t],e.length+t.length))}mixKey(e,t){const[n,i]=this.crypto.getHKDF(e.ck,t);e.cs=this.initializeKey(i),e.ck=n}initializeKey(e){return{k:e,n:new Nonce$1}}initializeSymmetric(e){const t=fromString$b(e,"utf-8"),n=this.hashProtocolName(t),i=n,o=this.createEmptyKey();return{cs:this.initializeKey(o),ck:i,h:n}}hashProtocolName(e){if(e.length<=32){const t=alloc$1(32);return t.set(e),t}else return this.getHash(e,alloc$1(0))}split(e){const[t,n]=this.crypto.getHKDF(e.ck,alloc$1(0)),i=this.initializeKey(t),o=this.initializeKey(n);return{cs1:i,cs2:o}}writeMessageRegular(e,t){const n=this.encryptWithAd(e,alloc$1(0),t),i=this.createEmptyKey(),o=alloc$1(0);return{ne:i,ns:o,ciphertext:n}}readMessageRegular(e,t){return this.decryptWithAd(e,alloc$1(0),t.ciphertext)}},XX$1=class extends AbstractHandshake$1{initializeInitiator(e,t,n,i){const o="Noise_XX_25519_ChaChaPoly_SHA256",a=this.initializeSymmetric(o);this.mixHash(a,e);const c=alloc$1(32);return{ss:a,s:t,rs:n,psk:i,re:c}}initializeResponder(e,t,n,i){const o="Noise_XX_25519_ChaChaPoly_SHA256",a=this.initializeSymmetric(o);this.mixHash(a,e);const c=alloc$1(32);return{ss:a,s:t,rs:n,psk:i,re:c}}writeMessageA(e,t,n){const i=alloc$1(0);n!==void 0?e.e=n:e.e=this.crypto.generateX25519KeyPair();const o=e.e.publicKey;this.mixHash(e.ss,o);const a=this.encryptAndHash(e.ss,t);return{ne:o,ns:i,ciphertext:a}}writeMessageB(e,t){e.e=this.crypto.generateX25519KeyPair();const n=e.e.publicKey;this.mixHash(e.ss,n),this.mixKey(e.ss,this.dh(e.e.privateKey,e.re));const i=e.s.publicKey,o=this.encryptAndHash(e.ss,i);this.mixKey(e.ss,this.dh(e.s.privateKey,e.re));const a=this.encryptAndHash(e.ss,t);return{ne:n,ns:o,ciphertext:a}}writeMessageC(e,t){const n=e.s.publicKey,i=this.encryptAndHash(e.ss,n);this.mixKey(e.ss,this.dh(e.s.privateKey,e.re));const o=this.encryptAndHash(e.ss,t),c={ne:this.createEmptyKey(),ns:i,ciphertext:o},{cs1:l,cs2:u}=this.split(e.ss);return{h:e.ss.h,messageBuffer:c,cs1:l,cs2:u}}readMessageA(e,t){return isValidPublicKey$1(t.ne)&&(e.re=t.ne),this.mixHash(e.ss,e.re),this.decryptAndHash(e.ss,t.ciphertext)}readMessageB(e,t){if(isValidPublicKey$1(t.ne)&&(e.re=t.ne),this.mixHash(e.ss,e.re),!e.e)throw new Error("Handshake state `e` param is missing.");this.mixKey(e.ss,this.dh(e.e.privateKey,e.re));const{plaintext:n,valid:i}=this.decryptAndHash(e.ss,t.ns);i&&isValidPublicKey$1(n)&&(e.rs=n),this.mixKey(e.ss,this.dh(e.e.privateKey,e.rs));const{plaintext:o,valid:a}=this.decryptAndHash(e.ss,t.ciphertext);return{plaintext:o,valid:i&&a}}readMessageC(e,t){const{plaintext:n,valid:i}=this.decryptAndHash(e.ss,t.ns);if(i&&isValidPublicKey$1(n)&&(e.rs=n),!e.e)throw new Error("Handshake state `e` param is missing.");this.mixKey(e.ss,this.dh(e.e.privateKey,e.rs));const{plaintext:o,valid:a}=this.decryptAndHash(e.ss,t.ciphertext),{cs1:c,cs2:l}=this.split(e.ss);return{h:e.ss.h,plaintext:o,valid:i&&a,cs1:c,cs2:l}}initSession(e,t,n){const i=this.createEmptyKey(),o=alloc$1(32);let a;return e?a=this.initializeInitiator(t,n,o,i):a=this.initializeResponder(t,n,o,i),{hs:a,i:e,mc:0}}sendMessage(e,t,n){let i;if(e.mc===0)i=this.writeMessageA(e.hs,t,n);else if(e.mc===1)i=this.writeMessageB(e.hs,t);else if(e.mc===2){const{h:o,messageBuffer:a,cs1:c,cs2:l}=this.writeMessageC(e.hs,t);i=a,e.h=o,e.cs1=c,e.cs2=l}else if(e.mc>2)if(e.i){if(!e.cs1)throw new Error("CS1 (cipher state) is not defined");i=this.writeMessageRegular(e.cs1,t)}else{if(!e.cs2)throw new Error("CS2 (cipher state) is not defined");i=this.writeMessageRegular(e.cs2,t)}else throw new Error("Session invalid.");return e.mc++,i}recvMessage(e,t){let n=alloc$1(0),i=!1;if(e.mc===0)({plaintext:n,valid:i}=this.readMessageA(e.hs,t));else if(e.mc===1)({plaintext:n,valid:i}=this.readMessageB(e.hs,t));else if(e.mc===2){const{h:o,plaintext:a,valid:c,cs1:l,cs2:u}=this.readMessageC(e.hs,t);n=a,i=c,e.h=o,e.cs1=l,e.cs2=u}return e.mc++,{plaintext:n,valid:i}}},XXHandshake$1=class{constructor(e,t,n,i,o,a,c,l){_(this,"isInitiator");_(this,"session");_(this,"remotePeer");_(this,"remoteExtensions",{webtransportCerthashes:[]});_(this,"payload");_(this,"connection");_(this,"xx");_(this,"staticKeypair");_(this,"prologue");this.isInitiator=e,this.payload=t,this.prologue=n,this.staticKeypair=o,this.connection=a,c&&(this.remotePeer=c),this.xx=l??new XX$1(i),this.session=this.xx.initSession(this.isInitiator,this.prologue,this.staticKeypair)}async propose(){if(logLocalStaticKeys$1(this.session.hs.s),this.isInitiator){log$n.trace("Stage 0 - Initiator starting to send first message.");const e=this.xx.sendMessage(this.session,alloc$1(0));await this.connection.write(encode0$1(e)),log$n.trace("Stage 0 - Initiator finished sending first message."),logLocalEphemeralKeys$1(this.session.hs.e)}else{log$n.trace("Stage 0 - Responder waiting to receive first message...");const e=decode0$1((await this.connection.read()).subarray()),{valid:t}=this.xx.recvMessage(this.session,e);if(!t)throw new InvalidCryptoExchangeError$1("xx handshake stage 0 validation fail");log$n.trace("Stage 0 - Responder received first message."),logRemoteEphemeralKey$1(this.session.hs.re)}}async exchange(){if(this.isInitiator){log$n.trace("Stage 1 - Initiator waiting to receive first message from responder...");const e=decode1$1((await this.connection.read()).subarray()),{plaintext:t,valid:n}=this.xx.recvMessage(this.session,e);if(!n)throw new InvalidCryptoExchangeError$1("xx handshake stage 1 validation fail");log$n.trace("Stage 1 - Initiator received the message."),logRemoteEphemeralKey$1(this.session.hs.re),logRemoteStaticKey$1(this.session.hs.rs),log$n.trace("Initiator going to check remote's signature...");try{const i=decodePayload$1(t);this.remotePeer=this.remotePeer||await getPeerIdFromPayload$1(i),await verifySignedPayload$1(this.session.hs.rs,i,this.remotePeer),this.setRemoteNoiseExtension(i.extensions)}catch(i){const o=i;throw new UnexpectedPeerError$1(`Error occurred while verifying signed payload: ${o.message}`)}log$n.trace("All good with the signature!")}else{log$n.trace("Stage 1 - Responder sending out first message with signed payload and static key.");const e=this.xx.sendMessage(this.session,this.payload);await this.connection.write(encode1$1(e)),log$n.trace("Stage 1 - Responder sent the second handshake message with signed payload."),logLocalEphemeralKeys$1(this.session.hs.e)}}async finish(){if(this.isInitiator){log$n.trace("Stage 2 - Initiator sending third handshake message.");const e=this.xx.sendMessage(this.session,this.payload);await this.connection.write(encode2$1(e)),log$n.trace("Stage 2 - Initiator sent message with signed payload.")}else{log$n.trace("Stage 2 - Responder waiting for third handshake message...");const e=decode2$1((await this.connection.read()).subarray()),{plaintext:t,valid:n}=this.xx.recvMessage(this.session,e);if(!n)throw new InvalidCryptoExchangeError$1("xx handshake stage 2 validation fail");log$n.trace("Stage 2 - Responder received the message, finished handshake.");try{const i=decodePayload$1(t);this.remotePeer=this.remotePeer||await getPeerIdFromPayload$1(i),await verifySignedPayload$1(this.session.hs.rs,i,this.remotePeer),this.setRemoteNoiseExtension(i.extensions)}catch(i){const o=i;throw new UnexpectedPeerError$1(`Error occurred while verifying signed payload: ${o.message}`)}}logCipherState$1(this.session)}encrypt(e,t){const n=this.getCS(t);return this.xx.encryptWithAd(n,alloc$1(0),e)}decrypt(e,t,n){const i=this.getCS(t,!1);return this.xx.decryptWithAd(i,alloc$1(0),e,n)}getRemoteStaticKey(){return this.session.hs.rs}getCS(e,t=!0){if(!e.cs1||!e.cs2)throw new InvalidCryptoExchangeError$1("Handshake not completed properly, cipher state does not exist.");return this.isInitiator?t?e.cs1:e.cs2:t?e.cs2:e.cs1}setRemoteNoiseExtension(e){e&&(this.remoteExtensions=e)}};function registerMetrics$1(r){return{xxHandshakeSuccesses:r.registerCounter("libp2p_noise_xxhandshake_successes_total",{help:"Total count of noise xxHandshakes successes_"}),xxHandshakeErrors:r.registerCounter("libp2p_noise_xxhandshake_error_total",{help:"Total count of noise xxHandshakes errors"}),encryptedPackets:r.registerCounter("libp2p_noise_encrypted_packets_total",{help:"Total count of noise encrypted packets successfully"}),decryptedPackets:r.registerCounter("libp2p_noise_decrypted_packets_total",{help:"Total count of noise decrypted packets"}),decryptErrors:r.registerCounter("libp2p_noise_decrypt_errors_total",{help:"Total count of noise decrypt errors"})}}let Noise$1=class{constructor(e={}){_(this,"protocol","/noise");_(this,"crypto");_(this,"prologue");_(this,"staticKeys");_(this,"extensions");_(this,"metrics");const{staticNoiseKey:t,extensions:n,crypto:i,prologueBytes:o,metrics:a}=e;this.crypto=i??defaultCrypto$1,this.extensions=n,this.metrics=a?registerMetrics$1(a):void 0,t?this.staticKeys=this.crypto.generateX25519KeyPairFromSeed(t):this.staticKeys=this.crypto.generateX25519KeyPair(),this.prologue=o??alloc$1(0)}async secureOutbound(e,t,n){const i=lpStream$1(t,{lengthEncoder:uint16BEEncode$1,lengthDecoder:uint16BEDecode$1,maxDataLength:NOISE_MSG_MAX_LENGTH_BYTES$1}),o=await this.performHandshake({connection:i,isInitiator:!0,localPeer:e,remotePeer:n});return{conn:await this.createSecureConnection(i,o),remoteExtensions:o.remoteExtensions,remotePeer:o.remotePeer}}async secureInbound(e,t,n){const i=lpStream$1(t,{lengthEncoder:uint16BEEncode$1,lengthDecoder:uint16BEDecode$1,maxDataLength:NOISE_MSG_MAX_LENGTH_BYTES$1}),o=await this.performHandshake({connection:i,isInitiator:!1,localPeer:e,remotePeer:n});return{conn:await this.createSecureConnection(i,o),remotePeer:o.remotePeer,remoteExtensions:o.remoteExtensions}}async performHandshake(e){const t=await getPayload$1(e.localPeer,this.staticKeys.publicKey,this.extensions);return this.performXXHandshake(e,t)}async performXXHandshake(e,t){const{isInitiator:n,remotePeer:i,connection:o}=e,a=new XXHandshake$1(n,t,this.prologue,this.crypto,this.staticKeys,o,i);try{await a.propose(),await a.exchange(),await a.finish(),this.metrics?.xxHandshakeSuccesses.increment()}catch(c){if(this.metrics?.xxHandshakeErrors.increment(),c instanceof Error)throw c.message=`Error occurred during XX handshake: ${c.message}`,c}return a}async createSecureConnection(e,t){const[n,i]=duplexPair(),o=e.unwrap();return await pipe(n,encryptStream$1(t,this.metrics),o,a=>decode$h(a,{lengthDecoder:uint16BEDecode$1}),decryptStream$1(t,this.metrics),n),i}};function noise$1(r={}){return()=>new Noise$1(r)}const log$m=logger$5("libp2p:webtransport:stream");async function webtransportBiDiStreamToStream(r,e,t,n,i){const o=r.writable.getWriter(),a=r.readable.getReader();await o.ready;function c(){const $=n.findIndex(S=>S===g);$!==-1&&(n.splice($,1),g.timeline.close=Date.now(),i?.(g))}let l=!1,u=!1;(async function(){const $=await o.closed.catch(S=>S);if($!=null){const S=$.message;S.includes("aborted by the remote server")||S.includes("STOP_SENDING")||log$m.error(`WebTransport writer closed unexpectedly: streamId=${e} err=${$.message}`)}l=!0,l&&u&&c()})().catch(()=>{log$m.error("WebTransport failed to cleanup closed stream")}),async function(){const $=await a.closed.catch(S=>S);$!=null&&log$m.error(`WebTransport reader closed unexpectedly: streamId=${e} err=${$.message}`),u=!0,l&&u&&c()}().catch(()=>{log$m.error("WebTransport failed to cleanup closed stream")});let f=!1;const g={id:e,status:"open",writeStatus:"ready",readStatus:"ready",abort($){l||(o.abort($).catch(S=>{log$m.error("could not abort stream",S)}),l=!0),u=!0,this.status="aborted",this.writeStatus="closed",this.readStatus="closed",this.timeline.reset=this.timeline.close=this.timeline.closeRead=this.timeline.closeWrite=Date.now(),c()},async close($){this.status="closing",await Promise.all([g.closeRead($),g.closeWrite($)]),c(),this.status="closed",this.timeline.close=Date.now()},async closeRead($){if(!u){this.readStatus="closing";try{await a.cancel()}catch(S){S.toString().includes("RESET_STREAM")===!0&&(l=!0)}this.timeline.closeRead=Date.now(),this.readStatus="closed",u=!0}l&&c()},async closeWrite($){if(!l){l=!0,this.writeStatus="closing";try{await o.close()}catch(S){S.toString().includes("RESET_STREAM")===!0&&(u=!0)}this.timeline.closeWrite=Date.now(),this.writeStatus="closed"}u&&c()},direction:t,timeline:{open:Date.now()},metadata:{},source:async function*(){for(;;){const $=await a.read();if($.done){u=!0,l&&c();return}yield new Uint8ArrayList($.value)}}(),sink:async function($){if(f)throw new Error("sink already called on stream");f=!0;try{this.writeStatus="writing";for await(const S of $)if(S instanceof Uint8Array)await o.write(S);else for(const E of S)await o.write(E);this.writeStatus="done"}finally{this.timeline.closeWrite=Date.now(),this.writeStatus="closed",await g.closeWrite()}}};return g}function inertDuplex(){return{source:{[Symbol.asyncIterator](){return{async next(){return new Promise(()=>{})}}}},sink:async r=>new Promise(()=>{})}}function isSubset(r,e){return e.filter(n=>!!r.find(i=>equals$4(n,i))).length===e.length}const multibaseDecoder=Object.values(bases$2).map(r=>r.decoder).reduce((r,e)=>r.or(e));function decodeCerthashStr(r){return decode$n(multibaseDecoder.decode(r))}function parseMultiaddr(r){if(!WebTransport$2.matches(r))throw new CodeError$e("Invalid multiaddr, was not a WebTransport address","ERR_INVALID_MULTIADDR");const e=r.stringTuples(),t=e.filter(([a,c])=>a===getProtocol("certhash").code).map(([a,c])=>decodeCerthashStr(c??"")),n=e.filter(([a,c])=>a===getProtocol("p2p").code).map(([a,c])=>peerIdFromString$2(c??""))[0],i=r.toOptions();let o=i.host;return i.family===6&&o?.includes(":")&&(o=`[${o}]`),{url:`https://${o}:${i.port}`,certhashes:t,remotePeer:n}}const log$l=logger$5("libp2p:webtransport");var Vr,Gr;class WebTransportTransport{constructor(e,t={}){_(this,"components");_(this,"config");_(this,"metrics");_(this,Vr,"@libp2p/webtransport");_(this,Gr,!0);this.components=e,this.config={maxInboundStreams:t.maxInboundStreams??1e3},e.metrics!=null&&(this.metrics={dialerEvents:e.metrics.registerCounterGroup("libp2p_webtransport_dialer_events_total",{label:"event",help:"Total count of WebTransport dialer events by type"})})}async dial(e,t){t?.signal?.throwIfAborted(),log$l("dialing %s",e);const n=this.components.peerId;if(n===void 0)throw new Error("Need a local peerid");t=t??{};const{url:i,certhashes:o,remotePeer:a}=parseMultiaddr(e);if(a==null)throw new Error("Need a target peerid");if(o.length===0)throw new Error("Expected multiaddr to contain certhashes");let c,l,u=()=>{},f=!1,g=!1,$=!1;try{this.metrics?.dialerEvents.increment({pending:!0});const S=new WebTransport(`${i}/.well-known/libp2p-webtransport?type=noise`,{serverCertificateHashes:o.map(E=>({algorithm:"sha-256",value:E.digest}))});if(u=E=>{if(!f)try{this.metrics?.dialerEvents.increment({[E]:!0}),S.close()}catch(v){log$l.error("error closing wt session",v)}finally{l!=null&&(l.timeline.close=Date.now()),f=!0}},c=()=>{u(g?"noise_timeout":"ready_timeout")},t.signal?.addEventListener("abort",c,{once:!0}),await Promise.race([S.closed,S.ready]),g=!0,this.metrics?.dialerEvents.increment({ready:!0}),S.closed.catch(E=>{log$l.error("error on remote wt session close",E)}).finally(()=>{u("remote_close")}),!await this.authenticateWebTransport(S,n,a,o))throw new Error("Failed to authenticate webtransport");return this.metrics?.dialerEvents.increment({open:!0}),l={close:async()=>{log$l("Closing webtransport"),u("close")},abort:E=>{log$l("aborting webtransport due to passed err",E),u("abort")},remoteAddr:e,timeline:{open:Date.now()},...inertDuplex()},$=!0,await t.upgrader.upgradeOutbound(l,{skipEncryption:!0,muxerFactory:this.webtransportMuxer(S),skipProtection:!0})}catch(S){throw log$l.error("caught wt session err",S),u($?"upgrade_error":g?"noise_error":"ready_error"),S}finally{c!=null&&t.signal?.removeEventListener("abort",c)}}async authenticateWebTransport(e,t,n,i){const o=await e.createBidirectionalStream(),a=o.writable.getWriter(),c=o.readable.getReader();await a.ready;const l={source:async function*(){for(;;){const g=await c.read();if(g.value!=null&&(yield g.value),g.done)break}}(),sink:async function(g){for await(const $ of g)await a.write($)}},u=noise$1()(),{remoteExtensions:f}=await u.secureOutbound(t,l,n);if(a.close().catch(g=>{log$l.error(`Failed to close authentication stream writer: ${g.message}`)}),c.cancel().catch(g=>{log$l.error(`Failed to close authentication stream reader: ${g.message}`)}),!isSubset(f?.webtransportCerthashes??[],i.map(g=>g.bytes)))throw new Error("Our certhashes are not a subset of the remote's reported certhashes");return!0}webtransportMuxer(e){let t=0;const n=this.config;return{protocol:"webtransport",createStreamMuxer:i=>{typeof i=="function"&&(i={onIncomingStream:i});const o=[];return async function(){//! TODO unclear how to add backpressure here?
const c=e.incomingBidirectionalStreams.getReader();for(;;){const{done:l,value:u}=await c.read();if(l)break;if(o.length>=n.maxInboundStreams)u.writable.close().catch(f=>{log$l.error(`Failed to close inbound stream that crossed our maxInboundStream limit: ${f.message}`)}),u.readable.cancel().catch(f=>{log$l.error(`Failed to close inbound stream that crossed our maxInboundStream limit: ${f.message}`)});else{const f=await webtransportBiDiStreamToStream(u,String(t++),"inbound",o,i?.onStreamEnd);o.push(f),i?.onIncomingStream?.(f)}}}().catch(()=>{log$l.error("WebTransport failed to receive incoming stream")}),{protocol:"webtransport",streams:o,newStream:async c=>{const l=await e.createBidirectionalStream(),u=await webtransportBiDiStreamToStream(l,String(t++),i?.direction??"outbound",o,i?.onStreamEnd);return o.push(u),u},close:async c=>{log$l("Closing webtransport muxer"),await Promise.all(o.map(async l=>l.close(c)))},abort:c=>{log$l("Aborting webtransport muxer with err:",c);for(const l of o)l.abort(c)},...inertDuplex()}}}}createListener(e){throw new Error("Webtransport servers are not supported in Node or the browser")}filter(e){return e.filter(WebTransport$2.exactMatch)}}Vr=Symbol.toStringTag,Gr=symbol$2;function webTransport(r={}){return e=>new WebTransportTransport(e,r)}const PUBLIC_KEY_BYTE_LENGTH$1=32,PRIVATE_KEY_BYTE_LENGTH$1=64,KEYS_BYTE_LENGTH$1=32;async function generateKey$5(){const r=ed25519.utils.randomPrivateKey(),e=ed25519.getPublicKey(r);return{privateKey:concatKeys$1(r,e),publicKey:e}}async function generateKeyFromSeed$1(r){if(r.length!==KEYS_BYTE_LENGTH$1)throw new TypeError('"seed" must be 32 bytes in length.');if(!(r instanceof Uint8Array))throw new TypeError('"seed" must be a node.js Buffer, or Uint8Array.');const e=r,t=ed25519.getPublicKey(e);return{privateKey:concatKeys$1(e,t),publicKey:t}}async function hashAndSign$5(r,e){const t=r.subarray(0,KEYS_BYTE_LENGTH$1);return ed25519.sign(e,t)}async function hashAndVerify$5(r,e,t){return ed25519.verify(e,t,r)}function concatKeys$1(r,e){const t=new Uint8Array(PRIVATE_KEY_BYTE_LENGTH$1);for(let n=0;n<KEYS_BYTE_LENGTH$1;n++)t[n]=r[n],t[KEYS_BYTE_LENGTH$1+n]=e[n];return t}const webcrypto$1={get(r=globalThis){const e=r.crypto;if(e==null||e.subtle==null)throw Object.assign(new Error("Missing Web Crypto API. The most likely cause of this error is that this page is being accessed from an insecure context (i.e. not HTTPS). For more information and possible resolutions see https://github.com/libp2p/js-libp2p-crypto/blob/master/README.md#web-crypto-api"),{code:"ERR_MISSING_WEB_CRYPTO"});return e}},derivedEmptyPasswordKey$1={alg:"A128GCM",ext:!0,k:"scm9jmO_4BJAgdwWGVulLg",key_ops:["encrypt","decrypt"],kty:"oct"};function create$2(r){const e=r?.algorithm??"AES-GCM";let t=r?.keyLength??16;const n=r?.nonceLength??12,i=r?.digest??"SHA-256",o=r?.saltLength??16,a=r?.iterations??32767,c=webcrypto$1.get();t*=8;async function l(g,$){const S=c.getRandomValues(new Uint8Array(o)),E=c.getRandomValues(new Uint8Array(n)),v={name:e,iv:E};typeof $=="string"&&($=fromString$b($));let T;if($.length===0){T=await c.subtle.importKey("jwk",derivedEmptyPasswordKey$1,{name:"AES-GCM"},!0,["encrypt"]);try{const A={name:"PBKDF2",salt:S,iterations:a,hash:{name:i}},P=await c.subtle.importKey("raw",$,{name:"PBKDF2"},!1,["deriveKey"]);T=await c.subtle.deriveKey(A,P,{name:e,length:t},!0,["encrypt"])}catch{T=await c.subtle.importKey("jwk",derivedEmptyPasswordKey$1,{name:"AES-GCM"},!0,["encrypt"])}}else{const A={name:"PBKDF2",salt:S,iterations:a,hash:{name:i}},P=await c.subtle.importKey("raw",$,{name:"PBKDF2"},!1,["deriveKey"]);T=await c.subtle.deriveKey(A,P,{name:e,length:t},!0,["encrypt"])}const I=await c.subtle.encrypt(v,T,g);return concat$6([S,v.iv,new Uint8Array(I)])}async function u(g,$){const S=g.subarray(0,o),E=g.subarray(o,o+n),v=g.subarray(o+n),T={name:e,iv:E};typeof $=="string"&&($=fromString$b($));let I;if($.length===0)try{const P={name:"PBKDF2",salt:S,iterations:a,hash:{name:i}},x=await c.subtle.importKey("raw",$,{name:"PBKDF2"},!1,["deriveKey"]);I=await c.subtle.deriveKey(P,x,{name:e,length:t},!0,["decrypt"])}catch{I=await c.subtle.importKey("jwk",derivedEmptyPasswordKey$1,{name:"AES-GCM"},!0,["decrypt"])}else{const P={name:"PBKDF2",salt:S,iterations:a,hash:{name:i}},x=await c.subtle.importKey("raw",$,{name:"PBKDF2"},!1,["deriveKey"]);I=await c.subtle.deriveKey(P,x,{name:e,length:t},!0,["decrypt"])}const A=await c.subtle.decrypt(T,I,v);return new Uint8Array(A)}return{encrypt:l,decrypt:u}}async function exporter$2(r,e){const n=await create$2().encrypt(r,e);return base64$6.encode(n)}var KeyType$2;(function(r){r.RSA="RSA",r.Ed25519="Ed25519",r.Secp256k1="Secp256k1"})(KeyType$2||(KeyType$2={}));var __KeyTypeValues$2;(function(r){r[r.RSA=0]="RSA",r[r.Ed25519=1]="Ed25519",r[r.Secp256k1=2]="Secp256k1"})(__KeyTypeValues$2||(__KeyTypeValues$2={}));(function(r){r.codec=()=>enumeration(__KeyTypeValues$2)})(KeyType$2||(KeyType$2={}));var PublicKey$2;(function(r){let e;r.codec=()=>(e==null&&(e=message((t,n,i={})=>{i.lengthDelimited!==!1&&n.fork(),t.Type!=null&&(n.uint32(8),KeyType$2.codec().encode(t.Type,n)),t.Data!=null&&(n.uint32(18),n.bytes(t.Data)),i.lengthDelimited!==!1&&n.ldelim()},(t,n)=>{const i={},o=n==null?t.len:t.pos+n;for(;t.pos<o;){const a=t.uint32();switch(a>>>3){case 1:i.Type=KeyType$2.codec().decode(t);break;case 2:i.Data=t.bytes();break;default:t.skipType(a&7);break}}return i})),e),r.encode=t=>encodeMessage(t,r.codec()),r.decode=t=>decodeMessage$1(t,r.codec())})(PublicKey$2||(PublicKey$2={}));var PrivateKey$2;(function(r){let e;r.codec=()=>(e==null&&(e=message((t,n,i={})=>{i.lengthDelimited!==!1&&n.fork(),t.Type!=null&&(n.uint32(8),KeyType$2.codec().encode(t.Type,n)),t.Data!=null&&(n.uint32(18),n.bytes(t.Data)),i.lengthDelimited!==!1&&n.ldelim()},(t,n)=>{const i={},o=n==null?t.len:t.pos+n;for(;t.pos<o;){const a=t.uint32();switch(a>>>3){case 1:i.Type=KeyType$2.codec().decode(t);break;case 2:i.Data=t.bytes();break;default:t.skipType(a&7);break}}return i})),e),r.encode=t=>encodeMessage(t,r.codec()),r.decode=t=>decodeMessage$1(t,r.codec())})(PrivateKey$2||(PrivateKey$2={}));let Ed25519PublicKey$1=class{constructor(e){_(this,"_key");this._key=ensureKey$1(e,PUBLIC_KEY_BYTE_LENGTH$1)}async verify(e,t){return hashAndVerify$5(this._key,t,e)}marshal(){return this._key}get bytes(){return PublicKey$2.encode({Type:KeyType$2.Ed25519,Data:this.marshal()}).subarray()}equals(e){return equals$4(this.bytes,e.bytes)}async hash(){const{bytes:e}=await sha256$2.digest(this.bytes);return e}},Ed25519PrivateKey$1=class{constructor(e,t){_(this,"_key");_(this,"_publicKey");this._key=ensureKey$1(e,PRIVATE_KEY_BYTE_LENGTH$1),this._publicKey=ensureKey$1(t,PUBLIC_KEY_BYTE_LENGTH$1)}async sign(e){return hashAndSign$5(this._key,e)}get public(){return new Ed25519PublicKey$1(this._publicKey)}marshal(){return this._key}get bytes(){return PrivateKey$2.encode({Type:KeyType$2.Ed25519,Data:this.marshal()}).subarray()}equals(e){return equals$4(this.bytes,e.bytes)}async hash(){const{bytes:e}=await sha256$2.digest(this.bytes);return e}async id(){const e=identity$3.digest(this.public.bytes);return base58btc$4.encode(e.bytes).substring(1)}async export(e,t="libp2p-key"){if(t==="libp2p-key")return exporter$2(this.bytes,e);throw new CodeError$e(`export format '${t}' is not supported`,"ERR_INVALID_EXPORT_FORMAT")}};function unmarshalEd25519PrivateKey$1(r){if(r.length>PRIVATE_KEY_BYTE_LENGTH$1){r=ensureKey$1(r,PRIVATE_KEY_BYTE_LENGTH$1+PUBLIC_KEY_BYTE_LENGTH$1);const n=r.subarray(0,PRIVATE_KEY_BYTE_LENGTH$1),i=r.subarray(PRIVATE_KEY_BYTE_LENGTH$1,r.length);return new Ed25519PrivateKey$1(n,i)}r=ensureKey$1(r,PRIVATE_KEY_BYTE_LENGTH$1);const e=r.subarray(0,PRIVATE_KEY_BYTE_LENGTH$1),t=r.subarray(PUBLIC_KEY_BYTE_LENGTH$1);return new Ed25519PrivateKey$1(e,t)}function unmarshalEd25519PublicKey$1(r){return r=ensureKey$1(r,PUBLIC_KEY_BYTE_LENGTH$1),new Ed25519PublicKey$1(r)}async function generateKeyPair$6(){const{privateKey:r,publicKey:e}=await generateKey$5();return new Ed25519PrivateKey$1(r,e)}async function generateKeyPairFromSeed$1(r){const{privateKey:e,publicKey:t}=await generateKeyFromSeed$1(r);return new Ed25519PrivateKey$1(e,t)}function ensureKey$1(r,e){if(r=Uint8Array.from(r??[]),r.length!==e)throw new CodeError$e(`Key must be a Uint8Array of length ${e}, got ${r.length}`,"ERR_INVALID_KEY_TYPE");return r}const Ed25519$1=Object.freeze(Object.defineProperty({__proto__:null,Ed25519PrivateKey:Ed25519PrivateKey$1,Ed25519PublicKey:Ed25519PublicKey$1,generateKeyPair:generateKeyPair$6,generateKeyPairFromSeed:generateKeyPairFromSeed$1,unmarshalEd25519PrivateKey:unmarshalEd25519PrivateKey$1,unmarshalEd25519PublicKey:unmarshalEd25519PublicKey$1},Symbol.toStringTag,{value:"Module"}));function bigIntegerToUintBase64url$1(r,e){let t=Uint8Array.from(r.abs().toByteArray());if(t=t[0]===0?t.subarray(1):t,e!=null){if(t.length>e)throw new Error("byte array longer than desired length");t=concat$6([new Uint8Array(e-t.length),t])}return toString$b(t,"base64url")}function base64urlToBigInteger$1(r){const e=base64urlToBuffer$1(r);return new forge$n.jsbn.BigInteger(toString$b(e,"base16"),16)}function base64urlToBuffer$1(r,e){let t=fromString$b(r,"base64urlpad");if(e!=null){if(t.length>e)throw new Error("byte array longer than desired length");t=concat$6([new Uint8Array(e-t.length),t])}return t}const bits$2={"P-256":256,"P-384":384,"P-521":521},curveTypes$2=Object.keys(bits$2);curveTypes$2.join(" / ");function randomBytes$2(r){if(isNaN(r)||r<=0)throw new CodeError$e("random bytes length must be a Number bigger than 0","ERR_INVALID_LENGTH");return randomBytes$a(r)}function convert$3(r,e){return e.map(t=>base64urlToBigInteger$1(r[t]))}function jwk2priv$1(r){return forge$n.pki.setRsaPrivateKey(...convert$3(r,["n","e","d","p","q","dp","dq","qi"]))}function jwk2pub$1(r){return forge$n.pki.setRsaPublicKey(...convert$3(r,["n","e"]))}function pkcs1ToJwk$1(r){const e=forge$n.asn1.fromDer(toString$b(r,"ascii")),t=forge$n.pki.privateKeyFromAsn1(e);return{kty:"RSA",n:bigIntegerToUintBase64url$1(t.n),e:bigIntegerToUintBase64url$1(t.e),d:bigIntegerToUintBase64url$1(t.d),p:bigIntegerToUintBase64url$1(t.p),q:bigIntegerToUintBase64url$1(t.q),dp:bigIntegerToUintBase64url$1(t.dP),dq:bigIntegerToUintBase64url$1(t.dQ),qi:bigIntegerToUintBase64url$1(t.qInv),alg:"RS256"}}function jwkToPkcs1$1(r){if(r.n==null||r.e==null||r.d==null||r.p==null||r.q==null||r.dp==null||r.dq==null||r.qi==null)throw new CodeError$e("JWK was missing components","ERR_INVALID_PARAMETERS");const e=forge$n.pki.privateKeyToAsn1({n:base64urlToBigInteger$1(r.n),e:base64urlToBigInteger$1(r.e),d:base64urlToBigInteger$1(r.d),p:base64urlToBigInteger$1(r.p),q:base64urlToBigInteger$1(r.q),dP:base64urlToBigInteger$1(r.dp),dQ:base64urlToBigInteger$1(r.dq),qInv:base64urlToBigInteger$1(r.qi)});return fromString$b(forge$n.asn1.toDer(e).getBytes(),"ascii")}function pkixToJwk$1(r){const e=forge$n.asn1.fromDer(toString$b(r,"ascii")),t=forge$n.pki.publicKeyFromAsn1(e);return{kty:"RSA",n:bigIntegerToUintBase64url$1(t.n),e:bigIntegerToUintBase64url$1(t.e)}}function jwkToPkix$1(r){if(r.n==null||r.e==null)throw new CodeError$e("JWK was missing components","ERR_INVALID_PARAMETERS");const e=forge$n.pki.publicKeyToAsn1({n:base64urlToBigInteger$1(r.n),e:base64urlToBigInteger$1(r.e)});return fromString$b(forge$n.asn1.toDer(e).getBytes(),"ascii")}async function generateKey$4(r){const e=await webcrypto$1.get().subtle.generateKey({name:"RSASSA-PKCS1-v1_5",modulusLength:r,publicExponent:new Uint8Array([1,0,1]),hash:{name:"SHA-256"}},!0,["sign","verify"]),t=await exportKey$1(e);return{privateKey:t[0],publicKey:t[1]}}async function unmarshalPrivateKey$2(r){const t=[await webcrypto$1.get().subtle.importKey("jwk",r,{name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-256"}},!0,["sign"]),await derivePublicFromPrivate$1(r)],n=await exportKey$1({privateKey:t[0],publicKey:t[1]});return{privateKey:n[0],publicKey:n[1]}}async function hashAndSign$4(r,e){const t=await webcrypto$1.get().subtle.importKey("jwk",r,{name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-256"}},!1,["sign"]),n=await webcrypto$1.get().subtle.sign({name:"RSASSA-PKCS1-v1_5"},t,Uint8Array.from(e));return new Uint8Array(n,0,n.byteLength)}async function hashAndVerify$4(r,e,t){const n=await webcrypto$1.get().subtle.importKey("jwk",r,{name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-256"}},!1,["verify"]);return webcrypto$1.get().subtle.verify({name:"RSASSA-PKCS1-v1_5"},n,e,t)}async function exportKey$1(r){if(r.privateKey==null||r.publicKey==null)throw new CodeError$e("Private and public key are required","ERR_INVALID_PARAMETERS");return Promise.all([webcrypto$1.get().subtle.exportKey("jwk",r.privateKey),webcrypto$1.get().subtle.exportKey("jwk",r.publicKey)])}async function derivePublicFromPrivate$1(r){return webcrypto$1.get().subtle.importKey("jwk",{kty:r.kty,n:r.n,e:r.e},{name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-256"}},!0,["verify"])}function convertKey$1(r,e,t,n){const i=e?jwk2pub$1(r):jwk2priv$1(r),o=toString$b(Uint8Array.from(t),"ascii"),a=n(o,i);return fromString$b(a,"ascii")}function encrypt$1(r,e){return convertKey$1(r,!0,e,(t,n)=>n.encrypt(t))}function decrypt$1(r,e){return convertKey$1(r,!1,e,(t,n)=>n.decrypt(t))}function keySize$1(r){if(r.kty!=="RSA")throw new CodeError$e("invalid key type","ERR_INVALID_KEY_TYPE");if(r.n==null)throw new CodeError$e("invalid key modulus","ERR_INVALID_KEY_MODULUS");return fromString$b(r.n,"base64url").length*8}const MAX_KEY_SIZE$1=8192;let RsaPublicKey$1=class{constructor(e){_(this,"_key");this._key=e}async verify(e,t){return hashAndVerify$4(this._key,t,e)}marshal(){return jwkToPkix$1(this._key)}get bytes(){return PublicKey$2.encode({Type:KeyType$2.RSA,Data:this.marshal()}).subarray()}encrypt(e){return encrypt$1(this._key,e)}equals(e){return equals$4(this.bytes,e.bytes)}async hash(){const{bytes:e}=await sha256$2.digest(this.bytes);return e}},RsaPrivateKey$1=class{constructor(e,t){_(this,"_key");_(this,"_publicKey");this._key=e,this._publicKey=t}genSecret(){return randomBytes$2(16)}async sign(e){return hashAndSign$4(this._key,e)}get public(){if(this._publicKey==null)throw new CodeError$e("public key not provided","ERR_PUBKEY_NOT_PROVIDED");return new RsaPublicKey$1(this._publicKey)}decrypt(e){return decrypt$1(this._key,e)}marshal(){return jwkToPkcs1$1(this._key)}get bytes(){return PrivateKey$2.encode({Type:KeyType$2.RSA,Data:this.marshal()}).subarray()}equals(e){return equals$4(this.bytes,e.bytes)}async hash(){const{bytes:e}=await sha256$2.digest(this.bytes);return e}async id(){const e=await this.public.hash();return toString$b(e,"base58btc")}async export(e,t="pkcs-8"){if(t==="pkcs-8"){const n=new forge$n.util.ByteBuffer(this.marshal()),i=forge$n.asn1.fromDer(n),o=forge$n.pki.privateKeyFromAsn1(i),a={algorithm:"aes256",count:1e4,saltSize:128/8,prfAlgorithm:"sha512"};return forge$n.pki.encryptRsaPrivateKey(o,e,a)}else{if(t==="libp2p-key")return exporter$2(this.bytes,e);throw new CodeError$e(`export format '${t}' is not supported`,"ERR_INVALID_EXPORT_FORMAT")}}};async function unmarshalRsaPrivateKey$1(r){const e=pkcs1ToJwk$1(r);if(keySize$1(e)>MAX_KEY_SIZE$1)throw new CodeError$e("key size is too large","ERR_KEY_SIZE_TOO_LARGE");const t=await unmarshalPrivateKey$2(e);return new RsaPrivateKey$1(t.privateKey,t.publicKey)}function unmarshalRsaPublicKey$1(r){const e=pkixToJwk$1(r);if(keySize$1(e)>MAX_KEY_SIZE$1)throw new CodeError$e("key size is too large","ERR_KEY_SIZE_TOO_LARGE");return new RsaPublicKey$1(e)}async function fromJwk$1(r){if(keySize$1(r)>MAX_KEY_SIZE$1)throw new CodeError$e("key size is too large","ERR_KEY_SIZE_TOO_LARGE");const e=await unmarshalPrivateKey$2(r);return new RsaPrivateKey$1(e.privateKey,e.publicKey)}async function generateKeyPair$5(r){if(r>MAX_KEY_SIZE$1)throw new CodeError$e("key size is too large","ERR_KEY_SIZE_TOO_LARGE");const e=await generateKey$4(r);return new RsaPrivateKey$1(e.privateKey,e.publicKey)}const RSA$1=Object.freeze(Object.defineProperty({__proto__:null,MAX_KEY_SIZE:MAX_KEY_SIZE$1,RsaPrivateKey:RsaPrivateKey$1,RsaPublicKey:RsaPublicKey$1,fromJwk:fromJwk$1,generateKeyPair:generateKeyPair$5,unmarshalRsaPrivateKey:unmarshalRsaPrivateKey$1,unmarshalRsaPublicKey:unmarshalRsaPublicKey$1},Symbol.toStringTag,{value:"Module"}));function generateKey$3(){return secp256k1.utils.randomPrivateKey()}async function hashAndSign$3(r,e){const{digest:t}=await sha256$2.digest(e);try{return secp256k1.sign(t,r).toDERRawBytes()}catch(n){throw new CodeError$e(String(n),"ERR_INVALID_INPUT")}}async function hashAndVerify$3(r,e,t){try{const{digest:n}=await sha256$2.digest(t);return secp256k1.verify(e,n,r)}catch(n){throw new CodeError$e(String(n),"ERR_INVALID_INPUT")}}function compressPublicKey$1(r){return secp256k1.ProjectivePoint.fromHex(r).toRawBytes(!0)}function validatePrivateKey$1(r){try{secp256k1.getPublicKey(r,!0)}catch(e){throw new CodeError$e(String(e),"ERR_INVALID_PRIVATE_KEY")}}function validatePublicKey$1(r){try{secp256k1.ProjectivePoint.fromHex(r)}catch(e){throw new CodeError$e(String(e),"ERR_INVALID_PUBLIC_KEY")}}function computePublicKey$1(r){try{return secp256k1.getPublicKey(r,!0)}catch(e){throw new CodeError$e(String(e),"ERR_INVALID_PRIVATE_KEY")}}let Secp256k1PublicKey$1=class{constructor(e){_(this,"_key");validatePublicKey$1(e),this._key=e}async verify(e,t){return hashAndVerify$3(this._key,t,e)}marshal(){return compressPublicKey$1(this._key)}get bytes(){return PublicKey$2.encode({Type:KeyType$2.Secp256k1,Data:this.marshal()}).subarray()}equals(e){return equals$4(this.bytes,e.bytes)}async hash(){const{bytes:e}=await sha256$2.digest(this.bytes);return e}},Secp256k1PrivateKey$1=class{constructor(e,t){_(this,"_key");_(this,"_publicKey");this._key=e,this._publicKey=t??computePublicKey$1(e),validatePrivateKey$1(this._key),validatePublicKey$1(this._publicKey)}async sign(e){return hashAndSign$3(this._key,e)}get public(){return new Secp256k1PublicKey$1(this._publicKey)}marshal(){return this._key}get bytes(){return PrivateKey$2.encode({Type:KeyType$2.Secp256k1,Data:this.marshal()}).subarray()}equals(e){return equals$4(this.bytes,e.bytes)}async hash(){const{bytes:e}=await sha256$2.digest(this.bytes);return e}async id(){const e=await this.public.hash();return toString$b(e,"base58btc")}async export(e,t="libp2p-key"){if(t==="libp2p-key")return exporter$2(this.bytes,e);throw new CodeError$e(`export format '${t}' is not supported`,"ERR_INVALID_EXPORT_FORMAT")}};function unmarshalSecp256k1PrivateKey$1(r){return new Secp256k1PrivateKey$1(r)}function unmarshalSecp256k1PublicKey$1(r){return new Secp256k1PublicKey$1(r)}async function generateKeyPair$4(){const r=generateKey$3();return new Secp256k1PrivateKey$1(r)}const Secp256k1$1=Object.freeze(Object.defineProperty({__proto__:null,Secp256k1PrivateKey:Secp256k1PrivateKey$1,Secp256k1PublicKey:Secp256k1PublicKey$1,generateKeyPair:generateKeyPair$4,unmarshalSecp256k1PrivateKey:unmarshalSecp256k1PrivateKey$1,unmarshalSecp256k1PublicKey:unmarshalSecp256k1PublicKey$1},Symbol.toStringTag,{value:"Module"})),supportedKeys$1={rsa:RSA$1,ed25519:Ed25519$1,secp256k1:Secp256k1$1};function unsupportedKey$1(r){const e=Object.keys(supportedKeys$1).join(" / ");return new CodeError$e(`invalid or unsupported key type ${r}. Must be ${e}`,"ERR_UNSUPPORTED_KEY_TYPE")}function unmarshalPublicKey$1(r){const e=PublicKey$2.decode(r),t=e.Data??new Uint8Array;switch(e.Type){case KeyType$2.RSA:return supportedKeys$1.rsa.unmarshalRsaPublicKey(t);case KeyType$2.Ed25519:return supportedKeys$1.ed25519.unmarshalEd25519PublicKey(t);case KeyType$2.Secp256k1:return supportedKeys$1.secp256k1.unmarshalSecp256k1PublicKey(t);default:throw unsupportedKey$1(e.Type??"unknown")}}const inspect$2=Symbol.for("nodejs.util.inspect.custom"),baseDecoder$1=Object.values(bases$2).map(r=>r.decoder).reduce((r,e)=>r.or(e),bases$2.identity.decoder),LIBP2P_KEY_CODE$1=114,MARSHALLED_ED225519_PUBLIC_KEY_LENGTH$1=36,MARSHALLED_SECP256K1_PUBLIC_KEY_LENGTH$1=37;var Hr;let PeerIdImpl$1=class{constructor(e){_(this,"type");_(this,"multihash");_(this,"privateKey");_(this,"publicKey");_(this,"string");_(this,Hr,!0);this.type=e.type,this.multihash=e.multihash,this.privateKey=e.privateKey,Object.defineProperty(this,"string",{enumerable:!1,writable:!0})}get[Symbol.toStringTag](){return`PeerId(${this.toString()})`}toString(){return this.string==null&&(this.string=base58btc$4.encode(this.multihash.bytes).slice(1)),this.string}toCID(){return CID$3.createV1(LIBP2P_KEY_CODE$1,this.multihash)}toBytes(){return this.multihash.bytes}toJSON(){return this.toString()}equals(e){if(e instanceof Uint8Array)return equals$4(this.multihash.bytes,e);if(typeof e=="string")return peerIdFromString$1(e).equals(this);if(e?.multihash?.bytes!=null)return equals$4(this.multihash.bytes,e.multihash.bytes);throw new Error("not valid Id")}[(Hr=symbol$4,inspect$2)](){return`PeerId(${this.toString()})`}},RSAPeerIdImpl$1=class extends PeerIdImpl$1{constructor(t){super({...t,type:"RSA"});_(this,"type","RSA");_(this,"publicKey");this.publicKey=t.publicKey}},Ed25519PeerIdImpl$1=class extends PeerIdImpl$1{constructor(t){super({...t,type:"Ed25519"});_(this,"type","Ed25519");_(this,"publicKey");this.publicKey=t.multihash.digest}},Secp256k1PeerIdImpl$1=class extends PeerIdImpl$1{constructor(t){super({...t,type:"secp256k1"});_(this,"type","secp256k1");_(this,"publicKey");this.publicKey=t.multihash.digest}};function peerIdFromString$1(r,e){if(r.charAt(0)==="1"||r.charAt(0)==="Q"){const t=decode$n(base58btc$4.decode(`z${r}`));return r.startsWith("12D")?new Ed25519PeerIdImpl$1({multihash:t}):r.startsWith("16U")?new Secp256k1PeerIdImpl$1({multihash:t}):new RSAPeerIdImpl$1({multihash:t})}return peerIdFromBytes$1(baseDecoder$1.decode(r))}function peerIdFromBytes$1(r){try{const e=decode$n(r);if(e.code===identity$3.code){if(e.digest.length===MARSHALLED_ED225519_PUBLIC_KEY_LENGTH$1)return new Ed25519PeerIdImpl$1({multihash:e});if(e.digest.length===MARSHALLED_SECP256K1_PUBLIC_KEY_LENGTH$1)return new Secp256k1PeerIdImpl$1({multihash:e})}if(e.code===sha256$2.code)return new RSAPeerIdImpl$1({multihash:e})}catch{return peerIdFromCID$1(CID$3.decode(r))}throw new Error("Supplied PeerID CID is invalid")}function peerIdFromCID$1(r){if(r==null||r.multihash==null||r.version==null||r.version===1&&r.code!==LIBP2P_KEY_CODE$1)throw new Error("Supplied PeerID CID is invalid");const e=r.multihash;if(e.code===sha256$2.code)return new RSAPeerIdImpl$1({multihash:r.multihash});if(e.code===identity$3.code){if(e.digest.length===MARSHALLED_ED225519_PUBLIC_KEY_LENGTH$1)return new Ed25519PeerIdImpl$1({multihash:r.multihash});if(e.digest.length===MARSHALLED_SECP256K1_PUBLIC_KEY_LENGTH$1)return new Secp256k1PeerIdImpl$1({multihash:r.multihash})}throw new Error("Supplied PeerID CID is invalid")}async function peerIdFromKeys$1(r,e){return r.length===MARSHALLED_ED225519_PUBLIC_KEY_LENGTH$1?new Ed25519PeerIdImpl$1({multihash:create$c(identity$3.code,r),privateKey:e}):r.length===MARSHALLED_SECP256K1_PUBLIC_KEY_LENGTH$1?new Secp256k1PeerIdImpl$1({multihash:create$c(identity$3.code,r),privateKey:e}):new RSAPeerIdImpl$1({multihash:await sha256$2.digest(r),publicKey:r,privateKey:e})}const ERR_IPNS_EXPIRED_RECORD="ERR_IPNS_EXPIRED_RECORD",ERR_UNRECOGNIZED_VALIDITY="ERR_UNRECOGNIZED_VALIDITY",ERR_SIGNATURE_VERIFICATION="ERR_SIGNATURE_VERIFICATION",ERR_UNRECOGNIZED_FORMAT="ERR_UNRECOGNIZED_FORMAT",ERR_UNDEFINED_PARAMETER="ERR_UNDEFINED_PARAMETER",ERR_INVALID_RECORD_DATA="ERR_INVALID_RECORD_DATA",ERR_INVALID_VALUE="ERR_INVALID_VALUE",ERR_INVALID_EMBEDDED_KEY="ERR_INVALID_EMBEDDED_KEY",ERR_RECORD_TOO_LARGE="ERR_RECORD_TOO_LARGE";var IpnsEntry;(function(r){(function(n){n.EOL="EOL"})(r.ValidityType||(r.ValidityType={}));let e;(function(n){n[n.EOL=0]="EOL"})(e||(e={})),function(n){n.codec=()=>enumeration(e)}(r.ValidityType||(r.ValidityType={}));let t;r.codec=()=>(t==null&&(t=message((n,i,o={})=>{o.lengthDelimited!==!1&&i.fork(),n.value!=null&&(i.uint32(10),i.bytes(n.value)),n.signatureV1!=null&&(i.uint32(18),i.bytes(n.signatureV1)),n.validityType!=null&&(i.uint32(24),r.ValidityType.codec().encode(n.validityType,i)),n.validity!=null&&(i.uint32(34),i.bytes(n.validity)),n.sequence!=null&&(i.uint32(40),i.uint64(n.sequence)),n.ttl!=null&&(i.uint32(48),i.uint64(n.ttl)),n.pubKey!=null&&(i.uint32(58),i.bytes(n.pubKey)),n.signatureV2!=null&&(i.uint32(66),i.bytes(n.signatureV2)),n.data!=null&&(i.uint32(74),i.bytes(n.data)),o.lengthDelimited!==!1&&i.ldelim()},(n,i)=>{const o={},a=i==null?n.len:n.pos+i;for(;n.pos<a;){const c=n.uint32();switch(c>>>3){case 1:o.value=n.bytes();break;case 2:o.signatureV1=n.bytes();break;case 3:o.validityType=r.ValidityType.codec().decode(n);break;case 4:o.validity=n.bytes();break;case 5:o.sequence=n.uint64();break;case 6:o.ttl=n.uint64();break;case 7:o.pubKey=n.bytes();break;case 8:o.signatureV2=n.bytes();break;case 9:o.data=n.bytes();break;default:n.skipType(c&7);break}}return o})),t),r.encode=n=>encodeMessage(n,r.codec()),r.decode=n=>decodeMessage$1(n,r.codec())})(IpnsEntry||(IpnsEntry={}));const log$k=logger$5("ipns:utils"),IPNS_PREFIX=fromString$b("/ipns/"),LIBP2P_CID_CODEC=114;function parseRFC3339(r){const e=new RegExp("(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2})\\.(\\d+)Z"),t=String(r).trim().match(e);if(t==null)throw new Error("Invalid format");const n=parseInt(t[1],10),i=parseInt(t[2],10)-1,o=parseInt(t[3],10),a=parseInt(t[4],10),c=parseInt(t[5],10),l=parseInt(t[6],10),u=parseInt(t[7].padEnd(6,"0").slice(0,3),10);return new Date(Date.UTC(n,i,o,a,c,l,u))}const extractPublicKey=async(r,e)=>{if(e==null||r==null){const n=new Error("one or more of the provided parameters are not defined");throw log$k.error(n),errCode$b(n,ERR_UNDEFINED_PARAMETER)}let t;if(e.pubKey!=null){try{t=unmarshalPublicKey$1(e.pubKey)}catch(i){throw log$k.error(i),i}if(!(await peerIdFromKeys$1(e.pubKey)).equals(r))throw errCode$b(new Error("Embedded public key did not match PeerID"),ERR_INVALID_EMBEDDED_KEY)}else r.publicKey!=null&&(t=unmarshalPublicKey$1(r.publicKey));if(t!=null)return t;throw errCode$b(new Error("no public key is available"),ERR_UNDEFINED_PARAMETER)},ipnsRecordDataForV2Sig=r=>{const e=fromString$b("ipns-signature:");return concat$6([e,r])};function unmarshal(r){const e=IpnsEntry.decode(r);if(e.sequence!=null&&(e.sequence=BigInt(e.sequence)),e.ttl!=null&&(e.ttl=BigInt(e.ttl)),e.signatureV2==null||e.data==null)throw errCode$b(new Error("missing data or signatureV2"),ERR_SIGNATURE_VERIFICATION);const t=parseCborData(e.data),n=normalizeValue(t.Value);let i;try{i=NanoDate.fromDate(parseRFC3339(toString$b(t.Validity)))}catch{throw log$k.error("unrecognized validity format (not an rfc3339 format)"),errCode$b(new Error("unrecognized validity format (not an rfc3339 format)"),ERR_UNRECOGNIZED_FORMAT)}if(e.value!=null&&e.signatureV1!=null)return validateCborDataMatchesPbData(e),{value:n,validityType:IpnsEntry.ValidityType.EOL,validity:i,sequence:t.Sequence,ttl:t.TTL,pubKey:e.pubKey,signatureV1:e.signatureV1,signatureV2:e.signatureV2,data:e.data};if(e.signatureV2!=null)return{value:n,validityType:IpnsEntry.ValidityType.EOL,validity:i,sequence:t.Sequence,ttl:t.TTL,pubKey:e.pubKey,signatureV2:e.signatureV2,data:e.data};throw new Error("invalid record: does not include signatureV1 or signatureV2")}const peerIdFromRoutingKey=r=>peerIdFromBytes$1(r.slice(IPNS_PREFIX.length)),parseCborData=r=>{const e=decode$g(r);if(e.ValidityType===0)e.ValidityType=IpnsEntry.ValidityType.EOL;else throw errCode$b(new Error("Unknown validity type"),ERR_UNRECOGNIZED_VALIDITY);return Number.isInteger(e.Sequence)&&(e.Sequence=BigInt(e.Sequence)),Number.isInteger(e.TTL)&&(e.TTL=BigInt(e.TTL)),e},normalizeValue=r=>{if(r!=null){if(isPeerId$2(r))return`/ipns/${r.toCID().toString(base36$4)}`;if(r instanceof Uint8Array){const n=toString$b(r);n.startsWith("/")&&(r=n)}const e=r.toString().trim();if(e.startsWith("/")&&e.length>1)return e;const t=CID$3.asCID(r);if(t!=null)return t.code===LIBP2P_CID_CODEC?`/ipns/${t.toString(base36$4)}`:`/ipfs/${t.toV1().toString()}`;try{return r instanceof Uint8Array?`/ipfs/${CID$3.decode(r).toV1().toString()}`:`/ipfs/${CID$3.parse(e).toV1().toString()}`}catch{}}throw errCode$b(new Error("Value must be a valid content path starting with /"),ERR_INVALID_VALUE)},validateCborDataMatchesPbData=r=>{if(r.data==null)throw errCode$b(new Error("Record data is missing"),ERR_INVALID_RECORD_DATA);const e=parseCborData(r.data);if(!equals$4(e.Value,r.value??new Uint8Array(0)))throw errCode$b(new Error('Field "value" did not match between protobuf and CBOR'),ERR_SIGNATURE_VERIFICATION);if(!equals$4(e.Validity,r.validity??new Uint8Array(0)))throw errCode$b(new Error('Field "validity" did not match between protobuf and CBOR'),ERR_SIGNATURE_VERIFICATION);if(e.ValidityType!==r.validityType)throw errCode$b(new Error('Field "validityType" did not match between protobuf and CBOR'),ERR_SIGNATURE_VERIFICATION);if(e.Sequence!==r.sequence)throw errCode$b(new Error('Field "sequence" did not match between protobuf and CBOR'),ERR_SIGNATURE_VERIFICATION);if(e.TTL!==r.ttl)throw errCode$b(new Error('Field "ttl" did not match between protobuf and CBOR'),ERR_SIGNATURE_VERIFICATION)};function ipnsSelector(r,e){const t=e.map((n,i)=>({record:unmarshal(n),index:i}));return t.sort((n,i)=>{const o=n.record.sequence,a=i.record.sequence;if(o>a)return-1;if(o<a)return 1;const c=n.record.validity.toDate(),l=i.record.validity.toDate();return c.getTime()>l.getTime()?-1:c.getTime()<l.getTime()?1:0}),t[0].index}const log$j=logger$5("ipns:validator"),MAX_RECORD_SIZE=1024*10,validate=async(r,e)=>{const t=unmarshal(e);let n;try{const i=ipnsRecordDataForV2Sig(t.data);n=await r.verify(i,t.signatureV2)}catch{n=!1}if(!n)throw log$j.error("record signature verification failed"),errCode$b(new Error("record signature verification failed"),ERR_SIGNATURE_VERIFICATION);if(t.validityType===IpnsEntry.ValidityType.EOL){if(t.validity.toDate().getTime()<Date.now())throw log$j.error("record has expired"),errCode$b(new Error("record has expired"),ERR_IPNS_EXPIRED_RECORD)}else if(t.validityType!=null)throw log$j.error("unrecognized validity type"),errCode$b(new Error("unrecognized validity type"),ERR_UNRECOGNIZED_VALIDITY);log$j("ipns record for %b is valid",t.value)};async function ipnsValidator(r,e){if(e.byteLength>MAX_RECORD_SIZE)throw errCode$b(new Error("record too large"),ERR_RECORD_TOO_LARGE);const t=peerIdFromRoutingKey(r),n=unmarshal(e),i=await extractPublicKey(t,n);await validate(i,e)}const PROTOCOL_PREFIX$2="libp2p",PROTOCOL_NAME$2="autonat",PROTOCOL_VERSION$2="1.0.0",TIMEOUT$2=3e4,STARTUP_DELAY=5e3,REFRESH_INTERVAL=6e4,MAX_INBOUND_STREAMS$2=1,MAX_OUTBOUND_STREAMS$2=1;var Message;(function(r){(function(i){i.DIAL="DIAL",i.DIAL_RESPONSE="DIAL_RESPONSE"})(r.MessageType||(r.MessageType={}));let e;(function(i){i[i.DIAL=0]="DIAL",i[i.DIAL_RESPONSE=1]="DIAL_RESPONSE"})(e||(e={})),function(i){i.codec=()=>enumeration(e)}(r.MessageType||(r.MessageType={})),function(i){i.OK="OK",i.E_DIAL_ERROR="E_DIAL_ERROR",i.E_DIAL_REFUSED="E_DIAL_REFUSED",i.E_BAD_REQUEST="E_BAD_REQUEST",i.E_INTERNAL_ERROR="E_INTERNAL_ERROR"}(r.ResponseStatus||(r.ResponseStatus={}));let t;(function(i){i[i.OK=0]="OK",i[i.E_DIAL_ERROR=100]="E_DIAL_ERROR",i[i.E_DIAL_REFUSED=101]="E_DIAL_REFUSED",i[i.E_BAD_REQUEST=200]="E_BAD_REQUEST",i[i.E_INTERNAL_ERROR=300]="E_INTERNAL_ERROR"})(t||(t={})),function(i){i.codec=()=>enumeration(t)}(r.ResponseStatus||(r.ResponseStatus={})),function(i){let o;i.codec=()=>(o==null&&(o=message((a,c,l={})=>{if(l.lengthDelimited!==!1&&c.fork(),a.id!=null&&(c.uint32(10),c.bytes(a.id)),a.addrs!=null)for(const u of a.addrs)c.uint32(18),c.bytes(u);l.lengthDelimited!==!1&&c.ldelim()},(a,c)=>{const l={addrs:[]},u=c==null?a.len:a.pos+c;for(;a.pos<u;){const f=a.uint32();switch(f>>>3){case 1:l.id=a.bytes();break;case 2:l.addrs.push(a.bytes());break;default:a.skipType(f&7);break}}return l})),o),i.encode=a=>encodeMessage(a,i.codec()),i.decode=a=>decodeMessage$1(a,i.codec())}(r.PeerInfo||(r.PeerInfo={})),function(i){let o;i.codec=()=>(o==null&&(o=message((a,c,l={})=>{l.lengthDelimited!==!1&&c.fork(),a.peer!=null&&(c.uint32(10),r.PeerInfo.codec().encode(a.peer,c)),l.lengthDelimited!==!1&&c.ldelim()},(a,c)=>{const l={},u=c==null?a.len:a.pos+c;for(;a.pos<u;){const f=a.uint32();switch(f>>>3){case 1:l.peer=r.PeerInfo.codec().decode(a,a.uint32());break;default:a.skipType(f&7);break}}return l})),o),i.encode=a=>encodeMessage(a,i.codec()),i.decode=a=>decodeMessage$1(a,i.codec())}(r.Dial||(r.Dial={})),function(i){let o;i.codec=()=>(o==null&&(o=message((a,c,l={})=>{l.lengthDelimited!==!1&&c.fork(),a.status!=null&&(c.uint32(8),r.ResponseStatus.codec().encode(a.status,c)),a.statusText!=null&&(c.uint32(18),c.string(a.statusText)),a.addr!=null&&(c.uint32(26),c.bytes(a.addr)),l.lengthDelimited!==!1&&c.ldelim()},(a,c)=>{const l={},u=c==null?a.len:a.pos+c;for(;a.pos<u;){const f=a.uint32();switch(f>>>3){case 1:l.status=r.ResponseStatus.codec().decode(a);break;case 2:l.statusText=a.string();break;case 3:l.addr=a.bytes();break;default:a.skipType(f&7);break}}return l})),o),i.encode=a=>encodeMessage(a,i.codec()),i.decode=a=>decodeMessage$1(a,i.codec())}(r.DialResponse||(r.DialResponse={}));let n;r.codec=()=>(n==null&&(n=message((i,o,a={})=>{a.lengthDelimited!==!1&&o.fork(),i.type!=null&&(o.uint32(8),r.MessageType.codec().encode(i.type,o)),i.dial!=null&&(o.uint32(18),r.Dial.codec().encode(i.dial,o)),i.dialResponse!=null&&(o.uint32(26),r.DialResponse.codec().encode(i.dialResponse,o)),a.lengthDelimited!==!1&&o.ldelim()},(i,o)=>{const a={},c=o==null?i.len:i.pos+o;for(;i.pos<c;){const l=i.uint32();switch(l>>>3){case 1:a.type=r.MessageType.codec().decode(i);break;case 2:a.dial=r.Dial.codec().decode(i,i.uint32());break;case 3:a.dialResponse=r.DialResponse.codec().decode(i,i.uint32());break;default:i.skipType(l&7);break}}return a})),n),r.encode=i=>encodeMessage(i,r.codec()),r.decode=i=>decodeMessage$1(i,r.codec())})(Message||(Message={}));const log$i=logger$5("libp2p:autonat"),REQUIRED_SUCCESSFUL_DIALS=4;class DefaultAutoNATService{constructor(e,t){_(this,"components");_(this,"startupDelay");_(this,"refreshInterval");_(this,"protocol");_(this,"timeout");_(this,"maxInboundStreams");_(this,"maxOutboundStreams");_(this,"verifyAddressTimeout");_(this,"started");this.components=e,this.started=!1,this.protocol=`/${t.protocolPrefix??PROTOCOL_PREFIX$2}/${PROTOCOL_NAME$2}/${PROTOCOL_VERSION$2}`,this.timeout=t.timeout??TIMEOUT$2,this.maxInboundStreams=t.maxInboundStreams??MAX_INBOUND_STREAMS$2,this.maxOutboundStreams=t.maxOutboundStreams??MAX_OUTBOUND_STREAMS$2,this.startupDelay=t.startupDelay??STARTUP_DELAY,this.refreshInterval=t.refreshInterval??REFRESH_INTERVAL,this._verifyExternalAddresses=this._verifyExternalAddresses.bind(this)}isStarted(){return this.started}async start(){this.started||(await this.components.registrar.handle(this.protocol,e=>{this.handleIncomingAutonatStream(e).catch(t=>{log$i.error("error handling incoming autonat stream",t)})},{maxInboundStreams:this.maxInboundStreams,maxOutboundStreams:this.maxOutboundStreams}),this.verifyAddressTimeout=setTimeout(this._verifyExternalAddresses,this.startupDelay),this.started=!0)}async stop(){await this.components.registrar.unhandle(this.protocol),clearTimeout(this.verifyAddressTimeout),this.started=!1}async handleIncomingAutonatStream(e){const t=AbortSignal.timeout(this.timeout),n=()=>{e.stream.abort(new CodeError$e("handleIncomingAutonatStream timeout",codes$6.ERR_TIMEOUT))};t.addEventListener("abort",n,{once:!0}),setMaxListeners$4(1/0,t);const i=this.components.addressManager.getAddresses().map(o=>o.toOptions().host);try{const o=this;await pipe(e.stream,a=>decode$h(a),async function*(a){const c=await first(a);if(c==null){log$i("no message received"),yield Message.encode({type:Message.MessageType.DIAL_RESPONSE,dialResponse:{status:Message.ResponseStatus.E_BAD_REQUEST,statusText:"No message was sent"}});return}let l;try{l=Message.decode(c)}catch(v){log$i.error("could not decode message",v),yield Message.encode({type:Message.MessageType.DIAL_RESPONSE,dialResponse:{status:Message.ResponseStatus.E_BAD_REQUEST,statusText:"Could not decode message"}});return}const u=l.dial;if(u==null){log$i.error("dial was missing from message"),yield Message.encode({type:Message.MessageType.DIAL_RESPONSE,dialResponse:{status:Message.ResponseStatus.E_BAD_REQUEST,statusText:"No Dial message found in message"}});return}let f;const g=u.peer;if(g==null||g.id==null){log$i.error("PeerId missing from message"),yield Message.encode({type:Message.MessageType.DIAL_RESPONSE,dialResponse:{status:Message.ResponseStatus.E_BAD_REQUEST,statusText:"missing peer info"}});return}try{f=peerIdFromBytes$8(g.id)}catch(v){log$i.error("invalid PeerId",v),yield Message.encode({type:Message.MessageType.DIAL_RESPONSE,dialResponse:{status:Message.ResponseStatus.E_BAD_REQUEST,statusText:"bad peer id"}});return}if(log$i("incoming request from %p",f),!e.connection.remotePeer.equals(f)){log$i("target peer %p did not equal sending peer %p",f,e.connection.remotePeer),yield Message.encode({type:Message.MessageType.DIAL_RESPONSE,dialResponse:{status:Message.ResponseStatus.E_BAD_REQUEST,statusText:"peer id mismatch"}});return}const $=g.addrs.map(v=>multiaddr$1(v)).filter(v=>{const T=v.toOptions().host===e.connection.remoteAddr.toOptions().host;return log$i.trace("request to dial %a was sent from %a is same host %s",v,e.connection.remoteAddr,T),T}).filter(v=>{const T=v.toOptions().host,I=!(is_ip_private(T)??!1);return log$i.trace("host %s was public %s",T,I),I}).filter(v=>{const T=v.toOptions().host,I=!i.includes(T);return log$i.trace("host %s was not our host %s",T,I),I}).filter(v=>{const T=!!o.components.transportManager.transportForMultiaddr(v);return log$i.trace("transport for %a is supported %s",v,T),T}).map(v=>(v.getPeerId()==null&&(v=v.encapsulate(`/p2p/${f.toString()}`)),v));if($.length===0){log$i("no valid multiaddrs for %p in message",f),yield Message.encode({type:Message.MessageType.DIAL_RESPONSE,dialResponse:{status:Message.ResponseStatus.E_DIAL_REFUSED,statusText:"no dialable addresses"}});return}log$i("dial multiaddrs %s for peer %p",$.map(v=>v.toString()).join(", "),f);let S="",E=$[0];for await(const v of $){let T;E=v;try{if(T=await o.components.connectionManager.openConnection(v,{signal:t}),!T.remoteAddr.equals(v))throw log$i.error("tried to dial %a but dialed %a",v,T.remoteAddr),new Error("Unexpected remote address");log$i("Success %p",f),yield Message.encode({type:Message.MessageType.DIAL_RESPONSE,dialResponse:{status:Message.ResponseStatus.OK,addr:T.remoteAddr.decapsulateCode(getProtocol("p2p").code).bytes}});return}catch(I){log$i("could not dial %p",f,I),S=I.message}finally{T!=null&&await T.close()}}yield Message.encode({type:Message.MessageType.DIAL_RESPONSE,dialResponse:{status:Message.ResponseStatus.E_DIAL_ERROR,statusText:S,addr:E.bytes}})},a=>encode$d(a),e.stream)}catch(o){log$i.error("error handling incoming autonat stream",o)}finally{t.removeEventListener("abort",n)}}_verifyExternalAddresses(){this.verifyExternalAddresses().catch(e=>{log$i.error("error verifying external address",e)})}async verifyExternalAddresses(){if(clearTimeout(this.verifyAddressTimeout),!this.isStarted())return;const e=this.components.addressManager,t=e.getObservedAddrs().filter(o=>{const a=o.toOptions();return!(is_ip_private(a.host)??!1)});if(t.length===0){log$i("no public addresses found, not requesting verification"),this.verifyAddressTimeout=setTimeout(this._verifyExternalAddresses,this.refreshInterval);return}const n=AbortSignal.timeout(this.timeout);setMaxListeners$4(1/0,n);const i=this;try{log$i("verify multiaddrs %s",t.map(g=>g.toString()).join(", "));const o=Message.encode({type:Message.MessageType.DIAL,dial:{peer:{id:this.components.peerId.toBytes(),addrs:t.map(g=>g.bytes)}}}),c=(await createEd25519PeerId$1()).toBytes(),l={},u=[],f=async g=>{let $=()=>{};try{log$i("asking %p to verify multiaddr",g.id);const S=await i.components.connectionManager.openConnection(g.id,{signal:n}),E=await S.newStream(this.protocol,{signal:n});$=()=>{E.abort(new CodeError$e("verifyAddress timeout",codes$6.ERR_TIMEOUT))},n.addEventListener("abort",$,{once:!0});const v=await pipe([o],I=>encode$d(I),E,I=>decode$h(I),async I=>first(I));if(v==null){log$i("no response received from %p",S.remotePeer);return}const T=Message.decode(v);if(T.type!==Message.MessageType.DIAL_RESPONSE||T.dialResponse==null){log$i("invalid autonat response from %p",S.remotePeer);return}if(T.dialResponse.status===Message.ResponseStatus.OK){const I=S.remoteAddr.toOptions();let A;if(I.family===4)A=I.host.split(".")[0];else if(I.family===6)A=I.host.split(":")[0];else{log$i('remote address "%s" was not IP4 or IP6?',I.host);return}if(u.includes(A)){log$i("already have response from network segment %d - %s",A,I.host);return}u.push(A)}return T.dialResponse}catch(S){log$i.error("error asking remote to verify multiaddr",S)}finally{n.removeEventListener("abort",$)}};for await(const g of parallel(map$1(this.components.peerRouting.getClosestPeers(c,{signal:n}),$=>async()=>f($)),{concurrency:REQUIRED_SUCCESSFUL_DIALS}))try{if(g==null)continue;const $=g.addr==null?t[0]:multiaddr$1(g.addr);if(log$i("autonat response for %a is %s",$,g.status),g.status===Message.ResponseStatus.E_BAD_REQUEST||g.status===Message.ResponseStatus.E_DIAL_REFUSED||g.addr==null&&t.length>1)continue;if(!t.some(E=>E.equals($))){log$i("peer reported %a as %s but it was not in our observed address list",$,g.status);continue}const S=$.toString();if(l[S]==null&&(l[S]={success:0,failure:0}),g.status===Message.ResponseStatus.OK?l[S].success++:g.status===Message.ResponseStatus.E_DIAL_ERROR&&l[S].failure++,l[S].success===REQUIRED_SUCCESSFUL_DIALS){log$i("%a is externally dialable",$),e.confirmObservedAddr($);return}if(l[S].failure===REQUIRED_SUCCESSFUL_DIALS){log$i("%a is not externally dialable",$),e.removeObservedAddr($);return}}catch($){log$i.error("could not verify external address",$)}}finally{this.verifyAddressTimeout=setTimeout(this._verifyExternalAddresses,this.refreshInterval)}}}function autoNATService(r={}){return e=>new DefaultAutoNATService(e,r)}const CIRCUIT_PROTO_CODE=290,RELAY_RENDEZVOUS_NS="/libp2p/relay",DEFAULT_RESERVATION_CONCURRENCY=1,RELAY_TAG="circuit-relay-relay";BigInt(1<<17);const RELAY_V2_HOP_CODEC="/libp2p/circuit/relay/0.2.0/hop",RELAY_V2_STOP_CODEC="/libp2p/circuit/relay/0.2.0/stop";var HopMessage;(function(r){(function(n){n.RESERVE="RESERVE",n.CONNECT="CONNECT",n.STATUS="STATUS"})(r.Type||(r.Type={}));let e;(function(n){n[n.RESERVE=0]="RESERVE",n[n.CONNECT=1]="CONNECT",n[n.STATUS=2]="STATUS"})(e||(e={})),function(n){n.codec=()=>enumeration(e)}(r.Type||(r.Type={}));let t;r.codec=()=>(t==null&&(t=message((n,i,o={})=>{o.lengthDelimited!==!1&&i.fork(),n.type!=null&&(i.uint32(8),r.Type.codec().encode(n.type,i)),n.peer!=null&&(i.uint32(18),Peer$1.codec().encode(n.peer,i)),n.reservation!=null&&(i.uint32(26),Reservation.codec().encode(n.reservation,i)),n.limit!=null&&(i.uint32(34),Limit.codec().encode(n.limit,i)),n.status!=null&&(i.uint32(40),Status.codec().encode(n.status,i)),o.lengthDelimited!==!1&&i.ldelim()},(n,i)=>{const o={},a=i==null?n.len:n.pos+i;for(;n.pos<a;){const c=n.uint32();switch(c>>>3){case 1:o.type=r.Type.codec().decode(n);break;case 2:o.peer=Peer$1.codec().decode(n,n.uint32());break;case 3:o.reservation=Reservation.codec().decode(n,n.uint32());break;case 4:o.limit=Limit.codec().decode(n,n.uint32());break;case 5:o.status=Status.codec().decode(n);break;default:n.skipType(c&7);break}}return o})),t),r.encode=n=>encodeMessage(n,r.codec()),r.decode=n=>decodeMessage$1(n,r.codec())})(HopMessage||(HopMessage={}));var StopMessage;(function(r){(function(n){n.CONNECT="CONNECT",n.STATUS="STATUS"})(r.Type||(r.Type={}));let e;(function(n){n[n.CONNECT=0]="CONNECT",n[n.STATUS=1]="STATUS"})(e||(e={})),function(n){n.codec=()=>enumeration(e)}(r.Type||(r.Type={}));let t;r.codec=()=>(t==null&&(t=message((n,i,o={})=>{o.lengthDelimited!==!1&&i.fork(),n.type!=null&&(i.uint32(8),r.Type.codec().encode(n.type,i)),n.peer!=null&&(i.uint32(18),Peer$1.codec().encode(n.peer,i)),n.limit!=null&&(i.uint32(26),Limit.codec().encode(n.limit,i)),n.status!=null&&(i.uint32(32),Status.codec().encode(n.status,i)),o.lengthDelimited!==!1&&i.ldelim()},(n,i)=>{const o={},a=i==null?n.len:n.pos+i;for(;n.pos<a;){const c=n.uint32();switch(c>>>3){case 1:o.type=r.Type.codec().decode(n);break;case 2:o.peer=Peer$1.codec().decode(n,n.uint32());break;case 3:o.limit=Limit.codec().decode(n,n.uint32());break;case 4:o.status=Status.codec().decode(n);break;default:n.skipType(c&7);break}}return o})),t),r.encode=n=>encodeMessage(n,r.codec()),r.decode=n=>decodeMessage$1(n,r.codec())})(StopMessage||(StopMessage={}));var Peer$1;(function(r){let e;r.codec=()=>(e==null&&(e=message((t,n,i={})=>{if(i.lengthDelimited!==!1&&n.fork(),t.id!=null&&t.id.byteLength>0&&(n.uint32(10),n.bytes(t.id)),t.addrs!=null)for(const o of t.addrs)n.uint32(18),n.bytes(o);i.lengthDelimited!==!1&&n.ldelim()},(t,n)=>{const i={id:new Uint8Array(0),addrs:[]},o=n==null?t.len:t.pos+n;for(;t.pos<o;){const a=t.uint32();switch(a>>>3){case 1:i.id=t.bytes();break;case 2:i.addrs.push(t.bytes());break;default:t.skipType(a&7);break}}return i})),e),r.encode=t=>encodeMessage(t,r.codec()),r.decode=t=>decodeMessage$1(t,r.codec())})(Peer$1||(Peer$1={}));var Reservation;(function(r){let e;r.codec=()=>(e==null&&(e=message((t,n,i={})=>{if(i.lengthDelimited!==!1&&n.fork(),t.expire!=null&&t.expire!==0n&&(n.uint32(8),n.uint64(t.expire)),t.addrs!=null)for(const o of t.addrs)n.uint32(18),n.bytes(o);t.voucher!=null&&(n.uint32(26),n.bytes(t.voucher)),i.lengthDelimited!==!1&&n.ldelim()},(t,n)=>{const i={expire:0n,addrs:[]},o=n==null?t.len:t.pos+n;for(;t.pos<o;){const a=t.uint32();switch(a>>>3){case 1:i.expire=t.uint64();break;case 2:i.addrs.push(t.bytes());break;case 3:i.voucher=t.bytes();break;default:t.skipType(a&7);break}}return i})),e),r.encode=t=>encodeMessage(t,r.codec()),r.decode=t=>decodeMessage$1(t,r.codec())})(Reservation||(Reservation={}));var Limit;(function(r){let e;r.codec=()=>(e==null&&(e=message((t,n,i={})=>{i.lengthDelimited!==!1&&n.fork(),t.duration!=null&&(n.uint32(8),n.uint32(t.duration)),t.data!=null&&(n.uint32(16),n.uint64(t.data)),i.lengthDelimited!==!1&&n.ldelim()},(t,n)=>{const i={},o=n==null?t.len:t.pos+n;for(;t.pos<o;){const a=t.uint32();switch(a>>>3){case 1:i.duration=t.uint32();break;case 2:i.data=t.uint64();break;default:t.skipType(a&7);break}}return i})),e),r.encode=t=>encodeMessage(t,r.codec()),r.decode=t=>decodeMessage$1(t,r.codec())})(Limit||(Limit={}));var Status;(function(r){r.UNUSED="UNUSED",r.OK="OK",r.RESERVATION_REFUSED="RESERVATION_REFUSED",r.RESOURCE_LIMIT_EXCEEDED="RESOURCE_LIMIT_EXCEEDED",r.PERMISSION_DENIED="PERMISSION_DENIED",r.CONNECTION_FAILED="CONNECTION_FAILED",r.NO_RESERVATION="NO_RESERVATION",r.MALFORMED_MESSAGE="MALFORMED_MESSAGE",r.UNEXPECTED_MESSAGE="UNEXPECTED_MESSAGE"})(Status||(Status={}));var __StatusValues;(function(r){r[r.UNUSED=0]="UNUSED",r[r.OK=100]="OK",r[r.RESERVATION_REFUSED=200]="RESERVATION_REFUSED",r[r.RESOURCE_LIMIT_EXCEEDED=201]="RESOURCE_LIMIT_EXCEEDED",r[r.PERMISSION_DENIED=202]="PERMISSION_DENIED",r[r.CONNECTION_FAILED=203]="CONNECTION_FAILED",r[r.NO_RESERVATION=204]="NO_RESERVATION",r[r.MALFORMED_MESSAGE=400]="MALFORMED_MESSAGE",r[r.UNEXPECTED_MESSAGE=401]="UNEXPECTED_MESSAGE"})(__StatusValues||(__StatusValues={}));(function(r){r.codec=()=>enumeration(__StatusValues)})(Status||(Status={}));var ReservationVoucher;(function(r){let e;r.codec=()=>(e==null&&(e=message((t,n,i={})=>{i.lengthDelimited!==!1&&n.fork(),t.relay!=null&&t.relay.byteLength>0&&(n.uint32(10),n.bytes(t.relay)),t.peer!=null&&t.peer.byteLength>0&&(n.uint32(18),n.bytes(t.peer)),t.expiration!=null&&t.expiration!==0n&&(n.uint32(24),n.uint64(t.expiration)),i.lengthDelimited!==!1&&n.ldelim()},(t,n)=>{const i={relay:new Uint8Array(0),peer:new Uint8Array(0),expiration:0n},o=n==null?t.len:t.pos+n;for(;t.pos<o;){const a=t.uint32();switch(a>>>3){case 1:i.relay=t.bytes();break;case 2:i.peer=t.bytes();break;case 3:i.expiration=t.uint64();break;default:t.skipType(a&7);break}}return i})),e),r.encode=t=>encodeMessage(t,r.codec()),r.decode=t=>decodeMessage$1(t,r.codec())})(ReservationVoucher||(ReservationVoucher={}));logger$5("libp2p:circuit-relay:utils");async function namespaceToCid(r){const e=new TextEncoder().encode(r),t=await sha256$2.digest(e);return CID$3.createV0(t)}function getExpirationMilliseconds(r){const e=r*BigInt(1e3),t=new Date().getTime();return Number(e-BigInt(t))}var retry={};function RetryOperation(r,e){typeof e=="boolean"&&(e={forever:e}),this._originalTimeouts=JSON.parse(JSON.stringify(r)),this._timeouts=r,this._options=e||{},this._maxRetryTime=e&&e.maxRetryTime||1/0,this._fn=null,this._errors=[],this._attempts=1,this._operationTimeout=null,this._operationTimeoutCb=null,this._timeout=null,this._operationStart=null,this._timer=null,this._options.forever&&(this._cachedTimeouts=this._timeouts.slice(0))}var retry_operation=RetryOperation;RetryOperation.prototype.reset=function(){this._attempts=1,this._timeouts=this._originalTimeouts.slice(0)};RetryOperation.prototype.stop=function(){this._timeout&&clearTimeout(this._timeout),this._timer&&clearTimeout(this._timer),this._timeouts=[],this._cachedTimeouts=null};RetryOperation.prototype.retry=function(r){if(this._timeout&&clearTimeout(this._timeout),!r)return!1;var e=new Date().getTime();if(r&&e-this._operationStart>=this._maxRetryTime)return this._errors.push(r),this._errors.unshift(new Error("RetryOperation timeout occurred")),!1;this._errors.push(r);var t=this._timeouts.shift();if(t===void 0)if(this._cachedTimeouts)this._errors.splice(0,this._errors.length-1),t=this._cachedTimeouts.slice(-1);else return!1;var n=this;return this._timer=setTimeout(function(){n._attempts++,n._operationTimeoutCb&&(n._timeout=setTimeout(function(){n._operationTimeoutCb(n._attempts)},n._operationTimeout),n._options.unref&&n._timeout.unref()),n._fn(n._attempts)},t),this._options.unref&&this._timer.unref(),!0};RetryOperation.prototype.attempt=function(r,e){this._fn=r,e&&(e.timeout&&(this._operationTimeout=e.timeout),e.cb&&(this._operationTimeoutCb=e.cb));var t=this;this._operationTimeoutCb&&(this._timeout=setTimeout(function(){t._operationTimeoutCb()},t._operationTimeout)),this._operationStart=new Date().getTime(),this._fn(this._attempts)};RetryOperation.prototype.try=function(r){console.log("Using RetryOperation.try() is deprecated"),this.attempt(r)};RetryOperation.prototype.start=function(r){console.log("Using RetryOperation.start() is deprecated"),this.attempt(r)};RetryOperation.prototype.start=RetryOperation.prototype.try;RetryOperation.prototype.errors=function(){return this._errors};RetryOperation.prototype.attempts=function(){return this._attempts};RetryOperation.prototype.mainError=function(){if(this._errors.length===0)return null;for(var r={},e=null,t=0,n=0;n<this._errors.length;n++){var i=this._errors[n],o=i.message,a=(r[o]||0)+1;r[o]=a,a>=t&&(e=i,t=a)}return e};(function(r){var e=retry_operation;r.operation=function(t){var n=r.timeouts(t);return new e(n,{forever:t&&(t.forever||t.retries===1/0),unref:t&&t.unref,maxRetryTime:t&&t.maxRetryTime})},r.timeouts=function(t){if(t instanceof Array)return[].concat(t);var n={retries:10,factor:2,minTimeout:1*1e3,maxTimeout:1/0,randomize:!1};for(var i in t)n[i]=t[i];if(n.minTimeout>n.maxTimeout)throw new Error("minTimeout is greater than maxTimeout");for(var o=[],a=0;a<n.retries;a++)o.push(this.createTimeout(a,n));return t&&t.forever&&!o.length&&o.push(this.createTimeout(a,n)),o.sort(function(c,l){return c-l}),o},r.createTimeout=function(t,n){var i=n.randomize?Math.random()+1:1,o=Math.round(i*Math.max(n.minTimeout,1)*Math.pow(n.factor,t));return o=Math.min(o,n.maxTimeout),o},r.wrap=function(t,n,i){if(n instanceof Array&&(i=n,n=null),!i){i=[];for(var o in t)typeof t[o]=="function"&&i.push(o)}for(var a=0;a<i.length;a++){var c=i[a],l=t[c];t[c]=function(f){var g=r.operation(n),$=Array.prototype.slice.call(arguments,1),S=$.pop();$.push(function(E){g.retry(E)||(E&&(arguments[0]=g.mainError()),S.apply(this,arguments))}),g.attempt(function(){f.apply(t,$)})}.bind(t,l),t[c].options=n}}})(retry);logger$5("libp2p:circuit-relay:advert-service");logger$5("libp2p:circuit-relay:server");const log$h=logger$5("libp2p:stream:converter");function streamToMaConnection(r){const{stream:e,remoteAddr:t}=r,{sink:n,source:i}=e,o=async function*(){for await(const l of i)l instanceof Uint8Array?yield l:yield*l}(),a={async sink(l){try{await n(l),c()}catch(u){u.type!=="aborted"&&log$h(u)}},source:o,remoteAddr:t,timeline:{open:Date.now(),close:void 0},async close(l){c(),await e.close(l)},abort(l){c(),e.abort(l)}};function c(){a.timeline.close==null&&(a.timeline.close=Date.now())}return a}const log$g=logger$5("libp2p:circuit-relay:discover-relays");class RelayDiscovery extends TypedEventEmitter$1{constructor(t){super();_(this,"peerId");_(this,"peerStore");_(this,"contentRouting");_(this,"registrar");_(this,"started");_(this,"topologyId");this.started=!1,this.peerId=t.peerId,this.peerStore=t.peerStore,this.contentRouting=t.contentRouting,this.registrar=t.registrar}isStarted(){return this.started}async start(){this.topologyId=await this.registrar.register(RELAY_V2_HOP_CODEC,{notifyOnTransient:!0,onConnect:t=>{this.safeDispatchEvent("relay:discover",{detail:t})}}),this.discover().catch(t=>{log$g.error("error listening on relays",t)}),this.started=!0}stop(){this.topologyId!=null&&this.registrar.unregister(this.topologyId),this.started=!1}async discover(){log$g("searching peer store for relays");const t=await this.peerStore.all({filters:[n=>n.protocols.includes(RELAY_V2_HOP_CODEC)],orders:[()=>Math.random()<.5?1:-1]});for(const n of t)log$g("found relay peer %p in content peer store",n.id),this.safeDispatchEvent("relay:discover",{detail:n.id});log$g("found %d relay peers in peer store",t.length);try{log$g("searching content routing for relays");const n=await namespaceToCid(RELAY_RENDEZVOUS_NS);let i=0;for await(const o of this.contentRouting.findProviders(n))if(o.multiaddrs.length>0&&!o.id.equals(this.peerId)){const a=o.id;i++,await this.peerStore.merge(a,{multiaddrs:o.multiaddrs}),log$g("found relay peer %p in content routing",a),this.safeDispatchEvent("relay:discover",{detail:a})}log$g("found %d relay peers in content routing",i)}catch(n){log$g.error("failed when finding relays on the network",n)}}}const log$f=logger$5("libp2p:circuit-relay:transport:listener");var bt,ir;class CircuitRelayTransportListener extends TypedEventEmitter$1{constructor(t){super();ne(this,bt);_(this,"connectionManager");_(this,"relayStore");_(this,"listeningAddrs");_(this,"_onRemoveRelayPeer",t=>{se(this,bt,ir).call(this,t.detail)});this.connectionManager=t.connectionManager,this.relayStore=t.relayStore,this.listeningAddrs=new PeerMap$2,this.relayStore.addEventListener("relay:removed",this._onRemoveRelayPeer)}async listen(t){log$f("listen on %a",t);const n=t.decapsulate("/p2p-circuit"),i=await this.connectionManager.openConnection(n);if(!this.relayStore.hasReservation(i.remotePeer)){await this.relayStore.addRelay(i.remotePeer,"configured");return}const o=this.relayStore.getReservation(i.remotePeer);if(o==null)throw new CodeError$e("Did not have reservation after making reservation","ERR_NO_RESERVATION");if(this.listeningAddrs.has(i.remotePeer)){log$f("already listening on relay %p",i.remotePeer);return}this.listeningAddrs.set(i.remotePeer,o.addrs.map(a=>multiaddr$1(a).encapsulate("/p2p-circuit"))),this.safeDispatchEvent("listening",{})}getAddrs(){return[...this.listeningAddrs.values()].flat()}async close(){}}bt=new WeakSet,ir=function(t){const n=this.listeningAddrs.has(t);log$f("relay peer removed %p - had reservation",t,n),this.listeningAddrs.delete(t),n&&(log$f.trace("removing relay event listener for peer %p",t),this.relayStore.removeEventListener("relay:removed",this._onRemoveRelayPeer),this.safeDispatchEvent("close",{}))};function createListener$1(r){return new CircuitRelayTransportListener(r)}const log$e=logger$5("libp2p:circuit-relay:transport:reservation-store"),REFRESH_WINDOW=60*1e3*10,REFRESH_TIMEOUT=60*1e3*5,REFRESH_TIMEOUT_MIN=30*1e3;var Et,ar,wt,cr;class ReservationStore extends TypedEventEmitter$1{constructor(t,n){super();ne(this,Et);ne(this,wt);_(this,"peerId");_(this,"connectionManager");_(this,"transportManager");_(this,"peerStore");_(this,"events");_(this,"reserveQueue");_(this,"reservations");_(this,"maxDiscoveredRelays");_(this,"maxReservationQueueLength");_(this,"reservationCompletionTimeout");_(this,"started");this.peerId=t.peerId,this.connectionManager=t.connectionManager,this.transportManager=t.transportManager,this.peerStore=t.peerStore,this.events=t.events,this.reservations=new PeerMap$2,this.maxDiscoveredRelays=n?.discoverRelays??0,this.maxReservationQueueLength=n?.maxReservationQueueLength??100,this.reservationCompletionTimeout=n?.reservationCompletionTimeout??1e4,this.started=!1,this.reserveQueue=new PeerJobQueue$1({concurrency:n?.reservationConcurrency??DEFAULT_RESERVATION_CONCURRENCY}),this.events.addEventListener("peer:disconnect",i=>{se(this,wt,cr).call(this,i.detail)})}isStarted(){return this.started}async start(){this.started=!0}async stop(){this.reserveQueue.clear(),this.reservations.forEach(({timeout:t})=>{clearTimeout(t)}),this.reservations.clear(),this.started=!1}async addRelay(t,n){if(this.peerId.equals(t)){log$e("not trying to use self as relay");return}if(this.reserveQueue.size>this.maxReservationQueueLength){log$e("not adding relay as the queue is full");return}if(this.reserveQueue.hasJob(t)){log$e("relay peer is already in the reservation queue");return}log$e("add relay %p",t),await this.reserveQueue.add(async()=>{try{const i=this.reservations.get(t);if(i!=null){if(getExpirationMilliseconds(i.reservation.expire)>REFRESH_WINDOW){log$e("already have reservation on relay peer %p and it expires in more than 10 minutes",t);return}clearTimeout(i.timeout),this.reservations.delete(t)}if(n==="discovered"&&[...this.reservations.values()].reduce((g,$)=>($.type==="discovered"&&g++,g),0)>=this.maxDiscoveredRelays){log$e("already have enough discovered relays");return}const o=AbortSignal.timeout(this.reservationCompletionTimeout),a=await this.connectionManager.openConnection(t,{signal:o});if(a.remoteAddr.protoNames().includes("p2p-circuit")){log$e("not creating reservation over relayed connection");return}const c=await se(this,Et,ar).call(this,a,{signal:o});log$e("created reservation on relay peer %p",t);const l=getExpirationMilliseconds(c.expire),u=Math.min(Math.max(l-REFRESH_TIMEOUT,REFRESH_TIMEOUT_MIN),Math.pow(2,31)-1),f=setTimeout(()=>{this.addRelay(t,n).catch(g=>{log$e.error("could not refresh reservation to relay %p",t,g)})},u);this.reservations.set(t,{timeout:f,reservation:c,type:n}),await this.peerStore.merge(t,{tags:{[RELAY_TAG]:{value:1,ttl:l}}}),await this.transportManager.listen([multiaddr$1(`/p2p/${t.toString()}/p2p-circuit`)])}catch(i){log$e.error("could not reserve slot on %p",t,i);const o=this.reservations.get(t);o!=null&&clearTimeout(o.timeout),this.reservations.delete(t)}},{peerId:t})}hasReservation(t){return this.reservations.has(t)}getReservation(t){return this.reservations.get(t)?.reservation}}Et=new WeakSet,ar=async function(t,n){n.signal?.throwIfAborted(),log$e("requesting reservation from %p",t.remotePeer);const i=await t.newStream(RELAY_V2_HOP_CODEC,n),a=pbStream(i).pb(HopMessage);await a.write({type:HopMessage.Type.RESERVE},n);let c;try{c=await a.read(n)}catch(u){throw log$e.error("error parsing reserve message response from %p because",t.remotePeer,u),u}finally{await i.close()}if(c.status===Status.OK&&c.reservation!=null)return c.reservation;const l=`reservation failed with status ${c.status??"undefined"}`;throw log$e.error(l),new Error(l)},wt=new WeakSet,cr=function(t){const n=this.reservations.get(t);n!=null&&(log$e("connection to relay %p closed, removing reservation from local store",t),clearTimeout(n.timeout),this.reservations.delete(t),this.safeDispatchEvent("relay:removed",{detail:t}),this.reservations.size<this.maxDiscoveredRelays&&(log$e("not enough relays %d/%d",this.reservations.size,this.maxDiscoveredRelays),this.safeDispatchEvent("relay:not-enough-relays",{})))};const log$d=logger$5("libp2p:circuit-relay:transport"),isValidStop=r=>{if(r.peer==null)return!1;try{r.peer.addrs.forEach(multiaddr$1)}catch{return!1}return!0},defaults={maxInboundStopStreams:MAX_CONNECTIONS$1,maxOutboundStopStreams:MAX_CONNECTIONS$1,stopTimeout:3e4};var zr,qr;class CircuitRelayTransport{constructor(e,t){_(this,"discovery");_(this,"registrar");_(this,"peerStore");_(this,"connectionManager");_(this,"peerId");_(this,"upgrader");_(this,"addressManager");_(this,"connectionGater");_(this,"reservationStore");_(this,"maxInboundStopStreams");_(this,"maxOutboundStopStreams");_(this,"stopTimeout");_(this,"started");_(this,zr,!0);_(this,qr,"libp2p/circuit-relay-v2");this.registrar=e.registrar,this.peerStore=e.peerStore,this.connectionManager=e.connectionManager,this.peerId=e.peerId,this.upgrader=e.upgrader,this.addressManager=e.addressManager,this.connectionGater=e.connectionGater,this.maxInboundStopStreams=t.maxInboundStopStreams??defaults.maxInboundStopStreams,this.maxOutboundStopStreams=t.maxOutboundStopStreams??defaults.maxOutboundStopStreams,this.stopTimeout=t.stopTimeout??defaults.stopTimeout,t.discoverRelays!=null&&t.discoverRelays>0&&(this.discovery=new RelayDiscovery(e),this.discovery.addEventListener("relay:discover",n=>{this.reservationStore.addRelay(n.detail,"discovered").catch(i=>{log$d.error("could not add discovered relay %p",n.detail,i)})})),this.reservationStore=new ReservationStore(e,t),this.reservationStore.addEventListener("relay:not-enough-relays",()=>{this.discovery?.discover().catch(n=>{log$d.error("could not discover relays",n)})}),this.started=!1}isStarted(){return this.started}async start(){await this.reservationStore.start(),await this.discovery?.start(),await this.registrar.handle(RELAY_V2_STOP_CODEC,e=>{this.onStop(e).catch(t=>{log$d.error("error while handling STOP protocol",t),e.stream.abort(t)})},{maxInboundStreams:this.maxInboundStopStreams,maxOutboundStreams:this.maxOutboundStopStreams,runOnTransientConnection:!0}),this.started=!0}async stop(){this.discovery?.stop(),await this.reservationStore.stop(),await this.registrar.unhandle(RELAY_V2_STOP_CODEC),this.started=!1}async dial(e,t={}){if(e.protoCodes().filter(E=>E===CIRCUIT_PROTO_CODE).length!==1){const E="Invalid circuit relay address";throw log$d.error(E,e),new CodeError$e(E,codes$6.ERR_RELAYED_DIAL)}const n=e.toString().split("/p2p-circuit"),i=multiaddr$1(n[0]),o=multiaddr$1(n[n.length-1]),a=i.getPeerId(),c=o.getPeerId();if(a==null||c==null){const E=`Circuit relay dial to ${e.toString()} failed as address did not have peer ids`;throw log$d.error(E),new CodeError$e(E,codes$6.ERR_RELAYED_DIAL)}const l=peerIdFromString$8(a),u=peerIdFromString$8(c);let f=!1,$=this.connectionManager.getConnections(l)[0];$==null&&(await this.peerStore.merge(l,{multiaddrs:[i]}),$=await this.connectionManager.openConnection(l,t),f=!0);let S;try{return S=await $.newStream([RELAY_V2_HOP_CODEC]),await this.connectV2({stream:S,connection:$,destinationPeer:u,destinationAddr:o,relayAddr:i,ma:e,disconnectOnFailure:f})}catch(E){throw log$d.error("circuit relay dial to destination %p via relay %p failed",u,l,E),S?.abort(E),f&&await $.close(),E}}async connectV2({stream:e,connection:t,destinationPeer:n,destinationAddr:i,relayAddr:o,ma:a,disconnectOnFailure:c}){try{const l=pbStream(e),u=l.pb(HopMessage);await u.write({type:HopMessage.Type.CONNECT,peer:{id:n.toBytes(),addrs:[multiaddr$1(i).bytes]}});const f=await u.read();if(f.status!==Status.OK)throw new CodeError$e(`failed to connect via relay with status ${f?.status?.toString()??"undefined"}`,codes$6.ERR_HOP_REQUEST_FAILED);const g=streamToMaConnection({stream:l.unwrap(),remoteAddr:a,localAddr:o.encapsulate(`/p2p-circuit/p2p/${this.peerId.toString()}`)});return log$d("new outbound transient connection %a",g.remoteAddr),await this.upgrader.upgradeOutbound(g,{transient:!0})}catch(l){throw log$d.error(`Circuit relay dial to destination ${n.toString()} via relay ${t.remotePeer.toString()} failed`,l),c&&await t.close(),l}}createListener(e){return createListener$1({connectionManager:this.connectionManager,relayStore:this.reservationStore})}filter(e){return e=Array.isArray(e)?e:[e],e.filter(t=>Circuit.matches(t))}async onStop({connection:e,stream:t}){const n=AbortSignal.timeout(this.stopTimeout),i=pbStream(t).pb(StopMessage),o=await i.read({signal:n});if(log$d("new circuit relay v2 stop stream from %p with type %s",e.remotePeer,o.type),o?.type===void 0){log$d.error("type was missing from circuit v2 stop protocol request from %s",e.remotePeer),await i.write({type:StopMessage.Type.STATUS,status:Status.MALFORMED_MESSAGE},{signal:n}),await t.close();return}if(o.type!==StopMessage.Type.CONNECT){log$d.error("invalid stop connect request via peer %p",e.remotePeer),await i.write({type:StopMessage.Type.STATUS,status:Status.UNEXPECTED_MESSAGE},{signal:n}),await t.close();return}if(!isValidStop(o)){log$d.error("invalid stop connect request via peer %p",e.remotePeer),await i.write({type:StopMessage.Type.STATUS,status:Status.MALFORMED_MESSAGE},{signal:n}),await t.close();return}const a=peerIdFromBytes$8(o.peer.id);if(await this.connectionGater.denyInboundRelayedConnection?.(e.remotePeer,a)===!0){log$d.error("connection gater denied inbound relayed connection from %p",e.remotePeer),await i.write({type:StopMessage.Type.STATUS,status:Status.PERMISSION_DENIED},{signal:n}),await t.close();return}log$d.trace("sending success response to %p",e.remotePeer),await i.write({type:StopMessage.Type.STATUS,status:Status.OK},{signal:n});const c=e.remoteAddr.encapsulate(`/p2p-circuit/p2p/${a.toString()}`),l=this.addressManager.getAddresses()[0],u=streamToMaConnection({stream:i.unwrap().unwrap(),remoteAddr:c,localAddr:l});log$d("new inbound transient connection %a",u.remoteAddr),await this.upgrader.upgradeInbound(u,{transient:!0}),log$d("%s connection %a upgraded","inbound",u.remoteAddr)}}zr=symbol$2,qr=Symbol.toStringTag;function circuitRelayTransport(r={}){return e=>new CircuitRelayTransport(e,r)}const createAbortError=()=>{const r=new Error("Delay aborted");return r.name="AbortError",r},clearMethods=new WeakMap;function createDelay({clearTimeout:r,setTimeout:e}={}){return(t,{value:n,signal:i}={})=>{if(i?.aborted)return Promise.reject(createAbortError());let o,a,c;const l=r??clearTimeout,u=()=>{l(o),c(createAbortError())},f=()=>{i&&i.removeEventListener("abort",u)},g=new Promise(($,S)=>{a=()=>{f(),$(n)},c=S,o=(e??setTimeout)(a,t)});return i&&i.addEventListener("abort",u,{once:!0}),clearMethods.set(g,()=>{l(o),o=null,a()}),g}}const delay=createDelay();var HolePunch;(function(r){(function(n){n.UNUSED="UNUSED",n.CONNECT="CONNECT",n.SYNC="SYNC"})(r.Type||(r.Type={}));let e;(function(n){n[n.UNUSED=0]="UNUSED",n[n.CONNECT=100]="CONNECT",n[n.SYNC=300]="SYNC"})(e||(e={})),function(n){n.codec=()=>enumeration(e)}(r.Type||(r.Type={}));let t;r.codec=()=>(t==null&&(t=message((n,i,o={})=>{if(o.lengthDelimited!==!1&&i.fork(),n.type!=null&&(i.uint32(8),r.Type.codec().encode(n.type,i)),n.observedAddresses!=null)for(const a of n.observedAddresses)i.uint32(18),i.bytes(a);o.lengthDelimited!==!1&&i.ldelim()},(n,i)=>{const o={observedAddresses:[]},a=i==null?n.len:n.pos+i;for(;n.pos<a;){const c=n.uint32();switch(c>>>3){case 1:o.type=r.Type.codec().decode(n);break;case 2:o.observedAddresses.push(n.bytes());break;default:n.skipType(c&7);break}}return o})),t),r.encode=n=>encodeMessage(n,r.codec()),r.decode=n=>decodeMessage$1(n,r.codec())})(HolePunch||(HolePunch={}));function isPublicAndDialable(r,e){return Circuit$1.matches(r)||e.transportForMultiaddr(r)==null?!1:DNS$1.matches(r)?!0:IP$1.matches(r)?is_ip_private(r.toOptions().host)===!1:!1}const log$c=logger$5("libp2p:dcutr"),MAX_DCUTR_MESSAGE_SIZE=1024*4,DCUTR_DIAL_PRIORITY=100,defaultValues$1={timeout:5e3,retries:3,maxInboundStreams:1,maxOutboundStreams:1};class DefaultDCUtRService{constructor(e,t){_(this,"started");_(this,"timeout");_(this,"retries");_(this,"maxInboundStreams");_(this,"maxOutboundStreams");_(this,"peerStore");_(this,"registrar");_(this,"connectionManager");_(this,"addressManager");_(this,"transportManager");_(this,"topologyId");this.started=!1,this.peerStore=e.peerStore,this.registrar=e.registrar,this.addressManager=e.addressManager,this.connectionManager=e.connectionManager,this.transportManager=e.transportManager,this.timeout=t.timeout??defaultValues$1.timeout,this.retries=t.retries??defaultValues$1.retries,this.maxInboundStreams=t.maxInboundStreams??defaultValues$1.maxInboundStreams,this.maxOutboundStreams=t.maxOutboundStreams??defaultValues$1.maxOutboundStreams}isStarted(){return this.started}async start(){this.started||(this.topologyId=await this.registrar.register(multicodec,{notifyOnTransient:!0,onConnect:(e,t)=>{t.transient&&t.direction==="inbound"&&this.upgradeInbound(t).catch(n=>{log$c.error("error during outgoing DCUtR attempt",n)})}}),await this.registrar.handle(multicodec,e=>{this.handleIncomingUpgrade(e.stream,e.connection).catch(t=>{log$c.error("error during incoming DCUtR attempt",t),e.stream.abort(t)})},{maxInboundStreams:this.maxInboundStreams,maxOutboundStreams:this.maxOutboundStreams,runOnTransientConnection:!0}),this.started=!0)}async stop(){await this.registrar.unhandle(multicodec),this.topologyId!=null&&this.registrar.unregister(this.topologyId),this.started=!1}async upgradeInbound(e){if(await this.attemptUnilateralConnectionUpgrade(e))return;let t;for(let n=0;n<this.retries;n++){const i={signal:AbortSignal.timeout(this.timeout)};try{t=await e.newStream([multicodec],{signal:i.signal,runOnTransientConnection:!0});const o=pbStream(t,{maxDataLength:MAX_DCUTR_MESSAGE_SIZE}).pb(HolePunch);log$c("B sending connect to %p",e.remotePeer);const a=Date.now();await o.write({type:HolePunch.Type.CONNECT,observedAddresses:this.addressManager.getAddresses().map(g=>g.bytes)},i),log$c("B receiving connect from %p",e.remotePeer);const c=await o.read(i);if(c.type!==HolePunch.Type.CONNECT)throw log$c("A sent wrong message type"),new CodeError$e("DCUtR message type was incorrect",codes$6.ERR_INVALID_MESSAGE);const l=this.getDialableMultiaddrs(c.observedAddresses);if(l.length===0)throw log$c("A did not have any dialable multiaddrs"),new CodeError$e("DCUtR connect message had no multiaddrs",codes$6.ERR_INVALID_MESSAGE);const u=Date.now()-a;log$c("A sending sync, rtt %dms",u),await o.write({type:HolePunch.Type.SYNC,observedAddresses:[]},i),log$c("A waiting for half RTT"),await delay(u/2),log$c("B dialing",l);const f=await this.connectionManager.openConnection(l,{signal:i.signal,priority:DCUTR_DIAL_PRIORITY});log$c("DCUtR to %p succeeded to address %a, closing relayed connection",e.remotePeer,f.remoteAddr),await e.close(i);break}catch(o){if(log$c.error("error while attempting DCUtR on attempt %d of %d",n+1,this.retries,o),t?.abort(o),n===this.retries)throw o}finally{t!=null&&await t.close(i)}}}async attemptUnilateralConnectionUpgrade(e){const n=(await this.peerStore.get(e.remotePeer)).addresses.map(i=>{const o=i.multiaddr;return o.getPeerId()==null?o.encapsulate(`/p2p/${e.remotePeer}`):o}).filter(i=>isPublicAndDialable(i,this.transportManager));if(n.length>0){const i=AbortSignal.timeout(this.timeout);try{log$c("attempting unilateral connection upgrade to %a",n);const o=await this.connectionManager.openConnection(n,{signal:i,force:!0});if(o.transient)throw new Error("Could not open a new, non-transient, connection");return log$c("unilateral connection upgrade to %p succeeded via %a, closing relayed connection",e.remotePeer,o.remoteAddr),await e.close({signal:i}),!0}catch(o){log$c.error("unilateral connection upgrade to %p on addresses %a failed",e.remotePeer,n,o)}}else log$c("peer %p has no public addresses, not attempting unilateral connection upgrade",e.remotePeer);return!1}async handleIncomingUpgrade(e,t){const n={signal:AbortSignal.timeout(this.timeout)};try{const i=pbStream(e,{maxDataLength:MAX_DCUTR_MESSAGE_SIZE}).pb(HolePunch);log$c("A receiving connect");const o=await i.read(n);if(o.type!==HolePunch.Type.CONNECT)throw log$c("B sent wrong message type"),new CodeError$e("DCUtR message type was incorrect",codes$6.ERR_INVALID_MESSAGE);if(o.observedAddresses.length===0)throw log$c("B sent no multiaddrs"),new CodeError$e("DCUtR connect message had no multiaddrs",codes$6.ERR_INVALID_MESSAGE);const a=this.getDialableMultiaddrs(o.observedAddresses);if(a.length===0)throw log$c("B had no dialable multiaddrs"),new CodeError$e("DCUtR connect message had no dialable multiaddrs",codes$6.ERR_INVALID_MESSAGE);if(log$c("A sending connect"),await i.write({type:HolePunch.Type.CONNECT,observedAddresses:this.addressManager.getAddresses().map(u=>u.bytes)}),log$c("A receiving sync"),(await i.read(n)).type!==HolePunch.Type.SYNC)throw new CodeError$e("DCUtR message type was incorrect",codes$6.ERR_INVALID_MESSAGE);log$c("A dialing",a);const l=await this.connectionManager.openConnection(a,{signal:n.signal,priority:DCUTR_DIAL_PRIORITY,force:!0});log$c("DCUtR to %p succeeded via %a, closing relayed connection",t.remotePeer,l.remoteAddr),await t.close(n)}catch(i){log$c.error("incoming DCUtR from %p failed",t.remotePeer,i),e.abort(i)}finally{await e.close(n)}}getDialableMultiaddrs(e){const t=[];for(const n of e)if(!(n==null||n.length===0))try{const i=multiaddr$1(n);if(!isPublicAndDialable(i,this.transportManager))continue;t.push(i)}catch{}return t}}const multicodec="/libp2p/dcutr";function dcutrService(r={}){return e=>new DefaultDCUtRService(e,r)}const version$3="0.46.21",AGENT_VERSION=`js-libp2p/${version$3}`,IDENTIFY_PROTOCOL_VERSION="0.1.0",MULTICODEC_IDENTIFY_PROTOCOL_NAME="id",MULTICODEC_IDENTIFY_PUSH_PROTOCOL_NAME="id/push",MULTICODEC_IDENTIFY_PROTOCOL_VERSION="1.0.0",MULTICODEC_IDENTIFY_PUSH_PROTOCOL_VERSION="1.0.0";var Identify;(function(r){let e;r.codec=()=>(e==null&&(e=message((t,n,i={})=>{if(i.lengthDelimited!==!1&&n.fork(),t.protocolVersion!=null&&(n.uint32(42),n.string(t.protocolVersion)),t.agentVersion!=null&&(n.uint32(50),n.string(t.agentVersion)),t.publicKey!=null&&(n.uint32(10),n.bytes(t.publicKey)),t.listenAddrs!=null)for(const o of t.listenAddrs)n.uint32(18),n.bytes(o);if(t.observedAddr!=null&&(n.uint32(34),n.bytes(t.observedAddr)),t.protocols!=null)for(const o of t.protocols)n.uint32(26),n.string(o);t.signedPeerRecord!=null&&(n.uint32(66),n.bytes(t.signedPeerRecord)),i.lengthDelimited!==!1&&n.ldelim()},(t,n)=>{const i={listenAddrs:[],protocols:[]},o=n==null?t.len:t.pos+n;for(;t.pos<o;){const a=t.uint32();switch(a>>>3){case 5:i.protocolVersion=t.string();break;case 6:i.agentVersion=t.string();break;case 1:i.publicKey=t.bytes();break;case 2:i.listenAddrs.push(t.bytes());break;case 4:i.observedAddr=t.bytes();break;case 3:i.protocols.push(t.string());break;case 8:i.signedPeerRecord=t.bytes();break;default:t.skipType(a&7);break}}return i})),e),r.encode=t=>encodeMessage(t,r.codec()),r.decode=t=>decodeMessage$1(t,r.codec())})(Identify||(Identify={}));const MAX_IDENTIFY_MESSAGE_SIZE=1024*8,defaultValues={protocolPrefix:"ipfs",agentVersion:AGENT_VERSION,timeout:6e4,maxInboundStreams:1,maxOutboundStreams:1,maxPushIncomingStreams:1,maxPushOutgoingStreams:1,maxObservedAddresses:10,maxIdentifyMessageSize:8192,runOnConnectionOpen:!0,runOnTransientConnection:!0};var ue,at,Dt;class DefaultIdentifyService{constructor(e,t){ne(this,at);_(this,"identifyProtocolStr");_(this,"identifyPushProtocolStr");_(this,"host");_(this,"started");_(this,"timeout");_(this,"peerId");_(this,"peerStore");_(this,"registrar");_(this,"connectionManager");_(this,"addressManager");_(this,"maxInboundStreams");_(this,"maxOutboundStreams");_(this,"maxPushIncomingStreams");_(this,"maxPushOutgoingStreams");_(this,"maxIdentifyMessageSize");_(this,"maxObservedAddresses");_(this,"events");_(this,"runOnTransientConnection");ne(this,ue,void 0);this.started=!1,this.peerId=e.peerId,this.peerStore=e.peerStore,this.registrar=e.registrar,this.addressManager=e.addressManager,this.connectionManager=e.connectionManager,this.events=e.events,ye(this,ue,e.logger.forComponent("libp2p:identify")),this.identifyProtocolStr=`/${t.protocolPrefix??defaultValues.protocolPrefix}/${MULTICODEC_IDENTIFY_PROTOCOL_NAME}/${MULTICODEC_IDENTIFY_PROTOCOL_VERSION}`,this.identifyPushProtocolStr=`/${t.protocolPrefix??defaultValues.protocolPrefix}/${MULTICODEC_IDENTIFY_PUSH_PROTOCOL_NAME}/${MULTICODEC_IDENTIFY_PUSH_PROTOCOL_VERSION}`,this.timeout=t.timeout??defaultValues.timeout,this.maxInboundStreams=t.maxInboundStreams??defaultValues.maxInboundStreams,this.maxOutboundStreams=t.maxOutboundStreams??defaultValues.maxOutboundStreams,this.maxPushIncomingStreams=t.maxPushIncomingStreams??defaultValues.maxPushIncomingStreams,this.maxPushOutgoingStreams=t.maxPushOutgoingStreams??defaultValues.maxPushOutgoingStreams,this.maxIdentifyMessageSize=t.maxIdentifyMessageSize??defaultValues.maxIdentifyMessageSize,this.maxObservedAddresses=t.maxObservedAddresses??defaultValues.maxObservedAddresses,this.runOnTransientConnection=t.runOnTransientConnection??defaultValues.runOnTransientConnection,this.host={protocolVersion:`${t.protocolPrefix??defaultValues.protocolPrefix}/${IDENTIFY_PROTOCOL_VERSION}`,agentVersion:t.agentVersion??defaultValues.agentVersion},(t.runOnConnectionOpen??defaultValues.runOnConnectionOpen)&&e.events.addEventListener("connection:open",n=>{const i=n.detail;this.identify(i).catch(o=>{F(this,ue).error("error during identify trigged by connection:open",o)})}),e.events.addEventListener("self:peer:update",n=>{this.push().catch(i=>{F(this,ue).error(i)})}),this.host.agentVersion===AGENT_VERSION&&(isNode||isElectronMain?this.host.agentVersion+=` UserAgent=${globalThis.process.version}`:(isBrowser||isWebWorker||isElectronRenderer||isReactNative)&&(this.host.agentVersion+=` UserAgent=${globalThis.navigator.userAgent}`))}isStarted(){return this.started}async start(){this.started||(await this.peerStore.merge(this.peerId,{metadata:{AgentVersion:fromString$b(this.host.agentVersion),ProtocolVersion:fromString$b(this.host.protocolVersion)}}),await this.registrar.handle(this.identifyProtocolStr,e=>{this._handleIdentify(e).catch(t=>{F(this,ue).error(t)})},{maxInboundStreams:this.maxInboundStreams,maxOutboundStreams:this.maxOutboundStreams,runOnTransientConnection:this.runOnTransientConnection}),await this.registrar.handle(this.identifyPushProtocolStr,e=>{this._handlePush(e).catch(t=>{F(this,ue).error(t)})},{maxInboundStreams:this.maxPushIncomingStreams,maxOutboundStreams:this.maxPushOutgoingStreams,runOnTransientConnection:this.runOnTransientConnection}),this.started=!0)}async stop(){await this.registrar.unhandle(this.identifyProtocolStr),await this.registrar.unhandle(this.identifyPushProtocolStr),this.started=!1}async pushToConnections(e){const t=this.addressManager.getAddresses().map(f=>f.decapsulateCode(getProtocol("p2p").code)),n=new PeerRecord$2({peerId:this.peerId,multiaddrs:t}),i=await RecordEnvelope$1.seal(n,this.peerId),o=this.registrar.getProtocols(),a=await this.peerStore.get(this.peerId),c=toString$b(a.metadata.get("AgentVersion")??fromString$b(this.host.agentVersion)),l=toString$b(a.metadata.get("ProtocolVersion")??fromString$b(this.host.protocolVersion)),u=e.map(async f=>{let g;const $=AbortSignal.timeout(this.timeout);setMaxListeners$4(1/0,$);try{g=await f.newStream([this.identifyPushProtocolStr],{signal:$,runOnTransientConnection:this.runOnTransientConnection}),await pbStream(g,{maxDataLength:this.maxIdentifyMessageSize??MAX_IDENTIFY_MESSAGE_SIZE}).pb(Identify).write({listenAddrs:t.map(E=>E.bytes),signedPeerRecord:i.marshal(),protocols:o,agentVersion:c,protocolVersion:l},{signal:$}),await g.close({signal:$})}catch(S){F(this,ue).error("could not push identify update to peer",S),g?.abort(S)}});await Promise.all(u)}async push(){if(!this.isStarted())return;const e=[];await Promise.all(this.connectionManager.getConnections().map(async t=>{try{if(!(await this.peerStore.get(t.remotePeer)).protocols.includes(this.identifyPushProtocolStr))return;e.push(t)}catch(n){if(n.code!==codes$6.ERR_NOT_FOUND)throw n}})),await this.pushToConnections(e)}async _identify(e,t={}){let n;if(t.signal==null){const i=AbortSignal.timeout(this.timeout);setMaxListeners$4(1/0,i),t={...t,signal:i}}try{n=await e.newStream([this.identifyProtocolStr],{...t,runOnTransientConnection:this.runOnTransientConnection});const o=await pbStream(n,{maxDataLength:this.maxIdentifyMessageSize??MAX_IDENTIFY_MESSAGE_SIZE}).pb(Identify).read(t);return await n.close(t),o}catch(i){throw F(this,ue).error("error while reading identify message",i),n?.abort(i),i}}async identify(e,t={}){const n=await this._identify(e,t),{publicKey:i,protocols:o,observedAddr:a}=n;if(i==null)throw new CodeError$e("public key was missing from identify message",codes$6.ERR_MISSING_PUBLIC_KEY);const c=await peerIdFromKeys$6(i);if(!e.remotePeer.equals(c))throw new CodeError$e("identified peer does not match the expected peer",codes$6.ERR_INVALID_PEER);if(this.peerId.equals(c))throw new CodeError$e("identified peer is our own peer id?",codes$6.ERR_INVALID_PEER);const l=getCleanMultiaddr(a);return F(this,ue).call(this,"identify completed for peer %p and protocols %o",c,o),F(this,ue).call(this,"our observed address is %a",l),l!=null&&this.addressManager.getObservedAddrs().length<(this.maxObservedAddresses??1/0)&&(F(this,ue).call(this,"storing our observed address %a",l),this.addressManager.addObservedAddr(l)),se(this,at,Dt).call(this,e,n)}async _handleIdentify(e){const{connection:t,stream:n}=e,i=AbortSignal.timeout(this.timeout);setMaxListeners$4(1/0,i);try{const o=this.peerId.publicKey??new Uint8Array(0),a=await this.peerStore.get(this.peerId),c=this.addressManager.getAddresses().map(g=>g.decapsulateCode(getProtocol("p2p").code));let l=a.peerRecordEnvelope;if(c.length>0&&l==null){const g=new PeerRecord$2({peerId:this.peerId,multiaddrs:c});l=(await RecordEnvelope$1.seal(g,this.peerId)).marshal().subarray()}let u=t.remoteAddr.bytes;IP_OR_DOMAIN.matches(t.remoteAddr)||(u=void 0),await pbStream(n).pb(Identify).write({protocolVersion:this.host.protocolVersion,agentVersion:this.host.agentVersion,publicKey:o,listenAddrs:c.map(g=>g.bytes),signedPeerRecord:l,observedAddr:u,protocols:a.protocols},{signal:i}),await n.close({signal:i})}catch(o){F(this,ue).error("could not respond to identify request",o),n.abort(o)}}async _handlePush(e){const{connection:t,stream:n}=e;try{if(this.peerId.equals(t.remotePeer))throw new Error("received push from ourselves?");const i={signal:AbortSignal.timeout(this.timeout)},a=await pbStream(n,{maxDataLength:this.maxIdentifyMessageSize??MAX_IDENTIFY_MESSAGE_SIZE}).pb(Identify).read(i);await n.close(i),await se(this,at,Dt).call(this,t,a)}catch(i){F(this,ue).error("received invalid message",i),n.abort(i);return}F(this,ue).call(this,"handled push from %p",t.remotePeer)}}ue=new WeakMap,at=new WeakSet,Dt=async function(e,t){if(F(this,ue).call(this,"received identify from %p",e.remotePeer),t==null)throw new CodeError$e("message was null or undefined","ERR_INVALID_MESSAGE");const n={};if(t.listenAddrs.length>0&&(n.addresses=t.listenAddrs.map(a=>({isCertified:!1,multiaddr:multiaddr$1(a)}))),t.protocols.length>0&&(n.protocols=t.protocols),t.publicKey!=null&&(n.publicKey=t.publicKey,!(await peerIdFromKeys$6(t.publicKey)).equals(e.remotePeer)))throw new CodeError$e("public key did not match remote PeerId","ERR_INVALID_PUBLIC_KEY");let i;if(t.signedPeerRecord!=null){F(this,ue).call(this,"received signedPeerRecord in push from %p",e.remotePeer);let a=t.signedPeerRecord;const c=await RecordEnvelope$1.openAndCertify(a,PeerRecord$2.DOMAIN);let l=PeerRecord$2.createFromProtobuf(c.payload);if(!l.peerId.equals(c.peerId))throw new CodeError$e("signing key does not match PeerId in the PeerRecord","ERR_INVALID_SIGNING_KEY");if(!e.remotePeer.equals(l.peerId))throw new CodeError$e("signing key does not match remote PeerId","ERR_INVALID_PEER_RECORD_KEY");let u;try{u=await this.peerStore.get(l.peerId)}catch(f){if(f.code!=="ERR_NOT_FOUND")throw f}if(u!=null&&(n.metadata=u.metadata,u.peerRecordEnvelope!=null)){const f=await RecordEnvelope$1.createFromProtobuf(u.peerRecordEnvelope),g=PeerRecord$2.createFromProtobuf(f.payload);g.seqNumber>=l.seqNumber&&(F(this,ue).call(this,"sequence number was lower or equal to existing sequence number - stored: %d received: %d",g.seqNumber,l.seqNumber),l=g,a=u.peerRecordEnvelope)}n.peerRecordEnvelope=a,n.addresses=l.multiaddrs.map(f=>({isCertified:!0,multiaddr:f})),i={seq:l.seqNumber,addresses:l.multiaddrs}}else F(this,ue).call(this,"%p did not send a signed peer record",e.remotePeer);if(F(this,ue).call(this,"patching %p with",e.remotePeer,n),await this.peerStore.patch(e.remotePeer,n),t.agentVersion!=null||t.protocolVersion!=null){const a={};t.agentVersion!=null&&(a.AgentVersion=fromString$b(t.agentVersion)),t.protocolVersion!=null&&(a.ProtocolVersion=fromString$b(t.protocolVersion)),F(this,ue).call(this,"merging %p metadata",e.remotePeer,a),await this.peerStore.merge(e.remotePeer,{metadata:a})}const o={peerId:e.remotePeer,protocolVersion:t.protocolVersion,agentVersion:t.agentVersion,publicKey:t.publicKey,listenAddrs:t.listenAddrs.map(a=>multiaddr$1(a)),observedAddr:t.observedAddr==null?void 0:multiaddr$1(t.observedAddr),protocols:t.protocols,signedPeerRecord:i,connection:e};return this.events.safeDispatchEvent("peer:identify",{detail:o}),o};function getCleanMultiaddr(r){if(r!=null&&r.length>0)try{return multiaddr$1(r)}catch{}}function identifyService(r={}){return e=>new DefaultIdentifyService(e,r)}const PING_LENGTH$1=32,PROTOCOL_VERSION$1="1.0.0",PROTOCOL_NAME$1="ping",PROTOCOL_PREFIX$1="ipfs",TIMEOUT$1=1e4,MAX_INBOUND_STREAMS$1=2,MAX_OUTBOUND_STREAMS$1=1,log$b=logger$5("libp2p:ping");class DefaultPingService{constructor(e,t){_(this,"protocol");_(this,"components");_(this,"started");_(this,"timeout");_(this,"maxInboundStreams");_(this,"maxOutboundStreams");_(this,"runOnTransientConnection");this.components=e,this.started=!1,this.protocol=`/${t.protocolPrefix??PROTOCOL_PREFIX$1}/${PROTOCOL_NAME$1}/${PROTOCOL_VERSION$1}`,this.timeout=t.timeout??TIMEOUT$1,this.maxInboundStreams=t.maxInboundStreams??MAX_INBOUND_STREAMS$1,this.maxOutboundStreams=t.maxOutboundStreams??MAX_OUTBOUND_STREAMS$1,this.runOnTransientConnection=t.runOnTransientConnection??!0}async start(){await this.components.registrar.handle(this.protocol,this.handleMessage,{maxInboundStreams:this.maxInboundStreams,maxOutboundStreams:this.maxOutboundStreams,runOnTransientConnection:this.runOnTransientConnection}),this.started=!0}async stop(){await this.components.registrar.unhandle(this.protocol),this.started=!1}isStarted(){return this.started}handleMessage(e){log$b("incoming ping from %p",e.connection.remotePeer);const{stream:t}=e,n=Date.now();pipe(t,t).catch(i=>{log$b.error("incoming ping from %p failed with error",e.connection.remotePeer,i)}).finally(()=>{const i=Date.now()-n;log$b("incoming ping from %p complete in %dms",e.connection.remotePeer,i)})}async ping(e,t={}){log$b("pinging %p",e);const n=Date.now(),i=randomBytes$9(PING_LENGTH$1),o=await this.components.connectionManager.openConnection(e,t);let a,c=()=>{};if(t.signal==null){const l=AbortSignal.timeout(this.timeout);t={...t,signal:l}}try{a=await o.newStream(this.protocol,{...t,runOnTransientConnection:this.runOnTransientConnection}),c=()=>{a?.abort(new CodeError$e("ping timeout",codes$6.ERR_TIMEOUT))},t.signal?.addEventListener("abort",c,{once:!0});const l=await pipe([i],a,async f=>first(f)),u=Date.now()-n;if(l==null)throw new CodeError$e(`Did not receive a ping ack after ${u}ms`,codes$6.ERR_WRONG_PING_ACK);if(!equals$4(i,l.subarray()))throw new CodeError$e(`Received wrong ping ack after ${u}ms`,codes$6.ERR_WRONG_PING_ACK);return log$b("ping %p complete in %dms",o.remotePeer,u),u}catch(l){throw log$b.error("error while pinging %p",o.remotePeer,l),a?.abort(l),l}finally{t.signal?.removeEventListener("abort",c),a!=null&&await a.close()}}}function pingService(r={}){return e=>new DefaultPingService(e,r)}const bootstrapConfig={list:["/dnsaddr/bootstrap.libp2p.io/p2p/QmNnooDu7bfjPFoTZYxMNLWUQJyrVwtbZg5gBMjTezGAJN","/dnsaddr/bootstrap.libp2p.io/p2p/QmQCU2EcMqAqQPR2i9bChDtGNJchTbq5TbXJJ16u19uLTa","/dnsaddr/bootstrap.libp2p.io/p2p/QmbLHAnMoJPWSCR5Zhtx6BHJX9KiKNN6tpvbUcqanj75Nb","/dnsaddr/bootstrap.libp2p.io/p2p/QmcZf59bWwK5XFi76CZX8cbJ4BhTzzA3gU1ZjYZcYW3dwt","/ip4/104.131.131.82/tcp/4001/p2p/QmaCpDMGvV2BGHeYERUEnRQAwe3N8SzbUtfsmvsqQLuvuJ"]};function libp2pDefaults(){return{addresses:{listen:["/webrtc"]},transports:[circuitRelayTransport({discoverRelays:1}),webRTC(),webRTCDirect(),webTransport(),webSockets$1()],connectionEncryption:[noise$3()],streamMuxers:[yamux$1(),mplex()],peerDiscovery:[bootstrap(bootstrapConfig)],services:{identify:identifyService(),autoNAT:autoNATService(),pubsub:gossipsub(),dcutr:dcutrService(),delegatedRouting:()=>createDelegatedRoutingV1HttpApiClient("https://delegated-ipfs.dev"),dht:kadDHT({clientMode:!0,validators:{ipns:ipnsValidator},selectors:{ipns:ipnsSelector}}),ping:pingService()}}}async function createLibp2p$1(r,e){const t=libp2pDefaults();return e=e??{},createLibp2p$2({datastore:r,...t,...e,start:!1})}const version$2="2.1.0",name$1="helia",log$a=logger$5("helia");async function createHelia(r={}){const e=r.datastore??new MemoryDatastore,t=r.blockstore??new MemoryBlockstore;let n;isLibp2p(r.libp2p)?n=r.libp2p:n=await createLibp2p$1(e,r.libp2p);const i=new HeliaImpl({...r,datastore:e,blockstore:t,libp2p:n});return r.start!==!1&&await i.start(),addHeliaToAgentVersion(i),i}function isLibp2p(r){return r==null?!1:["dial","dialProtocol","hangUp","handle","unhandle","getMultiaddrs","getProtocols"].every(t=>typeof r[t]=="function")}function addHeliaToAgentVersion(r){try{if(r.libp2p.services.identify.host.agentVersion.match(/js-libp2p\/\d+\.\d+\.\d+\sUserAgent=/)==null)return;r.libp2p.services.identify.host.agentVersion=`${name$1}/${version$2} ${r.libp2p.services.identify.host.agentVersion}`}catch(e){log$a.error("could not add Helia to agent version",e)}}function assign$3(r,e){for(const t in e)Object.defineProperty(r,t,{value:e[t],enumerable:!0,configurable:!0});return r}function createError$3(r,e,t){if(!r||typeof r=="string")throw new TypeError("Please pass an Error to err-code");t||(t={}),typeof e=="object"&&(t=e,e=""),e&&(t.code=e);try{return assign$3(r,t)}catch{t.message=r.message,t.stack=r.stack;const i=function(){};return i.prototype=Object.create(Object.getPrototypeOf(r)),assign$3(new i,t)}}var errCode$5=createError$3;const errcode$1=getDefaultExportFromCjs(errCode$5);function isAsyncIterable$2(r){return r[Symbol.asyncIterator]!=null}function batch(r,e=1){return e=Number(e),isAsyncIterable$2(r)?async function*(){let t=[];if(e<1&&(e=1),e!==Math.round(e))throw new Error("Batch size must be an integer");for await(const n of r)for(t.push(n);t.length>=e;)yield t.slice(0,e),t=t.slice(e);for(;t.length>0;)yield t.slice(0,e),t=t.slice(e)}():function*(){let t=[];if(e<1&&(e=1),e!==Math.round(e))throw new Error("Batch size must be an integer");for(const n of r)for(t.push(n);t.length>=e;)yield t.slice(0,e),t=t.slice(e);for(;t.length>0;)yield t.slice(0,e),t=t.slice(e)}()}async function*parallelBatch(r,e=1){for await(const t of batch(r,e)){const n=t.map(async i=>i().then(o=>({ok:!0,value:o}),o=>({ok:!1,err:o})));for(let i=0;i<n.length;i++){const o=await n[i];if(o.ok)yield o.value;else throw o.err}}}const DEFAULT_CHUNK_SIZE=262144,fixedSize=(r={})=>{const e=r.chunkSize??DEFAULT_CHUNK_SIZE;return async function*(n){let i=new Uint8ArrayList,o=0,a=!1;for await(const c of n)for(i.append(c),o+=c.length;o>=e;)if(yield i.slice(0,e),a=!0,e===i.length)i=new Uint8ArrayList,o=0;else{const l=new Uint8ArrayList;l.append(i.sublist(e)),i=l,o-=e}(!a||o>0)&&(yield i.subarray(0,o))}};var Data$2;(function(r){(function(n){n.Raw="Raw",n.Directory="Directory",n.File="File",n.Metadata="Metadata",n.Symlink="Symlink",n.HAMTShard="HAMTShard"})(r.DataType||(r.DataType={}));let e;(function(n){n[n.Raw=0]="Raw",n[n.Directory=1]="Directory",n[n.File=2]="File",n[n.Metadata=3]="Metadata",n[n.Symlink=4]="Symlink",n[n.HAMTShard=5]="HAMTShard"})(e||(e={})),function(n){n.codec=()=>enumeration(e)}(r.DataType||(r.DataType={}));let t;r.codec=()=>(t==null&&(t=message((n,i,o={})=>{if(o.lengthDelimited!==!1&&i.fork(),n.Type!=null&&(i.uint32(8),r.DataType.codec().encode(n.Type,i)),n.Data!=null&&(i.uint32(18),i.bytes(n.Data)),n.filesize!=null&&(i.uint32(24),i.uint64(n.filesize)),n.blocksizes!=null)for(const a of n.blocksizes)i.uint32(32),i.uint64(a);n.hashType!=null&&(i.uint32(40),i.uint64(n.hashType)),n.fanout!=null&&(i.uint32(48),i.uint64(n.fanout)),n.mode!=null&&(i.uint32(56),i.uint32(n.mode)),n.mtime!=null&&(i.uint32(66),UnixTime$2.codec().encode(n.mtime,i)),o.lengthDelimited!==!1&&i.ldelim()},(n,i)=>{const o={blocksizes:[]},a=i==null?n.len:n.pos+i;for(;n.pos<a;){const c=n.uint32();switch(c>>>3){case 1:o.Type=r.DataType.codec().decode(n);break;case 2:o.Data=n.bytes();break;case 3:o.filesize=n.uint64();break;case 4:o.blocksizes.push(n.uint64());break;case 5:o.hashType=n.uint64();break;case 6:o.fanout=n.uint64();break;case 7:o.mode=n.uint32();break;case 8:o.mtime=UnixTime$2.codec().decode(n,n.uint32());break;default:n.skipType(c&7);break}}return o})),t),r.encode=n=>encodeMessage(n,r.codec()),r.decode=n=>decodeMessage$1(n,r.codec())})(Data$2||(Data$2={}));var UnixTime$2;(function(r){let e;r.codec=()=>(e==null&&(e=message((t,n,i={})=>{i.lengthDelimited!==!1&&n.fork(),t.Seconds!=null&&(n.uint32(8),n.int64(t.Seconds)),t.FractionalNanoseconds!=null&&(n.uint32(21),n.fixed32(t.FractionalNanoseconds)),i.lengthDelimited!==!1&&n.ldelim()},(t,n)=>{const i={},o=n==null?t.len:t.pos+n;for(;t.pos<o;){const a=t.uint32();switch(a>>>3){case 1:i.Seconds=t.int64();break;case 2:i.FractionalNanoseconds=t.fixed32();break;default:t.skipType(a&7);break}}return i})),e),r.encode=t=>encodeMessage(t,r.codec()),r.decode=t=>decodeMessage$1(t,r.codec())})(UnixTime$2||(UnixTime$2={}));var Metadata$2;(function(r){let e;r.codec=()=>(e==null&&(e=message((t,n,i={})=>{i.lengthDelimited!==!1&&n.fork(),t.MimeType!=null&&(n.uint32(10),n.string(t.MimeType)),i.lengthDelimited!==!1&&n.ldelim()},(t,n)=>{const i={},o=n==null?t.len:t.pos+n;for(;t.pos<o;){const a=t.uint32();switch(a>>>3){case 1:i.MimeType=t.string();break;default:t.skipType(a&7);break}}return i})),e),r.encode=t=>encodeMessage(t,r.codec()),r.decode=t=>decodeMessage$1(t,r.codec())})(Metadata$2||(Metadata$2={}));const types$2={Raw:"raw",Directory:"directory",File:"file",Metadata:"metadata",Symlink:"symlink",HAMTShard:"hamt-sharded-directory"},dirTypes$2=["directory","hamt-sharded-directory"],DEFAULT_FILE_MODE$2=parseInt("0644",8),DEFAULT_DIRECTORY_MODE$2=parseInt("0755",8);let UnixFS$2=class lr{constructor(e={type:"file"}){_(this,"type");_(this,"data");_(this,"blockSizes");_(this,"hashType");_(this,"fanout");_(this,"mtime");_(this,"_mode");_(this,"_originalMode");const{type:t,data:n,blockSizes:i,hashType:o,fanout:a,mtime:c,mode:l}=e;if(t!=null&&!Object.values(types$2).includes(t))throw errcode$1(new Error("Type: "+t+" is not valid"),"ERR_INVALID_TYPE");this.type=t??"file",this.data=n,this.hashType=o,this.fanout=a,this.blockSizes=i??[],this._originalMode=0,this.mode=l,this.mtime=c}static unmarshal(e){const t=Data$2.decode(e),n=new lr({type:types$2[t.Type!=null?t.Type.toString():"File"],data:t.Data,blockSizes:t.blocksizes,mode:t.mode,mtime:t.mtime!=null?{secs:t.mtime.Seconds??0n,nsecs:t.mtime.FractionalNanoseconds}:void 0,fanout:t.fanout});return n._originalMode=t.mode??0,n}set mode(e){e==null?this._mode=this.isDirectory()?DEFAULT_DIRECTORY_MODE$2:DEFAULT_FILE_MODE$2:this._mode=e&4095}get mode(){return this._mode}isDirectory(){return dirTypes$2.includes(this.type)}addBlockSize(e){this.blockSizes.push(e)}removeBlockSize(e){this.blockSizes.splice(e,1)}fileSize(){if(this.isDirectory())return 0n;let e=0n;return this.blockSizes.forEach(t=>{e+=t}),this.data!=null&&(e+=BigInt(this.data.length)),e}marshal(){let e;switch(this.type){case"raw":e=Data$2.DataType.Raw;break;case"directory":e=Data$2.DataType.Directory;break;case"file":e=Data$2.DataType.File;break;case"metadata":e=Data$2.DataType.Metadata;break;case"symlink":e=Data$2.DataType.Symlink;break;case"hamt-sharded-directory":e=Data$2.DataType.HAMTShard;break;default:throw errcode$1(new Error(`Type: ${e} is not valid`),"ERR_INVALID_TYPE")}let t=this.data;(this.data==null||this.data.length===0)&&(t=void 0);let n;this.mode!=null&&(n=this._originalMode&4294963200|(this.mode??0),n===DEFAULT_FILE_MODE$2&&!this.isDirectory()&&(n=void 0),n===DEFAULT_DIRECTORY_MODE$2&&this.isDirectory()&&(n=void 0));let i;return this.mtime!=null&&(i={Seconds:this.mtime.secs,FractionalNanoseconds:this.mtime.nsecs}),Data$2.encode({Type:e,Data:t,filesize:this.isDirectory()?void 0:this.fileSize(),blocksizes:this.blockSizes,hashType:this.hashType,fanout:this.fanout,mode:n,mtime:i})}};const persist$1=async(r,e,t)=>{t.codec==null&&(t.codec=dagPB);const n=await sha256$2.digest(r),i=CID$3.create(t.cidVersion,t.codec.code,n);return await e.put(i,r,t),i};function defaultBufferImporter(r){return async function*(t,n){let i=0n;for await(let o of t.content)yield async()=>{let a;const c={codec:dagPB,cidVersion:r.cidVersion,onProgress:r.onProgress};r.rawLeaves?(c.codec=raw,c.cidVersion=1):(a=new UnixFS$2({type:r.leafType,data:o}),o=encode$b({Data:a.marshal(),Links:[]}));const l=await persist$1(o,n,c);return i+=BigInt(o.byteLength),r.onProgress?.(new CustomProgressEvent("unixfs:importer:progress:file:write",{bytesWritten:i,cid:l,path:t.path})),{cid:l,unixfs:a,size:BigInt(o.length),block:o}}}}const dirBuilder=async(r,e,t)=>{const n=new UnixFS$2({type:"directory",mtime:r.mtime,mode:r.mode}),i=encode$b(prepare({Data:n.marshal()})),o=await persist$1(i,e,t),a=r.path;return{cid:o,path:a,unixfs:n,size:BigInt(i.length),originalPath:r.originalPath,block:i}};async function*buildFileBatch(r,e,t){let n=-1,i;for await(const o of parallelBatch(t.bufferImporter(r,e),t.blockWriteConcurrency)){if(n++,n===0){i={...o,single:!0};continue}else n===1&&i!=null&&(yield{...i,block:void 0,single:void 0},i=void 0);yield{...o,block:void 0}}i!=null&&(yield i)}function isSingleBlockImport(r){return r.single===!0}const reduce=(r,e,t)=>async function(i){if(i.length===1&&isSingleBlockImport(i[0])&&t.reduceSingleLeafToSelf){const f=i[0];let g=f.block;return isSingleBlockImport(f)&&(r.mtime!==void 0||r.mode!==void 0)&&(f.unixfs=new UnixFS$2({type:"file",mtime:r.mtime,mode:r.mode,data:f.block}),g={Data:f.unixfs.marshal(),Links:[]},f.block=encode$b(prepare(g)),f.cid=await persist$1(f.block,e,{...t,cidVersion:t.cidVersion}),f.size=BigInt(f.block.length)),t.onProgress?.(new CustomProgressEvent("unixfs:importer:progress:file:layout",{cid:f.cid,path:f.originalPath})),{cid:f.cid,path:r.path,unixfs:f.unixfs,size:f.size,originalPath:f.originalPath}}const o=new UnixFS$2({type:"file",mtime:r.mtime,mode:r.mode}),a=i.filter(f=>f.cid.code===code$5&&f.size>0||f.unixfs!=null&&f.unixfs.data==null&&f.unixfs.fileSize()>0n?!0:!!f.unixfs?.data?.length).map(f=>f.cid.code===code$5?(o.addBlockSize(f.size),{Name:"",Tsize:Number(f.size),Hash:f.cid}):(f.unixfs==null||f.unixfs.data==null?o.addBlockSize(f.unixfs?.fileSize()??0n):o.addBlockSize(BigInt(f.unixfs.data.length)),{Name:"",Tsize:Number(f.size),Hash:f.cid})),c={Data:o.marshal(),Links:a},l=encode$b(prepare(c)),u=await persist$1(l,e,t);return t.onProgress?.(new CustomProgressEvent("unixfs:importer:progress:file:layout",{cid:u,path:r.originalPath})),{cid:u,path:r.path,unixfs:o,size:BigInt(l.length+c.Links.reduce((f,g)=>f+(g.Tsize??0),0)),originalPath:r.originalPath,block:l}},fileBuilder=async(r,e,t)=>t.layout(buildFileBatch(r,e,t),reduce(r,e,t));function isIterable(r){return Symbol.iterator in r}function isAsyncIterable$1(r){return Symbol.asyncIterator in r}function contentAsAsyncIterable(r){try{if(r instanceof Uint8Array)return async function*(){yield r}();if(isIterable(r))return async function*(){yield*r}();if(isAsyncIterable$1(r))return r}catch{throw errcode$1(new Error("Content was invalid"),"ERR_INVALID_CONTENT")}throw errcode$1(new Error("Content was invalid"),"ERR_INVALID_CONTENT")}function defaultDagBuilder(r){return async function*(t,n){for await(const i of t){let o;if(i.path!=null&&(o=i.path,i.path=i.path.split("/").filter(a=>a!=null&&a!==".").join("/")),isFileCandidate(i)){const a={path:i.path,mtime:i.mtime,mode:i.mode,content:async function*(){let c=0n;for await(const l of r.chunker(r.chunkValidator(contentAsAsyncIterable(i.content)))){const u=BigInt(l.byteLength);c+=u,r.onProgress?.(new CustomProgressEvent("unixfs:importer:progress:file:read",{bytesRead:c,chunkSize:u,path:i.path})),yield l}}(),originalPath:o};yield async()=>fileBuilder(a,n,r)}else if(i.path!=null){const a={path:i.path,mtime:i.mtime,mode:i.mode,originalPath:o};yield async()=>dirBuilder(a,n,r)}else throw new Error("Import candidate must have content or path or both")}}}function isFileCandidate(r){return r.content!=null}const defaultChunkValidator=()=>async function*(e){for await(const t of e){if(t.length===void 0)throw errcode$1(new Error("Content was invalid"),"ERR_INVALID_CONTENT");if(typeof t=="string"||t instanceof String)yield fromString$b(t.toString());else if(Array.isArray(t))yield Uint8Array.from(t);else if(t instanceof Uint8Array)yield t;else throw errcode$1(new Error("Content was invalid"),"ERR_INVALID_CONTENT")}},DEFAULT_MAX_CHILDREN_PER_NODE=174;function balanced(r){const e=r?.maxChildrenPerNode??DEFAULT_MAX_CHILDREN_PER_NODE;return async function t(n,i){const o=[];for await(const a of batch(n,e))o.push(await i(a));return o.length>1?t(o,i):o[0]}}let Dir$1=class{constructor(e,t){_(this,"options");_(this,"root");_(this,"dir");_(this,"path");_(this,"dirty");_(this,"flat");_(this,"parent");_(this,"parentKey");_(this,"unixfs");_(this,"mode");_(this,"mtime");_(this,"cid");_(this,"size");_(this,"nodeSize");this.options=t??{},this.root=e.root,this.dir=e.dir,this.path=e.path,this.dirty=e.dirty,this.flat=e.flat,this.parent=e.parent,this.parentKey=e.parentKey,this.unixfs=e.unixfs,this.mode=e.mode,this.mtime=e.mtime}};const CID_V0$1=CID$3.parse("QmUNLLsPACCz1vLxQVkXqqLX5R1X345qqfHbsf67hvA3Nn"),CID_V1$1=CID$3.parse("zdj7WbTaiJT1fgatdet9Ei9iDB5hdCxkbVyhyh8YTUnXMiwYi");class DirFlat extends Dir$1{constructor(t,n){super(t,n);_(this,"_children");this._children=new Map}async put(t,n){this.cid=void 0,this.size=void 0,this.nodeSize=void 0,this._children.set(t,n)}async get(t){return Promise.resolve(this._children.get(t))}childCount(){return this._children.size}directChildrenCount(){return this.childCount()}onlyChild(){return this._children.values().next().value}async*eachChildSeries(){for(const[t,n]of this._children.entries())yield{key:t,child:n}}estimateNodeSize(){if(this.nodeSize!==void 0)return this.nodeSize;this.nodeSize=0;for(const[t,n]of this._children.entries())n.size!=null&&n.cid!=null&&(this.nodeSize+=t.length+(this.options.cidVersion===1?CID_V1$1.bytes.byteLength:CID_V0$1.bytes.byteLength));return this.nodeSize}async*flush(t){const n=[];for(const[u,f]of this._children.entries()){let g=f;if(f instanceof Dir$1)for await(const $ of f.flush(t))g=$,yield $;g.size!=null&&g.cid!=null&&n.push({Name:u,Tsize:Number(g.size),Hash:g.cid})}const i=new UnixFS$2({type:"directory",mtime:this.mtime,mode:this.mode}),o={Data:i.marshal(),Links:n},a=encode$b(prepare(o)),c=await persist$1(a,t,this.options),l=a.length+o.Links.reduce((u,f)=>u+(f.Tsize==null?0:f.Tsize),0);this.cid=c,this.size=l,yield{cid:c,unixfs:i,path:this.path,size:BigInt(l)}}}var murmurHash3js={exports:{}};(function(r,e){(function(t,n){var i={version:"3.0.0",x86:{},x64:{},inputValidation:!0};function o(v){if(!Array.isArray(v)&&!ArrayBuffer.isView(v))return!1;for(var T=0;T<v.length;T++)if(!Number.isInteger(v[T])||v[T]<0||v[T]>255)return!1;return!0}function a(v,T){return(v&65535)*T+(((v>>>16)*T&65535)<<16)}function c(v,T){return v<<T|v>>>32-T}function l(v){return v^=v>>>16,v=a(v,2246822507),v^=v>>>13,v=a(v,3266489909),v^=v>>>16,v}function u(v,T){v=[v[0]>>>16,v[0]&65535,v[1]>>>16,v[1]&65535],T=[T[0]>>>16,T[0]&65535,T[1]>>>16,T[1]&65535];var I=[0,0,0,0];return I[3]+=v[3]+T[3],I[2]+=I[3]>>>16,I[3]&=65535,I[2]+=v[2]+T[2],I[1]+=I[2]>>>16,I[2]&=65535,I[1]+=v[1]+T[1],I[0]+=I[1]>>>16,I[1]&=65535,I[0]+=v[0]+T[0],I[0]&=65535,[I[0]<<16|I[1],I[2]<<16|I[3]]}function f(v,T){v=[v[0]>>>16,v[0]&65535,v[1]>>>16,v[1]&65535],T=[T[0]>>>16,T[0]&65535,T[1]>>>16,T[1]&65535];var I=[0,0,0,0];return I[3]+=v[3]*T[3],I[2]+=I[3]>>>16,I[3]&=65535,I[2]+=v[2]*T[3],I[1]+=I[2]>>>16,I[2]&=65535,I[2]+=v[3]*T[2],I[1]+=I[2]>>>16,I[2]&=65535,I[1]+=v[1]*T[3],I[0]+=I[1]>>>16,I[1]&=65535,I[1]+=v[2]*T[2],I[0]+=I[1]>>>16,I[1]&=65535,I[1]+=v[3]*T[1],I[0]+=I[1]>>>16,I[1]&=65535,I[0]+=v[0]*T[3]+v[1]*T[2]+v[2]*T[1]+v[3]*T[0],I[0]&=65535,[I[0]<<16|I[1],I[2]<<16|I[3]]}function g(v,T){return T%=64,T===32?[v[1],v[0]]:T<32?[v[0]<<T|v[1]>>>32-T,v[1]<<T|v[0]>>>32-T]:(T-=32,[v[1]<<T|v[0]>>>32-T,v[0]<<T|v[1]>>>32-T])}function $(v,T){return T%=64,T===0?v:T<32?[v[0]<<T|v[1]>>>32-T,v[1]<<T]:[v[1]<<T-32,0]}function S(v,T){return[v[0]^T[0],v[1]^T[1]]}function E(v){return v=S(v,[0,v[0]>>>1]),v=f(v,[4283543511,3981806797]),v=S(v,[0,v[0]>>>1]),v=f(v,[3301882366,444984403]),v=S(v,[0,v[0]>>>1]),v}i.x86.hash32=function(v,T){if(i.inputValidation&&!o(v))return n;T=T||0;for(var I=v.length%4,A=v.length-I,P=T,x=0,D=3432918353,C=461845907,k=0;k<A;k=k+4)x=v[k]|v[k+1]<<8|v[k+2]<<16|v[k+3]<<24,x=a(x,D),x=c(x,15),x=a(x,C),P^=x,P=c(P,13),P=a(P,5)+3864292196;switch(x=0,I){case 3:x^=v[k+2]<<16;case 2:x^=v[k+1]<<8;case 1:x^=v[k],x=a(x,D),x=c(x,15),x=a(x,C),P^=x}return P^=v.length,P=l(P),P>>>0},i.x86.hash128=function(v,T){if(i.inputValidation&&!o(v))return n;T=T||0;for(var I=v.length%16,A=v.length-I,P=T,x=T,D=T,C=T,k=0,N=0,L=0,M=0,U=597399067,z=2869860233,Y=951274213,j=2716044179,B=0;B<A;B=B+16)k=v[B]|v[B+1]<<8|v[B+2]<<16|v[B+3]<<24,N=v[B+4]|v[B+5]<<8|v[B+6]<<16|v[B+7]<<24,L=v[B+8]|v[B+9]<<8|v[B+10]<<16|v[B+11]<<24,M=v[B+12]|v[B+13]<<8|v[B+14]<<16|v[B+15]<<24,k=a(k,U),k=c(k,15),k=a(k,z),P^=k,P=c(P,19),P+=x,P=a(P,5)+1444728091,N=a(N,z),N=c(N,16),N=a(N,Y),x^=N,x=c(x,17),x+=D,x=a(x,5)+197830471,L=a(L,Y),L=c(L,17),L=a(L,j),D^=L,D=c(D,15),D+=C,D=a(D,5)+2530024501,M=a(M,j),M=c(M,18),M=a(M,U),C^=M,C=c(C,13),C+=P,C=a(C,5)+850148119;switch(k=0,N=0,L=0,M=0,I){case 15:M^=v[B+14]<<16;case 14:M^=v[B+13]<<8;case 13:M^=v[B+12],M=a(M,j),M=c(M,18),M=a(M,U),C^=M;case 12:L^=v[B+11]<<24;case 11:L^=v[B+10]<<16;case 10:L^=v[B+9]<<8;case 9:L^=v[B+8],L=a(L,Y),L=c(L,17),L=a(L,j),D^=L;case 8:N^=v[B+7]<<24;case 7:N^=v[B+6]<<16;case 6:N^=v[B+5]<<8;case 5:N^=v[B+4],N=a(N,z),N=c(N,16),N=a(N,Y),x^=N;case 4:k^=v[B+3]<<24;case 3:k^=v[B+2]<<16;case 2:k^=v[B+1]<<8;case 1:k^=v[B],k=a(k,U),k=c(k,15),k=a(k,z),P^=k}return P^=v.length,x^=v.length,D^=v.length,C^=v.length,P+=x,P+=D,P+=C,x+=P,D+=P,C+=P,P=l(P),x=l(x),D=l(D),C=l(C),P+=x,P+=D,P+=C,x+=P,D+=P,C+=P,("00000000"+(P>>>0).toString(16)).slice(-8)+("00000000"+(x>>>0).toString(16)).slice(-8)+("00000000"+(D>>>0).toString(16)).slice(-8)+("00000000"+(C>>>0).toString(16)).slice(-8)},i.x64.hash128=function(v,T){if(i.inputValidation&&!o(v))return n;T=T||0;for(var I=v.length%16,A=v.length-I,P=[0,T],x=[0,T],D=[0,0],C=[0,0],k=[2277735313,289559509],N=[1291169091,658871167],L=0;L<A;L=L+16)D=[v[L+4]|v[L+5]<<8|v[L+6]<<16|v[L+7]<<24,v[L]|v[L+1]<<8|v[L+2]<<16|v[L+3]<<24],C=[v[L+12]|v[L+13]<<8|v[L+14]<<16|v[L+15]<<24,v[L+8]|v[L+9]<<8|v[L+10]<<16|v[L+11]<<24],D=f(D,k),D=g(D,31),D=f(D,N),P=S(P,D),P=g(P,27),P=u(P,x),P=u(f(P,[0,5]),[0,1390208809]),C=f(C,N),C=g(C,33),C=f(C,k),x=S(x,C),x=g(x,31),x=u(x,P),x=u(f(x,[0,5]),[0,944331445]);switch(D=[0,0],C=[0,0],I){case 15:C=S(C,$([0,v[L+14]],48));case 14:C=S(C,$([0,v[L+13]],40));case 13:C=S(C,$([0,v[L+12]],32));case 12:C=S(C,$([0,v[L+11]],24));case 11:C=S(C,$([0,v[L+10]],16));case 10:C=S(C,$([0,v[L+9]],8));case 9:C=S(C,[0,v[L+8]]),C=f(C,N),C=g(C,33),C=f(C,k),x=S(x,C);case 8:D=S(D,$([0,v[L+7]],56));case 7:D=S(D,$([0,v[L+6]],48));case 6:D=S(D,$([0,v[L+5]],40));case 5:D=S(D,$([0,v[L+4]],32));case 4:D=S(D,$([0,v[L+3]],24));case 3:D=S(D,$([0,v[L+2]],16));case 2:D=S(D,$([0,v[L+1]],8));case 1:D=S(D,[0,v[L]]),D=f(D,k),D=g(D,31),D=f(D,N),P=S(P,D)}return P=S(P,[0,v.length]),x=S(x,[0,v.length]),P=u(P,x),x=u(x,P),P=E(P),x=E(x),P=u(P,x),x=u(x,P),("00000000"+(P[0]>>>0).toString(16)).slice(-8)+("00000000"+(P[1]>>>0).toString(16)).slice(-8)+("00000000"+(x[0]>>>0).toString(16)).slice(-8)+("00000000"+(x[1]>>>0).toString(16)).slice(-8)},r.exports&&(e=r.exports=i),e.murmurHash3=i})()})(murmurHash3js,murmurHash3js.exports);var murmurHash3jsExports=murmurHash3js.exports,murmurhash3jsRevisited=murmurHash3jsExports;const mur=getDefaultExportFromCjs(murmurhash3jsRevisited),murmur3128=from$2({name:"murmur3-128",code:34,encode:r=>fromHex(mur.x64.hash128(r))}),BITS_PER_BYTE=7;var sparseArray=class{constructor(){this._bitArrays=[],this._data=[],this._length=0,this._changedLength=!1,this._changedData=!1}set(e,t){let n=this._internalPositionFor(e,!1);if(t===void 0)n!==-1&&(this._unsetInternalPos(n),this._unsetBit(e),this._changedLength=!0,this._changedData=!0);else{let i=!1;n===-1?(n=this._data.length,this._setBit(e),this._changedData=!0):i=!0,this._setInternalPos(n,e,t,i),this._changedLength=!0}}unset(e){this.set(e,void 0)}get(e){this._sortData();const t=this._internalPositionFor(e,!0);if(t!==-1)return this._data[t][1]}push(e){return this.set(this.length,e),this.length}get length(){if(this._sortData(),this._changedLength){const e=this._data[this._data.length-1];this._length=e?e[0]+1:0,this._changedLength=!1}return this._length}forEach(e){let t=0;for(;t<this.length;)e(this.get(t),t,this),t++}map(e){let t=0,n=new Array(this.length);for(;t<this.length;)n[t]=e(this.get(t),t,this),t++;return n}reduce(e,t){let n=0,i=t;for(;n<this.length;){const o=this.get(n);i=e(i,o,n),n++}return i}find(e){let t=0,n,i;for(;t<this.length&&!n;)i=this.get(t),n=e(i),t++;return n?i:void 0}_internalPositionFor(e,t){const n=this._bytePosFor(e,t);if(n>=this._bitArrays.length)return-1;const i=this._bitArrays[n],o=e-n*BITS_PER_BYTE;if(!((i&1<<o)>0))return-1;const c=this._bitArrays.slice(0,n).reduce(popCountReduce,0),l=~(4294967295<<o+1),u=popCount(i&l);return c+u-1}_bytePosFor(e,t){const n=Math.floor(e/BITS_PER_BYTE),i=n+1;for(;!t&&this._bitArrays.length<i;)this._bitArrays.push(0);return n}_setBit(e){const t=this._bytePosFor(e,!1);this._bitArrays[t]|=1<<e-t*BITS_PER_BYTE}_unsetBit(e){const t=this._bytePosFor(e,!1);this._bitArrays[t]&=~(1<<e-t*BITS_PER_BYTE)}_setInternalPos(e,t,n,i){const o=this._data,a=[t,n];if(i)this._sortData(),o[e]=a;else{if(o.length)if(o[o.length-1][0]>=t)o.push(a);else if(o[0][0]<=t)o.unshift(a);else{const c=Math.round(o.length/2);this._data=o.slice(0,c).concat(a).concat(o.slice(c))}else this._data.push(a);this._changedData=!0,this._changedLength=!0}}_unsetInternalPos(e){this._data.splice(e,1)}_sortData(){this._changedData&&this._data.sort(sortInternal),this._changedData=!1}bitField(){const e=[];let t=8,n=0,i=0,o;const a=this._bitArrays.slice();for(;a.length||n;){n===0&&(o=a.shift(),n=7);const l=Math.min(n,t),u=~(255<<l),f=o&u;i|=f<<8-t,o=o>>>l,n-=l,t-=l,(!t||!n&&!a.length)&&(e.push(i),i=0,t=8)}for(var c=e.length-1;c>0&&e[c]===0;c--)e.pop();return e}compactArray(){return this._sortData(),this._data.map(valueOnly)}};function popCountReduce(r,e){return r+popCount(e)}function popCount(r){let e=r;return e=e-(e>>1&1431655765),e=(e&858993459)+(e>>2&858993459),(e+(e>>4)&252645135)*16843009>>24}function sortInternal(r,e){return r[0]-e[0]}function valueOnly(r){return r[1]}const SparseArray=getDefaultExportFromCjs(sparseArray);class Bucket{constructor(e,t,n=0){this._options=e,this._popCount=0,this._parent=t,this._posAtParent=n,this._children=new SparseArray,this.key=null}async put(e,t){const n=await this._findNewBucketAndPos(e);await n.bucket._putAt(n,e,t)}async get(e){const t=await this._findChild(e);if(t!=null)return t.value}async del(e){const t=await this._findPlace(e),n=t.bucket._at(t.pos);n!=null&&n.key===e&&t.bucket._delAt(t.pos)}leafCount(){return this._children.compactArray().reduce((t,n)=>n instanceof Bucket?t+n.leafCount():t+1,0)}childrenCount(){return this._children.length}onlyChild(){return this._children.get(0)}*eachLeafSeries(){const e=this._children.compactArray();for(const t of e)t instanceof Bucket?yield*t.eachLeafSeries():yield t}serialize(e,t){const n=[];return t(this._children.reduce((i,o,a)=>(o!=null&&(o instanceof Bucket?i.push(o.serialize(e,t)):i.push(e(o,a))),i),n))}async asyncTransform(e,t){return await asyncTransformBucket(this,e,t)}toJSON(){return this.serialize(mapNode,reduceNodes)}prettyPrint(){return JSON.stringify(this.toJSON(),null,"  ")}tableSize(){return Math.pow(2,this._options.bits)}async _findChild(e){const t=await this._findPlace(e),n=t.bucket._at(t.pos);if(!(n instanceof Bucket)&&n!=null&&n.key===e)return n}async _findPlace(e){const t=this._options.hash(typeof e=="string"?fromString$b(e):e),n=await t.take(this._options.bits),i=this._children.get(n);return i instanceof Bucket?await i._findPlace(t):{bucket:this,pos:n,hash:t,existingChild:i}}async _findNewBucketAndPos(e){const t=await this._findPlace(e);if(t.existingChild!=null&&t.existingChild.key!==e){const n=new Bucket(this._options,t.bucket,t.pos);t.bucket._putObjectAt(t.pos,n);const i=await n._findPlace(t.existingChild.hash);return i.bucket._putAt(i,t.existingChild.key,t.existingChild.value),await n._findNewBucketAndPos(t.hash)}return t}_putAt(e,t,n){this._putObjectAt(e.pos,{key:t,value:n,hash:e.hash})}_putObjectAt(e,t){this._children.get(e)==null&&this._popCount++,this._children.set(e,t)}_delAt(e){if(e===-1)throw new Error("Invalid position");this._children.get(e)!=null&&this._popCount--,this._children.unset(e),this._level()}_level(){if(this._parent!=null&&this._popCount<=1)if(this._popCount===1){const e=this._children.find(exists);if(e!=null&&!(e instanceof Bucket)){const t=e.hash;t.untake(this._options.bits);const n={pos:this._posAtParent,hash:t,bucket:this._parent};this._parent._putAt(n,e.key,e.value)}}else this._parent._delAt(this._posAtParent)}_at(e){return this._children.get(e)}}function exists(r){return!!r}function mapNode(r,e){return r.key}function reduceNodes(r){return r}async function asyncTransformBucket(r,e,t){const n=[];for(const i of r._children.compactArray())if(i instanceof Bucket)await asyncTransformBucket(i,e,t);else{const o=await e(i);n.push({bitField:r._children.bitField(),children:o})}return await t(n)}const START_MASKS$1=[255,254,252,248,240,224,192,128],STOP_MASKS$1=[1,3,7,15,31,63,127,255];let ConsumableBuffer$1=class{constructor(e){this._value=e,this._currentBytePos=e.length-1,this._currentBitPos=7}availableBits(){return this._currentBitPos+1+this._currentBytePos*8}totalBits(){return this._value.length*8}take(e){let t=e,n=0;for(;t>0&&this._haveBits();){const i=this._value[this._currentBytePos],o=this._currentBitPos+1,a=Math.min(o,t),c=byteBitsToInt$1(i,o-a,a);n=(n<<a)+c,t-=a,this._currentBitPos-=a,this._currentBitPos<0&&(this._currentBitPos=7,this._currentBytePos--)}return n}untake(e){for(this._currentBitPos+=e;this._currentBitPos>7;)this._currentBitPos-=8,this._currentBytePos+=1}_haveBits(){return this._currentBytePos>=0}};function byteBitsToInt$1(r,e,t){const n=maskFor$1(e,t);return(r&n)>>>e}function maskFor$1(r,e){return START_MASKS$1[r]&STOP_MASKS$1[Math.min(e+r-1,7)]}function wrapHash$1(r){function e(t){return t instanceof InfiniteHash$1?t:new InfiniteHash$1(t,r)}return e}let InfiniteHash$1=class{constructor(e,t){if(!(e instanceof Uint8Array))throw new Error("can only hash Uint8Arrays");this._value=e,this._hashFn=t,this._depth=-1,this._availableBits=0,this._currentBufferIndex=0,this._buffers=[]}async take(e){let t=e;for(;this._availableBits<t;)await this._produceMoreBits();let n=0;for(;t>0;){const i=this._buffers[this._currentBufferIndex],o=Math.min(i.availableBits(),t),a=i.take(o);n=(n<<o)+a,t-=o,this._availableBits-=o,i.availableBits()===0&&this._currentBufferIndex++}return n}untake(e){let t=e;for(;t>0;){const n=this._buffers[this._currentBufferIndex],i=Math.min(n.totalBits()-n.availableBits(),t);n.untake(i),t-=i,this._availableBits+=i,this._currentBufferIndex>0&&n.totalBits()===n.availableBits()&&(this._depth--,this._currentBufferIndex--)}}async _produceMoreBits(){this._depth++;const e=this._depth>0?concat$6([this._value,Uint8Array.from([this._depth])]):this._value,t=await this._hashFn(e),n=new ConsumableBuffer$1(t);this._buffers.push(n),this._availableBits+=n.availableBits()}};function createHAMT(r){if(r==null||r.hashFn==null)throw new Error("please define an options.hashFn");const e={bits:r.bits??8,hash:wrapHash$1(r.hashFn)};return new Bucket(e)}async function hamtHashFn$1(r){return(await murmur3128.encode(r)).slice(0,8).reverse()}const HAMT_HASH_CODE=BigInt(34),DEFAULT_FANOUT_BITS=8;let DirSharded$1=class extends Dir$1{constructor(t,n){super(t,n);_(this,"_bucket");this._bucket=createHAMT({hashFn:hamtHashFn$1,bits:n.shardFanoutBits??DEFAULT_FANOUT_BITS})}async put(t,n){this.cid=void 0,this.size=void 0,this.nodeSize=void 0,await this._bucket.put(t,n)}async get(t){return this._bucket.get(t)}childCount(){return this._bucket.leafCount()}directChildrenCount(){return this._bucket.childrenCount()}onlyChild(){return this._bucket.onlyChild()}async*eachChildSeries(){for await(const{key:t,value:n}of this._bucket.eachLeafSeries())yield{key:t,child:n}}estimateNodeSize(){return this.nodeSize!==void 0?this.nodeSize:(this.nodeSize=calculateSize$1(this._bucket,this,this.options),this.nodeSize)}async*flush(t){for await(const n of flush$1(this._bucket,t,this,this.options))yield{...n,path:this.path}}};async function*flush$1(r,e,t,n){const i=r._children,o=(r.tableSize()-1).toString(16).length,a=[];let c=0n;for(let E=0;E<i.length;E++){const v=i.get(E);if(v==null)continue;const T=E.toString(16).toUpperCase().padStart(o,"0");if(v instanceof Bucket){let I;for await(const A of flush$1(v,e,null,n))I=A;if(I==null)throw new Error("Could not flush sharded directory, no subshard found");a.push({Name:T,Tsize:Number(I.size),Hash:I.cid}),c+=I.size}else if(isDir$1(v.value)){const I=v.value;let A;for await(const x of I.flush(e))A=x,yield A;if(A==null)throw new Error("Did not flush dir");const P=T+v.key;a.push({Name:P,Tsize:Number(A.size),Hash:A.cid}),c+=A.size}else{const I=v.value;if(I.cid==null)continue;const A=T+v.key,P=I.size;a.push({Name:A,Tsize:Number(P),Hash:I.cid}),c+=BigInt(P??0)}}const l=Uint8Array.from(i.bitField().reverse()),u=new UnixFS$2({type:"hamt-sharded-directory",data:l,fanout:BigInt(r.tableSize()),hashType:HAMT_HASH_CODE,mtime:t?.mtime,mode:t?.mode}),f={Data:u.marshal(),Links:a},g=encode$b(prepare(f)),$=await persist$1(g,e,n),S=BigInt(g.byteLength)+c;yield{cid:$,unixfs:u,size:S}}function isDir$1(r){return typeof r.flush=="function"}function calculateSize$1(r,e,t){const n=r._children,i=(r.tableSize()-1).toString(16).length,o=[];for(let u=0;u<n.length;u++){const f=n.get(u);if(f==null)continue;const g=u.toString(16).toUpperCase().padStart(i,"0");if(f instanceof Bucket){const $=calculateSize$1(f,null,t);o.push({Name:g,Tsize:Number($),Hash:t.cidVersion===0?CID_V0$1:CID_V1$1})}else if(typeof f.value.flush=="function"){const S=f.value.nodeSize();o.push({Name:g+f.key,Tsize:Number(S),Hash:t.cidVersion===0?CID_V0$1:CID_V1$1})}else{const $=f.value;if($.cid==null)continue;const S=g+f.key,E=$.size;o.push({Name:S,Tsize:Number(E),Hash:$.cid})}}const a=Uint8Array.from(n.bitField().reverse()),c=new UnixFS$2({type:"hamt-sharded-directory",data:a,fanout:BigInt(r.tableSize()),hashType:HAMT_HASH_CODE,mtime:e?.mtime,mode:e?.mode});return encode$b(prepare({Data:c.marshal(),Links:o})).length}async function flatToShard(r,e,t,n){let i=e;e instanceof DirFlat&&e.estimateNodeSize()>t&&(i=await convertToShard(e,n));const o=i.parent;if(o!=null){if(i!==e){if(r!=null&&(r.parent=i),i.parentKey==null)throw new Error("No parent key found");await o.put(i.parentKey,i)}return flatToShard(i,o,t,n)}return i}async function convertToShard(r,e){const t=new DirSharded$1({root:r.root,dir:!0,parent:r.parent,parentKey:r.parentKey,path:r.path,dirty:r.dirty,flat:!1,mtime:r.mtime,mode:r.mode},e);for await(const{key:n,child:i}of r.eachChildSeries())await t.put(n,i);return t}const toPathComponents$1=(r="")=>r.split(/(?<!\\)\//).filter(Boolean);async function addToTree(r,e,t){const n=toPathComponents$1(r.path??""),i=n.length-1;let o=e,a="";for(let c=0;c<n.length;c++){const l=n[c];a+=`${a!==""?"/":""}${l}`;const u=c===i;if(o.dirty=!0,o.cid=void 0,o.size=void 0,u)await o.put(l,r),e=await flatToShard(null,o,t.shardSplitThresholdBytes,t);else{let f=await o.get(l);(f==null||!(f instanceof Dir$1))&&(f=new DirFlat({root:!1,dir:!0,parent:o,parentKey:l,path:a,dirty:!0,flat:!0,mtime:f?.unixfs?.mtime,mode:f?.unixfs?.mode},t)),await o.put(l,f),o=f}}return e}async function*flushAndYield(r,e){if(!(r instanceof Dir$1)){r.unixfs?.isDirectory()===!0&&(yield r);return}yield*r.flush(e)}function defaultTreeBuilder(r){return async function*(t,n){let i=new DirFlat({root:!0,dir:!0,path:"",dirty:!0,flat:!0},r),o,a=!1;for await(const c of t){if(c==null)continue;const l=`${c.originalPath??""}`.split("/")[0];l!=null&&l!==""&&(o==null?(o=l,a=!0):o!==l&&(a=!1)),i=await addToTree(c,i,r),(c.unixfs==null||!c.unixfs.isDirectory())&&(yield c)}if(r.wrapWithDirectory||a&&i.childCount()>1)yield*flushAndYield(i,n);else for await(const c of i.eachChildSeries())c!=null&&(yield*flushAndYield(c.child,n))}}async function*importer(r,e,t={}){let n;Symbol.asyncIterator in r||Symbol.iterator in r?n=r:n=[r];const i=t.wrapWithDirectory??!1,o=t.shardSplitThresholdBytes??262144,a=t.shardFanoutBits??8,c=t.cidVersion??1,l=t.rawLeaves??!0,u=t.leafType??"file",f=t.fileImportConcurrency??50,g=t.blockWriteConcurrency??10,$=t.reduceSingleLeafToSelf??!0,S=t.chunker??fixedSize(),E=t.chunkValidator??defaultChunkValidator(),v=t.dagBuilder??defaultDagBuilder({chunker:S,chunkValidator:E,wrapWithDirectory:i,layout:t.layout??balanced(),bufferImporter:t.bufferImporter??defaultBufferImporter({cidVersion:c,rawLeaves:l,leafType:u,onProgress:t.onProgress}),blockWriteConcurrency:g,reduceSingleLeafToSelf:$,cidVersion:c,onProgress:t.onProgress}),T=t.treeBuilder??defaultTreeBuilder({wrapWithDirectory:i,shardSplitThresholdBytes:o,shardFanoutBits:a,cidVersion:c,onProgress:t.onProgress});for await(const I of T(parallelBatch(v(n,e),f),e))yield{cid:I.cid,path:I.path,unixfs:I.unixfs,size:I.size}}async function importFile(r,e,t={}){const n=await first(importer([r],e,t));if(n==null)throw errcode$1(new Error("Nothing imported"),"ERR_INVALID_PARAMS");return n}async function importDirectory(r,e,t={}){const n=await first(importer([r],e,t));if(n==null)throw errcode$1(new Error("Nothing imported"),"ERR_INVALID_PARAMS");return n}async function importBytes(r,e,t={}){return importFile({content:r},e,t)}async function importByteStream(r,e,t={}){return importFile({content:r},e,t)}var loader={};const ID_OFFSET=-8,SIZE_OFFSET=-4,ARRAYBUFFER_ID=0,STRING_ID=1,ARRAYBUFFERVIEW=1,ARRAY=2,VAL_ALIGN_OFFSET=5,VAL_SIGNED=1024,VAL_FLOAT=2048,VAL_MANAGED=8192,ARRAYBUFFERVIEW_BUFFER_OFFSET=0,ARRAYBUFFERVIEW_DATASTART_OFFSET=4,ARRAYBUFFERVIEW_DATALENGTH_OFFSET=8,ARRAYBUFFERVIEW_SIZE=12,ARRAY_LENGTH_OFFSET=12,ARRAY_SIZE=16,BIGINT=typeof BigUint64Array<"u",THIS=Symbol(),CHUNKSIZE=1024;function getStringImpl(r,e){const t=new Uint32Array(r),n=new Uint16Array(r);var i=t[e+SIZE_OFFSET>>>2]>>>1,o=e>>>1;if(i<=CHUNKSIZE)return String.fromCharCode.apply(String,n.subarray(o,o+i));const a=[];do{const c=n[o+CHUNKSIZE-1],l=c>=55296&&c<56320?CHUNKSIZE-1:CHUNKSIZE;a.push(String.fromCharCode.apply(String,n.subarray(o,o+=l))),i-=l}while(i>CHUNKSIZE);return a.join("")+String.fromCharCode.apply(String,n.subarray(o,o+i))}function preInstantiate(r){const e={};function t(i,o){return i?getStringImpl(i.buffer,o):"<yet unknown>"}const n=r.env=r.env||{};return n.abort=n.abort||function(o,a,c,l){const u=e.memory||n.memory;throw Error("abort: "+t(u,o)+" at "+t(u,a)+":"+c+":"+l)},n.trace=n.trace||function(o,a){const c=e.memory||n.memory;console.log("trace: "+t(c,o)+(a?" ":"")+Array.prototype.slice.call(arguments,2,2+a).join(", "))},r.Math=r.Math||Math,r.Date=r.Date||Date,e}function postInstantiate(r,e){const t=e.exports,n=t.memory,i=t.table,o=t.__alloc,a=t.__retain,c=t.__rtti_base||-1;function l(D){const C=new Uint32Array(n.buffer),k=C[c>>>2];if((D>>>=0)>=k)throw Error("invalid id: "+D);return C[(c+4>>>2)+D*2]}function u(D){const C=new Uint32Array(n.buffer),k=C[c>>>2];if((D>>>=0)>=k)throw Error("invalid id: "+D);return C[(c+4>>>2)+D*2+1]}function f(D){return 31-Math.clz32(D>>>VAL_ALIGN_OFFSET&31)}function g(D){const C=D.length,k=o(C<<1,STRING_ID),N=new Uint16Array(n.buffer);for(var L=0,M=k>>>1;L<C;++L)N[M+L]=D.charCodeAt(L);return k}r.__allocString=g;function $(D){const C=n.buffer;if(new Uint32Array(C)[D+ID_OFFSET>>>2]!==STRING_ID)throw Error("not a string: "+D);return getStringImpl(C,D)}r.__getString=$;function S(D,C,k){const N=n.buffer;if(k)switch(D){case 2:return new Float32Array(N);case 3:return new Float64Array(N)}else switch(D){case 0:return new(C?Int8Array:Uint8Array)(N);case 1:return new(C?Int16Array:Uint16Array)(N);case 2:return new(C?Int32Array:Uint32Array)(N);case 3:return new(C?BigInt64Array:BigUint64Array)(N)}throw Error("unsupported align: "+D)}function E(D,C){const k=l(D);if(!(k&(ARRAYBUFFERVIEW|ARRAY)))throw Error("not an array: "+D+" @ "+k);const N=f(k),L=C.length,M=o(L<<N,ARRAYBUFFER_ID),U=o(k&ARRAY?ARRAY_SIZE:ARRAYBUFFERVIEW_SIZE,D),z=new Uint32Array(n.buffer);z[U+ARRAYBUFFERVIEW_BUFFER_OFFSET>>>2]=a(M),z[U+ARRAYBUFFERVIEW_DATASTART_OFFSET>>>2]=M,z[U+ARRAYBUFFERVIEW_DATALENGTH_OFFSET>>>2]=L<<N,k&ARRAY&&(z[U+ARRAY_LENGTH_OFFSET>>>2]=L);const Y=S(N,k&VAL_SIGNED,k&VAL_FLOAT);if(k&VAL_MANAGED)for(let j=0;j<L;++j)Y[(M>>>N)+j]=a(C[j]);else Y.set(C,M>>>N);return U}r.__allocArray=E;function v(D){const C=new Uint32Array(n.buffer),k=C[D+ID_OFFSET>>>2],N=l(k);if(!(N&ARRAYBUFFERVIEW))throw Error("not an array: "+k);const L=f(N);var M=C[D+ARRAYBUFFERVIEW_DATASTART_OFFSET>>>2];const U=N&ARRAY?C[D+ARRAY_LENGTH_OFFSET>>>2]:C[M+SIZE_OFFSET>>>2]>>>L;return S(L,N&VAL_SIGNED,N&VAL_FLOAT).subarray(M>>>=L,M+U)}r.__getArrayView=v;function T(D){const C=v(D),k=C.length,N=new Array(k);for(let L=0;L<k;L++)N[L]=C[L];return N}r.__getArray=T;function I(D){const C=n.buffer,k=new Uint32Array(C)[D+SIZE_OFFSET>>>2];return C.slice(D,D+k)}r.__getArrayBuffer=I;function A(D,C,k){return new D(P(D,C,k))}function P(D,C,k){const N=n.buffer,L=new Uint32Array(N),M=L[k+ARRAYBUFFERVIEW_DATASTART_OFFSET>>>2];return new D(N,M,L[M+SIZE_OFFSET>>>2]>>>C)}r.__getInt8Array=A.bind(null,Int8Array,0),r.__getInt8ArrayView=P.bind(null,Int8Array,0),r.__getUint8Array=A.bind(null,Uint8Array,0),r.__getUint8ArrayView=P.bind(null,Uint8Array,0),r.__getUint8ClampedArray=A.bind(null,Uint8ClampedArray,0),r.__getUint8ClampedArrayView=P.bind(null,Uint8ClampedArray,0),r.__getInt16Array=A.bind(null,Int16Array,1),r.__getInt16ArrayView=P.bind(null,Int16Array,1),r.__getUint16Array=A.bind(null,Uint16Array,1),r.__getUint16ArrayView=P.bind(null,Uint16Array,1),r.__getInt32Array=A.bind(null,Int32Array,2),r.__getInt32ArrayView=P.bind(null,Int32Array,2),r.__getUint32Array=A.bind(null,Uint32Array,2),r.__getUint32ArrayView=P.bind(null,Uint32Array,2),BIGINT&&(r.__getInt64Array=A.bind(null,BigInt64Array,3),r.__getInt64ArrayView=P.bind(null,BigInt64Array,3),r.__getUint64Array=A.bind(null,BigUint64Array,3),r.__getUint64ArrayView=P.bind(null,BigUint64Array,3)),r.__getFloat32Array=A.bind(null,Float32Array,2),r.__getFloat32ArrayView=P.bind(null,Float32Array,2),r.__getFloat64Array=A.bind(null,Float64Array,3),r.__getFloat64ArrayView=P.bind(null,Float64Array,3);function x(D,C){const k=new Uint32Array(n.buffer);var N=k[D+ID_OFFSET>>>2];if(N<=k[c>>>2])do if(N==C)return!0;while(N=u(N));return!1}return r.__instanceof=x,r.memory=r.memory||n,r.table=r.table||i,demangle(t,r)}function isResponse(r){return typeof Response<"u"&&r instanceof Response}async function instantiate$1(r,e){return isResponse(r=await r)?instantiateStreaming(r,e):postInstantiate(preInstantiate(e||(e={})),await WebAssembly.instantiate(r instanceof WebAssembly.Module?r:await WebAssembly.compile(r),e))}loader.instantiate=instantiate$1;function instantiateSync(r,e){return postInstantiate(preInstantiate(e||(e={})),new WebAssembly.Instance(r instanceof WebAssembly.Module?r:new WebAssembly.Module(r),e))}loader.instantiateSync=instantiateSync;async function instantiateStreaming(r,e){return WebAssembly.instantiateStreaming?postInstantiate(preInstantiate(e||(e={})),(await WebAssembly.instantiateStreaming(r,e)).instance):instantiate$1(isResponse(r=await r)?r.arrayBuffer():r,e)}loader.instantiateStreaming=instantiateStreaming;function demangle(r,e){var t=e?Object.create(e):{},n=r.__argumentsLength?function(i){r.__argumentsLength.value=i}:r.__setArgumentsLength||r.__setargc||function(){};for(let i in r){if(!Object.prototype.hasOwnProperty.call(r,i))continue;const o=r[i];let a=i.split("."),c=t;for(;a.length>1;){let f=a.shift();Object.prototype.hasOwnProperty.call(c,f)||(c[f]={}),c=c[f]}let l=a[0],u=l.indexOf("#");if(u>=0){let f=l.substring(0,u),g=c[f];if(typeof g>"u"||!g.prototype){let $=function(...S){return $.wrap($.prototype.constructor(0,...S))};$.prototype={valueOf:function(){return this[THIS]}},$.wrap=function(S){return Object.create($.prototype,{[THIS]:{value:S,writable:!1}})},g&&Object.getOwnPropertyNames(g).forEach(S=>Object.defineProperty($,S,Object.getOwnPropertyDescriptor(g,S))),c[f]=$}if(l=l.substring(u+1),c=c[f].prototype,/^(get|set):/.test(l)){if(!Object.prototype.hasOwnProperty.call(c,l=l.substring(4))){let $=r[i.replace("set:","get:")],S=r[i.replace("get:","set:")];Object.defineProperty(c,l,{get:function(){return $(this[THIS])},set:function(E){S(this[THIS],E)},enumerable:!0})}}else l==="constructor"?(c[l]=(...$)=>(n($.length),o(...$))).original=o:(c[l]=function(...$){return n($.length),o(this[THIS],...$)}).original=o}else/^(get|set):/.test(l)?Object.prototype.hasOwnProperty.call(c,l=l.substring(4))||Object.defineProperty(c,l,{get:r[i.replace("set:","get:")],set:r[i.replace("get:","set:")],enumerable:!0}):typeof o=="function"&&o!==n?(c[l]=(...f)=>(n(f.length),o(...f))).original=o:c[l]=o}return t}loader.demangle=demangle;const{instantiate}=loader;loadWebAssembly.supported=typeof WebAssembly<"u";function loadWebAssembly(r={}){if(!loadWebAssembly.supported)return null;var e=new Uint8Array([0,97,115,109,1,0,0,0,1,78,14,96,2,127,126,0,96,1,127,1,126,96,2,127,127,0,96,1,127,1,127,96,1,127,0,96,2,127,127,1,127,96,3,127,127,127,1,127,96,0,0,96,3,127,127,127,0,96,0,1,127,96,4,127,127,127,127,0,96,5,127,127,127,127,127,1,127,96,1,126,1,127,96,2,126,126,1,126,2,13,1,3,101,110,118,5,97,98,111,114,116,0,10,3,54,53,2,2,8,9,3,5,2,8,6,5,3,4,2,6,9,12,13,2,5,11,3,2,3,2,3,2,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,6,7,7,4,4,5,3,1,0,1,6,47,9,127,1,65,0,11,127,1,65,0,11,127,0,65,3,11,127,0,65,4,11,127,1,65,0,11,127,1,65,0,11,127,1,65,0,11,127,0,65,240,2,11,127,0,65,6,11,7,240,5,41,6,109,101,109,111,114,121,2,0,7,95,95,97,108,108,111,99,0,10,8,95,95,114,101,116,97,105,110,0,11,9,95,95,114,101,108,101,97,115,101,0,12,9,95,95,99,111,108,108,101,99,116,0,51,11,95,95,114,116,116,105,95,98,97,115,101,3,7,13,73,110,116,51,50,65,114,114,97,121,95,73,68,3,2,13,85,105,110,116,56,65,114,114,97,121,95,73,68,3,3,6,100,101,103,114,101,101,0,16,3,109,111,100,0,17,5,82,97,98,105,110,3,8,16,82,97,98,105,110,35,103,101,116,58,119,105,110,100,111,119,0,21,16,82,97,98,105,110,35,115,101,116,58,119,105,110,100,111,119,0,22,21,82,97,98,105,110,35,103,101,116,58,119,105,110,100,111,119,95,115,105,122,101,0,23,21,82,97,98,105,110,35,115,101,116,58,119,105,110,100,111,119,95,115,105,122,101,0,24,14,82,97,98,105,110,35,103,101,116,58,119,112,111,115,0,25,14,82,97,98,105,110,35,115,101,116,58,119,112,111,115,0,26,15,82,97,98,105,110,35,103,101,116,58,99,111,117,110,116,0,27,15,82,97,98,105,110,35,115,101,116,58,99,111,117,110,116,0,28,13,82,97,98,105,110,35,103,101,116,58,112,111,115,0,29,13,82,97,98,105,110,35,115,101,116,58,112,111,115,0,30,15,82,97,98,105,110,35,103,101,116,58,115,116,97,114,116,0,31,15,82,97,98,105,110,35,115,101,116,58,115,116,97,114,116,0,32,16,82,97,98,105,110,35,103,101,116,58,100,105,103,101,115,116,0,33,16,82,97,98,105,110,35,115,101,116,58,100,105,103,101,115,116,0,34,21,82,97,98,105,110,35,103,101,116,58,99,104,117,110,107,95,115,116,97,114,116,0,35,21,82,97,98,105,110,35,115,101,116,58,99,104,117,110,107,95,115,116,97,114,116,0,36,22,82,97,98,105,110,35,103,101,116,58,99,104,117,110,107,95,108,101,110,103,116,104,0,37,22,82,97,98,105,110,35,115,101,116,58,99,104,117,110,107,95,108,101,110,103,116,104,0,38,31,82,97,98,105,110,35,103,101,116,58,99,104,117,110,107,95,99,117,116,95,102,105,110,103,101,114,112,114,105,110,116,0,39,31,82,97,98,105,110,35,115,101,116,58,99,104,117,110,107,95,99,117,116,95,102,105,110,103,101,114,112,114,105,110,116,0,40,20,82,97,98,105,110,35,103,101,116,58,112,111,108,121,110,111,109,105,97,108,0,41,20,82,97,98,105,110,35,115,101,116,58,112,111,108,121,110,111,109,105,97,108,0,42,17,82,97,98,105,110,35,103,101,116,58,109,105,110,115,105,122,101,0,43,17,82,97,98,105,110,35,115,101,116,58,109,105,110,115,105,122,101,0,44,17,82,97,98,105,110,35,103,101,116,58,109,97,120,115,105,122,101,0,45,17,82,97,98,105,110,35,115,101,116,58,109,97,120,115,105,122,101,0,46,14,82,97,98,105,110,35,103,101,116,58,109,97,115,107,0,47,14,82,97,98,105,110,35,115,101,116,58,109,97,115,107,0,48,17,82,97,98,105,110,35,99,111,110,115,116,114,117,99,116,111,114,0,20,17,82,97,98,105,110,35,102,105,110,103,101,114,112,114,105,110,116,0,49,8,1,50,10,165,31,53,199,1,1,4,127,32,1,40,2,0,65,124,113,34,2,65,128,2,73,4,127,32,2,65,4,118,33,4,65,0,5,32,2,65,31,32,2,103,107,34,3,65,4,107,118,65,16,115,33,4,32,3,65,7,107,11,33,3,32,1,40,2,20,33,2,32,1,40,2,16,34,5,4,64,32,5,32,2,54,2,20,11,32,2,4,64,32,2,32,5,54,2,16,11,32,1,32,0,32,4,32,3,65,4,116,106,65,2,116,106,40,2,96,70,4,64,32,0,32,4,32,3,65,4,116,106,65,2,116,106,32,2,54,2,96,32,2,69,4,64,32,0,32,3,65,2,116,106,32,0,32,3,65,2,116,106,40,2,4,65,1,32,4,116,65,127,115,113,34,1,54,2,4,32,1,69,4,64,32,0,32,0,40,2,0,65,1,32,3,116,65,127,115,113,54,2,0,11,11,11,11,226,2,1,6,127,32,1,40,2,0,33,3,32,1,65,16,106,32,1,40,2,0,65,124,113,106,34,4,40,2,0,34,5,65,1,113,4,64,32,3,65,124,113,65,16,106,32,5,65,124,113,106,34,2,65,240,255,255,255,3,73,4,64,32,0,32,4,16,1,32,1,32,2,32,3,65,3,113,114,34,3,54,2,0,32,1,65,16,106,32,1,40,2,0,65,124,113,106,34,4,40,2,0,33,5,11,11,32,3,65,2,113,4,64,32,1,65,4,107,40,2,0,34,2,40,2,0,34,6,65,124,113,65,16,106,32,3,65,124,113,106,34,7,65,240,255,255,255,3,73,4,64,32,0,32,2,16,1,32,2,32,7,32,6,65,3,113,114,34,3,54,2,0,32,2,33,1,11,11,32,4,32,5,65,2,114,54,2,0,32,4,65,4,107,32,1,54,2,0,32,0,32,3,65,124,113,34,2,65,128,2,73,4,127,32,2,65,4,118,33,4,65,0,5,32,2,65,31,32,2,103,107,34,2,65,4,107,118,65,16,115,33,4,32,2,65,7,107,11,34,3,65,4,116,32,4,106,65,2,116,106,40,2,96,33,2,32,1,65,0,54,2,16,32,1,32,2,54,2,20,32,2,4,64,32,2,32,1,54,2,16,11,32,0,32,4,32,3,65,4,116,106,65,2,116,106,32,1,54,2,96,32,0,32,0,40,2,0,65,1,32,3,116,114,54,2,0,32,0,32,3,65,2,116,106,32,0,32,3,65,2,116,106,40,2,4,65,1,32,4,116,114,54,2,4,11,119,1,1,127,32,2,2,127,32,0,40,2,160,12,34,2,4,64,32,2,32,1,65,16,107,70,4,64,32,2,40,2,0,33,3,32,1,65,16,107,33,1,11,11,32,1,11,107,34,2,65,48,73,4,64,15,11,32,1,32,3,65,2,113,32,2,65,32,107,65,1,114,114,54,2,0,32,1,65,0,54,2,16,32,1,65,0,54,2,20,32,1,32,2,106,65,16,107,34,2,65,2,54,2,0,32,0,32,2,54,2,160,12,32,0,32,1,16,2,11,155,1,1,3,127,35,0,34,0,69,4,64,65,1,63,0,34,0,74,4,127,65,1,32,0,107,64,0,65,0,72,5,65,0,11,4,64,0,11,65,176,3,34,0,65,0,54,2,0,65,208,15,65,0,54,2,0,3,64,32,1,65,23,73,4,64,32,1,65,2,116,65,176,3,106,65,0,54,2,4,65,0,33,2,3,64,32,2,65,16,73,4,64,32,1,65,4,116,32,2,106,65,2,116,65,176,3,106,65,0,54,2,96,32,2,65,1,106,33,2,12,1,11,11,32,1,65,1,106,33,1,12,1,11,11,65,176,3,65,224,15,63,0,65,16,116,16,3,65,176,3,36,0,11,32,0,11,45,0,32,0,65,240,255,255,255,3,79,4,64,65,32,65,224,0,65,201,3,65,29,16,0,0,11,32,0,65,15,106,65,112,113,34,0,65,16,32,0,65,16,75,27,11,169,1,1,1,127,32,0,32,1,65,128,2,73,4,127,32,1,65,4,118,33,1,65,0,5,32,1,65,248,255,255,255,1,73,4,64,32,1,65,1,65,27,32,1,103,107,116,106,65,1,107,33,1,11,32,1,65,31,32,1,103,107,34,2,65,4,107,118,65,16,115,33,1,32,2,65,7,107,11,34,2,65,2,116,106,40,2,4,65,127,32,1,116,113,34,1,4,127,32,0,32,1,104,32,2,65,4,116,106,65,2,116,106,40,2,96,5,32,0,40,2,0,65,127,32,2,65,1,106,116,113,34,1,4,127,32,0,32,0,32,1,104,34,0,65,2,116,106,40,2,4,104,32,0,65,4,116,106,65,2,116,106,40,2,96,5,65,0,11,11,11,111,1,1,127,63,0,34,2,32,1,65,248,255,255,255,1,73,4,127,32,1,65,1,65,27,32,1,103,107,116,65,1,107,106,5,32,1,11,65,16,32,0,40,2,160,12,32,2,65,16,116,65,16,107,71,116,106,65,255,255,3,106,65,128,128,124,113,65,16,118,34,1,32,2,32,1,74,27,64,0,65,0,72,4,64,32,1,64,0,65,0,72,4,64,0,11,11,32,0,32,2,65,16,116,63,0,65,16,116,16,3,11,113,1,2,127,32,1,40,2,0,34,3,65,124,113,32,2,107,34,4,65,32,79,4,64,32,1,32,2,32,3,65,2,113,114,54,2,0,32,2,32,1,65,16,106,106,34,1,32,4,65,16,107,65,1,114,54,2,0,32,0,32,1,16,2,5,32,1,32,3,65,126,113,54,2,0,32,1,65,16,106,32,1,40,2,0,65,124,113,106,32,1,65,16,106,32,1,40,2,0,65,124,113,106,40,2,0,65,125,113,54,2,0,11,11,91,1,2,127,32,0,32,1,16,5,34,4,16,6,34,3,69,4,64,65,1,36,1,65,0,36,1,32,0,32,4,16,6,34,3,69,4,64,32,0,32,4,16,7,32,0,32,4,16,6,33,3,11,11,32,3,65,0,54,2,4,32,3,32,2,54,2,8,32,3,32,1,54,2,12,32,0,32,3,16,1,32,0,32,3,32,4,16,8,32,3,11,13,0,16,4,32,0,32,1,16,9,65,16,106,11,33,1,1,127,32,0,65,172,3,75,4,64,32,0,65,16,107,34,1,32,1,40,2,4,65,1,106,54,2,4,11,32,0,11,18,0,32,0,65,172,3,75,4,64,32,0,65,16,107,16,52,11,11,140,3,1,1,127,2,64,32,1,69,13,0,32,0,65,0,58,0,0,32,0,32,1,106,65,1,107,65,0,58,0,0,32,1,65,2,77,13,0,32,0,65,1,106,65,0,58,0,0,32,0,65,2,106,65,0,58,0,0,32,0,32,1,106,34,2,65,2,107,65,0,58,0,0,32,2,65,3,107,65,0,58,0,0,32,1,65,6,77,13,0,32,0,65,3,106,65,0,58,0,0,32,0,32,1,106,65,4,107,65,0,58,0,0,32,1,65,8,77,13,0,32,1,65,0,32,0,107,65,3,113,34,1,107,33,2,32,0,32,1,106,34,0,65,0,54,2,0,32,0,32,2,65,124,113,34,1,106,65,4,107,65,0,54,2,0,32,1,65,8,77,13,0,32,0,65,4,106,65,0,54,2,0,32,0,65,8,106,65,0,54,2,0,32,0,32,1,106,34,2,65,12,107,65,0,54,2,0,32,2,65,8,107,65,0,54,2,0,32,1,65,24,77,13,0,32,0,65,12,106,65,0,54,2,0,32,0,65,16,106,65,0,54,2,0,32,0,65,20,106,65,0,54,2,0,32,0,65,24,106,65,0,54,2,0,32,0,32,1,106,34,2,65,28,107,65,0,54,2,0,32,2,65,24,107,65,0,54,2,0,32,2,65,20,107,65,0,54,2,0,32,2,65,16,107,65,0,54,2,0,32,0,32,0,65,4,113,65,24,106,34,2,106,33,0,32,1,32,2,107,33,1,3,64,32,1,65,32,79,4,64,32,0,66,0,55,3,0,32,0,65,8,106,66,0,55,3,0,32,0,65,16,106,66,0,55,3,0,32,0,65,24,106,66,0,55,3,0,32,1,65,32,107,33,1,32,0,65,32,106,33,0,12,1,11,11,11,11,178,1,1,3,127,32,1,65,240,255,255,255,3,32,2,118,75,4,64,65,144,1,65,192,1,65,23,65,56,16,0,0,11,32,1,32,2,116,34,3,65,0,16,10,34,2,32,3,16,13,32,0,69,4,64,65,12,65,2,16,10,34,0,65,172,3,75,4,64,32,0,65,16,107,34,1,32,1,40,2,4,65,1,106,54,2,4,11,11,32,0,65,0,54,2,0,32,0,65,0,54,2,4,32,0,65,0,54,2,8,32,2,34,1,32,0,40,2,0,34,4,71,4,64,32,1,65,172,3,75,4,64,32,1,65,16,107,34,5,32,5,40,2,4,65,1,106,54,2,4,11,32,4,16,12,11,32,0,32,1,54,2,0,32,0,32,2,54,2,4,32,0,32,3,54,2,8,32,0,11,46,1,2,127,65,12,65,5,16,10,34,0,65,172,3,75,4,64,32,0,65,16,107,34,1,32,1,40,2,4,65,1,106,54,2,4,11,32,0,65,128,2,65,3,16,14,11,9,0,65,63,32,0,121,167,107,11,49,1,2,127,65,63,32,1,121,167,107,33,2,3,64,65,63,32,0,121,167,107,32,2,107,34,3,65,0,78,4,64,32,0,32,1,32,3,172,134,133,33,0,12,1,11,11,32,0,11,40,0,32,1,32,0,40,2,8,79,4,64,65,128,2,65,192,2,65,163,1,65,44,16,0,0,11,32,1,32,0,40,2,4,106,65,0,58,0,0,11,38,0,32,1,32,0,40,2,8,79,4,64,65,128,2,65,192,2,65,152,1,65,44,16,0,0,11,32,1,32,0,40,2,4,106,45,0,0,11,254,5,2,1,127,4,126,32,0,69,4,64,65,232,0,65,6,16,10,34,0,65,172,3,75,4,64,32,0,65,16,107,34,5,32,5,40,2,4,65,1,106,54,2,4,11,11,32,0,65,0,54,2,0,32,0,65,0,54,2,4,32,0,65,0,54,2,8,32,0,66,0,55,3,16,32,0,66,0,55,3,24,32,0,66,0,55,3,32,32,0,66,0,55,3,40,32,0,66,0,55,3,48,32,0,66,0,55,3,56,32,0,66,0,55,3,64,32,0,66,0,55,3,72,32,0,66,0,55,3,80,32,0,66,0,55,3,88,32,0,66,0,55,3,96,32,0,32,2,173,55,3,80,32,0,32,3,173,55,3,88,65,12,65,4,16,10,34,2,65,172,3,75,4,64,32,2,65,16,107,34,3,32,3,40,2,4,65,1,106,54,2,4,11,32,2,32,4,65,0,16,14,33,2,32,0,40,2,0,16,12,32,0,32,2,54,2,0,32,0,32,4,54,2,4,32,0,66,1,32,1,173,134,66,1,125,55,3,96,32,0,66,243,130,183,218,216,230,232,30,55,3,72,35,4,69,4,64,65,0,33,2,3,64,32,2,65,128,2,72,4,64,32,2,65,255,1,113,173,33,6,32,0,41,3,72,34,7,33,8,65,63,32,7,121,167,107,33,1,3,64,65,63,32,6,121,167,107,32,1,107,34,3,65,0,78,4,64,32,6,32,8,32,3,172,134,133,33,6,12,1,11,11,65,0,33,4,3,64,32,4,32,0,40,2,4,65,1,107,72,4,64,32,6,66,8,134,33,6,32,0,41,3,72,34,7,33,8,65,63,32,7,121,167,107,33,1,3,64,65,63,32,6,121,167,107,32,1,107,34,3,65,0,78,4,64,32,6,32,8,32,3,172,134,133,33,6,12,1,11,11,32,4,65,1,106,33,4,12,1,11,11,35,6,40,2,4,32,2,65,3,116,106,32,6,55,3,0,32,2,65,1,106,33,2,12,1,11,11,65,63,32,0,41,3,72,121,167,107,172,33,7,65,0,33,2,3,64,32,2,65,128,2,72,4,64,35,5,33,1,32,2,172,32,7,134,34,8,33,6,65,63,32,0,41,3,72,34,9,121,167,107,33,3,3,64,65,63,32,6,121,167,107,32,3,107,34,4,65,0,78,4,64,32,6,32,9,32,4,172,134,133,33,6,12,1,11,11,32,1,40,2,4,32,2,65,3,116,106,32,6,32,8,132,55,3,0,32,2,65,1,106,33,2,12,1,11,11,65,1,36,4,11,32,0,66,0,55,3,24,32,0,66,0,55,3,32,65,0,33,2,3,64,32,2,32,0,40,2,4,72,4,64,32,0,40,2,0,32,2,16,18,32,2,65,1,106,33,2,12,1,11,11,32,0,66,0,55,3,40,32,0,65,0,54,2,8,32,0,66,0,55,3,16,32,0,66,0,55,3,40,32,0,40,2,0,32,0,40,2,8,16,19,33,1,32,0,40,2,8,32,0,40,2,0,40,2,4,106,65,1,58,0,0,32,0,32,0,41,3,40,35,6,40,2,4,32,1,65,3,116,106,41,3,0,133,55,3,40,32,0,32,0,40,2,8,65,1,106,32,0,40,2,4,111,54,2,8,32,0,35,5,40,2,4,32,0,41,3,40,34,6,66,45,136,167,65,3,116,106,41,3,0,32,6,66,8,134,66,1,132,133,55,3,40,32,0,11,38,1,1,127,32,0,40,2,0,34,0,65,172,3,75,4,64,32,0,65,16,107,34,1,32,1,40,2,4,65,1,106,54,2,4,11,32,0,11,55,1,2,127,32,1,32,0,40,2,0,34,2,71,4,64,32,1,65,172,3,75,4,64,32,1,65,16,107,34,3,32,3,40,2,4,65,1,106,54,2,4,11,32,2,16,12,11,32,0,32,1,54,2,0,11,7,0,32,0,40,2,4,11,9,0,32,0,32,1,54,2,4,11,7,0,32,0,40,2,8,11,9,0,32,0,32,1,54,2,8,11,7,0,32,0,41,3,16,11,9,0,32,0,32,1,55,3,16,11,7,0,32,0,41,3,24,11,9,0,32,0,32,1,55,3,24,11,7,0,32,0,41,3,32,11,9,0,32,0,32,1,55,3,32,11,7,0,32,0,41,3,40,11,9,0,32,0,32,1,55,3,40,11,7,0,32,0,41,3,48,11,9,0,32,0,32,1,55,3,48,11,7,0,32,0,41,3,56,11,9,0,32,0,32,1,55,3,56,11,7,0,32,0,41,3,64,11,9,0,32,0,32,1,55,3,64,11,7,0,32,0,41,3,72,11,9,0,32,0,32,1,55,3,72,11,7,0,32,0,41,3,80,11,9,0,32,0,32,1,55,3,80,11,7,0,32,0,41,3,88,11,9,0,32,0,32,1,55,3,88,11,7,0,32,0,41,3,96,11,9,0,32,0,32,1,55,3,96,11,172,4,2,5,127,1,126,32,2,65,172,3,75,4,64,32,2,65,16,107,34,4,32,4,40,2,4,65,1,106,54,2,4,11,32,2,33,4,65,0,33,2,32,1,40,2,8,33,5,32,1,40,2,4,33,6,3,64,2,127,65,0,33,3,3,64,32,3,32,5,72,4,64,32,3,32,6,106,45,0,0,33,1,32,0,40,2,0,32,0,40,2,8,16,19,33,7,32,0,40,2,8,32,0,40,2,0,40,2,4,106,32,1,58,0,0,32,0,32,0,41,3,40,35,6,40,2,4,32,7,65,3,116,106,41,3,0,133,55,3,40,32,0,32,0,40,2,8,65,1,106,32,0,40,2,4,111,54,2,8,32,0,35,5,40,2,4,32,0,41,3,40,34,8,66,45,136,167,65,3,116,106,41,3,0,32,1,173,32,8,66,8,134,132,133,55,3,40,32,0,32,0,41,3,16,66,1,124,55,3,16,32,0,32,0,41,3,24,66,1,124,55,3,24,32,0,41,3,16,32,0,41,3,80,90,4,127,32,0,41,3,40,32,0,41,3,96,131,80,5,65,0,11,4,127,65,1,5,32,0,41,3,16,32,0,41,3,88,90,11,4,64,32,0,32,0,41,3,32,55,3,48,32,0,32,0,41,3,16,55,3,56,32,0,32,0,41,3,40,55,3,64,65,0,33,1,3,64,32,1,32,0,40,2,4,72,4,64,32,0,40,2,0,32,1,16,18,32,1,65,1,106,33,1,12,1,11,11,32,0,66,0,55,3,40,32,0,65,0,54,2,8,32,0,66,0,55,3,16,32,0,66,0,55,3,40,32,0,40,2,0,32,0,40,2,8,16,19,33,1,32,0,40,2,8,32,0,40,2,0,40,2,4,106,65,1,58,0,0,32,0,32,0,41,3,40,35,6,40,2,4,32,1,65,3,116,106,41,3,0,133,55,3,40,32,0,32,0,40,2,8,65,1,106,32,0,40,2,4,111,54,2,8,32,0,35,5,40,2,4,32,0,41,3,40,34,8,66,45,136,167,65,3,116,106,41,3,0,32,8,66,8,134,66,1,132,133,55,3,40,32,3,65,1,106,12,3,11,32,3,65,1,106,33,3,12,1,11,11,65,127,11,34,1,65,0,78,4,64,32,5,32,1,107,33,5,32,1,32,6,106,33,6,32,2,34,1,65,1,106,33,2,32,4,40,2,4,32,1,65,2,116,106,32,0,41,3,56,62,2,0,12,1,11,11,32,4,11,10,0,16,15,36,5,16,15,36,6,11,3,0,1,11,73,1,2,127,32,0,40,2,4,34,1,65,255,255,255,255,0,113,34,2,65,1,70,4,64,32,0,65,16,106,16,53,32,0,32,0,40,2,0,65,1,114,54,2,0,35,0,32,0,16,2,5,32,0,32,2,65,1,107,32,1,65,128,128,128,128,127,113,114,54,2,4,11,11,58,0,2,64,2,64,2,64,32,0,65,8,107,40,2,0,14,7,0,0,1,1,1,1,1,2,11,15,11,32,0,40,2,0,34,0,4,64,32,0,65,172,3,79,4,64,32,0,65,16,107,16,52,11,11,15,11,0,11,11,137,3,7,0,65,16,11,55,40,0,0,0,1,0,0,0,1,0,0,0,40,0,0,0,97,0,108,0,108,0,111,0,99,0,97,0,116,0,105,0,111,0,110,0,32,0,116,0,111,0,111,0,32,0,108,0,97,0,114,0,103,0,101,0,65,208,0,11,45,30,0,0,0,1,0,0,0,1,0,0,0,30,0,0,0,126,0,108,0,105,0,98,0,47,0,114,0,116,0,47,0,116,0,108,0,115,0,102,0,46,0,116,0,115,0,65,128,1,11,43,28,0,0,0,1,0,0,0,1,0,0,0,28,0,0,0,73,0,110,0,118,0,97,0,108,0,105,0,100,0,32,0,108,0,101,0,110,0,103,0,116,0,104,0,65,176,1,11,53,38,0,0,0,1,0,0,0,1,0,0,0,38,0,0,0,126,0,108,0,105,0,98,0,47,0,97,0,114,0,114,0,97,0,121,0,98,0,117,0,102,0,102,0,101,0,114,0,46,0,116,0,115,0,65,240,1,11,51,36,0,0,0,1,0,0,0,1,0,0,0,36,0,0,0,73,0,110,0,100,0,101,0,120,0,32,0,111,0,117,0,116,0,32,0,111,0,102,0,32,0,114,0,97,0,110,0,103,0,101,0,65,176,2,11,51,36,0,0,0,1,0,0,0,1,0,0,0,36,0,0,0,126,0,108,0,105,0,98,0,47,0,116,0,121,0,112,0,101,0,100,0,97,0,114,0,114,0,97,0,121,0,46,0,116,0,115,0,65,240,2,11,53,7,0,0,0,16,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,145,4,0,0,2,0,0,0,49,0,0,0,2,0,0,0,17,1,0,0,2,0,0,0,16,0,34,16,115,111,117,114,99,101,77,97,112,112,105,110,103,85,82,76,16,46,47,114,97,98,105,110,46,119,97,115,109,46,109,97,112]);return instantiate(new Response(new Blob([e],{type:"application/wasm"})),r)}const defaultImporterSettings={cidVersion:1,rawLeaves:!0,layout:balanced({maxChildrenPerNode:1024}),chunker:fixedSize({chunkSize:1048576})};async function*addAll(r,e,t={}){yield*importer(r,e,{...defaultImporterSettings,...t})}async function addBytes(r,e,t={}){const{cid:n}=await importBytes(r,e,{...defaultImporterSettings,...t});return n}async function addByteStream(r,e,t={}){const{cid:n}=await importByteStream(r,e,{...defaultImporterSettings,...t});return n}async function addFile(r,e,t={}){const{cid:n}=await importFile(r,e,{...defaultImporterSettings,...t});return n}async function addDirectory(r,e,t={}){const{cid:n}=await importDirectory({...r,path:r.path??"-"},e,{...defaultImporterSettings,...t});return n}function assign$2(r,e){for(const t in e)Object.defineProperty(r,t,{value:e[t],enumerable:!0,configurable:!0});return r}function createError$2(r,e,t){if(!r||typeof r=="string")throw new TypeError("Please pass an Error to err-code");t||(t={}),typeof e=="object"&&(t=e,e=""),e&&(t.code=e);try{return assign$2(r,t)}catch{t.message=r.message,t.stack=r.stack;const i=function(){};return i.prototype=Object.create(Object.getPrototypeOf(r)),assign$2(new i,t)}}var errCode$3=createError$2;const errCode$4=getDefaultExportFromCjs(errCode$3);function isAsyncIterable(r){return r[Symbol.asyncIterator]!=null}function last(r){if(isAsyncIterable(r))return(async()=>{let t;for await(const n of r)t=n;return t})();let e;for(const t of r)e=t;return e}const resolve$4=async(r,e,t,n,i,o,a,c)=>{const l=await a.get(r,c),u=decode$e(l);let f=u,g=t;for(;n.length>0;){const $=n[0];if($ in f){n.shift(),g=`${g}/${$}`;const S=CID$3.asCID(f[$]);if(S!=null)return{entry:{type:"object",name:e,path:t,cid:r,node:l,depth:o,size:BigInt(l.length),content:async function*(){yield u}},next:{cid:S,name:$,path:g,toResolve:n}};f=f[$]}else throw errCode$4(new Error(`No property named ${$} found in cbor node ${r}`),"ERR_NO_PROP")}return{entry:{type:"object",name:e,path:t,cid:r,node:l,depth:o,size:BigInt(l.length),content:async function*(){yield u}}}};function extractDataFromBlock(r,e,t,n){const i=BigInt(r.length),o=BigInt(e+i);return t>=o||n<e?new Uint8Array(0):(n>=e&&n<o&&(r=r.subarray(0,Number(n-e))),t>=e&&t<o&&(r=r.subarray(Number(t-e))),r)}const validateOffsetAndLength=(r,e=0,t=r)=>{const n=BigInt(r),i=BigInt(e??0);let o=BigInt(t);if(o!==n&&(o=i+o),o>n&&(o=n),i<0n)throw errCode$4(new Error("Offset must be greater than or equal to 0"),"ERR_INVALID_PARAMS");if(i>n)throw errCode$4(new Error("Offset must be less than the file size"),"ERR_INVALID_PARAMS");if(o<0n)throw errCode$4(new Error("Length must be greater than or equal to 0"),"ERR_INVALID_PARAMS");if(o>n)throw errCode$4(new Error("Length must be less than the file size"),"ERR_INVALID_PARAMS");return{start:i,end:o}},rawContent$1=r=>{async function*e(t={}){const{start:n,end:i}=validateOffsetAndLength(r.length,t.offset,t.length),o=extractDataFromBlock(r,0n,n,i);t.onProgress?.(new CustomProgressEvent("unixfs:exporter:progress:identity",{bytesRead:BigInt(o.byteLength),totalBytes:i-n,fileSize:BigInt(r.byteLength)})),yield o}return e},resolve$3=async(r,e,t,n,i,o,a,c)=>{if(n.length>0)throw errCode$4(new Error(`No link named ${t} found in raw node ${r}`),"ERR_NOT_FOUND");const l=decode$n(r.multihash.bytes);return{entry:{type:"identity",name:e,path:t,cid:r,content:rawContent$1(l.digest),depth:o,size:BigInt(l.digest.length),node:l.digest}}},rawContent=r=>{async function*e(t={}){const{start:n,end:i}=validateOffsetAndLength(r.length,t.offset,t.length),o=extractDataFromBlock(r,0n,n,i);t.onProgress?.(new CustomProgressEvent("unixfs:exporter:progress:raw",{bytesRead:BigInt(o.byteLength),totalBytes:i-n,fileSize:BigInt(r.byteLength)})),yield o}return e},resolve$2=async(r,e,t,n,i,o,a,c)=>{if(n.length>0)throw errCode$4(new Error(`No link named ${t} found in raw node ${r}`),"ERR_NOT_FOUND");const l=await a.get(r,c);return{entry:{type:"raw",name:e,path:t,cid:r,content:rawContent(l),depth:o,size:BigInt(l.length),node:l}}};var Data$1;(function(r){(function(n){n.Raw="Raw",n.Directory="Directory",n.File="File",n.Metadata="Metadata",n.Symlink="Symlink",n.HAMTShard="HAMTShard"})(r.DataType||(r.DataType={}));let e;(function(n){n[n.Raw=0]="Raw",n[n.Directory=1]="Directory",n[n.File=2]="File",n[n.Metadata=3]="Metadata",n[n.Symlink=4]="Symlink",n[n.HAMTShard=5]="HAMTShard"})(e||(e={})),function(n){n.codec=()=>enumeration(e)}(r.DataType||(r.DataType={}));let t;r.codec=()=>(t==null&&(t=message((n,i,o={})=>{if(o.lengthDelimited!==!1&&i.fork(),n.Type!=null&&(i.uint32(8),r.DataType.codec().encode(n.Type,i)),n.Data!=null&&(i.uint32(18),i.bytes(n.Data)),n.filesize!=null&&(i.uint32(24),i.uint64(n.filesize)),n.blocksizes!=null)for(const a of n.blocksizes)i.uint32(32),i.uint64(a);n.hashType!=null&&(i.uint32(40),i.uint64(n.hashType)),n.fanout!=null&&(i.uint32(48),i.uint64(n.fanout)),n.mode!=null&&(i.uint32(56),i.uint32(n.mode)),n.mtime!=null&&(i.uint32(66),UnixTime$1.codec().encode(n.mtime,i)),o.lengthDelimited!==!1&&i.ldelim()},(n,i)=>{const o={blocksizes:[]},a=i==null?n.len:n.pos+i;for(;n.pos<a;){const c=n.uint32();switch(c>>>3){case 1:o.Type=r.DataType.codec().decode(n);break;case 2:o.Data=n.bytes();break;case 3:o.filesize=n.uint64();break;case 4:o.blocksizes.push(n.uint64());break;case 5:o.hashType=n.uint64();break;case 6:o.fanout=n.uint64();break;case 7:o.mode=n.uint32();break;case 8:o.mtime=UnixTime$1.codec().decode(n,n.uint32());break;default:n.skipType(c&7);break}}return o})),t),r.encode=n=>encodeMessage(n,r.codec()),r.decode=n=>decodeMessage$1(n,r.codec())})(Data$1||(Data$1={}));var UnixTime$1;(function(r){let e;r.codec=()=>(e==null&&(e=message((t,n,i={})=>{i.lengthDelimited!==!1&&n.fork(),t.Seconds!=null&&(n.uint32(8),n.int64(t.Seconds)),t.FractionalNanoseconds!=null&&(n.uint32(21),n.fixed32(t.FractionalNanoseconds)),i.lengthDelimited!==!1&&n.ldelim()},(t,n)=>{const i={},o=n==null?t.len:t.pos+n;for(;t.pos<o;){const a=t.uint32();switch(a>>>3){case 1:i.Seconds=t.int64();break;case 2:i.FractionalNanoseconds=t.fixed32();break;default:t.skipType(a&7);break}}return i})),e),r.encode=t=>encodeMessage(t,r.codec()),r.decode=t=>decodeMessage$1(t,r.codec())})(UnixTime$1||(UnixTime$1={}));var Metadata$1;(function(r){let e;r.codec=()=>(e==null&&(e=message((t,n,i={})=>{i.lengthDelimited!==!1&&n.fork(),t.MimeType!=null&&(n.uint32(10),n.string(t.MimeType)),i.lengthDelimited!==!1&&n.ldelim()},(t,n)=>{const i={},o=n==null?t.len:t.pos+n;for(;t.pos<o;){const a=t.uint32();switch(a>>>3){case 1:i.MimeType=t.string();break;default:t.skipType(a&7);break}}return i})),e),r.encode=t=>encodeMessage(t,r.codec()),r.decode=t=>decodeMessage$1(t,r.codec())})(Metadata$1||(Metadata$1={}));const types$1={Raw:"raw",Directory:"directory",File:"file",Metadata:"metadata",Symlink:"symlink",HAMTShard:"hamt-sharded-directory"},dirTypes$1=["directory","hamt-sharded-directory"],DEFAULT_FILE_MODE$1=parseInt("0644",8),DEFAULT_DIRECTORY_MODE$1=parseInt("0755",8);let UnixFS$1=class ur{constructor(e={type:"file"}){_(this,"type");_(this,"data");_(this,"blockSizes");_(this,"hashType");_(this,"fanout");_(this,"mtime");_(this,"_mode");_(this,"_originalMode");const{type:t,data:n,blockSizes:i,hashType:o,fanout:a,mtime:c,mode:l}=e;if(t!=null&&!Object.values(types$1).includes(t))throw errCode$4(new Error("Type: "+t+" is not valid"),"ERR_INVALID_TYPE");this.type=t??"file",this.data=n,this.hashType=o,this.fanout=a,this.blockSizes=i??[],this._originalMode=0,this.mode=l,this.mtime=c}static unmarshal(e){const t=Data$1.decode(e),n=new ur({type:types$1[t.Type!=null?t.Type.toString():"File"],data:t.Data,blockSizes:t.blocksizes,mode:t.mode,mtime:t.mtime!=null?{secs:t.mtime.Seconds??0n,nsecs:t.mtime.FractionalNanoseconds}:void 0,fanout:t.fanout});return n._originalMode=t.mode??0,n}set mode(e){e==null?this._mode=this.isDirectory()?DEFAULT_DIRECTORY_MODE$1:DEFAULT_FILE_MODE$1:this._mode=e&4095}get mode(){return this._mode}isDirectory(){return dirTypes$1.includes(this.type)}addBlockSize(e){this.blockSizes.push(e)}removeBlockSize(e){this.blockSizes.splice(e,1)}fileSize(){if(this.isDirectory())return 0n;let e=0n;return this.blockSizes.forEach(t=>{e+=t}),this.data!=null&&(e+=BigInt(this.data.length)),e}marshal(){let e;switch(this.type){case"raw":e=Data$1.DataType.Raw;break;case"directory":e=Data$1.DataType.Directory;break;case"file":e=Data$1.DataType.File;break;case"metadata":e=Data$1.DataType.Metadata;break;case"symlink":e=Data$1.DataType.Symlink;break;case"hamt-sharded-directory":e=Data$1.DataType.HAMTShard;break;default:throw errCode$4(new Error(`Type: ${e} is not valid`),"ERR_INVALID_TYPE")}let t=this.data;(this.data==null||this.data.length===0)&&(t=void 0);let n;this.mode!=null&&(n=this._originalMode&4294963200|(this.mode??0),n===DEFAULT_FILE_MODE$1&&!this.isDirectory()&&(n=void 0),n===DEFAULT_DIRECTORY_MODE$1&&this.isDirectory()&&(n=void 0));let i;return this.mtime!=null&&(i={Seconds:this.mtime.secs,FractionalNanoseconds:this.mtime.nsecs}),Data$1.encode({Type:e,Data:t,filesize:this.isDirectory()?void 0:this.fileSize(),blocksizes:this.blockSizes,hashType:this.hashType,fanout:this.fanout,mode:n,mtime:i})}};const hashFn=async function(r){return(await murmur3128.encode(r)).slice(0,8).reverse()},addLinksToHamtBucket=async(r,e,t)=>{const n=(e.tableSize()-1).toString(16).length;await Promise.all(r.map(async i=>{if(i.Name==null)throw new Error("Unexpected Link without a Name");if(i.Name.length===n){const o=parseInt(i.Name,16);e._putObjectAt(o,new Bucket({hash:t._options.hash,bits:t._options.bits},e,o));return}await t.put(i.Name.substring(2),!0)}))},toPrefix$1=(r,e)=>r.toString(16).toUpperCase().padStart(e,"0").substring(0,e),toBucketPath=r=>{let e=r.bucket;const t=[];for(;e._parent!=null;)t.push(e),e=e._parent;return t.push(e),t.reverse()},findShardCid=async(r,e,t,n,i)=>{if(n==null){if(r.Data==null)throw errCode$4(new Error("no data in PBNode"),"ERR_NOT_UNIXFS");let g;try{g=UnixFS$1.unmarshal(r.Data)}catch(S){throw errCode$4(S,"ERR_NOT_UNIXFS")}if(g.type!=="hamt-sharded-directory")throw errCode$4(new Error("not a HAMT"),"ERR_NOT_UNIXFS");if(g.fanout==null)throw errCode$4(new Error("missing fanout"),"ERR_NOT_UNIXFS");const $=createHAMT({hashFn,bits:Math.log2(Number(g.fanout))});n={rootBucket:$,hamtDepth:1,lastBucket:$}}const o=(n.lastBucket.tableSize()-1).toString(16).length;await addLinksToHamtBucket(r.Links,n.lastBucket,n.rootBucket);const a=await n.rootBucket._findNewBucketAndPos(e);let c=toPrefix$1(a.pos,o);const l=toBucketPath(a);l.length>n.hamtDepth&&(n.lastBucket=l[n.hamtDepth],c=toPrefix$1(n.lastBucket._posAtParent,o));const u=r.Links.find(g=>{if(g.Name==null)return!1;const $=g.Name.substring(0,o),S=g.Name.substring(o);return!($!==c||S!==""&&S!==e)});if(u==null)return;if(u.Name!=null&&u.Name.substring(o)===e)return u.Hash;n.hamtDepth++;const f=await t.get(u.Hash,i);return r=decode$d(f),findShardCid(r,e,t,n,i)},directoryContent=(r,e,t,n,i,o,a)=>{async function*c(l={}){const u=l.offset??0,f=l.length??e.Links.length,g=e.Links.slice(u,f);l.onProgress?.(new CustomProgressEvent("unixfs:exporter:walk:directory",{cid:r})),yield*pipe(g,$=>map$1($,S=>async()=>{const E=S.Name??"",v=`${n}/${E}`;return(await i(S.Hash,E,v,[],o+1,a,l)).entry}),$=>parallel($,{ordered:!0}),$=>filter($,S=>S!=null))}return c};var eventemitter3={exports:{}};(function(r){var e=Object.prototype.hasOwnProperty,t="~";function n(){}Object.create&&(n.prototype=Object.create(null),new n().__proto__||(t=!1));function i(l,u,f){this.fn=l,this.context=u,this.once=f||!1}function o(l,u,f,g,$){if(typeof f!="function")throw new TypeError("The listener must be a function");var S=new i(f,g||l,$),E=t?t+u:u;return l._events[E]?l._events[E].fn?l._events[E]=[l._events[E],S]:l._events[E].push(S):(l._events[E]=S,l._eventsCount++),l}function a(l,u){--l._eventsCount===0?l._events=new n:delete l._events[u]}function c(){this._events=new n,this._eventsCount=0}c.prototype.eventNames=function(){var u=[],f,g;if(this._eventsCount===0)return u;for(g in f=this._events)e.call(f,g)&&u.push(t?g.slice(1):g);return Object.getOwnPropertySymbols?u.concat(Object.getOwnPropertySymbols(f)):u},c.prototype.listeners=function(u){var f=t?t+u:u,g=this._events[f];if(!g)return[];if(g.fn)return[g.fn];for(var $=0,S=g.length,E=new Array(S);$<S;$++)E[$]=g[$].fn;return E},c.prototype.listenerCount=function(u){var f=t?t+u:u,g=this._events[f];return g?g.fn?1:g.length:0},c.prototype.emit=function(u,f,g,$,S,E){var v=t?t+u:u;if(!this._events[v])return!1;var T=this._events[v],I=arguments.length,A,P;if(T.fn){switch(T.once&&this.removeListener(u,T.fn,void 0,!0),I){case 1:return T.fn.call(T.context),!0;case 2:return T.fn.call(T.context,f),!0;case 3:return T.fn.call(T.context,f,g),!0;case 4:return T.fn.call(T.context,f,g,$),!0;case 5:return T.fn.call(T.context,f,g,$,S),!0;case 6:return T.fn.call(T.context,f,g,$,S,E),!0}for(P=1,A=new Array(I-1);P<I;P++)A[P-1]=arguments[P];T.fn.apply(T.context,A)}else{var x=T.length,D;for(P=0;P<x;P++)switch(T[P].once&&this.removeListener(u,T[P].fn,void 0,!0),I){case 1:T[P].fn.call(T[P].context);break;case 2:T[P].fn.call(T[P].context,f);break;case 3:T[P].fn.call(T[P].context,f,g);break;case 4:T[P].fn.call(T[P].context,f,g,$);break;default:if(!A)for(D=1,A=new Array(I-1);D<I;D++)A[D-1]=arguments[D];T[P].fn.apply(T[P].context,A)}}return!0},c.prototype.on=function(u,f,g){return o(this,u,f,g,!1)},c.prototype.once=function(u,f,g){return o(this,u,f,g,!0)},c.prototype.removeListener=function(u,f,g,$){var S=t?t+u:u;if(!this._events[S])return this;if(!f)return a(this,S),this;var E=this._events[S];if(E.fn)E.fn===f&&(!$||E.once)&&(!g||E.context===g)&&a(this,S);else{for(var v=0,T=[],I=E.length;v<I;v++)(E[v].fn!==f||$&&!E[v].once||g&&E[v].context!==g)&&T.push(E[v]);T.length?this._events[S]=T.length===1?T[0]:T:a(this,S)}return this},c.prototype.removeAllListeners=function(u){var f;return u?(f=t?t+u:u,this._events[f]&&a(this,f)):(this._events=new n,this._eventsCount=0),this},c.prototype.off=c.prototype.removeListener,c.prototype.addListener=c.prototype.on,c.prefixed=t,c.EventEmitter=c,r.exports=c})(eventemitter3);var eventemitter3Exports=eventemitter3.exports;const EventEmitter=getDefaultExportFromCjs(eventemitter3Exports);class TimeoutError extends Error{constructor(e){super(e),this.name="TimeoutError"}}let AbortError$3=class extends Error{constructor(e){super(),this.name="AbortError",this.message=e}};const getDOMException=r=>globalThis.DOMException===void 0?new AbortError$3(r):new DOMException(r),getAbortedReason=r=>{const e=r.reason===void 0?getDOMException("This operation was aborted."):r.reason;return e instanceof Error?e:getDOMException(e)};function pTimeout(r,e,t,n){let i;const o=new Promise((a,c)=>{if(typeof e!="number"||Math.sign(e)!==1)throw new TypeError(`Expected \`milliseconds\` to be a positive number, got \`${e}\``);if(e===Number.POSITIVE_INFINITY){a(r);return}if(n={customTimers:{setTimeout,clearTimeout},...n},n.signal){const{signal:l}=n;l.aborted&&c(getAbortedReason(l)),l.addEventListener("abort",()=>{c(getAbortedReason(l))})}i=n.customTimers.setTimeout.call(void 0,()=>{if(typeof t=="function"){try{a(t())}catch(f){c(f)}return}const l=typeof t=="string"?t:`Promise timed out after ${e} milliseconds`,u=t instanceof Error?t:new TimeoutError(l);typeof r.cancel=="function"&&r.cancel(),c(u)},e),(async()=>{try{a(await r)}catch(l){c(l)}finally{n.customTimers.clearTimeout.call(void 0,i)}})()});return o.clear=()=>{clearTimeout(i),i=void 0},o}function lowerBound$1(r,e,t){let n=0,i=r.length;for(;i>0;){const o=Math.trunc(i/2);let a=n+o;t(r[a],e)<=0?(n=++a,i-=o+1):i=o}return n}var __classPrivateFieldGet$1=function(r,e,t,n){if(t==="a"&&!n)throw new TypeError("Private accessor was defined without a getter");if(typeof e=="function"?r!==e||!n:!e.has(r))throw new TypeError("Cannot read private member from an object whose class did not declare it");return t==="m"?n:t==="a"?n.call(r):n?n.value:e.get(r)},_PriorityQueue_queue;class PriorityQueue{constructor(){_PriorityQueue_queue.set(this,[])}enqueue(e,t){t={priority:0,...t};const n={priority:t.priority,run:e};if(this.size&&__classPrivateFieldGet$1(this,_PriorityQueue_queue,"f")[this.size-1].priority>=t.priority){__classPrivateFieldGet$1(this,_PriorityQueue_queue,"f").push(n);return}const i=lowerBound$1(__classPrivateFieldGet$1(this,_PriorityQueue_queue,"f"),n,(o,a)=>a.priority-o.priority);__classPrivateFieldGet$1(this,_PriorityQueue_queue,"f").splice(i,0,n)}dequeue(){const e=__classPrivateFieldGet$1(this,_PriorityQueue_queue,"f").shift();return e?.run}filter(e){return __classPrivateFieldGet$1(this,_PriorityQueue_queue,"f").filter(t=>t.priority===e.priority).map(t=>t.run)}get size(){return __classPrivateFieldGet$1(this,_PriorityQueue_queue,"f").length}}_PriorityQueue_queue=new WeakMap;var __classPrivateFieldSet=function(r,e,t,n,i){if(n==="m")throw new TypeError("Private method is not writable");if(n==="a"&&!i)throw new TypeError("Private accessor was defined without a setter");if(typeof e=="function"?r!==e||!i:!e.has(r))throw new TypeError("Cannot write private member to an object whose class did not declare it");return n==="a"?i.call(r,t):i?i.value=t:e.set(r,t),t},__classPrivateFieldGet=function(r,e,t,n){if(t==="a"&&!n)throw new TypeError("Private accessor was defined without a getter");if(typeof e=="function"?r!==e||!n:!e.has(r))throw new TypeError("Cannot read private member from an object whose class did not declare it");return t==="m"?n:t==="a"?n.call(r):n?n.value:e.get(r)},_PQueue_instances,_PQueue_carryoverConcurrencyCount,_PQueue_isIntervalIgnored,_PQueue_intervalCount,_PQueue_intervalCap,_PQueue_interval,_PQueue_intervalEnd,_PQueue_intervalId,_PQueue_timeoutId,_PQueue_queue,_PQueue_queueClass,_PQueue_pending,_PQueue_concurrency,_PQueue_isPaused,_PQueue_throwOnTimeout,_PQueue_doesIntervalAllowAnother_get,_PQueue_doesConcurrentAllowAnother_get,_PQueue_next,_PQueue_onResumeInterval,_PQueue_isIntervalPaused_get,_PQueue_tryToStartAnother,_PQueue_initializeIntervalIfNeeded,_PQueue_onInterval,_PQueue_processQueue,_PQueue_throwOnAbort,_PQueue_onEvent;let AbortError$2=class extends Error{};class PQueue extends EventEmitter{constructor(e){var t,n,i,o;if(super(),_PQueue_instances.add(this),_PQueue_carryoverConcurrencyCount.set(this,void 0),_PQueue_isIntervalIgnored.set(this,void 0),_PQueue_intervalCount.set(this,0),_PQueue_intervalCap.set(this,void 0),_PQueue_interval.set(this,void 0),_PQueue_intervalEnd.set(this,0),_PQueue_intervalId.set(this,void 0),_PQueue_timeoutId.set(this,void 0),_PQueue_queue.set(this,void 0),_PQueue_queueClass.set(this,void 0),_PQueue_pending.set(this,0),_PQueue_concurrency.set(this,void 0),_PQueue_isPaused.set(this,void 0),_PQueue_throwOnTimeout.set(this,void 0),Object.defineProperty(this,"timeout",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),e={carryoverConcurrencyCount:!1,intervalCap:Number.POSITIVE_INFINITY,interval:0,concurrency:Number.POSITIVE_INFINITY,autoStart:!0,queueClass:PriorityQueue,...e},!(typeof e.intervalCap=="number"&&e.intervalCap>=1))throw new TypeError(`Expected \`intervalCap\` to be a number from 1 and up, got \`${(n=(t=e.intervalCap)===null||t===void 0?void 0:t.toString())!==null&&n!==void 0?n:""}\` (${typeof e.intervalCap})`);if(e.interval===void 0||!(Number.isFinite(e.interval)&&e.interval>=0))throw new TypeError(`Expected \`interval\` to be a finite number >= 0, got \`${(o=(i=e.interval)===null||i===void 0?void 0:i.toString())!==null&&o!==void 0?o:""}\` (${typeof e.interval})`);__classPrivateFieldSet(this,_PQueue_carryoverConcurrencyCount,e.carryoverConcurrencyCount,"f"),__classPrivateFieldSet(this,_PQueue_isIntervalIgnored,e.intervalCap===Number.POSITIVE_INFINITY||e.interval===0,"f"),__classPrivateFieldSet(this,_PQueue_intervalCap,e.intervalCap,"f"),__classPrivateFieldSet(this,_PQueue_interval,e.interval,"f"),__classPrivateFieldSet(this,_PQueue_queue,new e.queueClass,"f"),__classPrivateFieldSet(this,_PQueue_queueClass,e.queueClass,"f"),this.concurrency=e.concurrency,this.timeout=e.timeout,__classPrivateFieldSet(this,_PQueue_throwOnTimeout,e.throwOnTimeout===!0,"f"),__classPrivateFieldSet(this,_PQueue_isPaused,e.autoStart===!1,"f")}get concurrency(){return __classPrivateFieldGet(this,_PQueue_concurrency,"f")}set concurrency(e){if(!(typeof e=="number"&&e>=1))throw new TypeError(`Expected \`concurrency\` to be a number from 1 and up, got \`${e}\` (${typeof e})`);__classPrivateFieldSet(this,_PQueue_concurrency,e,"f"),__classPrivateFieldGet(this,_PQueue_instances,"m",_PQueue_processQueue).call(this)}async add(e,t={}){return t={timeout:this.timeout,throwOnTimeout:__classPrivateFieldGet(this,_PQueue_throwOnTimeout,"f"),...t},new Promise((n,i)=>{__classPrivateFieldGet(this,_PQueue_queue,"f").enqueue(async()=>{var o,a,c;__classPrivateFieldSet(this,_PQueue_pending,(a=__classPrivateFieldGet(this,_PQueue_pending,"f"),a++,a),"f"),__classPrivateFieldSet(this,_PQueue_intervalCount,(c=__classPrivateFieldGet(this,_PQueue_intervalCount,"f"),c++,c),"f");try{if(!((o=t.signal)===null||o===void 0)&&o.aborted)throw new AbortError$2("The task was aborted.");let l=e({signal:t.signal});t.timeout&&(l=pTimeout(Promise.resolve(l),t.timeout)),t.signal&&(l=Promise.race([l,__classPrivateFieldGet(this,_PQueue_instances,"m",_PQueue_throwOnAbort).call(this,t.signal)]));const u=await l;n(u),this.emit("completed",u)}catch(l){if(l instanceof TimeoutError&&!t.throwOnTimeout){n();return}i(l),this.emit("error",l)}finally{__classPrivateFieldGet(this,_PQueue_instances,"m",_PQueue_next).call(this)}},t),this.emit("add"),__classPrivateFieldGet(this,_PQueue_instances,"m",_PQueue_tryToStartAnother).call(this)})}async addAll(e,t){return Promise.all(e.map(async n=>this.add(n,t)))}start(){return __classPrivateFieldGet(this,_PQueue_isPaused,"f")?(__classPrivateFieldSet(this,_PQueue_isPaused,!1,"f"),__classPrivateFieldGet(this,_PQueue_instances,"m",_PQueue_processQueue).call(this),this):this}pause(){__classPrivateFieldSet(this,_PQueue_isPaused,!0,"f")}clear(){__classPrivateFieldSet(this,_PQueue_queue,new(__classPrivateFieldGet(this,_PQueue_queueClass,"f")),"f")}async onEmpty(){__classPrivateFieldGet(this,_PQueue_queue,"f").size!==0&&await __classPrivateFieldGet(this,_PQueue_instances,"m",_PQueue_onEvent).call(this,"empty")}async onSizeLessThan(e){__classPrivateFieldGet(this,_PQueue_queue,"f").size<e||await __classPrivateFieldGet(this,_PQueue_instances,"m",_PQueue_onEvent).call(this,"next",()=>__classPrivateFieldGet(this,_PQueue_queue,"f").size<e)}async onIdle(){__classPrivateFieldGet(this,_PQueue_pending,"f")===0&&__classPrivateFieldGet(this,_PQueue_queue,"f").size===0||await __classPrivateFieldGet(this,_PQueue_instances,"m",_PQueue_onEvent).call(this,"idle")}get size(){return __classPrivateFieldGet(this,_PQueue_queue,"f").size}sizeBy(e){return __classPrivateFieldGet(this,_PQueue_queue,"f").filter(e).length}get pending(){return __classPrivateFieldGet(this,_PQueue_pending,"f")}get isPaused(){return __classPrivateFieldGet(this,_PQueue_isPaused,"f")}}_PQueue_carryoverConcurrencyCount=new WeakMap,_PQueue_isIntervalIgnored=new WeakMap,_PQueue_intervalCount=new WeakMap,_PQueue_intervalCap=new WeakMap,_PQueue_interval=new WeakMap,_PQueue_intervalEnd=new WeakMap,_PQueue_intervalId=new WeakMap,_PQueue_timeoutId=new WeakMap,_PQueue_queue=new WeakMap,_PQueue_queueClass=new WeakMap,_PQueue_pending=new WeakMap,_PQueue_concurrency=new WeakMap,_PQueue_isPaused=new WeakMap,_PQueue_throwOnTimeout=new WeakMap,_PQueue_instances=new WeakSet,_PQueue_doesIntervalAllowAnother_get=function r(){return __classPrivateFieldGet(this,_PQueue_isIntervalIgnored,"f")||__classPrivateFieldGet(this,_PQueue_intervalCount,"f")<__classPrivateFieldGet(this,_PQueue_intervalCap,"f")},_PQueue_doesConcurrentAllowAnother_get=function r(){return __classPrivateFieldGet(this,_PQueue_pending,"f")<__classPrivateFieldGet(this,_PQueue_concurrency,"f")},_PQueue_next=function r(){var e;__classPrivateFieldSet(this,_PQueue_pending,(e=__classPrivateFieldGet(this,_PQueue_pending,"f"),e--,e),"f"),__classPrivateFieldGet(this,_PQueue_instances,"m",_PQueue_tryToStartAnother).call(this),this.emit("next")},_PQueue_onResumeInterval=function r(){__classPrivateFieldGet(this,_PQueue_instances,"m",_PQueue_onInterval).call(this),__classPrivateFieldGet(this,_PQueue_instances,"m",_PQueue_initializeIntervalIfNeeded).call(this),__classPrivateFieldSet(this,_PQueue_timeoutId,void 0,"f")},_PQueue_isIntervalPaused_get=function r(){const e=Date.now();if(__classPrivateFieldGet(this,_PQueue_intervalId,"f")===void 0){const t=__classPrivateFieldGet(this,_PQueue_intervalEnd,"f")-e;if(t<0)__classPrivateFieldSet(this,_PQueue_intervalCount,__classPrivateFieldGet(this,_PQueue_carryoverConcurrencyCount,"f")?__classPrivateFieldGet(this,_PQueue_pending,"f"):0,"f");else return __classPrivateFieldGet(this,_PQueue_timeoutId,"f")===void 0&&__classPrivateFieldSet(this,_PQueue_timeoutId,setTimeout(()=>{__classPrivateFieldGet(this,_PQueue_instances,"m",_PQueue_onResumeInterval).call(this)},t),"f"),!0}return!1},_PQueue_tryToStartAnother=function r(){if(__classPrivateFieldGet(this,_PQueue_queue,"f").size===0)return __classPrivateFieldGet(this,_PQueue_intervalId,"f")&&clearInterval(__classPrivateFieldGet(this,_PQueue_intervalId,"f")),__classPrivateFieldSet(this,_PQueue_intervalId,void 0,"f"),this.emit("empty"),__classPrivateFieldGet(this,_PQueue_pending,"f")===0&&this.emit("idle"),!1;if(!__classPrivateFieldGet(this,_PQueue_isPaused,"f")){const e=!__classPrivateFieldGet(this,_PQueue_instances,"a",_PQueue_isIntervalPaused_get);if(__classPrivateFieldGet(this,_PQueue_instances,"a",_PQueue_doesIntervalAllowAnother_get)&&__classPrivateFieldGet(this,_PQueue_instances,"a",_PQueue_doesConcurrentAllowAnother_get)){const t=__classPrivateFieldGet(this,_PQueue_queue,"f").dequeue();return t?(this.emit("active"),t(),e&&__classPrivateFieldGet(this,_PQueue_instances,"m",_PQueue_initializeIntervalIfNeeded).call(this),!0):!1}}return!1},_PQueue_initializeIntervalIfNeeded=function r(){__classPrivateFieldGet(this,_PQueue_isIntervalIgnored,"f")||__classPrivateFieldGet(this,_PQueue_intervalId,"f")!==void 0||(__classPrivateFieldSet(this,_PQueue_intervalId,setInterval(()=>{__classPrivateFieldGet(this,_PQueue_instances,"m",_PQueue_onInterval).call(this)},__classPrivateFieldGet(this,_PQueue_interval,"f")),"f"),__classPrivateFieldSet(this,_PQueue_intervalEnd,Date.now()+__classPrivateFieldGet(this,_PQueue_interval,"f"),"f"))},_PQueue_onInterval=function r(){__classPrivateFieldGet(this,_PQueue_intervalCount,"f")===0&&__classPrivateFieldGet(this,_PQueue_pending,"f")===0&&__classPrivateFieldGet(this,_PQueue_intervalId,"f")&&(clearInterval(__classPrivateFieldGet(this,_PQueue_intervalId,"f")),__classPrivateFieldSet(this,_PQueue_intervalId,void 0,"f")),__classPrivateFieldSet(this,_PQueue_intervalCount,__classPrivateFieldGet(this,_PQueue_carryoverConcurrencyCount,"f")?__classPrivateFieldGet(this,_PQueue_pending,"f"):0,"f"),__classPrivateFieldGet(this,_PQueue_instances,"m",_PQueue_processQueue).call(this)},_PQueue_processQueue=function r(){for(;__classPrivateFieldGet(this,_PQueue_instances,"m",_PQueue_tryToStartAnother).call(this););},_PQueue_throwOnAbort=async function r(e){return new Promise((t,n)=>{e.addEventListener("abort",()=>{n(new AbortError$2("The task was aborted."))},{once:!0})})},_PQueue_onEvent=async function r(e,t){return new Promise(n=>{const i=()=>{t&&!t()||(this.off(e,i),n())};this.on(e,i)})};async function walkDAG(r,e,t,n,i,o,a){if(e instanceof Uint8Array){const u=extractDataFromBlock(e,n,i,o);t.push(u);return}if(e.Data==null)throw errCode$4(new Error("no data in PBNode"),"ERR_NOT_UNIXFS");let c;try{c=UnixFS$1.unmarshal(e.Data)}catch(u){throw errCode$4(u,"ERR_NOT_UNIXFS")}if(c.data!=null){const u=c.data,f=extractDataFromBlock(u,n,i,o);t.push(f),n+=BigInt(f.byteLength)}const l=[];if(e.Links.length!==c.blockSizes.length)throw errCode$4(new Error("Inconsistent block sizes and dag links"),"ERR_NOT_UNIXFS");for(let u=0;u<e.Links.length;u++){const f=e.Links[u],g=n,$=g+c.blockSizes[u];if((i>=g&&i<$||o>=g&&o<=$||i<g&&o>$)&&l.push({link:f,blockStart:n}),n=$,n>o)break}await pipe(l,u=>map$1(u,f=>async()=>{const g=await r.get(f.link.Hash,a);return{...f,block:g}}),u=>parallel(u,{ordered:!0}),async u=>{for await(const{link:f,block:g,blockStart:$}of u){let S;switch(f.Hash.code){case code:S=decode$d(g);break;case code$5:S=g;break;default:t.end(errCode$4(new Error(`Unsupported codec: ${f.Hash.code}`),"ERR_NOT_UNIXFS"));return}const E=new PQueue({concurrency:1});E.on("error",v=>{t.end(v)}),E.add(async()=>{a.onProgress?.(new CustomProgressEvent("unixfs:exporter:walk:file",{cid:f.Hash})),await walkDAG(r,S,t,$,i,o,a)}),await E.onIdle()}}),n>=o&&t.end()}const fileContent=(r,e,t,n,i,o,a)=>{async function*c(l={}){const u=t.fileSize();if(u===void 0)throw new Error("File was a directory");const{start:f,end:g}=validateOffsetAndLength(u,l.offset,l.length);if(g===0n)return;let $=0n;const S=g-f,E=pushable$1();l.onProgress?.(new CustomProgressEvent("unixfs:exporter:walk:file",{cid:r})),walkDAG(a,e,E,0n,f,g,l).catch(v=>{E.end(v)});for await(const v of E)if(v!=null){if($+=BigInt(v.byteLength),$>S)throw E.end(),errCode$4(new Error("Read too many bytes - the file size reported by the UnixFS data in the root node may be incorrect"),"ERR_OVER_READ");$===S&&E.end(),l.onProgress?.(new CustomProgressEvent("unixfs:exporter:progress:unixfs:file",{bytesRead:$,totalBytes:S,fileSize:u})),yield v}if($<S)throw errCode$4(new Error("Traversed entire DAG but did not read enough bytes"),"ERR_UNDER_READ")}return c},hamtShardedDirectoryContent=(r,e,t,n,i,o,a)=>{function c(l={}){return l.onProgress?.(new CustomProgressEvent("unixfs:exporter:walk:hamt-sharded-directory",{cid:r})),listDirectory(e,n,i,o,a,l)}return c};async function*listDirectory(r,e,t,n,i,o){const a=r.Links;if(r.Data==null)throw errCode$4(new Error("no data in PBNode"),"ERR_NOT_UNIXFS");let c;try{c=UnixFS$1.unmarshal(r.Data)}catch(f){throw errCode$4(f,"ERR_NOT_UNIXFS")}if(c.fanout==null)throw errCode$4(new Error("missing fanout"),"ERR_NOT_UNIXFS");const l=(c.fanout-1n).toString(16).length,u=pipe(a,f=>map$1(f,g=>async()=>{const $=g.Name!=null?g.Name.substring(l):null;if($!=null&&$!==""){const S=await t(g.Hash,$,`${e}/${$}`,[],n+1,i,o);return{entries:S.entry==null?[]:[S.entry]}}else{const S=await i.get(g.Hash,o);return r=decode$d(S),o.onProgress?.(new CustomProgressEvent("unixfs:exporter:walk:hamt-sharded-directory",{cid:g.Hash})),{entries:listDirectory(r,e,t,n,i,o)}}}),f=>parallel(f,{ordered:!0}));for await(const{entries:f}of u)yield*f}const findLinkCid=(r,e)=>r.Links.find(n=>n.Name===e)?.Hash,contentExporters={raw:fileContent,file:fileContent,directory:directoryContent,"hamt-sharded-directory":hamtShardedDirectoryContent,metadata:(r,e,t,n,i,o,a)=>()=>[],symlink:(r,e,t,n,i,o,a)=>()=>[]},unixFsResolver=async(r,e,t,n,i,o,a,c)=>{const l=await a.get(r,c),u=decode$d(l);let f,g;if(e==null&&(e=r.toString()),u.Data==null)throw errCode$4(new Error("no data in PBNode"),"ERR_NOT_UNIXFS");try{f=UnixFS$1.unmarshal(u.Data)}catch(S){throw errCode$4(S,"ERR_NOT_UNIXFS")}if(t==null&&(t=e),n.length>0){let S;if(f?.type==="hamt-sharded-directory"?S=await findShardCid(u,n[0],a):S=findLinkCid(u,n[0]),S==null)throw errCode$4(new Error("file does not exist"),"ERR_NOT_FOUND");const E=n.shift(),v=`${t}/${E}`;g={cid:S,toResolve:n,name:E??"",path:v}}const $=contentExporters[f.type](r,u,f,t,i,o,a);if($==null)throw errCode$4(new Error("could not find content exporter"),"ERR_NOT_FOUND");return f.isDirectory()?{entry:{type:"directory",name:e,path:t,cid:r,content:$,unixfs:f,depth:o,node:u,size:f.fileSize()},next:g}:{entry:{type:"file",name:e,path:t,cid:r,content:$,unixfs:f,depth:o,node:u,size:f.fileSize()},next:g}},resolvers$1={[code]:unixFsResolver,[code$5]:resolve$2,[code$2]:resolve$4,[identity$3.code]:resolve$3},resolve$1=async(r,e,t,n,i,o,a)=>{const c=resolvers$1[r.code];if(c==null)throw errCode$4(new Error(`No resolver for code ${r.code}`),"ERR_NO_RESOLVER");return c(r,e,t,n,resolve$1,i,o,a)},toPathComponents=(r="")=>(r.trim().match(/([^\\^/]|\\\/)+/g)??[]).filter(Boolean),cidAndRest=r=>{if(r instanceof Uint8Array)return{cid:CID$3.decode(r),toResolve:[]};const e=CID$3.asCID(r);if(e!=null)return{cid:e,toResolve:[]};if(typeof r=="string"){r.indexOf("/ipfs/")===0&&(r=r.substring(6));const t=toPathComponents(r);return{cid:CID$3.parse(t[0]),toResolve:t.slice(1)}}throw errCode$4(new Error(`Unknown path type ${r}`),"ERR_BAD_PATH")};async function*walkPath(r,e,t={}){let{cid:n,toResolve:i}=cidAndRest(r),o=n.toString(),a=o;const c=i.length;for(;;){const l=await resolve$1(n,o,a,i,c,e,t);if(l.entry==null&&l.next==null)throw errCode$4(new Error(`Could not resolve ${r}`),"ERR_NOT_FOUND");if(l.entry!=null&&(yield l.entry),l.next==null)return;i=l.next.toResolve,n=l.next.cid,o=l.next.name,a=l.next.path}}async function exporter$1(r,e,t={}){const n=await last(walkPath(r,e,t));if(n==null)throw errCode$4(new Error(`Could not resolve ${r}`),"ERR_NOT_FOUND");return n}async function*recursive(r,e,t={}){const n=await exporter$1(r,e,t);if(n==null)return;if(yield n,n.type==="directory")for await(const o of i(n,t))yield o;async function*i(o,a){for await(const c of o.content(a))yield c,!(c instanceof Uint8Array)&&c.type==="directory"&&(yield*i(c,a))}}class UnixFSError extends Error{constructor(t,n,i){super(t);_(this,"name");_(this,"code");this.name=n,this.code=i}}class NotUnixFSError extends UnixFSError{constructor(e="not a Unixfs node"){super(e,"NotUnixFSError","ERR_NOT_UNIXFS")}}class InvalidPBNodeError extends UnixFSError{constructor(e="invalid PBNode"){super(e,"InvalidPBNodeError","ERR_INVALID_PBNODE")}}class UnknownError extends UnixFSError{constructor(e="unknown error"){super(e,"InvalidPBNodeError","ERR_UNKNOWN_ERROR")}}class AlreadyExistsError extends UnixFSError{constructor(e="path already exists"){super(e,"AlreadyExistsError","ERR_ALREADY_EXISTS")}}class DoesNotExistError extends UnixFSError{constructor(e="path does not exist"){super(e,"DoesNotExistError","ERR_DOES_NOT_EXIST")}}class NoContentError extends UnixFSError{constructor(e="no content"){super(e,"NoContentError","ERR_NO_CONTENT")}}class NotAFileError extends UnixFSError{constructor(e="not a file"){super(e,"NotAFileError","ERR_NOT_A_FILE")}}class NotADirectoryError extends UnixFSError{constructor(e="not a directory"){super(e,"NotADirectoryError","ERR_NOT_A_DIRECTORY")}}class InvalidParametersError extends UnixFSError{constructor(e="invalid parameters"){super(e,"InvalidParametersError","ERR_INVALID_PARAMETERS")}}function assign$1(r,e){for(const t in e)Object.defineProperty(r,t,{value:e[t],enumerable:!0,configurable:!0});return r}function createError$1(r,e,t){if(!r||typeof r=="string")throw new TypeError("Please pass an Error to err-code");t||(t={}),typeof e=="object"&&(t=e,e=""),e&&(t.code=e);try{return assign$1(r,t)}catch{t.message=r.message,t.stack=r.stack;const i=function(){};return i.prototype=Object.create(Object.getPrototypeOf(r)),assign$1(new i,t)}}var errCode$2=createError$1;const errcode=getDefaultExportFromCjs(errCode$2);var Data;(function(r){(function(n){n.Raw="Raw",n.Directory="Directory",n.File="File",n.Metadata="Metadata",n.Symlink="Symlink",n.HAMTShard="HAMTShard"})(r.DataType||(r.DataType={}));let e;(function(n){n[n.Raw=0]="Raw",n[n.Directory=1]="Directory",n[n.File=2]="File",n[n.Metadata=3]="Metadata",n[n.Symlink=4]="Symlink",n[n.HAMTShard=5]="HAMTShard"})(e||(e={})),function(n){n.codec=()=>enumeration(e)}(r.DataType||(r.DataType={}));let t;r.codec=()=>(t==null&&(t=message((n,i,o={})=>{if(o.lengthDelimited!==!1&&i.fork(),n.Type!=null&&(i.uint32(8),r.DataType.codec().encode(n.Type,i)),n.Data!=null&&(i.uint32(18),i.bytes(n.Data)),n.filesize!=null&&(i.uint32(24),i.uint64(n.filesize)),n.blocksizes!=null)for(const a of n.blocksizes)i.uint32(32),i.uint64(a);n.hashType!=null&&(i.uint32(40),i.uint64(n.hashType)),n.fanout!=null&&(i.uint32(48),i.uint64(n.fanout)),n.mode!=null&&(i.uint32(56),i.uint32(n.mode)),n.mtime!=null&&(i.uint32(66),UnixTime.codec().encode(n.mtime,i)),o.lengthDelimited!==!1&&i.ldelim()},(n,i)=>{const o={blocksizes:[]},a=i==null?n.len:n.pos+i;for(;n.pos<a;){const c=n.uint32();switch(c>>>3){case 1:o.Type=r.DataType.codec().decode(n);break;case 2:o.Data=n.bytes();break;case 3:o.filesize=n.uint64();break;case 4:o.blocksizes.push(n.uint64());break;case 5:o.hashType=n.uint64();break;case 6:o.fanout=n.uint64();break;case 7:o.mode=n.uint32();break;case 8:o.mtime=UnixTime.codec().decode(n,n.uint32());break;default:n.skipType(c&7);break}}return o})),t),r.encode=n=>encodeMessage(n,r.codec()),r.decode=n=>decodeMessage$1(n,r.codec())})(Data||(Data={}));var UnixTime;(function(r){let e;r.codec=()=>(e==null&&(e=message((t,n,i={})=>{i.lengthDelimited!==!1&&n.fork(),t.Seconds!=null&&(n.uint32(8),n.int64(t.Seconds)),t.FractionalNanoseconds!=null&&(n.uint32(21),n.fixed32(t.FractionalNanoseconds)),i.lengthDelimited!==!1&&n.ldelim()},(t,n)=>{const i={},o=n==null?t.len:t.pos+n;for(;t.pos<o;){const a=t.uint32();switch(a>>>3){case 1:i.Seconds=t.int64();break;case 2:i.FractionalNanoseconds=t.fixed32();break;default:t.skipType(a&7);break}}return i})),e),r.encode=t=>encodeMessage(t,r.codec()),r.decode=t=>decodeMessage$1(t,r.codec())})(UnixTime||(UnixTime={}));var Metadata;(function(r){let e;r.codec=()=>(e==null&&(e=message((t,n,i={})=>{i.lengthDelimited!==!1&&n.fork(),t.MimeType!=null&&(n.uint32(10),n.string(t.MimeType)),i.lengthDelimited!==!1&&n.ldelim()},(t,n)=>{const i={},o=n==null?t.len:t.pos+n;for(;t.pos<o;){const a=t.uint32();switch(a>>>3){case 1:i.MimeType=t.string();break;default:t.skipType(a&7);break}}return i})),e),r.encode=t=>encodeMessage(t,r.codec()),r.decode=t=>decodeMessage$1(t,r.codec())})(Metadata||(Metadata={}));const types={Raw:"raw",Directory:"directory",File:"file",Metadata:"metadata",Symlink:"symlink",HAMTShard:"hamt-sharded-directory"},dirTypes=["directory","hamt-sharded-directory"],DEFAULT_FILE_MODE=parseInt("0644",8),DEFAULT_DIRECTORY_MODE=parseInt("0755",8);class UnixFS{constructor(e={type:"file"}){_(this,"type");_(this,"data");_(this,"blockSizes");_(this,"hashType");_(this,"fanout");_(this,"mtime");_(this,"_mode");_(this,"_originalMode");const{type:t,data:n,blockSizes:i,hashType:o,fanout:a,mtime:c,mode:l}=e;if(t!=null&&!Object.values(types).includes(t))throw errcode(new Error("Type: "+t+" is not valid"),"ERR_INVALID_TYPE");this.type=t??"file",this.data=n,this.hashType=o,this.fanout=a,this.blockSizes=i??[],this._originalMode=0,this.mode=l,this.mtime=c}static unmarshal(e){const t=Data.decode(e),n=new UnixFS({type:types[t.Type!=null?t.Type.toString():"File"],data:t.Data,blockSizes:t.blocksizes,mode:t.mode,mtime:t.mtime!=null?{secs:t.mtime.Seconds??0n,nsecs:t.mtime.FractionalNanoseconds}:void 0,fanout:t.fanout});return n._originalMode=t.mode??0,n}set mode(e){e==null?this._mode=this.isDirectory()?DEFAULT_DIRECTORY_MODE:DEFAULT_FILE_MODE:this._mode=e&4095}get mode(){return this._mode}isDirectory(){return dirTypes.includes(this.type)}addBlockSize(e){this.blockSizes.push(e)}removeBlockSize(e){this.blockSizes.splice(e,1)}fileSize(){if(this.isDirectory())return 0n;let e=0n;return this.blockSizes.forEach(t=>{e+=t}),this.data!=null&&(e+=BigInt(this.data.length)),e}marshal(){let e;switch(this.type){case"raw":e=Data.DataType.Raw;break;case"directory":e=Data.DataType.Directory;break;case"file":e=Data.DataType.File;break;case"metadata":e=Data.DataType.Metadata;break;case"symlink":e=Data.DataType.Symlink;break;case"hamt-sharded-directory":e=Data.DataType.HAMTShard;break;default:throw errcode(new Error(`Type: ${e} is not valid`),"ERR_INVALID_TYPE")}let t=this.data;(this.data==null||this.data.length===0)&&(t=void 0);let n;this.mode!=null&&(n=this._originalMode&4294963200|(this.mode??0),n===DEFAULT_FILE_MODE&&!this.isDirectory()&&(n=void 0),n===DEFAULT_DIRECTORY_MODE&&this.isDirectory()&&(n=void 0));let i;return this.mtime!=null&&(i={Seconds:this.mtime.secs,FractionalNanoseconds:this.mtime.nsecs}),Data.encode({Type:e,Data:t,filesize:this.isDirectory()?void 0:this.fileSize(),blocksizes:this.blockSizes,hashType:this.hashType,fanout:this.fanout,mode:n,mtime:i})}}function wrapHash(r){function e(t){return t instanceof InfiniteHash?t:new InfiniteHash(t,r)}return e}class InfiniteHash{constructor(e,t){_(this,"_value");_(this,"_hashFn");_(this,"_depth");_(this,"_availableBits");_(this,"_currentBufferIndex");_(this,"_buffers");if(!(e instanceof Uint8Array))throw new Error("can only hash Uint8Arrays");this._value=e,this._hashFn=t,this._depth=-1,this._availableBits=0,this._currentBufferIndex=0,this._buffers=[]}async take(e){let t=e;for(;this._availableBits<t;)await this._produceMoreBits();let n=0;for(;t>0;){const i=this._buffers[this._currentBufferIndex],o=Math.min(i.availableBits(),t),a=i.take(o);n=(n<<o)+a,t-=o,this._availableBits-=o,i.availableBits()===0&&this._currentBufferIndex++}return n}untake(e){let t=e;for(;t>0;){const n=this._buffers[this._currentBufferIndex],i=Math.min(n.totalBits()-n.availableBits(),t);n.untake(i),t-=i,this._availableBits+=i,this._currentBufferIndex>0&&n.totalBits()===n.availableBits()&&(this._depth--,this._currentBufferIndex--)}}async _produceMoreBits(){this._depth++;const e=this._depth>0?concat$6([this._value,Uint8Array.from([this._depth])]):this._value,t=await this._hashFn(e),n=new ConsumableBuffer(t);this._buffers.push(n),this._availableBits+=n.availableBits()}}const START_MASKS=[255,254,252,248,240,224,192,128],STOP_MASKS=[1,3,7,15,31,63,127,255];class ConsumableBuffer{constructor(e){_(this,"_value");_(this,"_currentBytePos");_(this,"_currentBitPos");this._value=e,this._currentBytePos=e.length-1,this._currentBitPos=7}availableBits(){return this._currentBitPos+1+this._currentBytePos*8}totalBits(){return this._value.length*8}take(e){let t=e,n=0;for(;t>0&&this._haveBits();){const i=this._value[this._currentBytePos],o=this._currentBitPos+1,a=Math.min(o,t),c=byteBitsToInt(i,o-a,a);n=(n<<a)+c,t-=a,this._currentBitPos-=a,this._currentBitPos<0&&(this._currentBitPos=7,this._currentBytePos--)}return n}untake(e){for(this._currentBitPos+=e;this._currentBitPos>7;)this._currentBitPos-=8,this._currentBytePos+=1}_haveBits(){return this._currentBytePos>=0}}function byteBitsToInt(r,e,t){const n=maskFor(e,t);return(r&n)>>>e}function maskFor(r,e){return START_MASKS[r]&STOP_MASKS[Math.min(e+r-1,7)]}const hamtHashCode=BigInt(murmur3128.code),hamtBucketBits=8;async function hamtHashFn(r){return(await murmur3128.encode(r)).subarray(0,8).reverse()}const persist=async(r,e,t)=>{t.codec==null&&(t.codec=dagPB);const n=await sha256$2.digest(r),i=CID$3.create(t.cidVersion,t.codec.code,n);return await e.put(i,r,{...t,signal:t.signal}),i};class Dir{constructor(e,t){_(this,"options");_(this,"root");_(this,"dir");_(this,"path");_(this,"dirty");_(this,"flat");_(this,"parent");_(this,"parentKey");_(this,"unixfs");_(this,"mode");_(this,"mtime");_(this,"cid");_(this,"size");_(this,"nodeSize");this.options=t??{},this.root=e.root,this.dir=e.dir,this.path=e.path,this.dirty=e.dirty,this.flat=e.flat,this.parent=e.parent,this.parentKey=e.parentKey,this.unixfs=e.unixfs,this.mode=e.mode,this.mtime=e.mtime}}class DirSharded extends Dir{constructor(t,n){super(t,n);_(this,"_bucket");this._bucket=createHAMT({hashFn:hamtHashFn,bits:8})}async put(t,n){this.cid=void 0,this.size=void 0,this.nodeSize=void 0,await this._bucket.put(t,n)}async get(t){return this._bucket.get(t)}childCount(){return this._bucket.leafCount()}directChildrenCount(){return this._bucket.childrenCount()}onlyChild(){return this._bucket.onlyChild()}async*eachChildSeries(){for await(const{key:t,value:n}of this._bucket.eachLeafSeries())yield{key:t,child:n}}estimateNodeSize(){return this.nodeSize!==void 0?this.nodeSize:(this.nodeSize=calculateSize(this._bucket,this,this.options),this.nodeSize)}async*flush(t){for await(const n of flush(this._bucket,t,this,this.options))yield{...n,path:this.path}}}async function*flush(r,e,t,n){const i=r._children,o=[];let a=0n;for(let S=0;S<i.length;S++){const E=i.get(S);if(E==null)continue;const v=S.toString(16).toUpperCase().padStart(2,"0");if(E instanceof Bucket){let T;for await(const I of flush(E,e,null,n))T=I;if(T==null)throw new Error("Could not flush sharded directory, no subshard found");o.push({Name:v,Tsize:Number(T.size),Hash:T.cid}),a+=T.size}else if(isDir(E.value)){const T=E.value;let I;for await(const P of T.flush(e))I=P,yield I;if(I==null)throw new Error("Did not flush dir");const A=v+E.key;o.push({Name:A,Tsize:Number(I.size),Hash:I.cid}),a+=I.size}else{const T=E.value;if(T.cid==null)continue;const I=v+E.key,A=T.size;o.push({Name:I,Tsize:Number(A),Hash:T.cid}),a+=BigInt(A??0)}}const c=Uint8Array.from(i.bitField().reverse()),l=new UnixFS({type:"hamt-sharded-directory",data:c,fanout:BigInt(r.tableSize()),hashType:hamtHashCode,mtime:t?.mtime,mode:t?.mode}),u={Data:l.marshal(),Links:o},f=encode$b(prepare(u)),g=await persist(f,e,n),$=BigInt(f.byteLength)+a;yield{cid:g,unixfs:l,size:$}}function isDir(r){return typeof r.flush=="function"}function calculateSize(r,e,t){const n=r._children,i=[];for(let l=0;l<n.length;l++){const u=n.get(l);if(u==null)continue;const f=l.toString(16).toUpperCase().padStart(2,"0");if(u instanceof Bucket){const g=calculateSize(u,null,t);i.push({Name:f,Tsize:Number(g),Hash:t.cidVersion===0?CID_V0:CID_V1})}else if(typeof u.value.flush=="function"){const $=u.value.nodeSize();i.push({Name:f+u.key,Tsize:Number($),Hash:t.cidVersion===0?CID_V0:CID_V1})}else{const g=u.value;if(g.cid==null)continue;const $=f+u.key,S=g.size;i.push({Name:$,Tsize:Number(S),Hash:g.cid})}}const o=Uint8Array.from(n.bitField().reverse()),a=new UnixFS({type:"hamt-sharded-directory",data:o,fanout:BigInt(r.tableSize()),hashType:hamtHashCode,mtime:e?.mtime,mode:e?.mode});return encode$b(prepare({Data:a.marshal(),Links:i})).length}const CID_V0=CID$3.parse("QmUNLLsPACCz1vLxQVkXqqLX5R1X345qqfHbsf67hvA3Nn"),CID_V1=CID$3.parse("zdj7WbTaiJT1fgatdet9Ei9iDB5hdCxkbVyhyh8YTUnXMiwYi"),log$9=logger$2("helia:unixfs:commands:utils:hamt-utils"),toPrefix=r=>r.toString(16).toUpperCase().padStart(2,"0").substring(0,2),createShard=async(r,e,t)=>{const n=new DirSharded({root:!0,dir:!0,parent:void 0,parentKey:void 0,path:"",dirty:!0,flat:!1,mtime:t.mtime,mode:t.mode},t);for(let o=0;o<e.length;o++)await n._bucket.put(e[o].name,{size:e[o].size,cid:e[o].cid});const i=await last(n.flush(r));if(i==null)throw new Error("Flushing shard yielded no result");return i},updateShardedDirectory=async(r,e,t)=>{const n=UnixFS.unmarshal(r[0].node.Data??new Uint8Array(0)),i=BigInt(Math.pow(2,hamtBucketBits));r.reverse();let o,a;for(let c=0;c<r.length;c++){const l=c===r.length-1,u=r[c],f=Uint8Array.from(u.children.bitField().reverse()),g=new UnixFS({type:"hamt-sharded-directory",data:f,fanout:i,hashType:hamtHashCode});l&&(g.mtime=n.mtime,g.mode=n.mode),a={Data:g.marshal(),Links:u.node.Links};const $=encode$b(prepare(a));if(o=await persist($,e,t),!l){const S=r[c+1];if(S==null)throw new Error("Was not operating on shard root but also had no parent?");log$9("updating link in parent sub-shard with prefix %s",S.prefix),S.node.Links=S.node.Links.filter(E=>E.Name!==S.prefix),S.node.Links.push({Name:S.prefix,Hash:o,Tsize:u.node.Links.reduce((E,v)=>E+(v.Tsize??0),$.byteLength)})}}if(o==null||a==null)throw new Error("Noting persisted");return{cid:o,node:a}},recreateShardedDirectory=async(r,e,t,n)=>{const o=wrapHash(hamtHashFn)(fromString$b(e)),a=[];for(;;){const c=await t.get(r,n),l=decode$d(c),u=new SparseArray,f=await o.take(hamtBucketBits),g=toPrefix(f);a.push({prefix:g,children:u,node:l});let $;for(const E of l.Links){const v=E.Name??"";if(v.length<2)throw new Error("Invalid HAMT - link name was too short");const T=parseInt(v.substring(0,2),16);u.set(T,!0),v.startsWith(g)&&($=E)}if($==null){log$9("no link found with prefix %s for %s",g,e);break}const S=$.Name??"";if(S.length<2)throw new Error("Invalid HAMT - link name was too short");if(S.length===2){r=$.Hash,log$9("descend into sub-shard with prefix %s",S);continue}break}return{path:a,hash:o}};async function isOverShardThreshold(r,e,t,n){if(r.Data==null)throw new Error("DagPB node had no data");const i=UnixFS.unmarshal(r.Data);let o;if(i.type==="directory")o=estimateNodeSize(r);else if(i.type==="hamt-sharded-directory")o=await estimateShardSize(r,0,t,e,n);else throw new Error("Can only estimate the size of directories or shards");return o>t}function estimateNodeSize(r){let e=0;for(const t of r.Links)e+=(t.Name??"").length,e+=t.Hash.version===1?CID_V1.bytes.byteLength:CID_V0.bytes.byteLength;return e}async function estimateShardSize(r,e,t,n,i){if(e>t)return t;if(r.Data==null||!UnixFS.unmarshal(r.Data).isDirectory())return e;for(const a of r.Links){let c=a.Name??"";if(c=c.substring(2),e+=c.length,e+=a.Hash.bytes.byteLength,a.Hash.code===code){const l=await n.get(a.Hash,i),u=decode$d(l);e+=await estimateShardSize(u,e,t,n,i)}}return e}const log$8=logger$2("helia:unixfs:components:utils:add-link");async function addLink(r,e,t,n){if(r.node.Data==null)throw new InvalidParametersError("Invalid parent passed to addLink");if(UnixFS.unmarshal(r.node.Data).type==="hamt-sharded-directory")return log$8("adding link to sharded directory"),addToShardedDirectory(r,e,t,n);log$8(`adding ${e.Name} (${e.Hash}) to regular directory`);const o=await addToDirectory(r,e,t,n);if(await isOverShardThreshold(o.node,t,n.shardSplitThresholdBytes,n)){log$8("converting directory to sharded directory");const a=await convertToShardedDirectory(o,t);o.cid=a.cid,o.node=decode$d(await t.get(a.cid,n))}return o}const convertToShardedDirectory=async(r,e)=>{if(r.node.Data==null)throw new InvalidParametersError("Invalid parent passed to convertToShardedDirectory");const t=UnixFS.unmarshal(r.node.Data),n=await createShard(e,r.node.Links.map(i=>({name:i.Name??"",size:BigInt(i.Tsize??0),cid:i.Hash})),{mode:t.mode,mtime:t.mtime,cidVersion:r.cid.version});return log$8(`converted directory to sharded directory ${n.cid}`),n},addToDirectory=async(r,e,t,n)=>{const i=r.node.Links.filter(f=>{const g=f.Name===e.Name;if(g&&!n.allowOverwriting)throw new AlreadyExistsError;return!g});if(i.push(e),r.node.Data==null)throw new InvalidPBNodeError("Parent node with no data passed to addToDirectory");const o=UnixFS.unmarshal(r.node.Data);let a;if(o.mtime!=null){const f=Date.now(),g=Math.floor(f/1e3);o.mtime={secs:BigInt(g),nsecs:(f-g*1e3)*1e3},a=o.marshal()}else a=r.node.Data;r.node=prepare({Data:a,Links:i});const c=encode$b(r.node),l=await sha256$2.digest(c),u=CID$3.create(r.cid.version,code,l);return await t.put(u,c),{node:r.node,cid:u}},addToShardedDirectory=async(r,e,t,n)=>{const{path:i,hash:o}=await recreateShardedDirectory(r.cid,e.Name,t,n),a=i[i.length-1];if(a==null)throw new Error("Invalid HAMT, could not generate path");const c=a.prefix,l=parseInt(c,16);log$8("next prefix for %s is %s",e.Name,c);const u=`${c}${e.Name}`,f=a.node.Links.find(g=>(g.Name??"").startsWith(c));if(f!=null)if(log$8("link %s was present in shard",u),f.Name===u){if(!n.allowOverwriting)throw new AlreadyExistsError;log$8("overwriting %s in subshard",e.Name),a.node.Links=a.node.Links.filter(g=>g.Name!==u),a.node.Links.push({Name:u,Hash:e.Hash,Tsize:e.Tsize})}else{if(f.Name?.length===2)throw new Error("Existing link was subshard?!");{log$8("prefix %s already exists, creating new subshard",c);const g=a.node.Links.findIndex(T=>T.Name?.startsWith(c)),$=a.node.Links.splice(g,1)[0],S=($.Name??"").substring(2),v=wrapHash(hamtHashFn)(fromString$b(S));for(let T=0;T<i.length;T++)await v.take(hamtBucketBits);for(;;){const T=await v.take(hamtBucketBits),I=toPrefix(T);$.Name=`${I}${S}`;const A=await o.take(hamtBucketBits),P=toPrefix(A);if(I===P){const D=new SparseArray;D.set(A,!0),i.push({prefix:P,children:D,node:{Links:[]}});continue}const x=new SparseArray;x.set(A,!0),x.set(T,!0),i.push({prefix:c,children:x,node:{Links:[$,{Name:`${P}${e.Name}`,Hash:e.Hash,Tsize:e.Tsize}]}});break}}}else log$8("link %s was not present in sub-shard",u),e.Name=u,a.node.Links.push(e),a.children.set(l,!0),log$8("adding %s to existing sub-shard",u);return updateShardedDirectory(i,t,n)};async function cidToDirectory(r,e,t={}){const n=await exporter$1(r,e,t);if(n.type!=="directory")throw new NotADirectoryError(`${r.toString()} was not a UnixFS directory`);return{cid:r,node:n.node}}async function cidToPBLink(r,e,t,n){const i=await exporter$1(r,t,n);if(i.type!=="directory"&&i.type!=="file"&&i.type!=="raw")throw new NotUnixFSError(`${r.toString()} was not a UnixFS node`);return{Name:e,Tsize:i.node instanceof Uint8Array?i.node.byteLength:dagNodeTsize(i.node),Hash:r}}function dagNodeTsize(r){const e=r.Links.reduce((t,n)=>t+(n.Tsize??0),0);return encode$b(r).byteLength+e}const log$7=logger$2("helia:unixfs:components:utils:resolve");async function resolve(r,e,t,n){if(e==null||e==="")return{cid:r};log$7('resolve "%s" under %c',e,r);const i=e.split("/").filter(Boolean),o=[{name:"",cid:r,size:0n}];for(let a=0;a<i.length;a++){const c=i[a],l=await exporter$1(r,t,n);if(log$7('resolving "%s"',c,l),l.type==="file"){if(a<i.length-1)throw new InvalidParametersError("Path was invalid");r=l.cid}else if(l.type==="directory"){let u;for await(const f of l.content())if(f.name===c){u=f.cid;break}if(u==null)throw new DoesNotExistError("Could not find path in directory");r=u,o.push({name:c,cid:r,size:l.size})}else throw new InvalidParametersError("Could not resolve path")}return log$7("resolved %s to %c",e,r),{cid:r,path:e,segments:o}}async function updatePathCids(r,e,t,n){if(e.segments==null||e.segments.length===0)return r;let i=e.segments.pop();if(i==null)throw new Error("Insufficient segments");i.cid=r,e.segments.reverse();for(const o of e.segments){const[a,c]=await Promise.all([cidToDirectory(o.cid,t,n),cidToPBLink(i.cid,i.name,t,n)]);r=(await addLink(a,c,t,{...n,allowOverwriting:!0,cidVersion:r.version})).cid,o.cid=r,i=o}return r}const mergeOptions$7=mergeOptions$9.bind({ignoreUndefined:!0}),defaultOptions$b={};async function*cat(r,e,t={}){const n=mergeOptions$7(defaultOptions$b,t),i=await resolve(r,n.path,e,n),o=await exporter$1(i.cid,e,n);if(o.type!=="file"&&o.type!=="raw")throw new NotAFileError;if(o.content==null)throw new NoContentError;yield*o.content(n)}const SHARD_SPLIT_THRESHOLD_BYTES=262144,mergeOptions$6=mergeOptions$9.bind({ignoreUndefined:!0}),log$6=logger$2("helia:unixfs:chmod"),defaultOptions$a={recursive:!1,shardSplitThresholdBytes:SHARD_SPLIT_THRESHOLD_BYTES};async function chmod(r,e,t,n={}){const i=mergeOptions$6(defaultOptions$a,n),o=await resolve(r,i.path,t,n);if(log$6("chmod %c %d",o.cid,e),i.recursive){const $=await pipe(async function*(){for await(const S of recursive(o.cid,t,n)){let E,v=[];if(S.type==="raw")E=new UnixFS({type:"file",data:S.node});else if(S.type==="file"||S.type==="directory")E=S.unixfs,v=S.node.Links;else throw new NotUnixFSError;E.mode=e;const T={Data:E.marshal(),Links:v};yield{path:S.path,content:T}}},S=>importer(S,t,{...i,dagBuilder:async function*(E,v){for await(const T of E)yield async function(){const I=T.content,A=encode$b(I),P=await persist(A,v,{...i,cidVersion:r.version});if(I.Data==null)throw new InvalidPBNodeError(`${P} had no data`);const x=UnixFS.unmarshal(I.Data);return{cid:P,size:BigInt(A.length),path:T.path,unixfs:x}}}}),async S=>last(S));if($==null)throw new UnknownError(`Could not chmod ${o.cid.toString()}`);return updatePathCids($.cid,o,t,i)}const a=await t.get(o.cid,n);let c,l=[];if(o.cid.code===code$5)c=new UnixFS({type:"file",data:a});else{const $=decode$d(a);if($.Data==null)throw new InvalidPBNodeError(`${o.cid.toString()} had no data`);l=$.Links,c=UnixFS.unmarshal($.Data)}c.mode=e;const u=encode$b({Data:c.marshal(),Links:l}),f=await sha256$2.digest(u),g=CID$3.create(o.cid.version,code,f);return await t.put(g,u),updatePathCids(g,o,t,i)}const mergeOptions$5=mergeOptions$9.bind({ignoreUndefined:!0}),log$5=logger$2("helia:unixfs:cp"),defaultOptions$9={force:!1,shardSplitThresholdBytes:SHARD_SPLIT_THRESHOLD_BYTES};async function cp(r,e,t,n,i={}){const o=mergeOptions$5(defaultOptions$9,i);if(t.includes("/"))throw new InvalidParametersError("Name must not have slashes");const[a,c]=await Promise.all([cidToDirectory(e,n,o),cidToPBLink(r,t,n,o)]);return log$5('Adding %c as "%s" to %c',r,t,e),(await addLink(a,c,n,{allowOverwriting:o.force,cidVersion:e.version,...o})).cid}const mergeOptions$4=mergeOptions$9.bind({ignoreUndefined:!0}),defaultOptions$8={};async function*ls(r,e,t={}){const n=mergeOptions$4(defaultOptions$8,t),i=await resolve(r,n.path,e,n),o=await exporter$1(i.cid,e);if(o.type==="file"||o.type==="raw"){yield o;return}if(o.content==null)throw new NoContentError;if(o.type!=="directory")throw new NotADirectoryError;yield*o.content({offset:t.offset,length:t.length})}const mergeOptions$3=mergeOptions$9.bind({ignoreUndefined:!0}),log$4=logger$2("helia:unixfs:mkdir"),defaultOptions$7={cidVersion:1,force:!1,shardSplitThresholdBytes:SHARD_SPLIT_THRESHOLD_BYTES};async function mkdir(r,e,t,n={}){const i=mergeOptions$3(defaultOptions$7,n);if(e.includes("/"))throw new InvalidParametersError("Path must not have slashes");if((await exporter$1(r,t,n)).type!=="directory")throw new NotADirectoryError(`${r.toString()} was not a UnixFS directory`);log$4("creating %s",e);const c={Data:new UnixFS({type:"directory",mode:i.mode,mtime:i.mtime}).marshal(),Links:[]},l=encode$b(c),u=await sha256$2.digest(l),f=CID$3.create(i.cidVersion,code,u);await t.put(f,l);const[g,$]=await Promise.all([cidToDirectory(r,t,i),cidToPBLink(f,e,t,i)]);return log$4("adding empty dir called %s to %c",e,r),(await addLink(g,$,t,{...i,allowOverwriting:i.force})).cid}const log$3=logger$2("helia:unixfs:utils:remove-link");async function removeLink(r,e,t,n){if(r.node.Data==null)throw new InvalidPBNodeError("Parent node had no data");if(UnixFS.unmarshal(r.node.Data).type==="hamt-sharded-directory"){log$3(`removing ${e} from sharded directory`);const o=await removeFromShardedDirectory(r,e,t,n);return await isOverShardThreshold(o.node,t,n.shardSplitThresholdBytes,n)?o:(log$3("converting shard to flat directory %c",r.cid),convertToFlatDirectory(o,t,n))}return log$3(`removing link ${e} regular directory`),removeFromDirectory(r,e,t,n)}const removeFromDirectory=async(r,e,t,n)=>{r.node.Links=r.node.Links.filter(a=>a.Name!==e);const i=encode$b(r.node),o=await persist(i,t,{...n,cidVersion:r.cid.version});return log$3(`Updated regular directory ${o}`),{node:r.node,cid:o}},removeFromShardedDirectory=async(r,e,t,n)=>{const{path:i}=await recreateShardedDirectory(r.cid,e,t,n),o=i[i.length-1];if(o==null)throw new Error("Invalid HAMT, could not generate path");const a=o.node.Links.filter(u=>(u.Name??"").substring(2)===e).map(u=>u.Name).pop();if(a==null)throw new Error("File not found");const c=a.substring(0,2),l=parseInt(c,16);if(o.node.Links=o.node.Links.filter(u=>u.Name!==a),o.children.unset(l),o.node.Links.length===1)for(;i.length!==1;){const u=i[i.length-1];if(u==null||u.node.Links.length>1)break;i.pop();const f=i[i.length-1];if(f==null)break;const g=u.node.Links[0];f.node.Links=f.node.Links.filter($=>!($.Name??"").startsWith(f.prefix)),f.node.Links.push({Hash:g.Hash,Name:`${f.prefix}${(g.Name??"").substring(2)}`,Tsize:g.Tsize})}return updateShardedDirectory(i,t,n)},convertToFlatDirectory=async(r,e,t)=>{if(r.node.Data==null)throw new InvalidParametersError("Invalid parent passed to convertToFlatDirectory");const n={Links:[]},i=await exporter$1(r.cid,e);if(i.type!=="directory")throw new Error("Unexpected node type");for await(const l of i.content()){let u=0;l.node instanceof Uint8Array?u=l.node.byteLength:u=encode$b(l.node).length,n.Links.push({Hash:l.cid,Name:l.name,Tsize:u})}const o=UnixFS.unmarshal(r.node.Data);n.Data=new UnixFS({type:"directory",mode:o.mode,mtime:o.mtime}).marshal();const a=encode$b(prepare(n));return{cid:await persist(a,e,{codec:dagPB,cidVersion:r.cid.version,signal:t.signal}),node:n}},mergeOptions$2=mergeOptions$9.bind({ignoreUndefined:!0}),log$2=logger$2("helia:unixfs:rm"),defaultOptions$6={shardSplitThresholdBytes:SHARD_SPLIT_THRESHOLD_BYTES};async function rm(r,e,t,n={}){const i=mergeOptions$2(defaultOptions$6,n);if(e.includes("/"))throw new InvalidParametersError("Name must not have slashes");const o=await cidToDirectory(r,t,i);return log$2("Removing %s from %c",e,r),(await removeLink(o,e,t,{...i,cidVersion:r.version})).cid}const mergeOptions$1=mergeOptions$9.bind({ignoreUndefined:!0}),log$1=logger$2("helia:unixfs:stat"),defaultOptions$5={};async function stat(r,e,t={}){const n=mergeOptions$1(defaultOptions$5,t),i=await resolve(r,t.path,e,n);log$1("stat %c",i.cid);const o=await exporter$1(i.cid,e,n);if(o.type!=="file"&&o.type!=="directory"&&o.type!=="raw")throw new NotUnixFSError;let a=0n,c=0n,l=0n,u=0n,f=0,g,$;const S=o.type;let E;if(o.type==="raw"&&(a=BigInt(o.node.byteLength),c=BigInt(o.node.byteLength),l=BigInt(o.node.byteLength),u=BigInt(o.node.byteLength),f=1),o.type==="directory"&&(a=0n,c=BigInt(o.unixfs.marshal().byteLength),l=0n,u=c,f=1,g=o.unixfs.mode,$=o.unixfs.mtime,E=o.unixfs),o.type==="file"){const v=await inspectDag(i.cid,e,n);a=o.unixfs.fileSize(),c=BigInt((o.node.Data?.byteLength??0)+o.node.Links.reduce((T,I)=>T+(I.Tsize??0),0)),l=BigInt(v.localFileSize),u=BigInt(v.localDagSize),f=v.blocks,g=o.unixfs.mode,$=o.unixfs.mtime,E=o.unixfs}return{cid:i.cid,mode:g,mtime:$,fileSize:a,dagSize:c,localFileSize:l,localDagSize:u,blocks:f,type:S,unixfs:E}}async function inspectDag(r,e,t){const n={localFileSize:0,localDagSize:0,blocks:0};if(await e.has(r,t)){const i=await e.get(r,t);if(n.blocks++,n.localDagSize+=i.byteLength,r.code===code$5)n.localFileSize+=i.byteLength;else if(r.code===code){const o=decode$d(i);if(o.Links.length>0)for(const a of o.Links){const c=await inspectDag(a.Hash,e,t);n.localFileSize+=c.localFileSize,n.localDagSize+=c.localDagSize,n.blocks+=c.blocks}else{if(o.Data==null)throw new InvalidPBNodeError(`PBNode ${r.toString()} had no data`);const a=UnixFS.unmarshal(o.Data);if(a.data==null)throw new InvalidPBNodeError(`UnixFS node ${r.toString()} had no data`);n.localFileSize+=a.data.byteLength??0}}else throw new UnknownError(`${r.toString()} was neither DAG_PB nor RAW`)}return n}const mergeOptions=mergeOptions$9.bind({ignoreUndefined:!0}),log=logger$2("helia:unixfs:touch"),defaultOptions$4={recursive:!1,shardSplitThresholdBytes:SHARD_SPLIT_THRESHOLD_BYTES};async function touch(r,e,t={}){const n=mergeOptions(defaultOptions$4,t),i=await resolve(r,n.path,e,n),o=n.mtime??{secs:BigInt(Math.round(Date.now()/1e3)),nsecs:0};if(log("touch %c %o",i.cid,o),n.recursive){const $=await pipe(async function*(){for await(const S of recursive(i.cid,e)){let E,v;if(S.type==="raw")E=new UnixFS({data:S.node}),v=[];else if(S.type==="file"||S.type==="directory")E=S.unixfs,v=S.node.Links;else throw new NotUnixFSError;E.mtime=o;const T={Data:E.marshal(),Links:v};yield{path:S.path,content:T}}},S=>importer(S,e,{...n,dagBuilder:async function*(E,v){for await(const T of E)yield async function(){const I=T.content,A=encode$b(I),P=await persist(A,v,{...n,cidVersion:r.version});if(I.Data==null)throw new InvalidPBNodeError(`${P} had no data`);const x=UnixFS.unmarshal(I.Data);return{cid:P,size:BigInt(A.length),path:T.path,unixfs:x}}}}),async S=>last(S));if($==null)throw new UnknownError(`Could not chmod ${i.cid.toString()}`);return updatePathCids($.cid,i,e,n)}const a=await e.get(i.cid,t);let c,l=[];if(i.cid.code===code$5)c=new UnixFS({data:a});else{const $=decode$d(a);if(l=$.Links,$.Data==null)throw new InvalidPBNodeError(`${i.cid.toString()} had no data`);c=UnixFS.unmarshal($.Data)}c.mtime=o;const u=encode$b({Data:c.marshal(),Links:l}),f=await sha256$2.digest(u),g=CID$3.create(i.cid.version,code,f);return await e.put(g,u),updatePathCids(g,i,e,n)}class DefaultUnixFS{constructor(e){_(this,"components");this.components=e}async*addAll(e,t={}){yield*addAll(e,this.components.blockstore,t)}async addBytes(e,t={}){return addBytes(e,this.components.blockstore,t)}async addByteStream(e,t={}){return addByteStream(e,this.components.blockstore,t)}async addFile(e,t={}){return addFile(e,this.components.blockstore,t)}async addDirectory(e={},t={}){return addDirectory(e,this.components.blockstore,t)}async*cat(e,t={}){yield*cat(e,this.components.blockstore,t)}async chmod(e,t,n={}){return chmod(e,t,this.components.blockstore,n)}async cp(e,t,n,i={}){return cp(e,t,n,this.components.blockstore,i)}async*ls(e,t={}){yield*ls(e,this.components.blockstore,t)}async mkdir(e,t,n={}){return mkdir(e,t,this.components.blockstore,n)}async rm(e,t,n={}){return rm(e,t,this.components.blockstore,n)}async stat(e,t={}){return stat(e,this.components.blockstore,t)}async touch(e,t={}){return touch(e,this.components.blockstore,t)}}function unixfs(r){return new DefaultUnixFS(r)}var TopicValidatorResult$9;(function(r){r.Accept="accept",r.Ignore="ignore",r.Reject="reject"})(TopicValidatorResult$9||(TopicValidatorResult$9={}));const transportSymbol=Symbol.for("@libp2p/transport");var FaultTolerance$9;(function(r){r[r.FATAL_ALL=0]="FATAL_ALL",r[r.NO_FATAL=1]="NO_FATAL"})(FaultTolerance$9||(FaultTolerance$9={}));var Be;let AbortError$1=(Be=class extends Error{constructor(t="The operation was aborted"){super(t);_(this,"code");_(this,"type");this.code=Be.code,this.type=Be.type}},_(Be,"code","ABORT_ERR"),_(Be,"type","aborted"),Be),CodeError$9=class extends Error{constructor(t,n,i){super(t);_(this,"code");_(this,"props");this.code=n,this.name=i?.name??"CodeError",this.props=i??{}}};const CODE_P2P=421,CODE_CIRCUIT=290,CLOSE_TIMEOUT$2=500;function all(r){return r.filter(e=>{if(e.protoCodes().includes(CODE_CIRCUIT))return!1;const t=e.decapsulateCode(CODE_P2P);return WebSockets$2.matches(t)||WebSocketsSecure.matches(t)})}function wss(r){return r.filter(e=>{if(e.protoCodes().includes(CODE_CIRCUIT))return!1;const t=e.decapsulateCode(CODE_P2P);return WebSocketsSecure.matches(t)})}function createListener(){throw new Error("WebSocket Servers can not be created in the browser!")}function socketToMaConn(r,e,t){const n=t.logger.forComponent("libp2p:websockets:maconn"),i={log:n,async sink(o){try{await r.sink(async function*(){for await(const a of o)a instanceof Uint8Array?yield a:yield a.subarray()}())}catch(a){a.type!=="aborted"&&n.error(a)}},source:r.source,remoteAddr:e,timeline:{open:Date.now()},async close(o={}){const a=Date.now();if(o.signal==null){const l=AbortSignal.timeout(CLOSE_TIMEOUT$2);o={...o,signal:l}}const c=()=>{const{host:l,port:u}=i.remoteAddr.toOptions();n("timeout closing stream to %s:%s after %dms, destroying it manually",l,u,Date.now()-a),this.abort(new CodeError$9("Socket close timeout","ERR_SOCKET_CLOSE_TIMEOUT"))};o.signal?.addEventListener("abort",c);try{await r.close()}catch(l){n.error("error closing WebSocket gracefully",l),this.abort(l)}finally{o.signal?.removeEventListener("abort",c),i.timeline.close=Date.now()}},abort(o){const{host:a,port:c}=i.remoteAddr.toOptions();n("timeout closing stream to %s:%s due to error",a,c,o),r.destroy(),i.timeline.close=Date.now()}};return r.socket.addEventListener("close",()=>{i.timeline.close==null&&(i.timeline.close=Date.now())},{once:!0}),i}var Yr,Qr;class WebSockets{constructor(e,t){_(this,"log");_(this,"init");_(this,"logger");_(this,Yr,"@libp2p/websockets");_(this,Qr,!0);this.log=e.logger.forComponent("libp2p:websockets"),this.logger=e.logger,this.init=t}async dial(e,t){this.log("dialing %s",e),t=t??{};const n=await this._connect(e,t),i=socketToMaConn(n,e,{logger:this.logger});this.log("new outbound connection %s",i.remoteAddr);const o=await t.upgrader.upgradeOutbound(i);return this.log("outbound connection %s upgraded",i.remoteAddr),o}async _connect(e,t){if(t?.signal?.aborted===!0)throw new AbortError$1;const n=e.toOptions();this.log("dialing %s:%s",n.host,n.port);const i=pDefer(),o=connect(multiaddrToUri(e),this.init);if(o.socket.addEventListener("error",()=>{const l=new CodeError$9(`Could not connect to ${e.toString()}`,"ERR_CONNECTION_FAILED");this.log.error("connection error:",l),i.reject(l)}),t.signal==null)return await Promise.race([o.connected(),i.promise]),this.log("connected %s",e),o;let a;const c=new Promise((l,u)=>{if(a=()=>{u(new AbortError$1),o.close().catch(f=>{this.log.error("error closing raw socket",f)})},t?.signal?.aborted===!0){a();return}t?.signal?.addEventListener("abort",a)});try{await Promise.race([c,i.promise,o.connected()])}finally{a!=null&&t?.signal?.removeEventListener("abort",a)}return this.log("connected %s",e),o}createListener(e){return createListener({logger:this.logger},{...this.init,...e})}filter(e){return e=Array.isArray(e)?e:[e],this.init?.filter!=null?this.init?.filter(e):isBrowser||isWebWorker?wss(e):all(e)}}Yr=Symbol.toStringTag,Qr=transportSymbol;function webSockets(r={}){return e=>new WebSockets(e,r)}const NOISE_MSG_MAX_LENGTH_BYTES=65535,NOISE_MSG_MAX_LENGTH_BYTES_WITHOUT_TAG=NOISE_MSG_MAX_LENGTH_BYTES-16,DUMP_SESSION_KEYS=!!globalThis.process?.env?.DUMP_SESSION_KEYS,pureJsCrypto={hashSHA256(r){return sha256(r.subarray())},getHKDF(r,e){const t=extract(sha256,e,r),i=expand(sha256,t,void 0,96),o=i.subarray(0,32),a=i.subarray(32,64),c=i.subarray(64,96);return[o,a,c]},generateX25519KeyPair(){const r=x25519.utils.randomPrivateKey();return{publicKey:x25519.getPublicKey(r),privateKey:r}},generateX25519KeyPairFromSeed(r){return{publicKey:x25519.getPublicKey(r),privateKey:r}},generateX25519SharedKey(r,e){return x25519.getSharedSecret(r.subarray(),e.subarray())},chaCha20Poly1305Encrypt(r,e,t,n){return chacha20poly1305(n,e,t).encrypt(r.subarray())},chaCha20Poly1305Decrypt(r,e,t,n,i){return chacha20poly1305(n,e,t).decrypt(r.subarray(),i)}},defaultCrypto=pureJsCrypto,uint16BEEncode=r=>{const e=allocUnsafe$3(2);return new DataView(e.buffer,e.byteOffset,e.byteLength).setUint16(0,r,!1),e};uint16BEEncode.bytes=2;const uint16BEDecode=r=>{if(r.length<2)throw RangeError("Could not decode int16BE");return r instanceof Uint8Array?new DataView(r.buffer,r.byteOffset,r.byteLength).getUint16(0,!1):r.getUint16(0)};uint16BEDecode.bytes=2;function encode0(r){return new Uint8ArrayList(r.ne,r.ciphertext)}function encode1(r){return new Uint8ArrayList(r.ne,r.ns,r.ciphertext)}function encode2(r){return new Uint8ArrayList(r.ns,r.ciphertext)}function decode0(r){if(r.length<32)throw new Error("Cannot decode stage 0 MessageBuffer: length less than 32 bytes.");return{ne:r.subarray(0,32),ciphertext:r.subarray(32,r.length),ns:alloc$1(0)}}function decode1(r){if(r.length<80)throw new Error("Cannot decode stage 1 MessageBuffer: length less than 80 bytes.");return{ne:r.subarray(0,32),ns:r.subarray(32,80),ciphertext:r.subarray(80,r.length)}}function decode2(r){if(r.length<48)throw new Error("Cannot decode stage 2 MessageBuffer: length less than 48 bytes.");return{ne:alloc$1(0),ns:r.subarray(0,48),ciphertext:r.subarray(48,r.length)}}const CHACHA_TAG_LENGTH=16;function encryptStream(r,e){return async function*(t){for await(const n of t)for(let i=0;i<n.length;i+=NOISE_MSG_MAX_LENGTH_BYTES_WITHOUT_TAG){let o=i+NOISE_MSG_MAX_LENGTH_BYTES_WITHOUT_TAG;o>n.length&&(o=n.length);let a;n instanceof Uint8Array?a=r.encrypt(n.subarray(i,o),r.session):a=r.encrypt(n.sublist(i,o),r.session),e?.encryptedPackets.increment(),yield new Uint8ArrayList(uint16BEEncode(a.byteLength),a)}}}function decryptStream(r,e){return async function*(t){for await(const n of t)for(let i=0;i<n.length;i+=NOISE_MSG_MAX_LENGTH_BYTES){let o=i+NOISE_MSG_MAX_LENGTH_BYTES;if(o>n.length&&(o=n.length),o-CHACHA_TAG_LENGTH<i)throw new Error("Invalid chunk");const a=n.sublist(i,o),c=n.subarray(i,o-CHACHA_TAG_LENGTH),{plaintext:l,valid:u}=r.decrypt(a,r.session,c);if(!u)throw e?.decryptErrors.increment(),new Error("Failed to validate decrypted chunk");e?.decryptedPackets.increment(),yield l}}}const vt=class vt extends Error{constructor(t="Unexpected Peer"){super(t);_(this,"code");this.code=vt.code}};_(vt,"code","ERR_UNEXPECTED_PEER");let UnexpectedPeerError=vt;const St=class St extends Error{constructor(t="Invalid crypto exchange"){super(t);_(this,"code");this.code=St.code}};_(St,"code","ERR_INVALID_CRYPTO_EXCHANGE");let InvalidCryptoExchangeError=St;var TopicValidatorResult$8;(function(r){r.Accept="accept",r.Ignore="ignore",r.Reject="reject"})(TopicValidatorResult$8||(TopicValidatorResult$8={}));var FaultTolerance$8;(function(r){r[r.FATAL_ALL=0]="FATAL_ALL",r[r.NO_FATAL=1]="NO_FATAL"})(FaultTolerance$8||(FaultTolerance$8={}));let CodeError$8=class extends Error{constructor(t,n,i){super(t);_(this,"code");_(this,"props");this.code=n,this.name=i?.name??"CodeError",this.props=i??{}}};function bigIntegerToUintBase64url(r,e){let t=Uint8Array.from(r.abs().toByteArray());if(t=t[0]===0?t.subarray(1):t,e!=null){if(t.length>e)throw new Error("byte array longer than desired length");t=concat$6([new Uint8Array(e-t.length),t])}return toString$b(t,"base64url")}function base64urlToBigInteger(r){const e=base64urlToBuffer(r);return new forge$n.jsbn.BigInteger(toString$b(e,"base16"),16)}function base64urlToBuffer(r,e){let t=fromString$b(r,"base64urlpad");if(e!=null){if(t.length>e)throw new Error("byte array longer than desired length");t=concat$6([new Uint8Array(e-t.length),t])}return t}function isPromise$3(r){return r==null?!1:typeof r.then=="function"&&typeof r.catch=="function"&&typeof r.finally=="function"}const PUBLIC_KEY_BYTE_LENGTH=32,PRIVATE_KEY_BYTE_LENGTH=64,KEYS_BYTE_LENGTH=32;function generateKey$2(){const r=ed25519.utils.randomPrivateKey(),e=ed25519.getPublicKey(r);return{privateKey:concatKeys(r,e),publicKey:e}}function generateKeyFromSeed(r){if(r.length!==KEYS_BYTE_LENGTH)throw new TypeError('"seed" must be 32 bytes in length.');if(!(r instanceof Uint8Array))throw new TypeError('"seed" must be a node.js Buffer, or Uint8Array.');const e=r,t=ed25519.getPublicKey(e);return{privateKey:concatKeys(e,t),publicKey:t}}function hashAndSign$2(r,e){const t=r.subarray(0,KEYS_BYTE_LENGTH);return ed25519.sign(e instanceof Uint8Array?e:e.subarray(),t)}function hashAndVerify$2(r,e,t){return ed25519.verify(e,t instanceof Uint8Array?t:t.subarray(),r)}function concatKeys(r,e){const t=new Uint8Array(PRIVATE_KEY_BYTE_LENGTH);for(let n=0;n<KEYS_BYTE_LENGTH;n++)t[n]=r[n],t[KEYS_BYTE_LENGTH+n]=e[n];return t}const webcrypto={get(r=globalThis){const e=r.crypto;if(e==null||e.subtle==null)throw Object.assign(new Error("Missing Web Crypto API. The most likely cause of this error is that this page is being accessed from an insecure context (i.e. not HTTPS). For more information and possible resolutions see https://github.com/libp2p/js-libp2p/blob/main/packages/crypto/README.md#web-crypto-api"),{code:"ERR_MISSING_WEB_CRYPTO"});return e}},derivedEmptyPasswordKey={alg:"A128GCM",ext:!0,k:"scm9jmO_4BJAgdwWGVulLg",key_ops:["encrypt","decrypt"],kty:"oct"};function create$1(r){const e=r?.algorithm??"AES-GCM";let t=r?.keyLength??16;const n=r?.nonceLength??12,i=r?.digest??"SHA-256",o=r?.saltLength??16,a=r?.iterations??32767,c=webcrypto.get();t*=8;async function l(g,$){const S=c.getRandomValues(new Uint8Array(o)),E=c.getRandomValues(new Uint8Array(n)),v={name:e,iv:E};typeof $=="string"&&($=fromString$b($));let T;if($.length===0){T=await c.subtle.importKey("jwk",derivedEmptyPasswordKey,{name:"AES-GCM"},!0,["encrypt"]);try{const A={name:"PBKDF2",salt:S,iterations:a,hash:{name:i}},P=await c.subtle.importKey("raw",$,{name:"PBKDF2"},!1,["deriveKey"]);T=await c.subtle.deriveKey(A,P,{name:e,length:t},!0,["encrypt"])}catch{T=await c.subtle.importKey("jwk",derivedEmptyPasswordKey,{name:"AES-GCM"},!0,["encrypt"])}}else{const A={name:"PBKDF2",salt:S,iterations:a,hash:{name:i}},P=await c.subtle.importKey("raw",$,{name:"PBKDF2"},!1,["deriveKey"]);T=await c.subtle.deriveKey(A,P,{name:e,length:t},!0,["encrypt"])}const I=await c.subtle.encrypt(v,T,g);return concat$6([S,v.iv,new Uint8Array(I)])}async function u(g,$){const S=g.subarray(0,o),E=g.subarray(o,o+n),v=g.subarray(o+n),T={name:e,iv:E};typeof $=="string"&&($=fromString$b($));let I;if($.length===0)try{const P={name:"PBKDF2",salt:S,iterations:a,hash:{name:i}},x=await c.subtle.importKey("raw",$,{name:"PBKDF2"},!1,["deriveKey"]);I=await c.subtle.deriveKey(P,x,{name:e,length:t},!0,["decrypt"])}catch{I=await c.subtle.importKey("jwk",derivedEmptyPasswordKey,{name:"AES-GCM"},!0,["decrypt"])}else{const P={name:"PBKDF2",salt:S,iterations:a,hash:{name:i}},x=await c.subtle.importKey("raw",$,{name:"PBKDF2"},!1,["deriveKey"]);I=await c.subtle.deriveKey(P,x,{name:e,length:t},!0,["decrypt"])}const A=await c.subtle.decrypt(T,I,v);return new Uint8Array(A)}return{encrypt:l,decrypt:u}}async function exporter(r,e){const n=await create$1().encrypt(r,e);return base64$6.encode(n)}var KeyType$1;(function(r){r.RSA="RSA",r.Ed25519="Ed25519",r.Secp256k1="Secp256k1"})(KeyType$1||(KeyType$1={}));var __KeyTypeValues$1;(function(r){r[r.RSA=0]="RSA",r[r.Ed25519=1]="Ed25519",r[r.Secp256k1=2]="Secp256k1"})(__KeyTypeValues$1||(__KeyTypeValues$1={}));(function(r){r.codec=()=>enumeration(__KeyTypeValues$1)})(KeyType$1||(KeyType$1={}));var PublicKey$1;(function(r){let e;r.codec=()=>(e==null&&(e=message((t,n,i={})=>{i.lengthDelimited!==!1&&n.fork(),t.Type!=null&&(n.uint32(8),KeyType$1.codec().encode(t.Type,n)),t.Data!=null&&(n.uint32(18),n.bytes(t.Data)),i.lengthDelimited!==!1&&n.ldelim()},(t,n)=>{const i={},o=n==null?t.len:t.pos+n;for(;t.pos<o;){const a=t.uint32();switch(a>>>3){case 1:i.Type=KeyType$1.codec().decode(t);break;case 2:i.Data=t.bytes();break;default:t.skipType(a&7);break}}return i})),e),r.encode=t=>encodeMessage(t,r.codec()),r.decode=t=>decodeMessage$1(t,r.codec())})(PublicKey$1||(PublicKey$1={}));var PrivateKey$1;(function(r){let e;r.codec=()=>(e==null&&(e=message((t,n,i={})=>{i.lengthDelimited!==!1&&n.fork(),t.Type!=null&&(n.uint32(8),KeyType$1.codec().encode(t.Type,n)),t.Data!=null&&(n.uint32(18),n.bytes(t.Data)),i.lengthDelimited!==!1&&n.ldelim()},(t,n)=>{const i={},o=n==null?t.len:t.pos+n;for(;t.pos<o;){const a=t.uint32();switch(a>>>3){case 1:i.Type=KeyType$1.codec().decode(t);break;case 2:i.Data=t.bytes();break;default:t.skipType(a&7);break}}return i})),e),r.encode=t=>encodeMessage(t,r.codec()),r.decode=t=>decodeMessage$1(t,r.codec())})(PrivateKey$1||(PrivateKey$1={}));class Ed25519PublicKey{constructor(e){_(this,"_key");this._key=ensureKey(e,PUBLIC_KEY_BYTE_LENGTH)}verify(e,t){return hashAndVerify$2(this._key,t,e)}marshal(){return this._key}get bytes(){return PublicKey$1.encode({Type:KeyType$1.Ed25519,Data:this.marshal()}).subarray()}equals(e){return equals$4(this.bytes,e.bytes)}hash(){const e=sha256$2.digest(this.bytes);return isPromise$3(e)?e.then(({bytes:t})=>t):e.bytes}}class Ed25519PrivateKey{constructor(e,t){_(this,"_key");_(this,"_publicKey");this._key=ensureKey(e,PRIVATE_KEY_BYTE_LENGTH),this._publicKey=ensureKey(t,PUBLIC_KEY_BYTE_LENGTH)}sign(e){return hashAndSign$2(this._key,e)}get public(){return new Ed25519PublicKey(this._publicKey)}marshal(){return this._key}get bytes(){return PrivateKey$1.encode({Type:KeyType$1.Ed25519,Data:this.marshal()}).subarray()}equals(e){return equals$4(this.bytes,e.bytes)}async hash(){const e=sha256$2.digest(this.bytes);let t;return isPromise$3(e)?{bytes:t}=await e:t=e.bytes,t}async id(){const e=identity$3.digest(this.public.bytes);return base58btc$4.encode(e.bytes).substring(1)}async export(e,t="libp2p-key"){if(t==="libp2p-key")return exporter(this.bytes,e);throw new CodeError$8(`export format '${t}' is not supported`,"ERR_INVALID_EXPORT_FORMAT")}}function unmarshalEd25519PrivateKey(r){if(r.length>PRIVATE_KEY_BYTE_LENGTH){r=ensureKey(r,PRIVATE_KEY_BYTE_LENGTH+PUBLIC_KEY_BYTE_LENGTH);const n=r.subarray(0,PRIVATE_KEY_BYTE_LENGTH),i=r.subarray(PRIVATE_KEY_BYTE_LENGTH,r.length);return new Ed25519PrivateKey(n,i)}r=ensureKey(r,PRIVATE_KEY_BYTE_LENGTH);const e=r.subarray(0,PRIVATE_KEY_BYTE_LENGTH),t=r.subarray(PUBLIC_KEY_BYTE_LENGTH);return new Ed25519PrivateKey(e,t)}function unmarshalEd25519PublicKey(r){return r=ensureKey(r,PUBLIC_KEY_BYTE_LENGTH),new Ed25519PublicKey(r)}async function generateKeyPair$3(){const{privateKey:r,publicKey:e}=generateKey$2();return new Ed25519PrivateKey(r,e)}async function generateKeyPairFromSeed(r){const{privateKey:e,publicKey:t}=generateKeyFromSeed(r);return new Ed25519PrivateKey(e,t)}function ensureKey(r,e){if(r=Uint8Array.from(r??[]),r.length!==e)throw new CodeError$8(`Key must be a Uint8Array of length ${e}, got ${r.length}`,"ERR_INVALID_KEY_TYPE");return r}const Ed25519=Object.freeze(Object.defineProperty({__proto__:null,Ed25519PrivateKey,Ed25519PublicKey,generateKeyPair:generateKeyPair$3,generateKeyPairFromSeed,unmarshalEd25519PrivateKey,unmarshalEd25519PublicKey},Symbol.toStringTag,{value:"Module"})),bits$1={"P-256":256,"P-384":384,"P-521":521},curveTypes$1=Object.keys(bits$1);curveTypes$1.join(" / ");function randomBytes$1(r){if(isNaN(r)||r<=0)throw new CodeError$8("random bytes length must be a Number bigger than 0","ERR_INVALID_LENGTH");return randomBytes$a(r)}function convert$2(r,e){return e.map(t=>base64urlToBigInteger(r[t]))}function jwk2priv(r){return forge$n.pki.setRsaPrivateKey(...convert$2(r,["n","e","d","p","q","dp","dq","qi"]))}function jwk2pub(r){return forge$n.pki.setRsaPublicKey(...convert$2(r,["n","e"]))}function pkcs1ToJwk(r){const e=forge$n.asn1.fromDer(toString$b(r,"ascii")),t=forge$n.pki.privateKeyFromAsn1(e);return{kty:"RSA",n:bigIntegerToUintBase64url(t.n),e:bigIntegerToUintBase64url(t.e),d:bigIntegerToUintBase64url(t.d),p:bigIntegerToUintBase64url(t.p),q:bigIntegerToUintBase64url(t.q),dp:bigIntegerToUintBase64url(t.dP),dq:bigIntegerToUintBase64url(t.dQ),qi:bigIntegerToUintBase64url(t.qInv),alg:"RS256"}}function jwkToPkcs1(r){if(r.n==null||r.e==null||r.d==null||r.p==null||r.q==null||r.dp==null||r.dq==null||r.qi==null)throw new CodeError$8("JWK was missing components","ERR_INVALID_PARAMETERS");const e=forge$n.pki.privateKeyToAsn1({n:base64urlToBigInteger(r.n),e:base64urlToBigInteger(r.e),d:base64urlToBigInteger(r.d),p:base64urlToBigInteger(r.p),q:base64urlToBigInteger(r.q),dP:base64urlToBigInteger(r.dp),dQ:base64urlToBigInteger(r.dq),qInv:base64urlToBigInteger(r.qi)});return fromString$b(forge$n.asn1.toDer(e).getBytes(),"ascii")}function pkixToJwk(r){const e=forge$n.asn1.fromDer(toString$b(r,"ascii")),t=forge$n.pki.publicKeyFromAsn1(e);return{kty:"RSA",n:bigIntegerToUintBase64url(t.n),e:bigIntegerToUintBase64url(t.e)}}function jwkToPkix(r){if(r.n==null||r.e==null)throw new CodeError$8("JWK was missing components","ERR_INVALID_PARAMETERS");const e=forge$n.pki.publicKeyToAsn1({n:base64urlToBigInteger(r.n),e:base64urlToBigInteger(r.e)});return fromString$b(forge$n.asn1.toDer(e).getBytes(),"ascii")}async function generateKey$1(r){const e=await webcrypto.get().subtle.generateKey({name:"RSASSA-PKCS1-v1_5",modulusLength:r,publicExponent:new Uint8Array([1,0,1]),hash:{name:"SHA-256"}},!0,["sign","verify"]),t=await exportKey(e);return{privateKey:t[0],publicKey:t[1]}}async function unmarshalPrivateKey$1(r){const t=[await webcrypto.get().subtle.importKey("jwk",r,{name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-256"}},!0,["sign"]),await derivePublicFromPrivate(r)],n=await exportKey({privateKey:t[0],publicKey:t[1]});return{privateKey:n[0],publicKey:n[1]}}async function hashAndSign$1(r,e){const t=await webcrypto.get().subtle.importKey("jwk",r,{name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-256"}},!1,["sign"]),n=await webcrypto.get().subtle.sign({name:"RSASSA-PKCS1-v1_5"},t,e instanceof Uint8Array?e:e.subarray());return new Uint8Array(n,0,n.byteLength)}async function hashAndVerify$1(r,e,t){const n=await webcrypto.get().subtle.importKey("jwk",r,{name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-256"}},!1,["verify"]);return webcrypto.get().subtle.verify({name:"RSASSA-PKCS1-v1_5"},n,e,t instanceof Uint8Array?t:t.subarray())}async function exportKey(r){if(r.privateKey==null||r.publicKey==null)throw new CodeError$8("Private and public key are required","ERR_INVALID_PARAMETERS");return Promise.all([webcrypto.get().subtle.exportKey("jwk",r.privateKey),webcrypto.get().subtle.exportKey("jwk",r.publicKey)])}async function derivePublicFromPrivate(r){return webcrypto.get().subtle.importKey("jwk",{kty:r.kty,n:r.n,e:r.e},{name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-256"}},!0,["verify"])}function convertKey(r,e,t,n){const i=e?jwk2pub(r):jwk2priv(r),o=toString$b(t instanceof Uint8Array?t:t.subarray(),"ascii"),a=n(o,i);return fromString$b(a,"ascii")}function encrypt(r,e){return convertKey(r,!0,e,(t,n)=>n.encrypt(t))}function decrypt(r,e){return convertKey(r,!1,e,(t,n)=>n.decrypt(t))}function keySize(r){if(r.kty!=="RSA")throw new CodeError$8("invalid key type","ERR_INVALID_KEY_TYPE");if(r.n==null)throw new CodeError$8("invalid key modulus","ERR_INVALID_KEY_MODULUS");return fromString$b(r.n,"base64url").length*8}const MAX_KEY_SIZE=8192;class RsaPublicKey{constructor(e){_(this,"_key");this._key=e}verify(e,t){return hashAndVerify$1(this._key,t,e)}marshal(){return jwkToPkix(this._key)}get bytes(){return PublicKey$1.encode({Type:KeyType$1.RSA,Data:this.marshal()}).subarray()}encrypt(e){return encrypt(this._key,e)}equals(e){return equals$4(this.bytes,e.bytes)}hash(){const e=sha256$2.digest(this.bytes);return isPromise$3(e)?e.then(({bytes:t})=>t):e.bytes}}class RsaPrivateKey{constructor(e,t){_(this,"_key");_(this,"_publicKey");this._key=e,this._publicKey=t}genSecret(){return randomBytes$1(16)}sign(e){return hashAndSign$1(this._key,e)}get public(){if(this._publicKey==null)throw new CodeError$8("public key not provided","ERR_PUBKEY_NOT_PROVIDED");return new RsaPublicKey(this._publicKey)}decrypt(e){return decrypt(this._key,e)}marshal(){return jwkToPkcs1(this._key)}get bytes(){return PrivateKey$1.encode({Type:KeyType$1.RSA,Data:this.marshal()}).subarray()}equals(e){return equals$4(this.bytes,e.bytes)}hash(){const e=sha256$2.digest(this.bytes);return isPromise$3(e)?e.then(({bytes:t})=>t):e.bytes}async id(){const e=await this.public.hash();return toString$b(e,"base58btc")}async export(e,t="pkcs-8"){if(t==="pkcs-8"){const n=new forge$n.util.ByteBuffer(this.marshal()),i=forge$n.asn1.fromDer(n),o=forge$n.pki.privateKeyFromAsn1(i),a={algorithm:"aes256",count:1e4,saltSize:128/8,prfAlgorithm:"sha512"};return forge$n.pki.encryptRsaPrivateKey(o,e,a)}else{if(t==="libp2p-key")return exporter(this.bytes,e);throw new CodeError$8(`export format '${t}' is not supported`,"ERR_INVALID_EXPORT_FORMAT")}}}async function unmarshalRsaPrivateKey(r){const e=pkcs1ToJwk(r);if(keySize(e)>MAX_KEY_SIZE)throw new CodeError$8("key size is too large","ERR_KEY_SIZE_TOO_LARGE");const t=await unmarshalPrivateKey$1(e);return new RsaPrivateKey(t.privateKey,t.publicKey)}function unmarshalRsaPublicKey(r){const e=pkixToJwk(r);if(keySize(e)>MAX_KEY_SIZE)throw new CodeError$8("key size is too large","ERR_KEY_SIZE_TOO_LARGE");return new RsaPublicKey(e)}async function fromJwk(r){if(keySize(r)>MAX_KEY_SIZE)throw new CodeError$8("key size is too large","ERR_KEY_SIZE_TOO_LARGE");const e=await unmarshalPrivateKey$1(r);return new RsaPrivateKey(e.privateKey,e.publicKey)}async function generateKeyPair$2(r){if(r>MAX_KEY_SIZE)throw new CodeError$8("key size is too large","ERR_KEY_SIZE_TOO_LARGE");const e=await generateKey$1(r);return new RsaPrivateKey(e.privateKey,e.publicKey)}const RSA=Object.freeze(Object.defineProperty({__proto__:null,MAX_KEY_SIZE,RsaPrivateKey,RsaPublicKey,fromJwk,generateKeyPair:generateKeyPair$2,unmarshalRsaPrivateKey,unmarshalRsaPublicKey},Symbol.toStringTag,{value:"Module"}));function generateKey(){return secp256k1.utils.randomPrivateKey()}function hashAndSign(r,e){const t=sha256$2.digest(e instanceof Uint8Array?e:e.subarray());if(isPromise$3(t))return t.then(({digest:n})=>secp256k1.sign(n,r).toDERRawBytes()).catch(n=>{throw new CodeError$8(String(n),"ERR_INVALID_INPUT")});try{return secp256k1.sign(t.digest,r).toDERRawBytes()}catch(n){throw new CodeError$8(String(n),"ERR_INVALID_INPUT")}}function hashAndVerify(r,e,t){const n=sha256$2.digest(t instanceof Uint8Array?t:t.subarray());if(isPromise$3(n))return n.then(({digest:i})=>secp256k1.verify(e,i,r)).catch(i=>{throw new CodeError$8(String(i),"ERR_INVALID_INPUT")});try{return secp256k1.verify(e,n.digest,r)}catch(i){throw new CodeError$8(String(i),"ERR_INVALID_INPUT")}}function compressPublicKey(r){return secp256k1.ProjectivePoint.fromHex(r).toRawBytes(!0)}function validatePrivateKey(r){try{secp256k1.getPublicKey(r,!0)}catch(e){throw new CodeError$8(String(e),"ERR_INVALID_PRIVATE_KEY")}}function validatePublicKey(r){try{secp256k1.ProjectivePoint.fromHex(r)}catch(e){throw new CodeError$8(String(e),"ERR_INVALID_PUBLIC_KEY")}}function computePublicKey(r){try{return secp256k1.getPublicKey(r,!0)}catch(e){throw new CodeError$8(String(e),"ERR_INVALID_PRIVATE_KEY")}}class Secp256k1PublicKey{constructor(e){_(this,"_key");validatePublicKey(e),this._key=e}verify(e,t){return hashAndVerify(this._key,t,e)}marshal(){return compressPublicKey(this._key)}get bytes(){return PublicKey$1.encode({Type:KeyType$1.Secp256k1,Data:this.marshal()}).subarray()}equals(e){return equals$4(this.bytes,e.bytes)}async hash(){const e=sha256$2.digest(this.bytes);let t;return isPromise$3(e)?{bytes:t}=await e:t=e.bytes,t}}class Secp256k1PrivateKey{constructor(e,t){_(this,"_key");_(this,"_publicKey");this._key=e,this._publicKey=t??computePublicKey(e),validatePrivateKey(this._key),validatePublicKey(this._publicKey)}sign(e){return hashAndSign(this._key,e)}get public(){return new Secp256k1PublicKey(this._publicKey)}marshal(){return this._key}get bytes(){return PrivateKey$1.encode({Type:KeyType$1.Secp256k1,Data:this.marshal()}).subarray()}equals(e){return equals$4(this.bytes,e.bytes)}hash(){const e=sha256$2.digest(this.bytes);return isPromise$3(e)?e.then(({bytes:t})=>t):e.bytes}async id(){const e=await this.public.hash();return toString$b(e,"base58btc")}async export(e,t="libp2p-key"){if(t==="libp2p-key")return exporter(this.bytes,e);throw new CodeError$8(`export format '${t}' is not supported`,"ERR_INVALID_EXPORT_FORMAT")}}function unmarshalSecp256k1PrivateKey(r){return new Secp256k1PrivateKey(r)}function unmarshalSecp256k1PublicKey(r){return new Secp256k1PublicKey(r)}async function generateKeyPair$1(){const r=generateKey();return new Secp256k1PrivateKey(r)}const Secp256k1=Object.freeze(Object.defineProperty({__proto__:null,Secp256k1PrivateKey,Secp256k1PublicKey,generateKeyPair:generateKeyPair$1,unmarshalSecp256k1PrivateKey,unmarshalSecp256k1PublicKey},Symbol.toStringTag,{value:"Module"})),supportedKeys={rsa:RSA,ed25519:Ed25519,secp256k1:Secp256k1};function unsupportedKey(r){const e=Object.keys(supportedKeys).join(" / ");return new CodeError$8(`invalid or unsupported key type ${r}. Must be ${e}`,"ERR_UNSUPPORTED_KEY_TYPE")}function typeToKey(r){if(r=r.toLowerCase(),r==="rsa"||r==="ed25519"||r==="secp256k1")return supportedKeys[r];throw unsupportedKey(r)}async function generateKeyPair(r,e){return typeToKey(r).generateKeyPair(e??2048)}function unmarshalPublicKey(r){const e=PublicKey$1.decode(r),t=e.Data??new Uint8Array;switch(e.Type){case KeyType$1.RSA:return supportedKeys.rsa.unmarshalRsaPublicKey(t);case KeyType$1.Ed25519:return supportedKeys.ed25519.unmarshalEd25519PublicKey(t);case KeyType$1.Secp256k1:return supportedKeys.secp256k1.unmarshalSecp256k1PublicKey(t);default:throw unsupportedKey(e.Type??"unknown")}}function marshalPublicKey(r,e){return e=(e??"rsa").toLowerCase(),typeToKey(e),r.bytes}async function unmarshalPrivateKey(r){const e=PrivateKey$1.decode(r),t=e.Data??new Uint8Array;switch(e.Type){case KeyType$1.RSA:return supportedKeys.rsa.unmarshalRsaPrivateKey(t);case KeyType$1.Ed25519:return supportedKeys.ed25519.unmarshalEd25519PrivateKey(t);case KeyType$1.Secp256k1:return supportedKeys.secp256k1.unmarshalSecp256k1PrivateKey(t);default:throw unsupportedKey(e.Type??"RSA")}}function marshalPrivateKey(r,e){return e=(e??"rsa").toLowerCase(),typeToKey(e),r.bytes}const peerIdSymbol$2=Symbol.for("@libp2p/peer-id");var TopicValidatorResult$7;(function(r){r.Accept="accept",r.Ignore="ignore",r.Reject="reject"})(TopicValidatorResult$7||(TopicValidatorResult$7={}));var FaultTolerance$7;(function(r){r[r.FATAL_ALL=0]="FATAL_ALL",r[r.NO_FATAL=1]="NO_FATAL"})(FaultTolerance$7||(FaultTolerance$7={}));let CodeError$7=class extends Error{constructor(t,n,i){super(t);_(this,"code");_(this,"props");this.code=n,this.name=i?.name??"CodeError",this.props=i??{}}};const inspect$1=Symbol.for("nodejs.util.inspect.custom"),baseDecoder=Object.values(bases$2).map(r=>r.decoder).reduce((r,e)=>r.or(e),bases$2.identity.decoder),LIBP2P_KEY_CODE=114,MARSHALLED_ED225519_PUBLIC_KEY_LENGTH=36,MARSHALLED_SECP256K1_PUBLIC_KEY_LENGTH=37;var Wr;class PeerIdImpl{constructor(e){_(this,"type");_(this,"multihash");_(this,"privateKey");_(this,"publicKey");_(this,"string");_(this,Wr,!0);this.type=e.type,this.multihash=e.multihash,this.privateKey=e.privateKey,Object.defineProperty(this,"string",{enumerable:!1,writable:!0})}get[Symbol.toStringTag](){return`PeerId(${this.toString()})`}toString(){return this.string==null&&(this.string=base58btc$4.encode(this.multihash.bytes).slice(1)),this.string}toCID(){return CID$3.createV1(LIBP2P_KEY_CODE,this.multihash)}toBytes(){return this.multihash.bytes}toJSON(){return this.toString()}equals(e){if(e instanceof Uint8Array)return equals$4(this.multihash.bytes,e);if(typeof e=="string")return peerIdFromString(e).equals(this);if(e?.multihash?.bytes!=null)return equals$4(this.multihash.bytes,e.multihash.bytes);throw new Error("not valid Id")}[(Wr=peerIdSymbol$2,inspect$1)](){return`PeerId(${this.toString()})`}}class RSAPeerIdImpl extends PeerIdImpl{constructor(t){super({...t,type:"RSA"});_(this,"type","RSA");_(this,"publicKey");this.publicKey=t.publicKey}}class Ed25519PeerIdImpl extends PeerIdImpl{constructor(t){super({...t,type:"Ed25519"});_(this,"type","Ed25519");_(this,"publicKey");this.publicKey=t.multihash.digest}}class Secp256k1PeerIdImpl extends PeerIdImpl{constructor(t){super({...t,type:"secp256k1"});_(this,"type","secp256k1");_(this,"publicKey");this.publicKey=t.multihash.digest}}function peerIdFromPeerId(r){if(r.type==="RSA")return new RSAPeerIdImpl(r);if(r.type==="Ed25519")return new Ed25519PeerIdImpl(r);if(r.type==="secp256k1")return new Secp256k1PeerIdImpl(r);throw new CodeError$7("Not a PeerId","ERR_INVALID_PARAMETERS")}function peerIdFromString(r,e){if(r.charAt(0)==="1"||r.charAt(0)==="Q"){const t=decode$n(base58btc$4.decode(`z${r}`));return r.startsWith("12D")?new Ed25519PeerIdImpl({multihash:t}):r.startsWith("16U")?new Secp256k1PeerIdImpl({multihash:t}):new RSAPeerIdImpl({multihash:t})}return peerIdFromBytes(baseDecoder.decode(r))}function peerIdFromBytes(r){try{const e=decode$n(r);if(e.code===identity$3.code){if(e.digest.length===MARSHALLED_ED225519_PUBLIC_KEY_LENGTH)return new Ed25519PeerIdImpl({multihash:e});if(e.digest.length===MARSHALLED_SECP256K1_PUBLIC_KEY_LENGTH)return new Secp256k1PeerIdImpl({multihash:e})}if(e.code===sha256$2.code)return new RSAPeerIdImpl({multihash:e})}catch{return peerIdFromCID(CID$3.decode(r))}throw new Error("Supplied PeerID CID is invalid")}function peerIdFromCID(r){if(r==null||r.multihash==null||r.version==null||r.version===1&&r.code!==LIBP2P_KEY_CODE)throw new Error("Supplied PeerID CID is invalid");const e=r.multihash;if(e.code===sha256$2.code)return new RSAPeerIdImpl({multihash:r.multihash});if(e.code===identity$3.code){if(e.digest.length===MARSHALLED_ED225519_PUBLIC_KEY_LENGTH)return new Ed25519PeerIdImpl({multihash:r.multihash});if(e.digest.length===MARSHALLED_SECP256K1_PUBLIC_KEY_LENGTH)return new Secp256k1PeerIdImpl({multihash:r.multihash})}throw new Error("Supplied PeerID CID is invalid")}async function peerIdFromKeys(r,e){return r.length===MARSHALLED_ED225519_PUBLIC_KEY_LENGTH?new Ed25519PeerIdImpl({multihash:create$c(identity$3.code,r),privateKey:e}):r.length===MARSHALLED_SECP256K1_PUBLIC_KEY_LENGTH?new Secp256k1PeerIdImpl({multihash:create$c(identity$3.code,r),privateKey:e}):new RSAPeerIdImpl({multihash:await sha256$2.digest(r),publicKey:r,privateKey:e})}var NoiseExtensions;(function(r){let e;r.codec=()=>(e==null&&(e=message((t,n,i={})=>{if(i.lengthDelimited!==!1&&n.fork(),t.webtransportCerthashes!=null)for(const o of t.webtransportCerthashes)n.uint32(10),n.bytes(o);i.lengthDelimited!==!1&&n.ldelim()},(t,n)=>{const i={webtransportCerthashes:[]},o=n==null?t.len:t.pos+n;for(;t.pos<o;){const a=t.uint32();switch(a>>>3){case 1:{i.webtransportCerthashes.push(t.bytes());break}default:{t.skipType(a&7);break}}}return i})),e),r.encode=t=>encodeMessage(t,r.codec()),r.decode=t=>decodeMessage$1(t,r.codec())})(NoiseExtensions||(NoiseExtensions={}));var NoiseHandshakePayload;(function(r){let e;r.codec=()=>(e==null&&(e=message((t,n,i={})=>{i.lengthDelimited!==!1&&n.fork(),t.identityKey!=null&&t.identityKey.byteLength>0&&(n.uint32(10),n.bytes(t.identityKey)),t.identitySig!=null&&t.identitySig.byteLength>0&&(n.uint32(18),n.bytes(t.identitySig)),t.extensions!=null&&(n.uint32(34),NoiseExtensions.codec().encode(t.extensions,n)),i.lengthDelimited!==!1&&n.ldelim()},(t,n)=>{const i={identityKey:alloc$1(0),identitySig:alloc$1(0)},o=n==null?t.len:t.pos+n;for(;t.pos<o;){const a=t.uint32();switch(a>>>3){case 1:{i.identityKey=t.bytes();break}case 2:{i.identitySig=t.bytes();break}case 4:{i.extensions=NoiseExtensions.codec().decode(t,t.uint32());break}default:{t.skipType(a&7);break}}}return i})),e),r.encode=t=>encodeMessage(t,r.codec()),r.decode=t=>decodeMessage$1(t,r.codec())})(NoiseHandshakePayload||(NoiseHandshakePayload={}));async function getPayload(r,e,t){const n=await signPayload(r,getHandshakePayload(e));if(r.publicKey==null)throw new Error("PublicKey was missing from local PeerId");return createHandshakePayload(r.publicKey,n,t)}function createHandshakePayload(r,e,t){return NoiseHandshakePayload.encode({identityKey:r,identitySig:e,extensions:t??{webtransportCerthashes:[]}}).subarray()}async function signPayload(r,e){if(r.privateKey==null)throw new Error("PrivateKey was missing from PeerId");return(await unmarshalPrivateKey(r.privateKey)).sign(e)}async function getPeerIdFromPayload(r){return peerIdFromKeys(r.identityKey)}function decodePayload(r){return NoiseHandshakePayload.decode(r)}function getHandshakePayload(r){const e=fromString$b("noise-libp2p-static-key:");return r instanceof Uint8Array?concat$6([e,r],e.length+r.length):(r.prepend(e),r)}async function verifySignedPayload(r,e,t){const n=await peerIdFromKeys(e.identityKey);if(!n.equals(t))throw new Error(`Payload identity key ${n.toString()} does not match expected remote peer ${t.toString()}`);const i=getHandshakePayload(r);if(n.publicKey==null)throw new Error("PublicKey was missing from PeerId");if(e.identitySig==null)throw new Error("Signature was missing from message");if(!await unmarshalPublicKey(n.publicKey).verify(i,e.identitySig))throw new Error("Static key doesn't match to peer that signed payload!");return n}function isValidPublicKey(r){return!(!(r instanceof Uint8Array)&&!isUint8ArrayList(r)||r.byteLength!==32)}const MIN_NONCE=0,MAX_NONCE=4294967295,ERR_MAX_NONCE="Cipherstate has reached maximum n, a new handshake must be performed";class Nonce{constructor(e=MIN_NONCE){_(this,"n");_(this,"bytes");_(this,"view");this.n=e,this.bytes=alloc$1(12),this.view=new DataView(this.bytes.buffer,this.bytes.byteOffset,this.bytes.byteLength),this.view.setUint32(4,e,!0)}increment(){this.n++,this.view.setUint32(4,this.n,!0)}getBytes(){return this.bytes}getUint64(){return this.n}assertValue(){if(this.n>MAX_NONCE)throw new Error(ERR_MAX_NONCE)}}class AbstractHandshake{constructor(e,t){_(this,"crypto");_(this,"log");this.log=e.logger.forComponent("libp2p:noise:abstract-handshake"),this.crypto=t}encryptWithAd(e,t,n){const i=this.encrypt(e.k,e.n,t,n);return e.n.increment(),i}decryptWithAd(e,t,n,i){const{plaintext:o,valid:a}=this.decrypt(e.k,e.n,t,n,i);return a&&e.n.increment(),{plaintext:o,valid:a}}hasKey(e){return!this.isEmptyKey(e.k)}createEmptyKey(){return alloc$1(32)}isEmptyKey(e){const t=this.createEmptyKey();return equals$4(t,e)}encrypt(e,t,n,i){return t.assertValue(),this.crypto.chaCha20Poly1305Encrypt(i,t.getBytes(),n,e)}encryptAndHash(e,t){let n;return this.hasKey(e.cs)?n=this.encryptWithAd(e.cs,e.h,t):n=t,this.mixHash(e,n),n}decrypt(e,t,n,i,o){t.assertValue();const a=this.crypto.chaCha20Poly1305Decrypt(i,t.getBytes(),n,e,o);return a?{plaintext:a,valid:!0}:{plaintext:alloc$1(0),valid:!1}}decryptAndHash(e,t){let n,i=!0;return this.hasKey(e.cs)?{plaintext:n,valid:i}=this.decryptWithAd(e.cs,e.h,t):n=t,this.mixHash(e,t),{plaintext:n,valid:i}}dh(e,t){try{const n=this.crypto.generateX25519SharedKey(e,t);return n.length===32?n:n.subarray(0,32)}catch(n){const i=n;return this.log.error("error deriving shared key",i),alloc$1(32)}}mixHash(e,t){e.h=this.getHash(e.h,t)}getHash(e,t){return this.crypto.hashSHA256(new Uint8ArrayList(e,t))}mixKey(e,t){const[n,i]=this.crypto.getHKDF(e.ck,t);e.cs=this.initializeKey(i),e.ck=n}initializeKey(e){return{k:e,n:new Nonce}}initializeSymmetric(e){const t=fromString$b(e,"utf-8"),n=this.hashProtocolName(t),i=n,o=this.createEmptyKey();return{cs:this.initializeKey(o),ck:i,h:n}}hashProtocolName(e){if(e.length<=32){const t=alloc$1(32);return t.set(e),t}else return this.getHash(e,alloc$1(0))}split(e){const[t,n]=this.crypto.getHKDF(e.ck,alloc$1(0)),i=this.initializeKey(t),o=this.initializeKey(n);return{cs1:i,cs2:o}}writeMessageRegular(e,t){const n=this.encryptWithAd(e,alloc$1(0),t),i=this.createEmptyKey(),o=alloc$1(0);return{ne:i,ns:o,ciphertext:n}}readMessageRegular(e,t){return this.decryptWithAd(e,alloc$1(0),t.ciphertext)}}class XX extends AbstractHandshake{initializeInitiator(e,t,n,i){const o="Noise_XX_25519_ChaChaPoly_SHA256",a=this.initializeSymmetric(o);this.mixHash(a,e);const c=alloc$1(32);return{ss:a,s:t,rs:n,psk:i,re:c}}initializeResponder(e,t,n,i){const o="Noise_XX_25519_ChaChaPoly_SHA256",a=this.initializeSymmetric(o);this.mixHash(a,e);const c=alloc$1(32);return{ss:a,s:t,rs:n,psk:i,re:c}}writeMessageA(e,t,n){const i=alloc$1(0);n!==void 0?e.e=n:e.e=this.crypto.generateX25519KeyPair();const o=e.e.publicKey;this.mixHash(e.ss,o);const a=this.encryptAndHash(e.ss,t);return{ne:o,ns:i,ciphertext:a}}writeMessageB(e,t){e.e=this.crypto.generateX25519KeyPair();const n=e.e.publicKey;this.mixHash(e.ss,n),this.mixKey(e.ss,this.dh(e.e.privateKey,e.re));const i=e.s.publicKey,o=this.encryptAndHash(e.ss,i);this.mixKey(e.ss,this.dh(e.s.privateKey,e.re));const a=this.encryptAndHash(e.ss,t);return{ne:n,ns:o,ciphertext:a}}writeMessageC(e,t){const n=e.s.publicKey,i=this.encryptAndHash(e.ss,n);this.mixKey(e.ss,this.dh(e.s.privateKey,e.re));const o=this.encryptAndHash(e.ss,t),c={ne:this.createEmptyKey(),ns:i,ciphertext:o},{cs1:l,cs2:u}=this.split(e.ss);return{h:e.ss.h,messageBuffer:c,cs1:l,cs2:u}}readMessageA(e,t){return isValidPublicKey(t.ne)&&(e.re=t.ne),this.mixHash(e.ss,e.re),this.decryptAndHash(e.ss,t.ciphertext)}readMessageB(e,t){if(isValidPublicKey(t.ne)&&(e.re=t.ne),this.mixHash(e.ss,e.re),!e.e)throw new Error("Handshake state `e` param is missing.");this.mixKey(e.ss,this.dh(e.e.privateKey,e.re));const{plaintext:n,valid:i}=this.decryptAndHash(e.ss,t.ns);i&&isValidPublicKey(n)&&(e.rs=n),this.mixKey(e.ss,this.dh(e.e.privateKey,e.rs));const{plaintext:o,valid:a}=this.decryptAndHash(e.ss,t.ciphertext);return{plaintext:o,valid:i&&a}}readMessageC(e,t){const{plaintext:n,valid:i}=this.decryptAndHash(e.ss,t.ns);if(i&&isValidPublicKey(n)&&(e.rs=n),!e.e)throw new Error("Handshake state `e` param is missing.");this.mixKey(e.ss,this.dh(e.e.privateKey,e.rs));const{plaintext:o,valid:a}=this.decryptAndHash(e.ss,t.ciphertext),{cs1:c,cs2:l}=this.split(e.ss);return{h:e.ss.h,plaintext:o,valid:i&&a,cs1:c,cs2:l}}initSession(e,t,n){const i=this.createEmptyKey(),o=alloc$1(32);let a;return e?a=this.initializeInitiator(t,n,o,i):a=this.initializeResponder(t,n,o,i),{hs:a,i:e,mc:0}}sendMessage(e,t,n){let i;if(e.mc===0)i=this.writeMessageA(e.hs,t,n);else if(e.mc===1)i=this.writeMessageB(e.hs,t);else if(e.mc===2){const{h:o,messageBuffer:a,cs1:c,cs2:l}=this.writeMessageC(e.hs,t);i=a,e.h=o,e.cs1=c,e.cs2=l}else if(e.mc>2)if(e.i){if(!e.cs1)throw new Error("CS1 (cipher state) is not defined");i=this.writeMessageRegular(e.cs1,t)}else{if(!e.cs2)throw new Error("CS2 (cipher state) is not defined");i=this.writeMessageRegular(e.cs2,t)}else throw new Error("Session invalid.");return e.mc++,i}recvMessage(e,t){let n=alloc$1(0),i=!1;if(e.mc===0)({plaintext:n,valid:i}=this.readMessageA(e.hs,t));else if(e.mc===1)({plaintext:n,valid:i}=this.readMessageB(e.hs,t));else if(e.mc===2){const{h:o,plaintext:a,valid:c,cs1:l,cs2:u}=this.readMessageC(e.hs,t);n=a,i=c,e.h=o,e.cs1=l,e.cs2=u}return e.mc++,{plaintext:n,valid:i}}}function logLocalStaticKeys(r,e){!e.enabled||!DUMP_SESSION_KEYS||(e(`LOCAL_STATIC_PUBLIC_KEY ${toString$b(r.publicKey,"hex")}`),e(`LOCAL_STATIC_PRIVATE_KEY ${toString$b(r.privateKey,"hex")}`))}function logLocalEphemeralKeys(r,e){!e.enabled||!DUMP_SESSION_KEYS||(r?(e(`LOCAL_PUBLIC_EPHEMERAL_KEY ${toString$b(r.publicKey,"hex")}`),e(`LOCAL_PRIVATE_EPHEMERAL_KEY ${toString$b(r.privateKey,"hex")}`)):e("Missing local ephemeral keys."))}function logRemoteStaticKey(r,e){!e.enabled||!DUMP_SESSION_KEYS||e(`REMOTE_STATIC_PUBLIC_KEY ${toString$b(r.subarray(),"hex")}`)}function logRemoteEphemeralKey(r,e){!e.enabled||!DUMP_SESSION_KEYS||e(`REMOTE_EPHEMERAL_PUBLIC_KEY ${toString$b(r.subarray(),"hex")}`)}function logCipherState(r,e){!e.enabled||!DUMP_SESSION_KEYS||(r.cs1&&r.cs2?(e(`CIPHER_STATE_1 ${r.cs1.n.getUint64()} ${toString$b(r.cs1.k,"hex")}`),e(`CIPHER_STATE_2 ${r.cs2.n.getUint64()} ${toString$b(r.cs2.k,"hex")}`)):e("Missing cipher state."))}class XXHandshake{constructor(e,t,n,i,o,a,c,l,u){_(this,"isInitiator");_(this,"session");_(this,"remotePeer");_(this,"remoteExtensions",{webtransportCerthashes:[]});_(this,"payload");_(this,"connection");_(this,"xx");_(this,"staticKeypair");_(this,"prologue");_(this,"log");this.log=e.logger.forComponent("libp2p:noise:xxhandshake"),this.isInitiator=t,this.payload=n,this.prologue=i,this.staticKeypair=a,this.connection=c,l&&(this.remotePeer=l),this.xx=u??new XX(e,o),this.session=this.xx.initSession(this.isInitiator,this.prologue,this.staticKeypair)}async propose(){if(logLocalStaticKeys(this.session.hs.s,this.log),this.isInitiator){this.log.trace("Stage 0 - Initiator starting to send first message.");const e=this.xx.sendMessage(this.session,alloc$1(0));await this.connection.write(encode0(e)),this.log.trace("Stage 0 - Initiator finished sending first message."),logLocalEphemeralKeys(this.session.hs.e,this.log)}else{this.log.trace("Stage 0 - Responder waiting to receive first message...");const e=decode0((await this.connection.read()).subarray()),{valid:t}=this.xx.recvMessage(this.session,e);if(!t)throw new InvalidCryptoExchangeError("xx handshake stage 0 validation fail");this.log.trace("Stage 0 - Responder received first message."),logRemoteEphemeralKey(this.session.hs.re,this.log)}}async exchange(){if(this.isInitiator){this.log.trace("Stage 1 - Initiator waiting to receive first message from responder...");const e=decode1((await this.connection.read()).subarray()),{plaintext:t,valid:n}=this.xx.recvMessage(this.session,e);if(!n)throw new InvalidCryptoExchangeError("xx handshake stage 1 validation fail");this.log.trace("Stage 1 - Initiator received the message."),logRemoteEphemeralKey(this.session.hs.re,this.log),logRemoteStaticKey(this.session.hs.rs,this.log),this.log.trace("Initiator going to check remote's signature...");try{const i=decodePayload(t);this.remotePeer=this.remotePeer||await getPeerIdFromPayload(i),await verifySignedPayload(this.session.hs.rs,i,this.remotePeer),this.setRemoteNoiseExtension(i.extensions)}catch(i){const o=i;throw new UnexpectedPeerError(`Error occurred while verifying signed payload: ${o.message}`)}this.log.trace("All good with the signature!")}else{this.log.trace("Stage 1 - Responder sending out first message with signed payload and static key.");const e=this.xx.sendMessage(this.session,this.payload);await this.connection.write(encode1(e)),this.log.trace("Stage 1 - Responder sent the second handshake message with signed payload."),logLocalEphemeralKeys(this.session.hs.e,this.log)}}async finish(){if(this.isInitiator){this.log.trace("Stage 2 - Initiator sending third handshake message.");const e=this.xx.sendMessage(this.session,this.payload);await this.connection.write(encode2(e)),this.log.trace("Stage 2 - Initiator sent message with signed payload.")}else{this.log.trace("Stage 2 - Responder waiting for third handshake message...");const e=decode2((await this.connection.read()).subarray()),{plaintext:t,valid:n}=this.xx.recvMessage(this.session,e);if(!n)throw new InvalidCryptoExchangeError("xx handshake stage 2 validation fail");this.log.trace("Stage 2 - Responder received the message, finished handshake.");try{const i=decodePayload(t);this.remotePeer=this.remotePeer||await getPeerIdFromPayload(i),await verifySignedPayload(this.session.hs.rs,i,this.remotePeer),this.setRemoteNoiseExtension(i.extensions)}catch(i){const o=i;throw new UnexpectedPeerError(`Error occurred while verifying signed payload: ${o.message}`)}}logCipherState(this.session,this.log)}encrypt(e,t){const n=this.getCS(t);return this.xx.encryptWithAd(n,alloc$1(0),e)}decrypt(e,t,n){const i=this.getCS(t,!1);return this.xx.decryptWithAd(i,alloc$1(0),e,n)}getRemoteStaticKey(){return this.session.hs.rs}getCS(e,t=!0){if(!e.cs1||!e.cs2)throw new InvalidCryptoExchangeError("Handshake not completed properly, cipher state does not exist.");return this.isInitiator?t?e.cs1:e.cs2:t?e.cs2:e.cs1}setRemoteNoiseExtension(e){e&&(this.remoteExtensions=e)}}function registerMetrics(r){return{xxHandshakeSuccesses:r.registerCounter("libp2p_noise_xxhandshake_successes_total",{help:"Total count of noise xxHandshakes successes_"}),xxHandshakeErrors:r.registerCounter("libp2p_noise_xxhandshake_error_total",{help:"Total count of noise xxHandshakes errors"}),encryptedPackets:r.registerCounter("libp2p_noise_encrypted_packets_total",{help:"Total count of noise encrypted packets successfully"}),decryptedPackets:r.registerCounter("libp2p_noise_decrypted_packets_total",{help:"Total count of noise decrypted packets"}),decryptErrors:r.registerCounter("libp2p_noise_decrypt_errors_total",{help:"Total count of noise decrypt errors"})}}class Noise{constructor(e,t={}){_(this,"protocol","/noise");_(this,"crypto");_(this,"prologue");_(this,"staticKeys");_(this,"extensions");_(this,"metrics");_(this,"components");const{staticNoiseKey:n,extensions:i,crypto:o,prologueBytes:a}=t,{metrics:c}=e;this.components=e,this.crypto=o??defaultCrypto,this.extensions=i,this.metrics=c?registerMetrics(c):void 0,n?this.staticKeys=this.crypto.generateX25519KeyPairFromSeed(n):this.staticKeys=this.crypto.generateX25519KeyPair(),this.prologue=a??alloc$1(0)}async secureOutbound(e,t,n){const i=lpStream$1(t,{lengthEncoder:uint16BEEncode,lengthDecoder:uint16BEDecode,maxDataLength:NOISE_MSG_MAX_LENGTH_BYTES}),o=await this.performHandshake({connection:i,isInitiator:!0,localPeer:e,remotePeer:n}),a=await this.createSecureConnection(i,o);return t.source=a.source,t.sink=a.sink,{conn:t,remoteExtensions:o.remoteExtensions,remotePeer:o.remotePeer}}async secureInbound(e,t,n){const i=lpStream$1(t,{lengthEncoder:uint16BEEncode,lengthDecoder:uint16BEDecode,maxDataLength:NOISE_MSG_MAX_LENGTH_BYTES}),o=await this.performHandshake({connection:i,isInitiator:!1,localPeer:e,remotePeer:n}),a=await this.createSecureConnection(i,o);return t.source=a.source,t.sink=a.sink,{conn:t,remotePeer:o.remotePeer,remoteExtensions:o.remoteExtensions}}async performHandshake(e){const t=await getPayload(e.localPeer,this.staticKeys.publicKey,this.extensions);return this.performXXHandshake(e,t)}async performXXHandshake(e,t){const{isInitiator:n,remotePeer:i,connection:o}=e,a=new XXHandshake(this.components,n,t,this.prologue,this.crypto,this.staticKeys,o,i);try{await a.propose(),await a.exchange(),await a.finish(),this.metrics?.xxHandshakeSuccesses.increment()}catch(c){if(this.metrics?.xxHandshakeErrors.increment(),c instanceof Error)throw c.message=`Error occurred during XX handshake: ${c.message}`,c}return a}async createSecureConnection(e,t){const[n,i]=duplexPair(),o=e.unwrap();return await pipe(n,encryptStream(t,this.metrics),o,a=>decode$h(a,{lengthDecoder:uint16BEDecode}),decryptStream(t,this.metrics),n),i}}function noise(r={}){return e=>new Noise(e,r)}var TopicValidatorResult$6;(function(r){r.Accept="accept",r.Ignore="ignore",r.Reject="reject"})(TopicValidatorResult$6||(TopicValidatorResult$6={}));var FaultTolerance$6;(function(r){r[r.FATAL_ALL=0]="FATAL_ALL",r[r.NO_FATAL=1]="NO_FATAL"})(FaultTolerance$6||(FaultTolerance$6={}));let CodeError$6=class extends Error{constructor(t,n,i){super(t);_(this,"code");_(this,"props");this.code=n,this.name=i?.name??"CodeError",this.props=i??{}}};function setMaxListeners$3(){}const setMaxListeners$2=(r,...e)=>{try{[...e]}catch{}},ERR_INVALID_FRAME="ERR_INVALID_FRAME",ERR_UNREQUESTED_PING="ERR_UNREQUESTED_PING",ERR_NOT_MATCHING_PING="ERR_NOT_MATCHING_PING",ERR_STREAM_ALREADY_EXISTS="ERR_STREAM_ALREADY_EXISTS",ERR_DECODE_INVALID_VERSION="ERR_DECODE_INVALID_VERSION",ERR_BOTH_CLIENTS="ERR_BOTH_CLIENTS",ERR_RECV_WINDOW_EXCEEDED="ERR_RECV_WINDOW_EXCEEDED",PROTOCOL_ERRORS=new Set([ERR_INVALID_FRAME,ERR_UNREQUESTED_PING,ERR_NOT_MATCHING_PING,ERR_STREAM_ALREADY_EXISTS,ERR_DECODE_INVALID_VERSION,ERR_BOTH_CLIENTS,ERR_RECV_WINDOW_EXCEEDED]),ERR_INVALID_CONFIG="ERR_INVALID_CONFIG",ERR_MUXER_LOCAL_CLOSED="ERR_MUXER_LOCAL_CLOSED",ERR_MUXER_REMOTE_CLOSED="ERR_MUXER_REMOTE_CLOSED",ERR_STREAM_ABORT="ERR_STREAM_ABORT",ERR_MAX_OUTBOUND_STREAMS_EXCEEDED="ERROR_MAX_OUTBOUND_STREAMS_EXCEEDED",ERR_DECODE_IN_PROGRESS="ERR_DECODE_IN_PROGRESS",INITIAL_STREAM_WINDOW=256*1024,MAX_STREAM_WINDOW=16*1024*1024,defaultConfig={enableKeepAlive:!0,keepAliveInterval:3e4,maxInboundStreams:1e3,maxOutboundStreams:1e3,initialStreamWindowSize:INITIAL_STREAM_WINDOW,maxStreamWindowSize:MAX_STREAM_WINDOW,maxMessageSize:64*1024};function verifyConfig(r){if(r.keepAliveInterval<=0)throw new CodeError$6("keep-alive interval must be positive",ERR_INVALID_CONFIG);if(r.maxInboundStreams<0)throw new CodeError$6("max inbound streams must be larger or equal 0",ERR_INVALID_CONFIG);if(r.maxOutboundStreams<0)throw new CodeError$6("max outbound streams must be larger or equal 0",ERR_INVALID_CONFIG);if(r.initialStreamWindowSize<INITIAL_STREAM_WINDOW)throw new CodeError$6("InitialStreamWindowSize must be larger or equal 256 kB",ERR_INVALID_CONFIG);if(r.maxStreamWindowSize<r.initialStreamWindowSize)throw new CodeError$6("MaxStreamWindowSize must be larger than the InitialStreamWindowSize",ERR_INVALID_CONFIG);if(r.maxStreamWindowSize>2**32-1)throw new CodeError$6("MaxStreamWindowSize must be less than equal MAX_UINT32",ERR_INVALID_CONFIG);if(r.maxMessageSize<1024)throw new CodeError$6("MaxMessageSize must be greater than a kilobyte",ERR_INVALID_CONFIG)}var FrameType;(function(r){r[r.Data=0]="Data",r[r.WindowUpdate=1]="WindowUpdate",r[r.Ping=2]="Ping",r[r.GoAway=3]="GoAway"})(FrameType||(FrameType={}));var Flag;(function(r){r[r.SYN=1]="SYN",r[r.ACK=2]="ACK",r[r.FIN=4]="FIN",r[r.RST=8]="RST"})(Flag||(Flag={}));Object.values(Flag).filter(r=>typeof r!="string");const YAMUX_VERSION=0;var GoAwayCode;(function(r){r[r.NormalTermination=0]="NormalTermination",r[r.ProtocolError=1]="ProtocolError",r[r.InternalError=2]="InternalError"})(GoAwayCode||(GoAwayCode={}));const HEADER_LENGTH=12,twoPow24=2**24;function decodeHeader(r){if(r[0]!==YAMUX_VERSION)throw new CodeError$6("Invalid frame version",ERR_DECODE_INVALID_VERSION);return{type:r[1],flag:(r[2]<<8)+r[3],streamID:r[4]*twoPow24+(r[5]<<16)+(r[6]<<8)+r[7],length:r[8]*twoPow24+(r[9]<<16)+(r[10]<<8)+r[11]}}let Decoder$1=class{constructor(e){_(this,"source");_(this,"buffer");_(this,"frameInProgress");this.source=returnlessSource(e),this.buffer=new Uint8ArrayList,this.frameInProgress=!1}async*emitFrames(){for await(const e of this.source)for(this.buffer.append(e);;){const t=this.readHeader();if(t===void 0)break;const{type:n,length:i}=t;n===FrameType.Data?(this.frameInProgress=!0,yield{header:t,readData:this.readBytes.bind(this,i)}):yield{header:t}}}readHeader(){if(this.frameInProgress)throw new CodeError$6("decoding frame already in progress",ERR_DECODE_IN_PROGRESS);if(this.buffer.length<HEADER_LENGTH)return;const e=decodeHeader(this.buffer.subarray(0,HEADER_LENGTH));return this.buffer.consume(HEADER_LENGTH),e}async readBytes(e){if(this.buffer.length<e){for await(const n of this.source)if(this.buffer.append(n),this.buffer.length>=e)break}const t=this.buffer.sublist(0,e);return this.buffer.consume(e),this.frameInProgress=!1,t}};function returnlessSource(r){if(r[Symbol.iterator]!==void 0){const e=r[Symbol.iterator]();return e.return=void 0,{[Symbol.iterator](){return e}}}else if(r[Symbol.asyncIterator]!==void 0){const e=r[Symbol.asyncIterator]();return e.return=void 0,{[Symbol.asyncIterator](){return e}}}else throw new Error("a source must be either an iterable or an async iterable")}function encodeHeader(r){const e=new Uint8Array(HEADER_LENGTH);return e[1]=r.type,e[2]=r.flag>>>8,e[3]=r.flag,e[4]=r.streamID>>>24,e[5]=r.streamID>>>16,e[6]=r.streamID>>>8,e[7]=r.streamID,e[8]=r.length>>>24,e[9]=r.length>>>16,e[10]=r.length>>>8,e[11]=r.length,e}var TopicValidatorResult$5;(function(r){r.Accept="accept",r.Ignore="ignore",r.Reject="reject"})(TopicValidatorResult$5||(TopicValidatorResult$5={}));var FaultTolerance$5;(function(r){r[r.FATAL_ALL=0]="FATAL_ALL",r[r.NO_FATAL=1]="NO_FATAL"})(FaultTolerance$5||(FaultTolerance$5={}));let CodeError$5=class extends Error{constructor(t,n,i){super(t);_(this,"code");_(this,"props");this.code=n,this.name=i?.name??"CodeError",this.props=i??{}}};const ERR_INVALID_PARAMETERS="ERR_INVALID_PARAMETERS";function isPromise$2(r){return r==null?!1:typeof r.then=="function"&&typeof r.catch=="function"&&typeof r.finally=="function"}function closeSource(r,e){const t=getIterator(r).return?.();isPromise$2(t)&&t.catch(n=>{e.error("could not cause iterator to return",n)})}const ERR_STREAM_RESET="ERR_STREAM_RESET",ERR_SINK_INVALID_STATE="ERR_SINK_INVALID_STATE",DEFAULT_SEND_CLOSE_WRITE_TIMEOUT=5e3;function isPromise$1(r){return r==null?!1:typeof r.then=="function"&&typeof r.catch=="function"&&typeof r.finally=="function"}class AbstractStream{constructor(e){_(this,"id");_(this,"direction");_(this,"timeline");_(this,"protocol");_(this,"metadata");_(this,"source");_(this,"status");_(this,"readStatus");_(this,"writeStatus");_(this,"log");_(this,"sinkController");_(this,"sinkEnd");_(this,"closed");_(this,"endErr");_(this,"streamSource");_(this,"onEnd");_(this,"onCloseRead");_(this,"onCloseWrite");_(this,"onReset");_(this,"onAbort");_(this,"sendCloseWriteTimeout");this.sinkController=new AbortController,this.sinkEnd=pDefer(),this.closed=pDefer(),this.log=e.log,this.status="open",this.readStatus="ready",this.writeStatus="ready",this.id=e.id,this.metadata=e.metadata??{},this.direction=e.direction,this.timeline={open:Date.now()},this.sendCloseWriteTimeout=e.sendCloseWriteTimeout??DEFAULT_SEND_CLOSE_WRITE_TIMEOUT,this.onEnd=e.onEnd,this.onCloseRead=e?.onCloseRead,this.onCloseWrite=e?.onCloseWrite,this.onReset=e?.onReset,this.onAbort=e?.onAbort,this.source=this.streamSource=pushable({onEnd:t=>{t!=null?this.log.trace("source ended with error",t):this.log.trace("source ended"),this.onSourceEnd(t)}}),this.sink=this.sink.bind(this)}async sink(e){if(this.writeStatus!=="ready")throw new CodeError$5(`writable end state is "${this.writeStatus}" not "ready"`,ERR_SINK_INVALID_STATE);try{this.writeStatus="writing";const t={signal:this.sinkController.signal};if(this.direction==="outbound"){const i=this.sendNewStream(t);isPromise$1(i)&&await i}const n=()=>{closeSource(e,this.log)};try{this.sinkController.signal.addEventListener("abort",n),this.log.trace("sink reading from source");for await(let i of e){i=i instanceof Uint8Array?new Uint8ArrayList(i):i;const o=this.sendData(i,t);isPromise$1(o)&&await o}}finally{this.sinkController.signal.removeEventListener("abort",n)}this.log.trace('sink finished reading from source, write status is "%s"',this.writeStatus),this.writeStatus==="writing"&&(this.writeStatus="closing",this.log.trace("send close write to remote"),await this.sendCloseWrite({signal:AbortSignal.timeout(this.sendCloseWriteTimeout)}),this.writeStatus="closed"),this.onSinkEnd()}catch(t){throw this.log.trace("sink ended with error, calling abort with error",t),this.abort(t),t}finally{this.log.trace("resolve sink end"),this.sinkEnd.resolve()}}onSourceEnd(e){this.timeline.closeRead==null&&(this.timeline.closeRead=Date.now(),this.readStatus="closed",e!=null&&this.endErr==null&&(this.endErr=e),this.onCloseRead?.(),this.timeline.closeWrite!=null?(this.log.trace("source and sink ended"),this.timeline.close=Date.now(),this.status!=="aborted"&&this.status!=="reset"&&(this.status="closed"),this.onEnd!=null&&this.onEnd(this.endErr),this.closed.resolve()):this.log.trace("source ended, waiting for sink to end"))}onSinkEnd(e){this.timeline.closeWrite==null&&(this.timeline.closeWrite=Date.now(),this.writeStatus="closed",e!=null&&this.endErr==null&&(this.endErr=e),this.onCloseWrite?.(),this.timeline.closeRead!=null?(this.log.trace("sink and source ended"),this.timeline.close=Date.now(),this.status!=="aborted"&&this.status!=="reset"&&(this.status="closed"),this.onEnd!=null&&this.onEnd(this.endErr),this.closed.resolve()):this.log.trace("sink ended, waiting for source to end"))}async close(e){this.log.trace("closing gracefully"),this.status="closing",await Promise.all([this.closeRead(e),this.closeWrite(e)]),await raceSignal(this.closed.promise,e?.signal),this.status="closed",this.log.trace("closed gracefully")}async closeRead(e={}){if(this.readStatus==="closing"||this.readStatus==="closed")return;this.log.trace('closing readable end of stream with starting read status "%s"',this.readStatus);const t=this.readStatus;this.readStatus="closing",this.status!=="reset"&&this.status!=="aborted"&&this.timeline.closeRead==null&&(this.log.trace("send close read to remote"),await this.sendCloseRead(e)),t==="ready"&&(this.log.trace("ending internal source queue with %d queued bytes",this.streamSource.readableLength),this.streamSource.end()),this.log.trace("closed readable end of stream")}async closeWrite(e={}){this.writeStatus==="closing"||this.writeStatus==="closed"||(this.log.trace('closing writable end of stream with starting write status "%s"',this.writeStatus),this.writeStatus==="ready"&&(this.log.trace("sink was never sunk, sink an empty array"),await raceSignal(this.sink([]),e.signal)),this.writeStatus==="writing"&&await new Promise((t,n)=>{queueMicrotask(()=>{this.log.trace("aborting source passed to .sink"),this.sinkController.abort(),raceSignal(this.sinkEnd.promise,e.signal).then(t,n)})}),this.writeStatus="closed",this.log.trace("closed writable end of stream"))}abort(e){if(this.status==="closed"||this.status==="aborted"||this.status==="reset")return;this.log("abort with error",e),this.log("try to send reset to remote");const t=this.sendReset();isPromise$1(t)&&t.catch(n=>{this.log.error("error sending reset message",n)}),this.status="aborted",this.timeline.abort=Date.now(),this._closeSinkAndSource(e),this.onAbort?.(e)}reset(){if(this.status==="closed"||this.status==="aborted"||this.status==="reset")return;const e=new CodeError$5("stream reset",ERR_STREAM_RESET);this.status="reset",this.timeline.reset=Date.now(),this._closeSinkAndSource(e),this.onReset?.()}_closeSinkAndSource(e){this._closeSink(e),this._closeSource(e)}_closeSink(e){this.writeStatus==="writing"&&(this.log.trace("end sink source"),this.sinkController.abort()),this.onSinkEnd(e)}_closeSource(e){this.readStatus!=="closing"&&this.readStatus!=="closed"&&(this.log.trace("ending source with %d bytes to be read by consumer",this.streamSource.readableLength),this.readStatus="closing",this.streamSource.end(e))}remoteCloseWrite(){if(this.readStatus==="closing"||this.readStatus==="closed"){this.log("received remote close write but local source is already closed");return}this.log.trace("remote close write"),this._closeSource()}remoteCloseRead(){if(this.writeStatus==="closing"||this.writeStatus==="closed"){this.log("received remote close read but local sink is already closed");return}this.log.trace("remote close read"),this._closeSink()}destroy(){if(this.status==="closed"||this.status==="aborted"||this.status==="reset"){this.log("received destroy but we are already closed");return}this.log.trace("stream destroyed"),this._closeSinkAndSource()}sourcePush(e){this.streamSource.push(e)}sourceReadableLength(){return this.streamSource.readableLength}}var StreamState;(function(r){r[r.Init=0]="Init",r[r.SYNSent=1]="SYNSent",r[r.SYNReceived=2]="SYNReceived",r[r.Established=3]="Established",r[r.Finished=4]="Finished"})(StreamState||(StreamState={}));class YamuxStream extends AbstractStream{constructor(t){super({...t,onEnd:n=>{this.state=StreamState.Finished,t.onEnd?.(n)}});_(this,"name");_(this,"state");_(this,"config");_(this,"_id");_(this,"sendWindowCapacity");_(this,"sendWindowCapacityUpdate");_(this,"recvWindow");_(this,"recvWindowCapacity");_(this,"epochStart");_(this,"getRTT");_(this,"sendFrame");this.config=t.config,this._id=parseInt(t.id,10),this.name=t.name,this.state=t.state,this.sendWindowCapacity=INITIAL_STREAM_WINDOW,this.recvWindow=this.config.initialStreamWindowSize,this.recvWindowCapacity=this.recvWindow,this.epochStart=Date.now(),this.getRTT=t.getRTT,this.sendFrame=t.sendFrame,this.source=forEach(this.source,()=>{this.sendWindowUpdate()})}async sendNewStream(){}async sendData(t,n={}){for(t=t.sublist();t.byteLength!==0;){if(this.sendWindowCapacity===0&&await this.waitForSendWindowCapacity(n),this.status!=="open")return;const i=Math.min(this.sendWindowCapacity,this.config.maxMessageSize-HEADER_LENGTH,t.length),o=this.getSendFlags();this.sendFrame({type:FrameType.Data,flag:o,streamID:this._id,length:i},t.sublist(0,i)),this.sendWindowCapacity-=i,t.consume(i)}}async sendReset(){this.sendFrame({type:FrameType.WindowUpdate,flag:Flag.RST,streamID:this._id,length:0})}async sendCloseWrite(){const t=this.getSendFlags()|Flag.FIN;this.sendFrame({type:FrameType.WindowUpdate,flag:t,streamID:this._id,length:0})}async sendCloseRead(){}async waitForSendWindowCapacity(t={}){if(this.sendWindowCapacity>0)return;let n,i;const o=()=>{this.status==="open"?i(new CodeError$6("stream aborted",ERR_STREAM_ABORT)):n()};t.signal?.addEventListener("abort",o);try{await new Promise((a,c)=>{this.sendWindowCapacityUpdate=()=>{a()},i=c,n=a})}finally{t.signal?.removeEventListener("abort",o)}}handleWindowUpdate(t){this.log?.trace("stream received window update id=%s",this._id),this.processFlags(t.flag);const n=this.sendWindowCapacity;this.sendWindowCapacity+=t.length,n===0&&t.length>0&&this.sendWindowCapacityUpdate?.()}async handleData(t,n){if(this.log?.trace("stream received data id=%s",this._id),this.processFlags(t.flag),this.recvWindowCapacity<t.length)throw new CodeError$6("receive window exceeded",ERR_RECV_WINDOW_EXCEEDED,{available:this.recvWindowCapacity,recv:t.length});const i=await n();this.recvWindowCapacity-=t.length,this.sourcePush(i)}processFlags(t){(t&Flag.ACK)===Flag.ACK&&this.state===StreamState.SYNSent&&(this.state=StreamState.Established),(t&Flag.FIN)===Flag.FIN&&this.remoteCloseWrite(),(t&Flag.RST)===Flag.RST&&this.reset()}getSendFlags(){switch(this.state){case StreamState.Init:return this.state=StreamState.SYNSent,Flag.SYN;case StreamState.SYNReceived:return this.state=StreamState.Established,Flag.ACK;default:return 0}}sendWindowUpdate(){const t=this.getSendFlags(),n=Date.now(),i=this.getRTT();if(t===0&&i>-1&&n-this.epochStart<i*4&&(this.recvWindow=Math.min(this.recvWindow*2,this.config.maxStreamWindowSize)),this.recvWindowCapacity>=this.recvWindow&&t===0)return;const o=this.recvWindow-this.recvWindowCapacity;this.recvWindowCapacity=this.recvWindow,this.epochStart=n,this.sendFrame({type:FrameType.WindowUpdate,flag:t,streamID:this._id,length:o})}}const YAMUX_PROTOCOL_ID="/yamux/1.0.0",CLOSE_TIMEOUT$1=500;class Yamux{constructor(e,t={}){_(this,"protocol",YAMUX_PROTOCOL_ID);_(this,"_components");_(this,"_init");this._components=e,this._init=t}createStreamMuxer(e){return new YamuxMuxer(this._components,{...this._init,...e})}}class YamuxMuxer{constructor(e,t){_(this,"protocol",YAMUX_PROTOCOL_ID);_(this,"source");_(this,"sink");_(this,"config");_(this,"log");_(this,"logger");_(this,"closeController");_(this,"nextStreamID");_(this,"_streams");_(this,"nextPingID");_(this,"activePing");_(this,"rtt");_(this,"client");_(this,"localGoAway");_(this,"remoteGoAway");_(this,"numInboundStreams");_(this,"numOutboundStreams");_(this,"onIncomingStream");_(this,"onStreamEnd");this.client=t.direction==="outbound",this.config={...defaultConfig,...t},this.logger=e.logger,this.log=this.logger.forComponent("libp2p:yamux"),verifyConfig(this.config),this.closeController=new AbortController,setMaxListeners$2(1/0,this.closeController.signal),this.onIncomingStream=t.onIncomingStream,this.onStreamEnd=t.onStreamEnd,this._streams=new Map,this.source=pushable({onEnd:()=>{this.log?.trace("muxer source ended"),this._streams.forEach(n=>{n.destroy()})}}),this.sink=async n=>{const i=()=>{const c=getIterator(n);if(c.return!=null){const l=c.return();isPromise(l)&&l.catch(u=>{this.log?.("could not cause sink source to return",u)})}};let o,a;try{const c=new Decoder$1(n);try{this.closeController.signal.addEventListener("abort",i);for await(const l of c.emitFrames())await this.handleFrame(l.header,l.readData)}finally{this.closeController.signal.removeEventListener("abort",i)}o=GoAwayCode.NormalTermination}catch(c){const l=c.code;PROTOCOL_ERRORS.has(l)?(this.log?.error("protocol error in sink",c),o=GoAwayCode.ProtocolError):(this.log?.error("internal error in sink",c),o=GoAwayCode.InternalError),a=c}this.log?.trace("muxer sink ended"),a!=null?this.abort(a,o):await this.close({reason:o})},this.numInboundStreams=0,this.numOutboundStreams=0,this.nextStreamID=this.client?1:2,this.nextPingID=0,this.rtt=-1,this.log?.trace("muxer created"),this.config.enableKeepAlive&&this.keepAliveLoop().catch(n=>this.log?.error("keepalive error: %s",n)),this.ping().catch(n=>this.log?.error("ping error: %s",n))}get streams(){return Array.from(this._streams.values())}newStream(e){if(this.remoteGoAway!==void 0)throw new CodeError$6("muxer closed remotely",ERR_MUXER_REMOTE_CLOSED);if(this.localGoAway!==void 0)throw new CodeError$6("muxer closed locally",ERR_MUXER_LOCAL_CLOSED);const t=this.nextStreamID;if(this.nextStreamID+=2,this.numOutboundStreams>=this.config.maxOutboundStreams)throw new CodeError$6("max outbound streams exceeded",ERR_MAX_OUTBOUND_STREAMS_EXCEEDED);this.log?.trace("new outgoing stream id=%s",t);const n=this._newStream(t,e,StreamState.Init,"outbound");return this._streams.set(t,n),this.numOutboundStreams++,n.sendWindowUpdate(),n}async ping(){if(this.remoteGoAway!==void 0)throw new CodeError$6("muxer closed remotely",ERR_MUXER_REMOTE_CLOSED);if(this.localGoAway!==void 0)throw new CodeError$6("muxer closed locally",ERR_MUXER_LOCAL_CLOSED);if(this.activePing===void 0){let e=()=>{};this.activePing={id:this.nextPingID++,promise:new Promise((i,o)=>{const a=()=>{o(new CodeError$6("muxer closed locally",ERR_MUXER_LOCAL_CLOSED))};this.closeController.signal.addEventListener("abort",a,{once:!0}),e=()=>{this.closeController.signal.removeEventListener("abort",a),i()}}),resolve:e};const t=Date.now();this.sendPing(this.activePing.id);try{await this.activePing.promise}finally{delete this.activePing}const n=Date.now();this.rtt=n-t}else await this.activePing.promise;return this.rtt}getRTT(){return this.rtt}async close(e={}){if(this.closeController.signal.aborted)return;const t=e?.reason??GoAwayCode.NormalTermination;if(this.log?.trace("muxer close reason=%s",t),e.signal==null){const n=AbortSignal.timeout(CLOSE_TIMEOUT$1);setMaxListeners$2(1/0,n),e={...e,signal:n}}try{await Promise.all([...this._streams.values()].map(async n=>n.close(e))),this.sendGoAway(t),this._closeMuxer()}catch(n){this.abort(n)}}abort(e,t){if(!this.closeController.signal.aborted){t=t??GoAwayCode.InternalError,this.log?.error("muxer abort reason=%s error=%s",t,e);for(const n of this._streams.values())n.abort(e);this.sendGoAway(t),this._closeMuxer()}}isClosed(){return this.closeController.signal.aborted}_closeMuxer(){this.closeController.abort(),this.source.end()}_newStream(e,t,n,i){if(this._streams.get(e)!=null)throw new CodeError$6("Stream already exists",ERR_STREAM_ALREADY_EXISTS,{id:e});const o=new YamuxStream({id:e.toString(),name:t,state:n,direction:i,sendFrame:this.sendFrame.bind(this),onEnd:()=>{this.closeStream(e),this.onStreamEnd?.(o)},log:this.logger.forComponent(`libp2p:yamux:${i}:${e}`),config:this.config,getRTT:this.getRTT.bind(this)});return o}closeStream(e){this.client===(e%2===0)?this.numInboundStreams--:this.numOutboundStreams--,this._streams.delete(e)}async keepAliveLoop(){const e=new Promise((t,n)=>{this.closeController.signal.addEventListener("abort",n,{once:!0})});for(this.log?.trace("muxer keepalive enabled interval=%s",this.config.keepAliveInterval);;){let t;try{await Promise.race([e,new Promise(n=>{t=setTimeout(n,this.config.keepAliveInterval)})]),this.ping().catch(n=>this.log?.error("ping error: %s",n))}catch{clearInterval(t);return}}}async handleFrame(e,t){const{streamID:n,type:i,length:o}=e;if(this.log?.trace("received frame %o",e),n===0)switch(i){case FrameType.Ping:{this.handlePing(e);return}case FrameType.GoAway:{this.handleGoAway(o);return}default:throw new CodeError$6("Invalid frame type",ERR_INVALID_FRAME,{header:e})}else switch(e.type){case FrameType.Data:case FrameType.WindowUpdate:{await this.handleStreamMessage(e,t);return}default:throw new CodeError$6("Invalid frame type",ERR_INVALID_FRAME,{header:e})}}handlePing(e){if(e.flag===Flag.SYN)this.log?.trace("received ping request pingId=%s",e.length),this.sendPing(e.length,Flag.ACK);else if(e.flag===Flag.ACK)this.log?.trace("received ping response pingId=%s",e.length),this.handlePingResponse(e.length);else throw new CodeError$6("Invalid frame flag",ERR_INVALID_FRAME,{header:e})}handlePingResponse(e){if(this.activePing===void 0)throw new CodeError$6("ping not requested",ERR_UNREQUESTED_PING);if(this.activePing.id!==e)throw new CodeError$6("ping doesn't match our id",ERR_NOT_MATCHING_PING);this.activePing.resolve()}handleGoAway(e){this.log?.trace("received GoAway reason=%s",GoAwayCode[e]??"unknown"),this.remoteGoAway=e;for(const t of this._streams.values())t.reset();this._closeMuxer()}async handleStreamMessage(e,t){const{streamID:n,flag:i,type:o}=e;(i&Flag.SYN)===Flag.SYN&&this.incomingStream(n);const a=this._streams.get(n);if(a===void 0){if(o===FrameType.Data){if(this.log?.("discarding data for stream id=%s",n),t===void 0)throw new Error("unreachable");await t()}else this.log?.("frame for missing stream id=%s",n);return}switch(o){case FrameType.WindowUpdate:{a.handleWindowUpdate(e);return}case FrameType.Data:{if(t===void 0)throw new Error("unreachable");await a.handleData(e,t);return}default:throw new Error("unreachable")}}incomingStream(e){if(this.client!==(e%2===0))throw new CodeError$6("both endpoints are clients",ERR_BOTH_CLIENTS);if(this._streams.has(e))return;if(this.log?.trace("new incoming stream id=%s",e),this.localGoAway!==void 0){this.sendFrame({type:FrameType.WindowUpdate,flag:Flag.RST,streamID:e,length:0});return}if(this.numInboundStreams>=this.config.maxInboundStreams){this.log?.("maxIncomingStreams exceeded, forcing stream reset"),this.sendFrame({type:FrameType.WindowUpdate,flag:Flag.RST,streamID:e,length:0});return}const t=this._newStream(e,void 0,StreamState.SYNReceived,"inbound");this.numInboundStreams++,this._streams.set(e,t),this.onIncomingStream?.(t)}sendFrame(e,t){if(this.log?.trace("sending frame %o",e),e.type===FrameType.Data){if(t===void 0)throw new CodeError$6("invalid frame",ERR_INVALID_FRAME);this.source.push(new Uint8ArrayList(encodeHeader(e),t))}else this.source.push(encodeHeader(e))}sendPing(e,t=Flag.SYN){t===Flag.SYN?this.log?.trace("sending ping request pingId=%s",e):this.log?.trace("sending ping response pingId=%s",e),this.sendFrame({type:FrameType.Ping,flag:t,streamID:0,length:e})}sendGoAway(e=GoAwayCode.NormalTermination){this.log?.("sending GoAway reason=%s",GoAwayCode[e]),this.localGoAway=e,this.sendFrame({type:FrameType.GoAway,flag:0,streamID:0,length:e})}}function isPromise(r){return r!=null&&typeof r.then=="function"}function yamux(r={}){return e=>new Yamux(e,r)}const connectionSymbol=Symbol.for("@libp2p/connection"),contentRoutingSymbol=Symbol.for("@libp2p/content-routing"),peerDiscoverySymbol=Symbol.for("@libp2p/peer-discovery"),peerIdSymbol$1=Symbol.for("@libp2p/peer-id");function isPeerId$1(r){return r!=null&&!!r[peerIdSymbol$1]}const peerRoutingSymbol=Symbol.for("@libp2p/peer-routing"),KEEP_ALIVE="keep-alive";var TopicValidatorResult$4;(function(r){r.Accept="accept",r.Ignore="ignore",r.Reject="reject"})(TopicValidatorResult$4||(TopicValidatorResult$4={}));var FaultTolerance$4;(function(r){r[r.FATAL_ALL=0]="FATAL_ALL",r[r.NO_FATAL=1]="NO_FATAL"})(FaultTolerance$4||(FaultTolerance$4={}));const Ke=class Ke extends Error{constructor(t="The operation was aborted"){super(t);_(this,"code");_(this,"type");this.code=Ke.code,this.type=Ke.type}};_(Ke,"code","ABORT_ERR"),_(Ke,"type","aborted");let AbortError=Ke,CodeError$4=class extends Error{constructor(t,n,i){super(t);_(this,"code");_(this,"props");this.code=n,this.name=i?.name??"CodeError",this.props=i??{}}};const ERR_TIMEOUT$1="ERR_TIMEOUT";function setMaxListeners$1(){}var Pe;class TypedEventEmitter extends EventTarget{constructor(){super(...arguments);ne(this,Pe,new Map)}listenerCount(t){const n=F(this,Pe).get(t);return n==null?0:n.length}addEventListener(t,n,i){super.addEventListener(t,n,i);let o=F(this,Pe).get(t);o==null&&(o=[],F(this,Pe).set(t,o)),o.push({callback:n,once:(i!==!0&&i!==!1&&i?.once)??!1})}removeEventListener(t,n,i){super.removeEventListener(t.toString(),n??null,i);let o=F(this,Pe).get(t);o!=null&&(o=o.filter(({callback:a})=>a!==n),F(this,Pe).set(t,o))}dispatchEvent(t){const n=super.dispatchEvent(t);let i=F(this,Pe).get(t.type);return i==null||(i=i.filter(({once:o})=>!o),F(this,Pe).set(t.type,i)),n}safeDispatchEvent(t,n){return this.dispatchEvent(new CustomEvent(t,n))}}Pe=new WeakMap;class CustomEventPolyfill extends Event{constructor(t,n){super(t,n);_(this,"detail");this.detail=n?.detail}}const CustomEvent=globalThis.CustomEvent??CustomEventPolyfill,setMaxListeners=(r,...e)=>{try{[...e]}catch{}};function isStartable(r){return r!=null&&typeof r.start=="function"&&typeof r.stop=="function"}debug$2.formatters.b=r=>r==null?"undefined":base58btc$4.baseEncode(r);debug$2.formatters.t=r=>r==null?"undefined":base32$5.baseEncode(r);debug$2.formatters.m=r=>r==null?"undefined":base64$6.baseEncode(r);debug$2.formatters.p=r=>r==null?"undefined":r.toString();debug$2.formatters.c=r=>r==null?"undefined":r.toString();debug$2.formatters.k=r=>r==null?"undefined":r.toString();debug$2.formatters.a=r=>r==null?"undefined":r.toString();function createDisabledLogger(r){const e=()=>{};return e.enabled=!1,e.color="",e.diff=0,e.log=()=>{},e.namespace=r,e.destroy=()=>!0,e.extend=()=>e,e}function defaultLogger(){return{forComponent(r){return logger(r)}}}function logger(r){let e=createDisabledLogger(`${r}:trace`);return debug$2.enabled(`${r}:trace`)&&debug$2.names.map(t=>t.toString()).find(t=>t.includes(":trace"))!=null&&(e=debug$2(`${r}:trace`)),Object.assign(debug$2(r),{error:debug$2(`${r}:error`),trace:e})}function mapIterable$1(r,e){const t={[Symbol.iterator]:()=>t,next:()=>{const n=r.next(),i=n.value;return n.done===!0||i==null?{done:!0,value:void 0}:{done:!1,value:e(i)}}};return t}let PeerMap$1=class{constructor(e){_(this,"map");if(this.map=new Map,e!=null)for(const[t,n]of e.entries())this.map.set(t.toString(),n)}[Symbol.iterator](){return this.entries()}clear(){this.map.clear()}delete(e){this.map.delete(e.toString())}entries(){return mapIterable$1(this.map.entries(),e=>[peerIdFromString(e[0]),e[1]])}forEach(e){this.map.forEach((t,n)=>{e(t,peerIdFromString(n),this)})}get(e){return this.map.get(e.toString())}has(e){return this.map.has(e.toString())}set(e,t){this.map.set(e.toString(),t)}keys(){return mapIterable$1(this.map.keys(),e=>peerIdFromString(e))}values(){return this.map.values()}get size(){return this.map.size}};class PeerSet{constructor(e){_(this,"set");if(this.set=new Set,e!=null)for(const t of e)this.set.add(t.toString())}get size(){return this.set.size}[Symbol.iterator](){return this.values()}add(e){this.set.add(e.toString())}clear(){this.set.clear()}delete(e){this.set.delete(e.toString())}entries(){return mapIterable$1(this.set.entries(),e=>{const t=peerIdFromString(e[0]);return[t,t]})}forEach(e){this.set.forEach(t=>{const n=peerIdFromString(t);e(n,n,this)})}has(e){return this.set.has(e.toString())}values(){return mapIterable$1(this.set.values(),e=>peerIdFromString(e))}intersection(e){const t=new PeerSet;for(const n of e)this.has(n)&&t.add(n);return t}difference(e){const t=new PeerSet;for(const n of this)e.has(n)||t.add(n);return t}union(e){const t=new PeerSet;for(const n of e)t.add(n);for(const n of this)t.add(n);return t}}var PeerIdProto;(function(r){let e;r.codec=()=>(e==null&&(e=message((t,n,i={})=>{i.lengthDelimited!==!1&&n.fork(),t.id!=null&&(n.uint32(10),n.bytes(t.id)),t.pubKey!=null&&(n.uint32(18),n.bytes(t.pubKey)),t.privKey!=null&&(n.uint32(26),n.bytes(t.privKey)),i.lengthDelimited!==!1&&n.ldelim()},(t,n)=>{const i={},o=n==null?t.len:t.pos+n;for(;t.pos<o;){const a=t.uint32();switch(a>>>3){case 1:i.id=t.bytes();break;case 2:i.pubKey=t.bytes();break;case 3:i.privKey=t.bytes();break;default:t.skipType(a&7);break}}return i})),e),r.encode=t=>encodeMessage(t,r.codec()),r.decode=t=>decodeMessage$1(t,r.codec())})(PeerIdProto||(PeerIdProto={}));const createEd25519PeerId=async()=>{const r=await generateKeyPair("Ed25519"),e=await createFromPrivKey(r);if(e.type==="Ed25519")return e;throw new Error(`Generated unexpected PeerId type "${e.type}"`)};async function createFromPrivKey(r){return peerIdFromKeys(marshalPublicKey(r.public),marshalPrivateKey(r))}var TopicValidatorResult$3;(function(r){r.Accept="accept",r.Ignore="ignore",r.Reject="reject"})(TopicValidatorResult$3||(TopicValidatorResult$3={}));var FaultTolerance$3;(function(r){r[r.FATAL_ALL=0]="FATAL_ALL",r[r.NO_FATAL=1]="NO_FATAL"})(FaultTolerance$3||(FaultTolerance$3={}));let CodeError$3=class extends Error{constructor(t,n,i){super(t);_(this,"code");_(this,"props");this.code=n,this.name=i?.name??"CodeError",this.props=i??{}}};const codes$2={ERR_SIGNATURE_NOT_VALID:"ERR_SIGNATURE_NOT_VALID"};var Envelope;(function(r){let e;r.codec=()=>(e==null&&(e=message((t,n,i={})=>{i.lengthDelimited!==!1&&n.fork(),t.publicKey!=null&&t.publicKey.byteLength>0&&(n.uint32(10),n.bytes(t.publicKey)),t.payloadType!=null&&t.payloadType.byteLength>0&&(n.uint32(18),n.bytes(t.payloadType)),t.payload!=null&&t.payload.byteLength>0&&(n.uint32(26),n.bytes(t.payload)),t.signature!=null&&t.signature.byteLength>0&&(n.uint32(42),n.bytes(t.signature)),i.lengthDelimited!==!1&&n.ldelim()},(t,n)=>{const i={publicKey:new Uint8Array(0),payloadType:new Uint8Array(0),payload:new Uint8Array(0),signature:new Uint8Array(0)},o=n==null?t.len:t.pos+n;for(;t.pos<o;){const a=t.uint32();switch(a>>>3){case 1:i.publicKey=t.bytes();break;case 2:i.payloadType=t.bytes();break;case 3:i.payload=t.bytes();break;case 5:i.signature=t.bytes();break;default:t.skipType(a&7);break}}return i})),e),r.encode=t=>encodeMessage(t,r.codec()),r.decode=t=>decodeMessage$1(t,r.codec())})(Envelope||(Envelope={}));const ke=class ke{constructor(e){_(this,"peerId");_(this,"payloadType");_(this,"payload");_(this,"signature");_(this,"marshaled");const{peerId:t,payloadType:n,payload:i,signature:o}=e;this.peerId=t,this.payloadType=n,this.payload=i,this.signature=o}marshal(){if(this.peerId.publicKey==null)throw new Error("Missing public key");return this.marshaled==null&&(this.marshaled=Envelope.encode({publicKey:this.peerId.publicKey,payloadType:this.payloadType,payload:this.payload.subarray(),signature:this.signature})),this.marshaled}equals(e){return equals$4(this.marshal(),e.marshal())}async validate(e){const t=formatSignaturePayload(e,this.payloadType,this.payload);if(this.peerId.publicKey==null)throw new Error("Missing public key");return unmarshalPublicKey(this.peerId.publicKey).verify(t.subarray(),this.signature)}};_(ke,"createFromProtobuf",async e=>{const t=Envelope.decode(e),n=await peerIdFromKeys(t.publicKey);return new ke({peerId:n,payloadType:t.payloadType,payload:t.payload,signature:t.signature})}),_(ke,"seal",async(e,t)=>{if(t.privateKey==null)throw new Error("Missing private key");const n=e.domain,i=e.codec,o=e.marshal(),a=formatSignaturePayload(n,i,o),l=await(await unmarshalPrivateKey(t.privateKey)).sign(a.subarray());return new ke({peerId:t,payloadType:i,payload:o,signature:l})}),_(ke,"openAndCertify",async(e,t)=>{const n=await ke.createFromProtobuf(e);if(!await n.validate(t))throw new CodeError$3("envelope signature is not valid for the given domain",codes$2.ERR_SIGNATURE_NOT_VALID);return n});let RecordEnvelope=ke;const formatSignaturePayload=(r,e,t)=>{const n=fromString$b(r),i=encode$a(n.byteLength),o=encode$a(e.length),a=encode$a(t.length);return new Uint8ArrayList(i,n,o,e,a,t)};function arrayEquals(r,e){const t=(n,i)=>n.toString().localeCompare(i.toString());return r.length!==e.length?!1:(e.sort(t),r.sort(t).every((n,i)=>e[i].equals(n)))}const ENVELOPE_DOMAIN_PEER_RECORD="libp2p-peer-record",ENVELOPE_PAYLOAD_TYPE_PEER_RECORD=Uint8Array.from([3,1]);var PeerRecord$1;(function(r){(function(t){let n;t.codec=()=>(n==null&&(n=message((i,o,a={})=>{a.lengthDelimited!==!1&&o.fork(),i.multiaddr!=null&&i.multiaddr.byteLength>0&&(o.uint32(10),o.bytes(i.multiaddr)),a.lengthDelimited!==!1&&o.ldelim()},(i,o)=>{const a={multiaddr:new Uint8Array(0)},c=o==null?i.len:i.pos+o;for(;i.pos<c;){const l=i.uint32();switch(l>>>3){case 1:a.multiaddr=i.bytes();break;default:i.skipType(l&7);break}}return a})),n),t.encode=i=>encodeMessage(i,t.codec()),t.decode=i=>decodeMessage$1(i,t.codec())})(r.AddressInfo||(r.AddressInfo={}));let e;r.codec=()=>(e==null&&(e=message((t,n,i={})=>{if(i.lengthDelimited!==!1&&n.fork(),t.peerId!=null&&t.peerId.byteLength>0&&(n.uint32(10),n.bytes(t.peerId)),t.seq!=null&&t.seq!==0n&&(n.uint32(16),n.uint64(t.seq)),t.addresses!=null)for(const o of t.addresses)n.uint32(26),r.AddressInfo.codec().encode(o,n);i.lengthDelimited!==!1&&n.ldelim()},(t,n)=>{const i={peerId:new Uint8Array(0),seq:0n,addresses:[]},o=n==null?t.len:t.pos+n;for(;t.pos<o;){const a=t.uint32();switch(a>>>3){case 1:i.peerId=t.bytes();break;case 2:i.seq=t.uint64();break;case 3:i.addresses.push(r.AddressInfo.codec().decode(t,t.uint32()));break;default:t.skipType(a&7);break}}return i})),e),r.encode=t=>encodeMessage(t,r.codec()),r.decode=t=>decodeMessage$1(t,r.codec())})(PeerRecord$1||(PeerRecord$1={}));const De=class De{constructor(e){_(this,"peerId");_(this,"multiaddrs");_(this,"seqNumber");_(this,"domain",De.DOMAIN);_(this,"codec",De.CODEC);_(this,"marshaled");const{peerId:t,multiaddrs:n,seqNumber:i}=e;this.peerId=t,this.multiaddrs=n??[],this.seqNumber=i??BigInt(Date.now())}marshal(){return this.marshaled==null&&(this.marshaled=PeerRecord$1.encode({peerId:this.peerId.toBytes(),seq:BigInt(this.seqNumber),addresses:this.multiaddrs.map(e=>({multiaddr:e.bytes}))})),this.marshaled}equals(e){return!(!(e instanceof De)||!this.peerId.equals(e.peerId)||this.seqNumber!==e.seqNumber||!arrayEquals(this.multiaddrs,e.multiaddrs))}};_(De,"createFromProtobuf",e=>{const t=PeerRecord$1.decode(e),n=peerIdFromBytes(t.peerId),i=(t.addresses??[]).map(a=>multiaddr$1(a.multiaddr)),o=t.seq;return new De({peerId:n,multiaddrs:i,seqNumber:o})}),_(De,"DOMAIN",ENVELOPE_DOMAIN_PEER_RECORD),_(De,"CODEC",ENVELOPE_PAYLOAD_TYPE_PEER_RECORD);let PeerRecord=De;const peerIdSymbol=Symbol.for("@libp2p/peer-id");function isPeerId(r){return r!=null&&!!r[peerIdSymbol]}var TopicValidatorResult$2;(function(r){r.Accept="accept",r.Ignore="ignore",r.Reject="reject"})(TopicValidatorResult$2||(TopicValidatorResult$2={}));var FaultTolerance$2;(function(r){r[r.FATAL_ALL=0]="FATAL_ALL",r[r.NO_FATAL=1]="NO_FATAL"})(FaultTolerance$2||(FaultTolerance$2={}));let CodeError$2=class extends Error{constructor(t,n,i){super(t);_(this,"code");_(this,"props");this.code=n,this.name=i?.name??"CodeError",this.props=i??{}}};function mapIterable(r,e){const t={[Symbol.iterator]:()=>t,next:()=>{const n=r.next(),i=n.value;return n.done===!0||i==null?{done:!0,value:void 0}:{done:!1,value:e(i)}}};return t}class PeerMap{constructor(e){_(this,"map");if(this.map=new Map,e!=null)for(const[t,n]of e.entries())this.map.set(t.toString(),n)}[Symbol.iterator](){return this.entries()}clear(){this.map.clear()}delete(e){this.map.delete(e.toString())}entries(){return mapIterable(this.map.entries(),e=>[peerIdFromString(e[0]),e[1]])}forEach(e){this.map.forEach((t,n)=>{e(t,peerIdFromString(n),this)})}get(e){return this.map.get(e.toString())}has(e){return this.map.has(e.toString())}set(e,t){this.map.set(e.toString(),t)}keys(){return mapIterable(this.map.keys(),e=>peerIdFromString(e))}values(){return this.map.values()}get size(){return this.map.size}}const codes$1={ERR_INVALID_PARAMETERS:"ERR_INVALID_PARAMETERS"};var Peer;(function(r){(function(t){let n;t.codec=()=>(n==null&&(n=message((i,o,a={})=>{a.lengthDelimited!==!1&&o.fork(),i.key!=null&&i.key!==""&&(o.uint32(10),o.string(i.key)),i.value!=null&&i.value.byteLength>0&&(o.uint32(18),o.bytes(i.value)),a.lengthDelimited!==!1&&o.ldelim()},(i,o)=>{const a={key:"",value:new Uint8Array(0)},c=o==null?i.len:i.pos+o;for(;i.pos<c;){const l=i.uint32();switch(l>>>3){case 1:a.key=i.string();break;case 2:a.value=i.bytes();break;default:i.skipType(l&7);break}}return a})),n),t.encode=i=>encodeMessage(i,t.codec()),t.decode=i=>decodeMessage$1(i,t.codec())})(r.Peer$metadataEntry||(r.Peer$metadataEntry={})),function(t){let n;t.codec=()=>(n==null&&(n=message((i,o,a={})=>{a.lengthDelimited!==!1&&o.fork(),i.key!=null&&i.key!==""&&(o.uint32(10),o.string(i.key)),i.value!=null&&(o.uint32(18),Tag.codec().encode(i.value,o)),a.lengthDelimited!==!1&&o.ldelim()},(i,o)=>{const a={key:""},c=o==null?i.len:i.pos+o;for(;i.pos<c;){const l=i.uint32();switch(l>>>3){case 1:a.key=i.string();break;case 2:a.value=Tag.codec().decode(i,i.uint32());break;default:i.skipType(l&7);break}}return a})),n),t.encode=i=>encodeMessage(i,t.codec()),t.decode=i=>decodeMessage$1(i,t.codec())}(r.Peer$tagsEntry||(r.Peer$tagsEntry={}));let e;r.codec=()=>(e==null&&(e=message((t,n,i={})=>{if(i.lengthDelimited!==!1&&n.fork(),t.addresses!=null)for(const o of t.addresses)n.uint32(10),Address.codec().encode(o,n);if(t.protocols!=null)for(const o of t.protocols)n.uint32(18),n.string(o);if(t.publicKey!=null&&(n.uint32(34),n.bytes(t.publicKey)),t.peerRecordEnvelope!=null&&(n.uint32(42),n.bytes(t.peerRecordEnvelope)),t.metadata!=null&&t.metadata.size!==0)for(const[o,a]of t.metadata.entries())n.uint32(50),r.Peer$metadataEntry.codec().encode({key:o,value:a},n);if(t.tags!=null&&t.tags.size!==0)for(const[o,a]of t.tags.entries())n.uint32(58),r.Peer$tagsEntry.codec().encode({key:o,value:a},n);i.lengthDelimited!==!1&&n.ldelim()},(t,n)=>{const i={addresses:[],protocols:[],metadata:new Map,tags:new Map},o=n==null?t.len:t.pos+n;for(;t.pos<o;){const a=t.uint32();switch(a>>>3){case 1:i.addresses.push(Address.codec().decode(t,t.uint32()));break;case 2:i.protocols.push(t.string());break;case 4:i.publicKey=t.bytes();break;case 5:i.peerRecordEnvelope=t.bytes();break;case 6:{const c=r.Peer$metadataEntry.codec().decode(t,t.uint32());i.metadata.set(c.key,c.value);break}case 7:{const c=r.Peer$tagsEntry.codec().decode(t,t.uint32());i.tags.set(c.key,c.value);break}default:t.skipType(a&7);break}}return i})),e),r.encode=t=>encodeMessage(t,r.codec()),r.decode=t=>decodeMessage$1(t,r.codec())})(Peer||(Peer={}));var Address;(function(r){let e;r.codec=()=>(e==null&&(e=message((t,n,i={})=>{i.lengthDelimited!==!1&&n.fork(),t.multiaddr!=null&&t.multiaddr.byteLength>0&&(n.uint32(10),n.bytes(t.multiaddr)),t.isCertified!=null&&(n.uint32(16),n.bool(t.isCertified)),i.lengthDelimited!==!1&&n.ldelim()},(t,n)=>{const i={multiaddr:new Uint8Array(0)},o=n==null?t.len:t.pos+n;for(;t.pos<o;){const a=t.uint32();switch(a>>>3){case 1:i.multiaddr=t.bytes();break;case 2:i.isCertified=t.bool();break;default:t.skipType(a&7);break}}return i})),e),r.encode=t=>encodeMessage(t,r.codec()),r.decode=t=>decodeMessage$1(t,r.codec())})(Address||(Address={}));var Tag;(function(r){let e;r.codec=()=>(e==null&&(e=message((t,n,i={})=>{i.lengthDelimited!==!1&&n.fork(),t.value!=null&&t.value!==0&&(n.uint32(8),n.uint32(t.value)),t.expiry!=null&&(n.uint32(16),n.uint64(t.expiry)),i.lengthDelimited!==!1&&n.ldelim()},(t,n)=>{const i={value:0},o=n==null?t.len:t.pos+n;for(;t.pos<o;){const a=t.uint32();switch(a>>>3){case 1:i.value=t.uint32();break;case 2:i.expiry=t.uint64();break;default:t.skipType(a&7);break}}return i})),e),r.encode=t=>encodeMessage(t,r.codec()),r.decode=t=>decodeMessage$1(t,r.codec())})(Tag||(Tag={}));function bytesToPeer(r,e){const t=Peer.decode(e);t.publicKey!=null&&r.publicKey==null&&(r=peerIdFromPeerId({...r,publicKey:r.publicKey}));const n=new Map,i=BigInt(Date.now());for(const[o,a]of t.tags.entries())a.expiry!=null&&a.expiry<i||n.set(o,a);return{...t,id:r,addresses:t.addresses.map(({multiaddr:o,isCertified:a})=>({multiaddr:multiaddr$1(o),isCertified:a??!1})),metadata:t.metadata,peerRecordEnvelope:t.peerRecordEnvelope??void 0,tags:n}}const NAMESPACE_COMMON="/peers/";function peerIdToDatastoreKey(r){if(!isPeerId(r)||r.type==null)throw new CodeError$2("Invalid PeerId",codes$1.ERR_INVALID_PARAMETERS);const e=r.toCID().toString();return new Key(`${NAMESPACE_COMMON}${e}`)}async function dedupeFilterAndSortAddresses(r,e,t){const n=new Map;for(const i of t){if(i==null)continue;if(i.multiaddr instanceof Uint8Array&&(i.multiaddr=multiaddr$1(i.multiaddr)),!isMultiaddr(i.multiaddr))throw new CodeError$2("Multiaddr was invalid",codes$1.ERR_INVALID_PARAMETERS);if(!await e(r,i.multiaddr))continue;const o=i.isCertified??!1,a=i.multiaddr.toString(),c=n.get(a);c!=null?i.isCertified=c.isCertified||o:n.set(a,{multiaddr:i.multiaddr,isCertified:o})}return[...n.values()].sort((i,o)=>i.multiaddr.toString().localeCompare(o.multiaddr.toString())).map(({isCertified:i,multiaddr:o})=>({isCertified:i,multiaddr:o.bytes}))}async function toPeerPB(r,e,t,n){if(e==null)throw new CodeError$2("Invalid PeerData",codes$1.ERR_INVALID_PARAMETERS);if(e.publicKey!=null&&r.publicKey!=null&&!equals$4(e.publicKey,r.publicKey))throw new CodeError$2("publicKey bytes do not match peer id publicKey bytes",codes$1.ERR_INVALID_PARAMETERS);const i=n.existingPeer;if(i!=null&&!r.equals(i.id))throw new CodeError$2("peer id did not match existing peer id",codes$1.ERR_INVALID_PARAMETERS);let o=i?.addresses??[],a=new Set(i?.protocols??[]),c=i?.metadata??new Map,l=i?.tags??new Map,u=i?.peerRecordEnvelope;if(t==="patch"){if((e.multiaddrs!=null||e.addresses!=null)&&(o=[],e.multiaddrs!=null&&o.push(...e.multiaddrs.map(g=>({isCertified:!1,multiaddr:g}))),e.addresses!=null&&o.push(...e.addresses)),e.protocols!=null&&(a=new Set(e.protocols)),e.metadata!=null){const g=e.metadata instanceof Map?[...e.metadata.entries()]:Object.entries(e.metadata);c=createSortedMap(g,{validate:validateMetadata})}if(e.tags!=null){const g=e.tags instanceof Map?[...e.tags.entries()]:Object.entries(e.tags);l=createSortedMap(g,{validate:validateTag,map:mapTag})}e.peerRecordEnvelope!=null&&(u=e.peerRecordEnvelope)}if(t==="merge"){if(e.multiaddrs!=null&&o.push(...e.multiaddrs.map(g=>({isCertified:!1,multiaddr:g}))),e.addresses!=null&&o.push(...e.addresses),e.protocols!=null&&(a=new Set([...a,...e.protocols])),e.metadata!=null){const g=e.metadata instanceof Map?[...e.metadata.entries()]:Object.entries(e.metadata);for(const[$,S]of g)S==null?c.delete($):c.set($,S);c=createSortedMap([...c.entries()],{validate:validateMetadata})}if(e.tags!=null){const g=e.tags instanceof Map?[...e.tags.entries()]:Object.entries(e.tags),$=new Map(l);for(const[S,E]of g)E==null?$.delete(S):$.set(S,E);l=createSortedMap([...$.entries()],{validate:validateTag,map:mapTag})}e.peerRecordEnvelope!=null&&(u=e.peerRecordEnvelope)}const f={addresses:await dedupeFilterAndSortAddresses(r,n.addressFilter??(async()=>!0),o),protocols:[...a.values()].sort((g,$)=>g.localeCompare($)),metadata:c,tags:l,publicKey:i?.id.publicKey??e.publicKey??r.publicKey,peerRecordEnvelope:u};return r.type!=="RSA"&&delete f.publicKey,f}function createSortedMap(r,e){const t=new Map;for(const[n,i]of r)i!=null&&e.validate(n,i);for(const[n,i]of r.sort(([o],[a])=>o.localeCompare(a)))i!=null&&t.set(n,e.map?.(n,i)??i);return t}function validateMetadata(r,e){if(typeof r!="string")throw new CodeError$2("Metadata key must be a string",codes$1.ERR_INVALID_PARAMETERS);if(!(e instanceof Uint8Array))throw new CodeError$2("Metadata value must be a Uint8Array",codes$1.ERR_INVALID_PARAMETERS)}function validateTag(r,e){if(typeof r!="string")throw new CodeError$2("Tag name must be a string",codes$1.ERR_INVALID_PARAMETERS);if(e.value!=null){if(parseInt(`${e.value}`,10)!==e.value)throw new CodeError$2("Tag value must be an integer",codes$1.ERR_INVALID_PARAMETERS);if(e.value<0||e.value>100)throw new CodeError$2("Tag value must be between 0-100",codes$1.ERR_INVALID_PARAMETERS)}if(e.ttl!=null){if(parseInt(`${e.ttl}`,10)!==e.ttl)throw new CodeError$2("Tag ttl must be an integer",codes$1.ERR_INVALID_PARAMETERS);if(e.ttl<0)throw new CodeError$2("Tag ttl must be between greater than 0",codes$1.ERR_INVALID_PARAMETERS)}}function mapTag(r,e){let t;return e.expiry!=null&&(t=e.expiry),e.ttl!=null&&(t=BigInt(Date.now()+Number(e.ttl))),{value:e.value??0,expiry:t}}function decodePeer(r,e,t){const n=r.toString().split("/")[2],i=base32$5.decode(n),o=peerIdFromBytes(i),a=t.get(o);if(a!=null)return a;const c=bytesToPeer(o,e);return t.set(o,c),c}function mapQuery(r,e){return r==null?{}:{prefix:NAMESPACE_COMMON,filters:(r.filters??[]).map(t=>({key:n,value:i})=>t(decodePeer(n,i,e))),orders:(r.orders??[]).map(t=>(n,i)=>t(decodePeer(n.key,n.value,e),decodePeer(i.key,i.value,e)))}}var je,gt,Xe,mt;class PersistentStore{constructor(e,t={}){ne(this,je);ne(this,Xe);_(this,"peerId");_(this,"datastore");_(this,"lock");_(this,"addressFilter");this.peerId=e.peerId,this.datastore=e.datastore,this.addressFilter=t.addressFilter,this.lock=createMortice({name:"peer-store",singleProcess:!0})}async has(e){return this.datastore.has(peerIdToDatastoreKey(e))}async delete(e){if(this.peerId.equals(e))throw new CodeError$2("Cannot delete self peer",codes$1.ERR_INVALID_PARAMETERS);await this.datastore.delete(peerIdToDatastoreKey(e))}async load(e){const t=await this.datastore.get(peerIdToDatastoreKey(e));return bytesToPeer(e,t)}async save(e,t){const{existingBuf:n,existingPeer:i}=await se(this,je,gt).call(this,e),o=await toPeerPB(e,t,"patch",{addressFilter:this.addressFilter});return se(this,Xe,mt).call(this,e,o,n,i)}async patch(e,t){const{existingBuf:n,existingPeer:i}=await se(this,je,gt).call(this,e),o=await toPeerPB(e,t,"patch",{addressFilter:this.addressFilter,existingPeer:i});return se(this,Xe,mt).call(this,e,o,n,i)}async merge(e,t){const{existingBuf:n,existingPeer:i}=await se(this,je,gt).call(this,e),o=await toPeerPB(e,t,"merge",{addressFilter:this.addressFilter,existingPeer:i});return se(this,Xe,mt).call(this,e,o,n,i)}async*all(e){const t=new PeerMap;for await(const{key:n,value:i}of this.datastore.query(mapQuery(e??{},t))){const o=decodePeer(n,i,t);o.id.equals(this.peerId)||(yield o)}}}je=new WeakSet,gt=async function(e){try{const t=await this.datastore.get(peerIdToDatastoreKey(e)),n=bytesToPeer(e,t);return{existingBuf:t,existingPeer:n}}catch(t){if(t.code!=="ERR_NOT_FOUND")throw t}return{}},Xe=new WeakSet,mt=async function(e,t,n,i){const o=Peer.encode(t);return n!=null&&equals$4(o,n)?{peer:bytesToPeer(e,o),previous:i,updated:!1}:(await this.datastore.put(peerIdToDatastoreKey(e),o),{peer:bytesToPeer(e,o),previous:i,updated:!0})};var Ze,$t;class PersistentPeerStore{constructor(e,t={}){ne(this,Ze);_(this,"store");_(this,"events");_(this,"peerId");_(this,"log");this.log=e.logger.forComponent("libp2p:peer-store"),this.events=e.events,this.peerId=e.peerId,this.store=new PersistentStore(e,t)}async forEach(e,t){this.log.trace("forEach await read lock");const n=await this.store.lock.readLock();this.log.trace("forEach got read lock");try{for await(const i of this.store.all(t))e(i)}finally{this.log.trace("forEach release read lock"),n()}}async all(e){this.log.trace("all await read lock");const t=await this.store.lock.readLock();this.log.trace("all got read lock");try{return await all$2(this.store.all(e))}finally{this.log.trace("all release read lock"),t()}}async delete(e){this.log.trace("delete await write lock");const t=await this.store.lock.writeLock();this.log.trace("delete got write lock");try{await this.store.delete(e)}finally{this.log.trace("delete release write lock"),t()}}async has(e){this.log.trace("has await read lock");const t=await this.store.lock.readLock();this.log.trace("has got read lock");try{return await this.store.has(e)}finally{this.log.trace("has release read lock"),t()}}async get(e){this.log.trace("get await read lock");const t=await this.store.lock.readLock();this.log.trace("get got read lock");try{return await this.store.load(e)}finally{this.log.trace("get release read lock"),t()}}async save(e,t){this.log.trace("save await write lock");const n=await this.store.lock.writeLock();this.log.trace("save got write lock");try{const i=await this.store.save(e,t);return se(this,Ze,$t).call(this,e,i),i.peer}finally{this.log.trace("save release write lock"),n()}}async patch(e,t){this.log.trace("patch await write lock");const n=await this.store.lock.writeLock();this.log.trace("patch got write lock");try{const i=await this.store.patch(e,t);return se(this,Ze,$t).call(this,e,i),i.peer}finally{this.log.trace("patch release write lock"),n()}}async merge(e,t){this.log.trace("merge await write lock");const n=await this.store.lock.writeLock();this.log.trace("merge got write lock");try{const i=await this.store.merge(e,t);return se(this,Ze,$t).call(this,e,i),i.peer}finally{this.log.trace("merge release write lock"),n()}}async consumePeerRecord(e,t){const n=await RecordEnvelope.openAndCertify(e,PeerRecord.DOMAIN);if(t?.equals(n.peerId)===!1)return this.log("envelope peer id was not the expected peer id - expected: %p received: %p",t,n.peerId),!1;const i=PeerRecord.createFromProtobuf(n.payload);let o;try{o=await this.get(n.peerId)}catch(a){if(a.code!=="ERR_NOT_FOUND")throw a}if(o?.peerRecordEnvelope!=null){const a=await RecordEnvelope.createFromProtobuf(o.peerRecordEnvelope),c=PeerRecord.createFromProtobuf(a.payload);if(c.seqNumber>=i.seqNumber)return this.log("sequence number was lower or equal to existing sequence number - stored: %d received: %d",c.seqNumber,i.seqNumber),!1}return await this.patch(i.peerId,{peerRecordEnvelope:e,addresses:i.multiaddrs.map(a=>({isCertified:!0,multiaddr:a}))}),!0}}Ze=new WeakSet,$t=function(e,t){t.updated&&(this.peerId.equals(e)?this.events.safeDispatchEvent("self:peer:update",{detail:t}):this.events.safeDispatchEvent("peer:update",{detail:t}))};function debounce(r,e){let t;return function(){const n=function(){t=void 0,r()};clearTimeout(t),t=setTimeout(n,e)}}const defaultAddressFilter=r=>r;function stripPeerId(r,e){const t=r.getPeerId();return t!=null&&peerIdFromString(t).equals(e)&&(r=r.decapsulate(multiaddr$1(`/p2p/${e.toString()}`))),r}class DefaultAddressManager{constructor(e,t={}){_(this,"log");_(this,"components");_(this,"listen");_(this,"announce");_(this,"observed");_(this,"announceFilter");const{listen:n=[],announce:i=[]}=t;this.components=e,this.log=e.logger.forComponent("libp2p:address-manager"),this.listen=n.map(o=>o.toString()),this.announce=new Set(i.map(o=>o.toString())),this.observed=new Map,this.announceFilter=t.announceFilter??defaultAddressFilter,this._updatePeerStoreAddresses=debounce(this._updatePeerStoreAddresses.bind(this),1e3),e.events.addEventListener("transport:listening",()=>{this._updatePeerStoreAddresses()}),e.events.addEventListener("transport:close",()=>{this._updatePeerStoreAddresses()})}_updatePeerStoreAddresses(){const e=this.getAnnounceAddrs().concat(this.components.transportManager.getAddrs()).concat([...this.observed.entries()].filter(([t,n])=>n.confident).map(([t])=>multiaddr$1(t))).map(t=>t.getPeerId()===this.components.peerId.toString()?t.decapsulate(`/p2p/${this.components.peerId.toString()}`):t);this.components.peerStore.patch(this.components.peerId,{multiaddrs:e}).catch(t=>{this.log.error("error updating addresses",t)})}getListenAddrs(){return Array.from(this.listen).map(e=>multiaddr$1(e))}getAnnounceAddrs(){return Array.from(this.announce).map(e=>multiaddr$1(e))}getObservedAddrs(){return Array.from(this.observed).map(([e])=>multiaddr$1(e))}addObservedAddr(e){e=stripPeerId(e,this.components.peerId);const t=e.toString();this.observed.has(t)||this.observed.set(t,{confident:!1})}confirmObservedAddr(e){e=stripPeerId(e,this.components.peerId);const t=e.toString(),i=(this.observed.get(t)??{confident:!1}).confident;this.observed.set(t,{confident:!0}),i||this._updatePeerStoreAddresses()}removeObservedAddr(e){e=stripPeerId(e,this.components.peerId);const t=e.toString();this.observed.delete(t)}getAddresses(){let e=this.getAnnounceAddrs().map(n=>n.toString());e.length===0&&(e=this.components.transportManager.getAddrs().map(n=>n.toString())),e=e.concat(Array.from(this.observed).filter(([n,i])=>i.confident).map(([n])=>n));const t=new Set(e);return this.announceFilter(Array.from(t).map(n=>multiaddr$1(n))).map(n=>n.protos().pop()?.path===!0||n.getPeerId()===this.components.peerId.toString()?n:n.encapsulate(`/p2p/${this.components.peerId.toString()}`))}}class DefaultComponents{constructor(e={}){_(this,"components",{});_(this,"_started",!1);this.components={};for(const[t,n]of Object.entries(e))this.components[t]=n;this.components.logger==null&&(this.components.logger=defaultLogger())}isStarted(){return this._started}async _invokeStartableMethod(e){await Promise.all(Object.values(this.components).filter(t=>isStartable(t)).map(async t=>{await t[e]?.()}))}async beforeStart(){await this._invokeStartableMethod("beforeStart")}async start(){await this._invokeStartableMethod("start"),this._started=!0}async afterStart(){await this._invokeStartableMethod("afterStart")}async beforeStop(){await this._invokeStartableMethod("beforeStop")}async stop(){await this._invokeStartableMethod("stop"),this._started=!1}async afterStop(){await this._invokeStartableMethod("afterStop")}}const OPTIONAL_SERVICES=["metrics","connectionProtector"],NON_SERVICE_PROPERTIES=["components","isStarted","beforeStart","start","afterStart","beforeStop","stop","afterStop","then","_invokeStartableMethod"];function defaultComponents(r={}){const e=new DefaultComponents(r);return new Proxy(e,{get(n,i,o){if(typeof i=="string"&&!NON_SERVICE_PROPERTIES.includes(i)){const a=e.components[i];if(a==null&&!OPTIONAL_SERVICES.includes(i))throw new CodeError$4(`${i} not set`,"ERR_SERVICE_MISSING");return a}return Reflect.get(n,i,o)},set(n,i,o){return typeof i=="string"?e.components[i]=o:Reflect.set(n,i,o),!0}})}function connectionGater(r={}){return{denyDialPeer:async()=>!1,denyDialMultiaddr:async e=>{const t=e.stringTuples();return t[0][0]===4||t[0][0]===41?!!is_ip_private(`${t[0][1]}`):!1},denyInboundConnection:async()=>!1,denyOutboundConnection:async()=>!1,denyInboundEncryptedConnection:async()=>!1,denyOutboundEncryptedConnection:async()=>!1,denyInboundUpgradedConnection:async()=>!1,denyOutboundUpgradedConnection:async()=>!1,filterMultiaddrForPeer:async()=>!0,...r}}function isPrivate(r){try{const{address:e}=r.nodeAddress();return!!is_ip_private(e)}catch{return!0}}function publicAddressesFirst(r,e){const t=isPrivate(r.multiaddr),n=isPrivate(e.multiaddr);return t&&!n?1:!t&&n?-1:0}function certifiedAddressesFirst(r,e){return r.isCertified&&!e.isCertified?-1:!r.isCertified&&e.isCertified?1:0}function circuitRelayAddressesLast(r,e){const t=Circuit$1.exactMatch(r.multiaddr),n=Circuit$1.exactMatch(e.multiaddr);return t&&!n?1:!t&&n?-1:0}function defaultAddressSort(r,e){const t=publicAddressesFirst(r,e);if(t!==0)return t;const n=circuitRelayAddressesLast(r,e);return n!==0?n:certifiedAddressesFirst(r,e)}var messages;(function(r){r.NOT_STARTED_YET="The libp2p node is not started yet",r.ERR_PROTECTOR_REQUIRED="Private network is enforced, but no protector was provided",r.NOT_FOUND="Not found"})(messages||(messages={}));var codes;(function(r){r.ERR_PROTECTOR_REQUIRED="ERR_PROTECTOR_REQUIRED",r.ERR_PEER_DIAL_INTERCEPTED="ERR_PEER_DIAL_INTERCEPTED",r.ERR_CONNECTION_INTERCEPTED="ERR_CONNECTION_INTERCEPTED",r.ERR_INVALID_PROTOCOLS_FOR_STREAM="ERR_INVALID_PROTOCOLS_FOR_STREAM",r.ERR_CONNECTION_ENDED="ERR_CONNECTION_ENDED",r.ERR_CONNECTION_FAILED="ERR_CONNECTION_FAILED",r.ERR_NODE_NOT_STARTED="ERR_NODE_NOT_STARTED",r.ERR_ALREADY_ABORTED="ERR_ALREADY_ABORTED",r.ERR_TOO_MANY_ADDRESSES="ERR_TOO_MANY_ADDRESSES",r.ERR_NO_VALID_ADDRESSES="ERR_NO_VALID_ADDRESSES",r.ERR_RELAYED_DIAL="ERR_RELAYED_DIAL",r.ERR_DIALED_SELF="ERR_DIALED_SELF",r.ERR_DISCOVERED_SELF="ERR_DISCOVERED_SELF",r.ERR_DUPLICATE_TRANSPORT="ERR_DUPLICATE_TRANSPORT",r.ERR_ENCRYPTION_FAILED="ERR_ENCRYPTION_FAILED",r.ERR_HOP_REQUEST_FAILED="ERR_HOP_REQUEST_FAILED",r.ERR_INVALID_KEY="ERR_INVALID_KEY",r.ERR_INVALID_MESSAGE="ERR_INVALID_MESSAGE",r.ERR_INVALID_PARAMETERS="ERR_INVALID_PARAMETERS",r.ERR_INVALID_PEER="ERR_INVALID_PEER",r.ERR_MUXER_UNAVAILABLE="ERR_MUXER_UNAVAILABLE",r.ERR_NOT_FOUND="ERR_NOT_FOUND",r.ERR_TRANSPORT_UNAVAILABLE="ERR_TRANSPORT_UNAVAILABLE",r.ERR_TRANSPORT_DIAL_FAILED="ERR_TRANSPORT_DIAL_FAILED",r.ERR_UNSUPPORTED_PROTOCOL="ERR_UNSUPPORTED_PROTOCOL",r.ERR_PROTOCOL_HANDLER_ALREADY_REGISTERED="ERR_PROTOCOL_HANDLER_ALREADY_REGISTERED",r.ERR_INVALID_MULTIADDR="ERR_INVALID_MULTIADDR",r.ERR_SIGNATURE_NOT_VALID="ERR_SIGNATURE_NOT_VALID",r.ERR_FIND_SELF="ERR_FIND_SELF",r.ERR_NO_ROUTERS_AVAILABLE="ERR_NO_ROUTERS_AVAILABLE",r.ERR_CONNECTION_NOT_MULTIPLEXED="ERR_CONNECTION_NOT_MULTIPLEXED",r.ERR_NO_DIAL_TOKENS="ERR_NO_DIAL_TOKENS",r.ERR_INVALID_CMS="ERR_INVALID_CMS",r.ERR_MISSING_KEYS="ERR_MISSING_KEYS",r.ERR_NO_KEY="ERR_NO_KEY",r.ERR_INVALID_KEY_NAME="ERR_INVALID_KEY_NAME",r.ERR_INVALID_KEY_TYPE="ERR_INVALID_KEY_TYPE",r.ERR_KEY_ALREADY_EXISTS="ERR_KEY_ALREADY_EXISTS",r.ERR_INVALID_KEY_SIZE="ERR_INVALID_KEY_SIZE",r.ERR_KEY_NOT_FOUND="ERR_KEY_NOT_FOUND",r.ERR_OLD_KEY_NAME_INVALID="ERR_OLD_KEY_NAME_INVALID",r.ERR_NEW_KEY_NAME_INVALID="ERR_NEW_KEY_NAME_INVALID",r.ERR_PASSWORD_REQUIRED="ERR_PASSWORD_REQUIRED",r.ERR_PEM_REQUIRED="ERR_PEM_REQUIRED",r.ERR_CANNOT_READ_KEY="ERR_CANNOT_READ_KEY",r.ERR_MISSING_PRIVATE_KEY="ERR_MISSING_PRIVATE_KEY",r.ERR_MISSING_PUBLIC_KEY="ERR_MISSING_PUBLIC_KEY",r.ERR_INVALID_OLD_PASS_TYPE="ERR_INVALID_OLD_PASS_TYPE",r.ERR_INVALID_NEW_PASS_TYPE="ERR_INVALID_NEW_PASS_TYPE",r.ERR_INVALID_PASS_LENGTH="ERR_INVALID_PASS_LENGTH",r.ERR_NOT_IMPLEMENTED="ERR_NOT_IMPLEMENTED",r.ERR_WRONG_PING_ACK="ERR_WRONG_PING_ACK",r.ERR_INVALID_RECORD="ERR_INVALID_RECORD",r.ERR_ALREADY_SUCCEEDED="ERR_ALREADY_SUCCEEDED",r.ERR_NO_HANDLER_FOR_PROTOCOL="ERR_NO_HANDLER_FOR_PROTOCOL",r.ERR_TOO_MANY_OUTBOUND_PROTOCOL_STREAMS="ERR_TOO_MANY_OUTBOUND_PROTOCOL_STREAMS",r.ERR_TOO_MANY_INBOUND_PROTOCOL_STREAMS="ERR_TOO_MANY_INBOUND_PROTOCOL_STREAMS",r.ERR_CONNECTION_DENIED="ERR_CONNECTION_DENIED",r.ERR_TRANSFER_LIMIT_EXCEEDED="ERR_TRANSFER_LIMIT_EXCEEDED"})(codes||(codes={}));const DefaultConfig={addresses:{listen:[],announce:[],noAnnounce:[],announceFilter:r=>r},connectionManager:{resolvers:{dnsaddr:dnsaddrResolver},addressSorter:defaultAddressSort},transportManager:{faultTolerance:FaultTolerance$4.FATAL_ALL}};function validateConfig(r){const e=mergeOptions$9(DefaultConfig,r);if(e.connectionProtector===null&&globalThis.process?.env?.LIBP2P_FORCE_PNET!=null)throw new CodeError$4(messages.ERR_PROTECTOR_REQUIRED,codes.ERR_PROTECTOR_REQUIRED);return e}function getPeerAddress(r){if(isPeerId$1(r))return{peerId:r,multiaddrs:[]};Array.isArray(r)||(r=[r]);let e;if(r.length>0){const t=r[0].getPeerId();e=t==null?void 0:peerIdFromString(t),r.forEach(n=>{if(!isMultiaddr(n))throw new CodeError$4("Invalid Multiaddr",codes.ERR_INVALID_MULTIADDR);const i=n.getPeerId();if(i==null){if(e!=null)throw new CodeError$4("Multiaddrs must all have the same peer id or have no peer id",codes.ERR_INVALID_PARAMETERS)}else{const o=peerIdFromString(i);if(e==null||!e.equals(o))throw new CodeError$4("Multiaddrs must all have the same peer id or have no peer id",codes.ERR_INVALID_PARAMETERS)}})}return{peerId:e,multiaddrs:r}}function lowerBound(r,e,t){let n=0,i=r.length;for(;i>0;){const o=Math.trunc(i/2);let a=n+o;t(r[a],e)<=0?(n=++a,i-=o+1):i=o}return n}var ve;class PeerPriorityQueue{constructor(){ne(this,ve,[])}enqueue(e,t){const n=t?.peerId,i=t?.priority??0;if(n==null)throw new CodeError$5("missing peer id",ERR_INVALID_PARAMETERS);const o={priority:i,peerId:n,run:e};if(this.size>0&&F(this,ve)[this.size-1].priority>=i){F(this,ve).push(o);return}const a=lowerBound(F(this,ve),o,(c,l)=>l.priority-c.priority);F(this,ve).splice(a,0,o)}dequeue(){return F(this,ve).shift()?.run}filter(e){if(e.peerId!=null){const t=e.peerId;return F(this,ve).filter(n=>t.equals(n.peerId)).map(n=>n.run)}return F(this,ve).filter(t=>t.priority===e.priority).map(t=>t.run)}get size(){return F(this,ve).length}}ve=new WeakMap;class PeerJobQueue extends PQueue$3{constructor(e={}){super({...e,queueClass:PeerPriorityQueue})}hasJob(e){return this.sizeBy({peerId:e})>0}}const DIAL_TIMEOUT=3e4,INBOUND_UPGRADE_TIMEOUT=3e4,MAX_PEER_ADDRS_TO_DIAL=25,AUTO_DIAL_INTERVAL=5e3,AUTO_DIAL_CONCURRENCY=25,AUTO_DIAL_PRIORITY=0,AUTO_DIAL_MAX_QUEUE_LENGTH=100,AUTO_DIAL_DISCOVERED_PEERS_DEBOUNCE=10,INBOUND_CONNECTION_THRESHOLD=5,MAX_INCOMING_PENDING_CONNECTIONS=10,LAST_DIAL_FAILURE_KEY="last-dial-failure",MIN_CONNECTIONS=5,MAX_CONNECTIONS=100,MAX_PARALLEL_DIALS=50,AUTO_DIAL_PEER_RETRY_THRESHOLD=1e3*60*7,defaultOptions$3={minConnections:MIN_CONNECTIONS,maxQueueLength:AUTO_DIAL_MAX_QUEUE_LENGTH,autoDialConcurrency:AUTO_DIAL_CONCURRENCY,autoDialPriority:AUTO_DIAL_PRIORITY,autoDialInterval:AUTO_DIAL_INTERVAL,autoDialPeerRetryThreshold:AUTO_DIAL_PEER_RETRY_THRESHOLD,autoDialDiscoveredPeersDebounce:AUTO_DIAL_DISCOVERED_PEERS_DEBOUNCE};class AutoDial{constructor(e,t){_(this,"connectionManager");_(this,"peerStore");_(this,"queue");_(this,"minConnections");_(this,"autoDialPriority");_(this,"autoDialIntervalMs");_(this,"autoDialMaxQueueLength");_(this,"autoDialPeerRetryThresholdMs");_(this,"autoDialDiscoveredPeersDebounce");_(this,"autoDialInterval");_(this,"started");_(this,"running");_(this,"log");this.connectionManager=e.connectionManager,this.peerStore=e.peerStore,this.minConnections=t.minConnections??defaultOptions$3.minConnections,this.autoDialPriority=t.autoDialPriority??defaultOptions$3.autoDialPriority,this.autoDialIntervalMs=t.autoDialInterval??defaultOptions$3.autoDialInterval,this.autoDialMaxQueueLength=t.maxQueueLength??defaultOptions$3.maxQueueLength,this.autoDialPeerRetryThresholdMs=t.autoDialPeerRetryThreshold??defaultOptions$3.autoDialPeerRetryThreshold,this.autoDialDiscoveredPeersDebounce=t.autoDialDiscoveredPeersDebounce??defaultOptions$3.autoDialDiscoveredPeersDebounce,this.log=e.logger.forComponent("libp2p:connection-manager:auto-dial"),this.started=!1,this.running=!1,this.queue=new PeerJobQueue({concurrency:t.autoDialConcurrency??defaultOptions$3.autoDialConcurrency}),this.queue.addListener("error",i=>{this.log.error("error during auto-dial",i)}),e.events.addEventListener("connection:close",()=>{this.autoDial().catch(i=>{this.log.error(i)})});let n;e.events.addEventListener("peer:discovery",()=>{clearTimeout(n),n=setTimeout(()=>{this.autoDial().catch(i=>{this.log.error(i)})},this.autoDialDiscoveredPeersDebounce)})}isStarted(){return this.started}start(){this.started=!0}afterStart(){this.autoDial().catch(e=>{this.log.error("error while autodialing",e)})}stop(){this.queue.clear(),clearTimeout(this.autoDialInterval),this.started=!1,this.running=!1}async autoDial(){if(!this.started||this.running)return;const e=this.connectionManager.getConnectionsMap(),t=e.size;if(t>=this.minConnections){this.minConnections>0&&this.log.trace("have enough connections %d/%d",t,this.minConnections);return}if(this.queue.size>this.autoDialMaxQueueLength){this.log("not enough connections %d/%d but auto dial queue is full",t,this.minConnections),this.sheduleNextAutodial();return}this.running=!0,this.log("not enough connections %d/%d - will dial peers to increase the number of connections",t,this.minConnections);const n=new PeerSet(this.connectionManager.getDialQueue().map(u=>u.peerId).filter(Boolean)),i=await this.peerStore.all({filters:[u=>u.addresses.length===0?(this.log.trace("not autodialing %p because they have no addresses",u.id),!1):e.has(u.id)?(this.log.trace("not autodialing %p because they are already connected",u.id),!1):n.has(u.id)?(this.log.trace("not autodialing %p because they are already being dialed",u.id),!1):this.queue.hasJob(u.id)?(this.log.trace("not autodialing %p because they are already being autodialed",u.id),!1):!0]}),o=i.sort(()=>Math.random()>.5?1:-1),a=new PeerMap$1;for(const u of o)a.has(u.id)||a.set(u.id,[...u.tags.values()].reduce((f,g)=>f+g.value,0));const l=o.sort((u,f)=>{const g=a.get(u.id)??0,$=a.get(f.id)??0;return g>$?-1:g<$?1:0}).filter(u=>{const f=u.metadata.get(LAST_DIAL_FAILURE_KEY);if(f==null)return!0;const g=parseInt(toString$b(f));return isNaN(g)?!0:Date.now()-g>this.autoDialPeerRetryThresholdMs});this.log("selected %d/%d peers to dial",l.length,i.length);for(const u of l)this.queue.add(async()=>{const f=this.connectionManager.getConnectionsMap().size;if(f>=this.minConnections){this.log("got enough connections now %d/%d",f,this.minConnections),this.queue.clear();return}this.log("connecting to a peerStore stored peer %p",u.id),await this.connectionManager.openConnection(u.id,{priority:this.autoDialPriority})},{peerId:u.id}).catch(f=>{this.log.error("could not connect to peerStore stored peer",f)});this.running=!1,this.sheduleNextAutodial()}sheduleNextAutodial(){this.started&&(this.autoDialInterval=setTimeout(()=>{this.autoDial().catch(e=>{this.log.error("error while autodialing",e)})},this.autoDialIntervalMs))}}const defaultOptions$2={maxConnections:MAX_CONNECTIONS,allow:[]};class ConnectionPruner{constructor(e,t={}){_(this,"maxConnections");_(this,"connectionManager");_(this,"peerStore");_(this,"allow");_(this,"events");_(this,"log");this.maxConnections=t.maxConnections??defaultOptions$2.maxConnections,this.allow=t.allow??defaultOptions$2.allow,this.connectionManager=e.connectionManager,this.peerStore=e.peerStore,this.events=e.events,this.log=e.logger.forComponent("libp2p:connection-manager:connection-pruner"),e.events.addEventListener("connection:open",()=>{this.maybePruneConnections().catch(n=>{this.log.error(n)})})}async maybePruneConnections(){const e=this.connectionManager.getConnections(),t=e.length,n=Math.max(t-this.maxConnections,0);if(this.log("checking max connections limit %d/%d",t,this.maxConnections),t<=this.maxConnections)return;this.log("max connections limit exceeded %d/%d, pruning %d connection(s)",t,this.maxConnections,n);const i=new PeerMap$1;for(const c of e){const l=c.remotePeer;if(!i.has(l)){i.set(l,0);try{const u=await this.peerStore.get(l);i.set(l,[...u.tags.values()].reduce((f,g)=>f+g.value,0))}catch(u){u.code!=="ERR_NOT_FOUND"&&this.log.error("error loading peer tags",u)}}}const o=e.sort((c,l)=>{const u=i.get(c.remotePeer)??0,f=i.get(l.remotePeer)??0;if(u>f)return 1;if(u<f)return-1;const g=c.timeline.open,$=l.timeline.open;return g<$?1:g>$?-1:0}),a=[];for(const c of o)if(this.log("too many connections open - closing a connection to %p",c.remotePeer),this.allow.some(u=>c.remoteAddr.toString().startsWith(u.toString()))||a.push(c),a.length===n)break;await Promise.all(a.map(async c=>{try{await c.close()}catch(l){this.log.error(l)}})),this.events.safeDispatchEvent("connection:prune",{detail:a})}}async function resolveMultiaddrs(r,e){if(!r.protoNames().includes("dnsaddr"))return[r];const n=await resolveRecord(r,e),a=(await Promise.all(n.map(async c=>resolveMultiaddrs(c,e)))).flat().reduce((c,l)=>(c.find(u=>u.equals(l))==null&&c.push(l),c),[]);return e.log("resolved %s to",r,a.map(c=>c.toString())),a}async function resolveRecord(r,e){try{return r=multiaddr$1(r.toString()),await r.resolve(e)}catch(t){return e.log.error(`multiaddr ${r.toString()} could not be resolved`,t),[]}}function combineSignals(...r){const e=[];for(const n of r)n!=null&&(setMaxListeners(1/0,n),e.push(n));const t=anySignal(e);return setMaxListeners(1/0,t),t}const defaultOptions$1={addressSorter:defaultAddressSort,maxParallelDials:MAX_PARALLEL_DIALS,maxPeerAddrsToDial:MAX_PEER_ADDRS_TO_DIAL,dialTimeout:DIAL_TIMEOUT,resolvers:{dnsaddr:dnsaddrResolver}};class DialQueue{constructor(e,t={}){_(this,"pendingDials");_(this,"queue");_(this,"peerId");_(this,"peerStore");_(this,"connectionGater");_(this,"transportManager");_(this,"addressSorter");_(this,"maxPeerAddrsToDial");_(this,"dialTimeout");_(this,"inProgressDialCount");_(this,"pendingDialCount");_(this,"shutDownController");_(this,"connections");_(this,"log");this.addressSorter=t.addressSorter??defaultOptions$1.addressSorter,this.maxPeerAddrsToDial=t.maxPeerAddrsToDial??defaultOptions$1.maxPeerAddrsToDial,this.dialTimeout=t.dialTimeout??defaultOptions$1.dialTimeout,this.connections=t.connections??new PeerMap$1,this.log=e.logger.forComponent("libp2p:connection-manager:dial-queue"),this.peerId=e.peerId,this.peerStore=e.peerStore,this.connectionGater=e.connectionGater,this.transportManager=e.transportManager,this.shutDownController=new AbortController,setMaxListeners(1/0,this.shutDownController.signal),this.pendingDialCount=e.metrics?.registerMetric("libp2p_dial_queue_pending_dials"),this.inProgressDialCount=e.metrics?.registerMetric("libp2p_dial_queue_in_progress_dials"),this.pendingDials=[];for(const[n,i]of Object.entries(t.resolvers??{}))resolvers$2.set(n,i);this.queue=new PQueue$3({concurrency:t.maxParallelDials??defaultOptions$1.maxParallelDials}),this.queue.on("add",()=>{this.pendingDialCount?.update(this.queue.size),this.inProgressDialCount?.update(this.queue.pending)}),this.queue.on("active",()=>{this.pendingDialCount?.update(this.queue.size),this.inProgressDialCount?.update(this.queue.pending)}),this.queue.on("completed",()=>{this.pendingDialCount?.update(this.queue.size),this.inProgressDialCount?.update(this.queue.pending)}),this.queue.on("error",n=>{this.log.error("error in dial queue",n),this.pendingDialCount?.update(this.queue.size),this.inProgressDialCount?.update(this.queue.pending)}),this.queue.on("empty",()=>{this.pendingDialCount?.update(this.queue.size),this.inProgressDialCount?.update(this.queue.pending)}),this.queue.on("idle",()=>{this.pendingDialCount?.update(this.queue.size),this.inProgressDialCount?.update(this.queue.pending)})}stop(){this.shutDownController.abort()}async dial(e,t={}){const{peerId:n,multiaddrs:i}=getPeerAddress(e),o=i.map($=>({multiaddr:$,isCertified:!1})),a=this.createDialAbortControllers(t.signal);let c;try{c=await this.calculateMultiaddrs(n,o,{...t,signal:a})}catch($){throw a.clear(),$}let l=Array.from(this.connections.values()).flat().find($=>t.force===!0?!1:c.find(S=>S.multiaddr.equals($.remoteAddr)));if(l!=null)return this.log("already connected to %a",l.remoteAddr),l;const u=this.pendingDials.find($=>!!($.peerId!=null&&n!=null&&$.peerId.equals(n)||c.map(({multiaddr:S})=>S.toString()).join()===$.multiaddrs.map(S=>S.toString()).join()));if(u!=null)return this.log("joining existing dial target for %p",n),a.clear(),u.promise;this.log("creating dial target for",c.map(({multiaddr:$})=>$.toString()));const f={id:randomId(),status:"queued",peerId:n,multiaddrs:c.map(({multiaddr:$})=>$)};f.promise=this.performDial(f,{...t,signal:a}).finally(()=>{this.pendingDials=this.pendingDials.filter($=>$.id!==f.id),a.clear()}).catch(async $=>{if(this.log.error("dial failed to %s",f.multiaddrs.map(S=>S.toString()).join(", "),$),n!=null)try{await this.peerStore.patch(n,{metadata:{[LAST_DIAL_FAILURE_KEY]:fromString$b(Date.now().toString())}})}catch(S){this.log.error("could not update last dial failure key for %p",n,S)}throw a.aborted?new CodeError$4($.message,ERR_TIMEOUT$1):$}),this.pendingDials.push(f);const g=await f.promise;return l=Array.from(this.connections.values()).flat().find($=>t.force===!0?!1:$.id!==g.id&&$.remoteAddr.equals(g.remoteAddr)),l!=null?(this.log("already connected to %a",l.remoteAddr),await g.close(),l):(this.log("connection opened to %a",g.remoteAddr),g)}createDialAbortControllers(e){const t=anySignal([AbortSignal.timeout(this.dialTimeout),this.shutDownController.signal,e]);try{setMaxListeners?.(1/0,t)}catch{}return t}async calculateMultiaddrs(e,t=[],n={}){if(e!=null){if(this.peerId.equals(e))throw new CodeError$4("Tried to dial self",codes.ERR_DIALED_SELF);if(await this.connectionGater.denyDialPeer?.(e)===!0)throw new CodeError$4("The dial request is blocked by gater.allowDialPeer",codes.ERR_PEER_DIAL_INTERCEPTED);if(t.length===0){this.log("loading multiaddrs for %p",e);try{const f=await this.peerStore.get(e);t.push(...f.addresses),this.log("loaded multiaddrs for %p",e,t.map(({multiaddr:g})=>g.toString()))}catch(f){if(f.code!==codes.ERR_NOT_FOUND)throw f}}}let i=(await Promise.all(t.map(async f=>{const g=await resolveMultiaddrs(f.multiaddr,{...n,log:this.log});return g.length===1&&g[0].equals(f.multiaddr)?f:g.map($=>({multiaddr:$,isCertified:!1}))}))).flat();if(e!=null){const f=`/p2p/${e.toString()}`;i=i.map(g=>g.multiaddr.protos().pop()?.path===!0?g:g.multiaddr.getPeerId()==null?{multiaddr:g.multiaddr.encapsulate(f),isCertified:g.isCertified}:g)}const o=i.filter(f=>{if(this.transportManager.transportForMultiaddr(f.multiaddr)==null)return!1;const g=f.multiaddr.getPeerId();return e!=null&&g!=null?e.equals(g):!0}),a=new Map;for(const f of o){const g=f.multiaddr.toString(),$=a.get(g);if($!=null){$.isCertified=$.isCertified||f.isCertified||!1;continue}a.set(g,f)}const c=[...a.values()];if((c.length===0||c.length>this.maxPeerAddrsToDial)&&(this.log("addresses for %p before filtering",e??"unknown peer",i.map(({multiaddr:f})=>f.toString())),this.log("addresses for %p after filtering",e??"unknown peer",c.map(({multiaddr:f})=>f.toString()))),c.length===0)throw new CodeError$4("The dial request has no valid addresses",codes.ERR_NO_VALID_ADDRESSES);if(c.length>this.maxPeerAddrsToDial)throw new CodeError$4("dial with more addresses than allowed",codes.ERR_TOO_MANY_ADDRESSES);const l=[];for(const f of c)this.connectionGater.denyDialMultiaddr!=null&&await this.connectionGater.denyDialMultiaddr(f.multiaddr)||l.push(f);const u=l.sort(this.addressSorter);if(u.length===0)throw new CodeError$4("The connection gater denied all addresses in the dial request",codes.ERR_NO_VALID_ADDRESSES);return u}async performDial(e,t={}){const n=e.multiaddrs.map(()=>new AbortController);try{const i=new PQueue$3({concurrency:1});i.on("error",a=>{this.log.error("error dialing %s %o",e.multiaddrs,a)});const o=await Promise.any(e.multiaddrs.map(async(a,c)=>{const l=n[c];if(l==null)throw new CodeError$4("dialAction did not come with an AbortController",codes.ERR_INVALID_PARAMETERS);const u=combineSignals(l.signal,t.signal);u.addEventListener("abort",()=>{this.log("dial to %a aborted",a)});const f=pDefer();return await i.add(async()=>{if(u.aborted){this.log("dial to %a was aborted before reaching the head of the peer dial queue",a),f.reject(new AbortError);return}await this.queue.add(async()=>{try{if(u.aborted){this.log("dial to %a was aborted before reaching the head of the dial queue",a),f.reject(new AbortError);return}e.status="active";const g=await this.transportManager.dial(a,{...t,signal:u});if(l.signal.aborted){this.log("multiple dials succeeded, closing superfluous connection"),g.close().catch($=>{this.log.error("error closing superfluous connection",$)}),f.reject(new AbortError);return}n[c]=void 0,n.forEach($=>{$!==void 0&&$.abort()}),this.log("dial to %a succeeded",a),f.resolve(g)}catch(g){this.log.error("error during dial of %a",a,g),f.reject(g)}},{...t,signal:u}).catch(g=>{f.reject(g)})},{signal:u}).catch(g=>{f.reject(g)}).finally(()=>{u.clear()}),f.promise}));if(o==null)throw new CodeError$4("successful dial led to empty object returned from peer dial queue",codes.ERR_TRANSPORT_DIAL_FAILED);return e.status="success",o}catch(i){throw e.status="error",e.multiaddrs.length===1&&i.name==="AggregateError"?i.errors[0]:i}}}function randomId(){return`${parseInt(String(Math.random()*1e9),10).toString()}${Date.now()}`}const DEFAULT_DIAL_PRIORITY=50,defaultOptions={minConnections:MIN_CONNECTIONS,maxConnections:MAX_CONNECTIONS,inboundConnectionThreshold:INBOUND_CONNECTION_THRESHOLD,maxIncomingPendingConnections:MAX_INCOMING_PENDING_CONNECTIONS,autoDialConcurrency:AUTO_DIAL_CONCURRENCY,autoDialPriority:AUTO_DIAL_PRIORITY,autoDialMaxQueueLength:AUTO_DIAL_MAX_QUEUE_LENGTH};class DefaultConnectionManager{constructor(e,t={}){_(this,"started");_(this,"connections");_(this,"allow");_(this,"deny");_(this,"maxIncomingPendingConnections");_(this,"incomingPendingConnections");_(this,"maxConnections");_(this,"dialQueue");_(this,"autoDial");_(this,"connectionPruner");_(this,"inboundConnectionRateLimiter");_(this,"peerStore");_(this,"metrics");_(this,"events");_(this,"log");this.maxConnections=t.maxConnections??defaultOptions.maxConnections;const n=t.minConnections??defaultOptions.minConnections;if(this.maxConnections<n)throw new CodeError$4("Connection Manager maxConnections must be greater than minConnections",codes.ERR_INVALID_PARAMETERS);this.connections=new PeerMap$1,this.started=!1,this.peerStore=e.peerStore,this.metrics=e.metrics,this.events=e.events,this.log=e.logger.forComponent("libp2p:connection-manager"),this.onConnect=this.onConnect.bind(this),this.onDisconnect=this.onDisconnect.bind(this),this.events.addEventListener("connection:open",this.onConnect),this.events.addEventListener("connection:close",this.onDisconnect),this.allow=(t.allow??[]).map(i=>multiaddr$1(i)),this.deny=(t.deny??[]).map(i=>multiaddr$1(i)),this.incomingPendingConnections=0,this.maxIncomingPendingConnections=t.maxIncomingPendingConnections??defaultOptions.maxIncomingPendingConnections,this.inboundConnectionRateLimiter=new rateLimiterFlexible.RateLimiterMemory({points:t.inboundConnectionThreshold??defaultOptions.inboundConnectionThreshold,duration:1}),this.autoDial=new AutoDial({connectionManager:this,peerStore:e.peerStore,events:e.events,logger:e.logger},{minConnections:n,autoDialConcurrency:t.autoDialConcurrency??defaultOptions.autoDialConcurrency,autoDialPriority:t.autoDialPriority??defaultOptions.autoDialPriority,maxQueueLength:t.autoDialMaxQueueLength??defaultOptions.autoDialMaxQueueLength}),this.connectionPruner=new ConnectionPruner({connectionManager:this,peerStore:e.peerStore,events:e.events,logger:e.logger},{maxConnections:this.maxConnections,allow:this.allow}),this.dialQueue=new DialQueue({peerId:e.peerId,metrics:e.metrics,peerStore:e.peerStore,transportManager:e.transportManager,connectionGater:e.connectionGater,logger:e.logger},{addressSorter:t.addressSorter??defaultAddressSort,maxParallelDials:t.maxParallelDials??MAX_PARALLEL_DIALS,maxPeerAddrsToDial:t.maxPeerAddrsToDial??MAX_PEER_ADDRS_TO_DIAL,dialTimeout:t.dialTimeout??DIAL_TIMEOUT,resolvers:t.resolvers??{dnsaddr:dnsaddrResolver},connections:this.connections})}isStarted(){return this.started}async start(){this.metrics?.registerMetricGroup("libp2p_connection_manager_connections",{calculate:()=>{const e={inbound:0,outbound:0};for(const t of this.connections.values())for(const n of t)n.direction==="inbound"?e.inbound++:e.outbound++;return e}}),this.metrics?.registerMetricGroup("libp2p_protocol_streams_total",{label:"protocol",calculate:()=>{const e={};for(const t of this.connections.values())for(const n of t)for(const i of n.streams){const o=`${i.direction} ${i.protocol??"unnegotiated"}`;e[o]=(e[o]??0)+1}return e}}),this.metrics?.registerMetricGroup("libp2p_connection_manager_protocol_streams_per_connection_90th_percentile",{label:"protocol",calculate:()=>{const e={};for(const n of this.connections.values())for(const i of n){const o={};for(const a of i.streams){const c=`${a.direction} ${a.protocol??"unnegotiated"}`;o[c]=(o[c]??0)+1}for(const[a,c]of Object.entries(o))e[a]=e[a]??[],e[a].push(c)}const t={};for(let[n,i]of Object.entries(e)){i=i.sort((a,c)=>a-c);const o=Math.floor(i.length*.9);t[n]=i[o]}return t}}),this.autoDial.start(),this.started=!0,this.log("started")}async afterStart(){Promise.resolve().then(async()=>{const e=await this.peerStore.all({filters:[t=>t.tags.has(KEEP_ALIVE)]});await Promise.all(e.map(async t=>{await this.openConnection(t.id).catch(n=>{this.log.error(n)})}))}).catch(e=>{this.log.error(e)}),this.autoDial.afterStart()}async stop(){this.dialQueue.stop(),this.autoDial.stop();const e=[];for(const t of this.connections.values())for(const n of t)e.push((async()=>{try{await n.close()}catch(i){this.log.error(i)}})());this.log("closing %d connections",e.length),await Promise.all(e),this.connections.clear(),this.log("stopped")}onConnect(e){this._onConnect(e).catch(t=>{this.log.error(t)})}async _onConnect(e){const{detail:t}=e;if(!this.started){await t.close();return}const n=t.remotePeer,i=this.connections.get(n);let o=!1;i!=null?i.push(t):(o=!0,this.connections.set(n,[t])),n.publicKey!=null&&n.type==="RSA"&&await this.peerStore.patch(n,{publicKey:n.publicKey}),o&&this.events.safeDispatchEvent("peer:connect",{detail:t.remotePeer})}onDisconnect(e){const{detail:t}=e;if(!this.started)return;const n=t.remotePeer;let i=this.connections.get(n);i!=null&&i.length>1?(i=i.filter(o=>o.id!==t.id),this.connections.set(n,i)):i!=null&&(this.connections.delete(n),this.events.safeDispatchEvent("peer:disconnect",{detail:t.remotePeer}))}getConnections(e){if(e!=null)return this.connections.get(e)??[];let t=[];for(const n of this.connections.values())t=t.concat(n);return t}getConnectionsMap(){return this.connections}async openConnection(e,t={}){if(!this.isStarted())throw new CodeError$4("Not started",codes.ERR_NODE_NOT_STARTED);t.signal?.throwIfAborted();const{peerId:n}=getPeerAddress(e);if(n!=null&&t.force!==!0){this.log("dial %p",n);const c=this.getConnections(n).find(l=>!l.transient);if(c!=null)return this.log("had an existing non-transient connection to %p",n),c}const i=await this.dialQueue.dial(e,{...t,priority:t.priority??DEFAULT_DIAL_PRIORITY});let o=this.connections.get(i.remotePeer);o==null&&(o=[],this.connections.set(i.remotePeer,o));let a=!1;for(const c of o)c.id===i.id&&(a=!0);return a||o.push(i),i}async closeConnections(e,t={}){const n=this.connections.get(e)??[];await Promise.all(n.map(async i=>{try{await i.close(t)}catch(o){i.abort(o)}}))}async acceptIncomingConnection(e){if(this.deny.some(i=>e.remoteAddr.toString().startsWith(i.toString())))return this.log("connection from %a refused - connection remote address was in deny list",e.remoteAddr),!1;if(this.allow.some(i=>e.remoteAddr.toString().startsWith(i.toString())))return this.incomingPendingConnections++,!0;if(this.incomingPendingConnections===this.maxIncomingPendingConnections)return this.log("connection from %a refused - incomingPendingConnections exceeded by host",e.remoteAddr),!1;if(e.remoteAddr.isThinWaistAddress()){const i=e.remoteAddr.nodeAddress().address;try{await this.inboundConnectionRateLimiter.consume(i,1)}catch{return this.log("connection from %a refused - inboundConnectionThreshold exceeded by host %s",e.remoteAddr,i),!1}}return this.getConnections().length<this.maxConnections?(this.incomingPendingConnections++,!0):(this.log("connection from %a refused - maxConnections exceeded",e.remoteAddr),!1)}afterUpgradeInbound(){this.incomingPendingConnections--}getDialQueue(){return this.dialQueue.pendingDials}}async function*storeAddresses(r,e){yield*map$1(r,async t=>(await e.merge(t.id,{multiaddrs:t.multiaddrs}),t))}function uniquePeers(r){const e=new Set;return filter(r,t=>e.has(t.id.toString())?!1:(e.add(t.id.toString()),!0))}async function*requirePeers(r,e=1){let t=0;for await(const n of r)t++,yield n;if(t<e)throw new CodeError$4(`more peers required, seen: ${t}  min: ${e}`,"NOT_FOUND")}class CompoundContentRouting{constructor(e,t){_(this,"routers");_(this,"started");_(this,"components");this.routers=t.routers??[],this.started=!1,this.components=e}isStarted(){return this.started}async start(){this.started=!0}async stop(){this.started=!1}async*findProviders(e,t={}){if(this.routers.length===0)throw new CodeError$4("No content routers available",codes.ERR_NO_ROUTERS_AVAILABLE);yield*pipe(merge$1(...this.routers.map(n=>n.findProviders(e,t))),n=>storeAddresses(n,this.components.peerStore),n=>uniquePeers(n),n=>requirePeers(n))}async provide(e,t={}){if(this.routers.length===0)throw new CodeError$4("No content routers available",codes.ERR_NO_ROUTERS_AVAILABLE);await Promise.all(this.routers.map(async n=>{await n.provide(e,t)}))}async put(e,t,n){if(!this.isStarted())throw new CodeError$4(messages.NOT_STARTED_YET,codes.ERR_NODE_NOT_STARTED);await Promise.all(this.routers.map(async i=>{await i.put(e,t,n)}))}async get(e,t){if(!this.isStarted())throw new CodeError$4(messages.NOT_STARTED_YET,codes.ERR_NODE_NOT_STARTED);return Promise.any(this.routers.map(async n=>n.get(e,t)))}}class DefaultPeerRouting{constructor(e,t){_(this,"log");_(this,"peerId");_(this,"peerStore");_(this,"routers");this.log=e.logger.forComponent("libp2p:peer-routing"),this.peerId=e.peerId,this.peerStore=e.peerStore,this.routers=t.routers??[]}async findPeer(e,t){if(this.routers.length===0)throw new CodeError$4("No peer routers available",codes.ERR_NO_ROUTERS_AVAILABLE);if(e.toString()===this.peerId.toString())throw new CodeError$4("Should not try to find self",codes.ERR_FIND_SELF);const n=this,i=await pipe(merge$1(...this.routers.map(o=>async function*(){try{yield await o.findPeer(e,t)}catch(a){n.log.error(a)}}())),o=>filter(o,Boolean),o=>storeAddresses(o,this.peerStore),async o=>first(o));if(i!=null)return i;throw new CodeError$4(messages.NOT_FOUND,codes.ERR_NOT_FOUND)}async*getClosestPeers(e,t){if(this.routers.length===0)throw new CodeError$4("No peer routers available",codes.ERR_NO_ROUTERS_AVAILABLE);yield*pipe(merge$1(...this.routers.map(n=>n.getClosestPeers(e,t))),n=>storeAddresses(n,this.peerStore),n=>uniquePeers(n),n=>requirePeers(n))}}const DEFAULT_MAX_INBOUND_STREAMS=32,DEFAULT_MAX_OUTBOUND_STREAMS=64;class DefaultRegistrar{constructor(e){_(this,"log");_(this,"topologies");_(this,"handlers");_(this,"components");this.log=e.logger.forComponent("libp2p:registrar"),this.topologies=new Map,this.handlers=new Map,this.components=e,this._onDisconnect=this._onDisconnect.bind(this),this._onPeerUpdate=this._onPeerUpdate.bind(this),this._onPeerIdentify=this._onPeerIdentify.bind(this),this.components.events.addEventListener("peer:disconnect",this._onDisconnect),this.components.events.addEventListener("peer:update",this._onPeerUpdate),this.components.events.addEventListener("peer:identify",this._onPeerIdentify)}getProtocols(){return Array.from(new Set([...this.handlers.keys()])).sort()}getHandler(e){const t=this.handlers.get(e);if(t==null)throw new CodeError$4(`No handler registered for protocol ${e}`,codes.ERR_NO_HANDLER_FOR_PROTOCOL);return t}getTopologies(e){const t=this.topologies.get(e);return t==null?[]:[...t.values()]}async handle(e,t,n){if(this.handlers.has(e))throw new CodeError$4(`Handler already registered for protocol ${e}`,codes.ERR_PROTOCOL_HANDLER_ALREADY_REGISTERED);const i=mergeOptions$9.bind({ignoreUndefined:!0})({maxInboundStreams:DEFAULT_MAX_INBOUND_STREAMS,maxOutboundStreams:DEFAULT_MAX_OUTBOUND_STREAMS},n);this.handlers.set(e,{handler:t,options:i}),await this.components.peerStore.merge(this.components.peerId,{protocols:[e]})}async unhandle(e){(Array.isArray(e)?e:[e]).forEach(n=>{this.handlers.delete(n)}),await this.components.peerStore.patch(this.components.peerId,{protocols:this.getProtocols()})}async register(e,t){if(t==null)throw new CodeError$4("invalid topology",codes.ERR_INVALID_PARAMETERS);const n=`${(Math.random()*1e9).toString(36)}${Date.now()}`;let i=this.topologies.get(e);return i==null&&(i=new Map,this.topologies.set(e,i)),i.set(n,t),n}unregister(e){for(const[t,n]of this.topologies.entries())n.has(e)&&(n.delete(e),n.size===0&&this.topologies.delete(t))}_onDisconnect(e){const t=e.detail;this.components.peerStore.get(t).then(n=>{for(const i of n.protocols){const o=this.topologies.get(i);if(o!=null)for(const a of o.values())a.onDisconnect?.(t)}}).catch(n=>{n.code!==codes.ERR_NOT_FOUND&&this.log.error("could not inform topologies of disconnecting peer %p",t,n)})}_onPeerUpdate(e){const{peer:t,previous:n}=e.detail,i=(n?.protocols??[]).filter(o=>!t.protocols.includes(o));for(const o of i){const a=this.topologies.get(o);if(a!=null)for(const c of a.values())c.onDisconnect?.(t.id)}}_onPeerIdentify(e){const t=e.detail.protocols,n=e.detail.connection,i=e.detail.peerId;for(const o of t){const a=this.topologies.get(o);if(a!=null)for(const c of a.values())n.transient&&c.notifyOnTransient!==!0||c.onConnect?.(i,n)}}}class TrackedMap extends Map{constructor(t){super();_(this,"metric");const{name:n,metrics:i}=t;this.metric=i.registerMetric(n),this.updateComponentMetric()}set(t,n){return super.set(t,n),this.updateComponentMetric(),this}delete(t){const n=super.delete(t);return this.updateComponentMetric(),n}clear(){super.clear(),this.updateComponentMetric()}updateComponentMetric(){this.metric.update(this.size)}}function trackedMap(r){const{name:e,metrics:t}=r;let n;return t!=null?n=new TrackedMap({name:e,metrics:t}):n=new Map,n}class DefaultTransportManager{constructor(e,t={}){_(this,"log");_(this,"components");_(this,"transports");_(this,"listeners");_(this,"faultTolerance");_(this,"started");this.log=e.logger.forComponent("libp2p:transports"),this.components=e,this.started=!1,this.transports=new Map,this.listeners=trackedMap({name:"libp2p_transport_manager_listeners",metrics:this.components.metrics}),this.faultTolerance=t.faultTolerance??FaultTolerance$4.FATAL_ALL}add(e){const t=e[Symbol.toStringTag];if(t==null)throw new CodeError$4("Transport must have a valid tag",codes.ERR_INVALID_KEY);if(this.transports.has(t))throw new CodeError$4(`There is already a transport with the tag ${t}`,codes.ERR_DUPLICATE_TRANSPORT);this.log("adding transport %s",t),this.transports.set(t,e),this.listeners.has(t)||this.listeners.set(t,[])}isStarted(){return this.started}start(){this.started=!0}async afterStart(){const e=this.components.addressManager.getListenAddrs();await this.listen(e)}async stop(){const e=[];for(const[t,n]of this.listeners)for(this.log("closing listeners for %s",t);n.length>0;){const i=n.pop();i!=null&&e.push(i.close())}await Promise.all(e),this.log("all listeners closed");for(const t of this.listeners.keys())this.listeners.set(t,[]);this.started=!1}async dial(e,t){const n=this.transportForMultiaddr(e);if(n==null)throw new CodeError$4(`No transport available for address ${String(e)}`,codes.ERR_TRANSPORT_UNAVAILABLE);try{return await n.dial(e,{...t,upgrader:this.components.upgrader})}catch(i){throw i.code==null&&(i.code=codes.ERR_TRANSPORT_DIAL_FAILED),i}}getAddrs(){let e=[];for(const t of this.listeners.values())for(const n of t)e=[...e,...n.getAddrs()];return e}getTransports(){return Array.of(...this.transports.values())}getListeners(){return Array.of(...this.listeners.values()).flat()}transportForMultiaddr(e){for(const t of this.transports.values())if(t.filter([e]).length>0)return t}async listen(e){if(!this.isStarted())throw new CodeError$4("Not started",codes.ERR_NODE_NOT_STARTED);if(e==null||e.length===0){this.log("no addresses were provided for listening, this node is dial only");return}const t=[];for(const[n,i]of this.transports.entries()){const o=i.filter(e),a=[];for(const u of o){this.log("creating listener for %s on %a",n,u);const f=i.createListener({upgrader:this.components.upgrader});let g=this.listeners.get(n)??[];g==null&&(g=[],this.listeners.set(n,g)),g.push(f),f.addEventListener("listening",()=>{this.components.events.safeDispatchEvent("transport:listening",{detail:f})}),f.addEventListener("close",()=>{const $=g.findIndex(S=>S===f);g.splice($,1),this.components.events.safeDispatchEvent("transport:close",{detail:f})}),a.push(f.listen(u))}if(a.length===0){t.push(n);continue}if((await Promise.allSettled(a)).find(u=>u.status==="fulfilled")==null&&this.faultTolerance!==FaultTolerance$4.NO_FATAL)throw new CodeError$4(`Transport (${n}) could not listen on any available address`,codes.ERR_NO_VALID_ADDRESSES)}if(t.length===this.transports.size){const n=`no valid addresses were provided for transports [${t.join(", ")}]`;if(this.faultTolerance===FaultTolerance$4.FATAL_ALL)throw new CodeError$4(n,codes.ERR_NO_VALID_ADDRESSES);this.log(`libp2p in dial mode only: ${n}`)}}async remove(e){const t=this.listeners.get(e)??[];this.log.trace("removing transport %s",e);const n=[];for(this.log.trace("closing listeners for %s",e);t.length>0;){const i=t.pop();i!=null&&n.push(i.close())}await Promise.all(n),this.transports.delete(e),this.listeners.delete(e)}async removeAll(){const e=[];for(const t of this.transports.keys())e.push(this.remove(t));await Promise.all(e)}}const PROTOCOL_ID="/multistream/1.0.0",MAX_PROTOCOL_LENGTH=1024;var TopicValidatorResult$1;(function(r){r.Accept="accept",r.Ignore="ignore",r.Reject="reject"})(TopicValidatorResult$1||(TopicValidatorResult$1={}));var FaultTolerance$1;(function(r){r[r.FATAL_ALL=0]="FATAL_ALL",r[r.NO_FATAL=1]="NO_FATAL"})(FaultTolerance$1||(FaultTolerance$1={}));let CodeError$1=class extends Error{constructor(t,n,i){super(t);_(this,"code");_(this,"props");this.code=n,this.name=i?.name??"CodeError",this.props=i??{}}};const NewLine=fromString$b(`
`);async function write(r,e,t){await r.write(e,t)}async function writeAll(r,e,t){await r.writeV(e,t)}async function read$1(r,e){const t=await r.read(e);if(t.byteLength===0||t.get(t.byteLength-1)!==NewLine[0])throw e.log.error("Invalid mss message - missing newline",t),new CodeError$1("missing newline","ERR_INVALID_MULTISTREAM_SELECT_MESSAGE");return t.sublist(0,-1)}async function readString(r,e){const t=await read$1(r,e);return toString$b(t.subarray())}async function select(r,e,t){if(e=Array.isArray(e)?[...e]:[e],e.length===1)return optimisticSelect(r,e[0],t);const n=lpStream$1(r,{...t,maxDataLength:MAX_PROTOCOL_LENGTH}),i=e.shift();if(i==null)throw new Error("At least one protocol must be specified");t.log.trace('select: write ["%s", "%s"]',PROTOCOL_ID,i);const o=fromString$b(`${PROTOCOL_ID}
`),a=fromString$b(`${i}
`);await writeAll(n,[o,a],t),t.log.trace("select: reading multistream-select header");let c=await readString(n,t);if(t.log.trace('select: read "%s"',c),c===PROTOCOL_ID&&(t.log.trace("select: reading protocol response"),c=await readString(n,t),t.log.trace('select: read "%s"',c)),c===i)return{stream:n.unwrap(),protocol:i};for(const l of e){t.log.trace('select: write "%s"',l),await write(n,fromString$b(`${l}
`),t),t.log.trace("select: reading protocol response");const u=await readString(n,t);if(t.log.trace('select: read "%s" for "%s"',u,l),u===l)return{stream:n.unwrap(),protocol:l}}throw new CodeError$1("protocol selection failed","ERR_UNSUPPORTED_PROTOCOL")}function optimisticSelect(r,e,t){const n=r.sink.bind(r),i=r.source;let o=!1,a=!1;const c=pDefer();let l=!1,u=!1;const f=pDefer();let g=!1,$=!1;const S=pDefer(),E=lpStream$1({sink:n,source:i},{...t,maxDataLength:MAX_PROTOCOL_LENGTH});r.sink=async A=>{const{sink:P}=E.unwrap();await P(async function*(){let x=!1;for await(const D of A){if(u&&await f.promise,l)yield D;else{u=!0,t.log.trace('optimistic: write ["%s", "%s", data(%d)] in sink',PROTOCOL_ID,e,D.byteLength);const C=`${e}
`;yield new Uint8ArrayList(Uint8Array.from([19]),fromString$b(`${PROTOCOL_ID}
`),encode$a(C.length),fromString$b(C),D).subarray(),t.log.trace('optimistic: wrote ["%s", "%s", data(%d)] in sink',PROTOCOL_ID,e,D.byteLength),l=!0,u=!1,f.resolve()}x=!0}x||await v()}())};async function v(){if(a){t.log.trace("optimistic: already negotiating %s stream",e),await c.promise;return}a=!0;try{l||(t.log.trace("optimistic: doing send protocol for %s stream",e),await T()),g||(t.log.trace("optimistic: doing read protocol for %s stream",e),await I())}finally{a=!1,o=!0,c.resolve()}}async function T(){if(u){await f.promise;return}u=!0;try{t.log.trace('optimistic: write ["%s", "%s", data] in source',PROTOCOL_ID,e),await E.writeV([fromString$b(`${PROTOCOL_ID}
`),fromString$b(`${e}
`)]),t.log.trace('optimistic: wrote ["%s", "%s", data] in source',PROTOCOL_ID,e)}finally{l=!0,u=!1,f.resolve()}}async function I(){if($){await S.promise;return}$=!0;try{t.log.trace("optimistic: reading multistream select header");let A=await readString(E,t);if(t.log.trace('optimistic: read multistream select header "%s"',A),A===PROTOCOL_ID&&(A=await readString(E,t)),t.log.trace('optimistic: read protocol "%s", expecting "%s"',A,e),A!==e)throw new CodeError$1("protocol selection failed","ERR_UNSUPPORTED_PROTOCOL")}finally{g=!0,$=!1,S.resolve()}}if(r.source=async function*(){await v(),t.log.trace('optimistic: reading data from "%s" stream',e),yield*E.unwrap().source}(),r.closeRead!=null){const A=r.closeRead.bind(r);r.closeRead=async P=>{o||await v().catch(x=>{t.log.error("could not negotiate protocol before close read",x)}),await A(P)}}if(r.closeWrite!=null){const A=r.closeWrite.bind(r);r.closeWrite=async P=>{o||await v().catch(x=>{t.log.error("could not negotiate protocol before close write",x)}),await A(P)}}if(r.close!=null){const A=r.close.bind(r);r.close=async P=>{o||(o=!0,a=!1,c.resolve()),await A(P)}}return{stream:r,protocol:e}}async function handle(r,e,t){e=Array.isArray(e)?e:[e],t.log.trace("handle: available protocols %s",e);const n=lpStream$1(r,{...t,maxDataLength:MAX_PROTOCOL_LENGTH,maxLengthLength:2});for(;;){t.log.trace("handle: reading incoming string");const i=await readString(n,t);if(t.log.trace('handle: read "%s"',i),i===PROTOCOL_ID){t.log.trace('handle: respond with "%s" for "%s"',PROTOCOL_ID,i),await write(n,fromString$b(`${PROTOCOL_ID}
`),t),t.log.trace('handle: responded with "%s" for "%s"',PROTOCOL_ID,i);continue}if(e.includes(i))return t.log.trace('handle: respond with "%s" for "%s"',i,i),await write(n,fromString$b(`${i}
`),t),t.log.trace('handle: responded with "%s" for "%s"',i,i),{stream:n.unwrap(),protocol:i};if(i==="ls"){const o=new Uint8ArrayList(...e.map(a=>encode$d.single(fromString$b(`${a}
`))),fromString$b(`
`));t.log.trace('handle: respond with "%s" for %s',e,i),await write(n,o,t),t.log.trace('handle: responded with "%s" for %s',e,i);continue}t.log('handle: respond with "na" for "%s"',i),await write(n,fromString$b(`na
`),t),t.log('handle: responded with "na" for "%s"',i)}}const CLOSE_TIMEOUT=500;var jr,Xr;class ConnectionImpl{constructor(e){_(this,"id");_(this,"remoteAddr");_(this,"remotePeer");_(this,"direction");_(this,"timeline");_(this,"multiplexer");_(this,"encryption");_(this,"status");_(this,"transient");_(this,"log");_(this,"tags");_(this,"_newStream");_(this,"_close");_(this,"_abort");_(this,"_getStreams");_(this,jr,"Connection");_(this,Xr,!0);const{remoteAddr:t,remotePeer:n,newStream:i,close:o,abort:a,getStreams:c}=e;this.id=`${parseInt(String(Math.random()*1e9)).toString(36)}${Date.now()}`,this.remoteAddr=t,this.remotePeer=n,this.direction=e.direction,this.status="open",this.timeline=e.timeline,this.multiplexer=e.multiplexer,this.encryption=e.encryption,this.transient=e.transient??!1,this.log=e.logger.forComponent(`libp2p:connection:${this.direction}:${this.id}`),this.remoteAddr.getPeerId()==null&&(this.remoteAddr=this.remoteAddr.encapsulate(`/p2p/${this.remotePeer}`)),this._newStream=i,this._close=o,this._abort=a,this._getStreams=c,this.tags=[]}get streams(){return this._getStreams()}async newStream(e,t){if(this.status==="closing")throw new CodeError$4("the connection is being closed","ERR_CONNECTION_BEING_CLOSED");if(this.status==="closed")throw new CodeError$4("the connection is closed","ERR_CONNECTION_CLOSED");if(Array.isArray(e)||(e=[e]),this.transient&&t?.runOnTransientConnection!==!0)throw new CodeError$4("Cannot open protocol stream on transient connection","ERR_TRANSIENT_CONNECTION");const n=await this._newStream(e,t);return n.direction="outbound",n}async close(e={}){if(!(this.status==="closed"||this.status==="closing")){if(this.log("closing connection to %a",this.remoteAddr),this.status="closing",e.signal==null){const t=AbortSignal.timeout(CLOSE_TIMEOUT);setMaxListeners(1/0,t),e={...e,signal:t}}try{this.log.trace("closing all streams"),await Promise.all(this.streams.map(async t=>t.close(e))),this.log.trace("closing underlying transport"),await this._close(e),this.log.trace("updating timeline with close time"),this.status="closed",this.timeline.close=Date.now()}catch(t){this.log.error("error encountered during graceful close of connection to %a",this.remoteAddr,t),this.abort(t)}}}abort(e){this.log.error("aborting connection to %a due to error",this.remoteAddr,e),this.status="closing",this.streams.forEach(t=>{t.abort(e)}),this.log.error("all streams aborted",this.streams.length),this._abort(e),this.timeline.close=Date.now(),this.status="closed"}}jr=Symbol.toStringTag,Xr=connectionSymbol;function createConnection(r){return new ConnectionImpl(r)}const DEFAULT_PROTOCOL_SELECT_TIMEOUT=3e4;function findIncomingStreamLimit(r,e){try{const{options:t}=e.getHandler(r);return t.maxInboundStreams}catch(t){if(t.code!==codes.ERR_NO_HANDLER_FOR_PROTOCOL)throw t}return DEFAULT_MAX_INBOUND_STREAMS}function findOutgoingStreamLimit(r,e,t={}){try{const{options:n}=e.getHandler(r);if(n.maxOutboundStreams!=null)return n.maxOutboundStreams}catch(n){if(n.code!==codes.ERR_NO_HANDLER_FOR_PROTOCOL)throw n}return t.maxOutboundStreams??DEFAULT_MAX_OUTBOUND_STREAMS}function countStreams(r,e,t){let n=0;return t.streams.forEach(i=>{i.direction===e&&i.protocol===r&&n++}),n}class DefaultUpgrader{constructor(e,t){_(this,"components");_(this,"connectionEncryption");_(this,"muxers");_(this,"inboundUpgradeTimeout");_(this,"events");this.components=e,this.connectionEncryption=new Map,t.connectionEncryption.forEach(n=>{this.connectionEncryption.set(n.protocol,n)}),this.muxers=new Map,t.muxers.forEach(n=>{this.muxers.set(n.protocol,n)}),this.inboundUpgradeTimeout=t.inboundUpgradeTimeout??INBOUND_UPGRADE_TIMEOUT,this.events=e.events}async shouldBlockConnection(e,t,n){const i=this.components.connectionGater[n];if(i!==void 0&&await i(e,t))throw new CodeError$4(`The multiaddr connection is blocked by gater.${n}`,codes.ERR_CONNECTION_INTERCEPTED)}async upgradeInbound(e,t){if(!await this.components.connectionManager.acceptIncomingConnection(e))throw new CodeError$4("connection denied",codes.ERR_CONNECTION_DENIED);let i,o,a,c,l;const u=AbortSignal.timeout(this.inboundUpgradeTimeout),f=()=>{e.abort(new CodeError$4("inbound upgrade timeout",ERR_TIMEOUT$1))};u.addEventListener("abort",f,{once:!0}),setMaxListeners(1/0,u);try{if(await this.components.connectionGater.denyInboundConnection?.(e)===!0)throw new CodeError$4("The multiaddr connection is blocked by gater.acceptConnection",codes.ERR_CONNECTION_INTERCEPTED);this.components.metrics?.trackMultiaddrConnection(e),e.log("starting the inbound connection upgrade");let g=e;if(t?.skipProtection!==!0){const $=this.components.connectionProtector;$!=null&&(e.log("protecting the inbound connection"),g=await $.protect(e))}try{if(i=g,t?.skipEncryption!==!0){({conn:i,remotePeer:o,protocol:l}=await this._encryptInbound(g));const $={...g,...i};await this.shouldBlockConnection(o,$,"denyInboundEncryptedConnection")}else{const $=e.remoteAddr.getPeerId();if($==null)throw new CodeError$4("inbound connection that skipped encryption must have a peer id",codes.ERR_INVALID_MULTIADDR);const S=peerIdFromString($);l="native",o=S}if(a=i,t?.muxerFactory!=null)c=t.muxerFactory;else if(this.muxers.size>0){const $=await this._multiplexInbound({...g,...i},this.muxers);c=$.muxerFactory,a=$.stream}}catch($){throw e.log.error("failed to upgrade inbound connection",$),$}return await this.shouldBlockConnection(o,e,"denyInboundUpgradedConnection"),e.log("successfully upgraded inbound connection"),this._createConnection({cryptoProtocol:l,direction:"inbound",maConn:e,upgradedConn:a,muxerFactory:c,remotePeer:o,transient:t?.transient})}finally{u.removeEventListener("abort",f),this.components.connectionManager.afterUpgradeInbound()}}async upgradeOutbound(e,t){const n=e.remoteAddr.getPeerId();let i;n!=null&&(i=peerIdFromString(n),await this.shouldBlockConnection(i,e,"denyOutboundConnection"));let o,a,c,l,u;this.components.metrics?.trackMultiaddrConnection(e),e.log("starting the outbound connection upgrade");let f=e;if(t?.skipProtection!==!0){const g=this.components.connectionProtector;g!=null&&(f=await g.protect(e))}try{if(o=f,t?.skipEncryption!==!0){({conn:o,remotePeer:a,protocol:l}=await this._encryptOutbound(f,i));const g={...f,...o};await this.shouldBlockConnection(a,g,"denyOutboundEncryptedConnection")}else{if(i==null)throw new CodeError$4("Encryption was skipped but no peer id was passed",codes.ERR_INVALID_PEER);l="native",a=i}if(c=o,t?.muxerFactory!=null)u=t.muxerFactory;else if(this.muxers.size>0){const g=await this._multiplexOutbound({...f,...o},this.muxers);u=g.muxerFactory,c=g.stream}}catch(g){throw e.log.error("failed to upgrade outbound connection",g),await e.close(g),g}return await this.shouldBlockConnection(a,e,"denyOutboundUpgradedConnection"),e.log("successfully upgraded outbound connection"),this._createConnection({cryptoProtocol:l,direction:"outbound",maConn:e,upgradedConn:c,muxerFactory:u,remotePeer:a,transient:t?.transient})}_createConnection(e){const{cryptoProtocol:t,direction:n,maConn:i,upgradedConn:o,remotePeer:a,muxerFactory:c,transient:l}=e;let u,f,g;c!=null&&(u=c.createStreamMuxer({direction:n,onIncomingStream:E=>{g!=null&&Promise.resolve().then(async()=>{const v=this.components.registrar.getProtocols(),{stream:T,protocol:I}=await handle(E,v,{log:E.log,yieldBytes:!1});if(g==null)return;g.log("incoming stream opened on %s",I);const A=findIncomingStreamLimit(I,this.components.registrar);if(countStreams(I,"inbound",g)===A){const x=new CodeError$4(`Too many inbound protocol streams for protocol "${I}" - limit ${A}`,codes.ERR_TOO_MANY_INBOUND_PROTOCOL_STREAMS);throw E.abort(x),x}E.source=T.source,E.sink=T.sink,E.protocol=I,T.closeWrite!=null&&(E.closeWrite=T.closeWrite),T.closeRead!=null&&(E.closeRead=T.closeRead),T.close!=null&&(E.close=T.close),await this.components.peerStore.merge(a,{protocols:[I]}),this.components.metrics?.trackProtocolStream(E,g),this._onStream({connection:g,stream:E,protocol:I})}).catch(async v=>{g.log.error("error handling incoming stream id %s",E.id,v.message,v.code,v.stack),E.timeline.close==null&&await E.close()})}}),f=async(E,v={})=>{if(u==null)throw new CodeError$4("Stream is not multiplexed",codes.ERR_MUXER_UNAVAILABLE);g.log("starting new stream for protocols %s",E);const T=await u.newStream();g.log.trace("started new stream %s for protocols %s",T.id,E);try{if(v.signal==null){T.log("no abort signal was passed while trying to negotiate protocols %s falling back to default timeout",E);const D=AbortSignal.timeout(DEFAULT_PROTOCOL_SELECT_TIMEOUT);setMaxListeners(1/0,D),v={...v,signal:D}}T.log.trace("selecting protocol from protocols %s",E);const{stream:I,protocol:A}=await select(T,E,{...v,log:T.log,yieldBytes:!0});T.log("selected protocol %s",A);const P=findOutgoingStreamLimit(A,this.components.registrar,v);if(countStreams(A,"outbound",g)>=P){const D=new CodeError$4(`Too many outbound protocol streams for protocol "${A}" - limit ${P}`,codes.ERR_TOO_MANY_OUTBOUND_PROTOCOL_STREAMS);throw T.abort(D),D}return await this.components.peerStore.merge(a,{protocols:[A]}),T.source=I.source,T.sink=I.sink,T.protocol=A,I.closeWrite!=null&&(T.closeWrite=I.closeWrite),I.closeRead!=null&&(T.closeRead=I.closeRead),I.close!=null&&(T.close=I.close),this.components.metrics?.trackProtocolStream(T,g),T}catch(I){throw g.log.error("could not create new stream for protocols %s",E,I),T.timeline.close==null&&T.abort(I),I.code!=null?I:new CodeError$4(String(I),codes.ERR_UNSUPPORTED_PROTOCOL)}},Promise.all([u.sink(o.source),o.sink(u.source)]).catch(E=>{g.log.error("error piping data through muxer",E)}));const $=i.timeline;i.timeline=new Proxy($,{set:(...E)=>(g!=null&&E[1]==="close"&&E[2]!=null&&$.close==null&&(async()=>{try{g.status==="open"&&await g.close()}catch(v){g.log.error("error closing connection after timeline close",v)}finally{this.events.safeDispatchEvent("connection:close",{detail:g})}})().catch(v=>{g.log.error("error thrown while dispatching connection:close event",v)}),Reflect.set(...E))}),i.timeline.upgraded=Date.now();const S=()=>{throw new CodeError$4("connection is not multiplexed",codes.ERR_CONNECTION_NOT_MULTIPLEXED)};return g=createConnection({remoteAddr:i.remoteAddr,remotePeer:a,status:"open",direction:n,timeline:i.timeline,multiplexer:u?.protocol,encryption:t,transient:l,logger:this.components.logger,newStream:f??S,getStreams:()=>u!=null?u.streams:[],close:async E=>{u!=null&&(g.log.trace("close muxer"),await u.close(E)),g.log.trace("close maconn"),await i.close(E),g.log.trace("closed maconn")},abort:E=>{i.abort(E),u?.abort(E)}}),this.events.safeDispatchEvent("connection:open",{detail:g}),g}_onStream(e){const{connection:t,stream:n,protocol:i}=e,{handler:o,options:a}=this.components.registrar.getHandler(i);if(t.transient&&a.runOnTransientConnection!==!0)throw new CodeError$4("Cannot open protocol stream on transient connection","ERR_TRANSIENT_CONNECTION");o({connection:t,stream:n})}async _encryptInbound(e){const t=Array.from(this.connectionEncryption.keys());e.log("handling inbound crypto protocol selection",t);try{const{stream:n,protocol:i}=await handle(e,t,{log:e.log}),o=this.connectionEncryption.get(i);if(o==null)throw new Error(`no crypto module found for ${i}`);return e.log("encrypting inbound connection using",i),{...await o.secureInbound(this.components.peerId,n),protocol:i}}catch(n){throw new CodeError$4(String(n),codes.ERR_ENCRYPTION_FAILED)}}async _encryptOutbound(e,t){const n=Array.from(this.connectionEncryption.keys());e.log("selecting outbound crypto protocol",n);try{e.log.trace("selecting encrypter from %s",n);const{stream:i,protocol:o}=await select(e,n,{log:e.log,yieldBytes:!0}),a=this.connectionEncryption.get(o);if(a==null)throw new Error(`no crypto module found for ${o}`);return e.log("encrypting outbound connection to %p using %p",t),{...await a.secureOutbound(this.components.peerId,i,t),protocol:o}}catch(i){throw new CodeError$4(String(i),codes.ERR_ENCRYPTION_FAILED)}}async _multiplexOutbound(e,t){const n=Array.from(t.keys());e.log("outbound selecting muxer %s",n);try{e.log.trace("selecting stream muxer from %s",n);const{stream:i,protocol:o}=await select(e,n,{log:e.log,yieldBytes:!0});e.log("selected %s as muxer protocol",o);const a=t.get(o);return{stream:i,muxerFactory:a}}catch(i){throw e.log.error("error multiplexing outbound connection",i),new CodeError$4(String(i),codes.ERR_MUXER_UNAVAILABLE)}}async _multiplexInbound(e,t){const n=Array.from(t.keys());e.log("inbound handling muxers %s",n);try{const{stream:i,protocol:o}=await handle(e,n,{log:e.log}),a=t.get(o);return{stream:i,muxerFactory:a}}catch(i){throw e.log.error("error multiplexing inbound connection",i),new CodeError$4(String(i),codes.ERR_MUXER_UNAVAILABLE)}}}const version$1="1.0.8",name="libp2p";var ct,Ct;class Libp2pNode extends TypedEventEmitter{constructor(t){super();ne(this,ct);_(this,"peerId");_(this,"peerStore");_(this,"contentRouting");_(this,"peerRouting");_(this,"metrics");_(this,"services");_(this,"logger");_(this,"status");_(this,"components");_(this,"log");this.status="stopped";const n=new TypedEventEmitter,i=n.dispatchEvent.bind(n);n.dispatchEvent=l=>{const u=i(l),f=this.dispatchEvent(new CustomEvent(l.type,{detail:l.detail}));return u||f},setMaxListeners(1/0,n),this.peerId=t.peerId,this.logger=t.logger??defaultLogger(),this.log=this.logger.forComponent("libp2p"),this.services={};const o=this.components=defaultComponents({peerId:t.peerId,nodeInfo:t.nodeInfo??{name,version:version$1},logger:this.logger,events:n,datastore:t.datastore??new MemoryDatastore,connectionGater:connectionGater(t.connectionGater)});this.peerStore=this.configureComponent("peerStore",new PersistentPeerStore(o,{addressFilter:this.components.connectionGater.filterMultiaddrForPeer,...t.peerStore})),t.metrics!=null&&(this.metrics=this.configureComponent("metrics",t.metrics(this.components))),o.events.addEventListener("peer:update",l=>{if(l.detail.previous==null){const u={id:l.detail.peer.id,multiaddrs:l.detail.peer.addresses.map(f=>f.multiaddr)};o.events.safeDispatchEvent("peer:discovery",{detail:u})}}),t.connectionProtector!=null&&this.configureComponent("connectionProtector",t.connectionProtector(o)),this.components.upgrader=new DefaultUpgrader(this.components,{connectionEncryption:(t.connectionEncryption??[]).map((l,u)=>this.configureComponent(`connection-encryption-${u}`,l(this.components))),muxers:(t.streamMuxers??[]).map((l,u)=>this.configureComponent(`stream-muxers-${u}`,l(this.components))),inboundUpgradeTimeout:t.connectionManager.inboundUpgradeTimeout}),this.configureComponent("transportManager",new DefaultTransportManager(this.components,t.transportManager)),this.configureComponent("connectionManager",new DefaultConnectionManager(this.components,t.connectionManager)),this.configureComponent("registrar",new DefaultRegistrar(this.components)),this.configureComponent("addressManager",new DefaultAddressManager(this.components,t.addresses));const a=(t.peerRouters??[]).map((l,u)=>this.configureComponent(`peer-router-${u}`,l(this.components)));this.peerRouting=this.components.peerRouting=this.configureComponent("peerRouting",new DefaultPeerRouting(this.components,{routers:a}));const c=(t.contentRouters??[]).map((l,u)=>this.configureComponent(`content-router-${u}`,l(this.components)));if(this.contentRouting=this.components.contentRouting=this.configureComponent("contentRouting",new CompoundContentRouting(this.components,{routers:c})),(t.peerDiscovery??[]).forEach((l,u)=>{this.configureComponent(`peer-discovery-${u}`,l(this.components)).addEventListener("peer",g=>{se(this,ct,Ct).call(this,g)})}),t.transports?.forEach((l,u)=>{this.components.transportManager.add(this.configureComponent(`transport-${u}`,l(this.components)))}),t.services!=null)for(const l of Object.keys(t.services)){const u=t.services[l],f=u(this.components);if(f==null){this.log.error("service factory %s returned null or undefined instance",l);continue}this.services[l]=f,this.configureComponent(l,f),f[contentRoutingSymbol]!=null&&(this.log("registering service %s for content routing",l),c.push(f[contentRoutingSymbol])),f[peerRoutingSymbol]!=null&&(this.log("registering service %s for peer routing",l),a.push(f[peerRoutingSymbol])),f[peerDiscoverySymbol]!=null&&(this.log("registering service %s for peer discovery",l),f[peerDiscoverySymbol].addEventListener("peer",g=>{se(this,ct,Ct).call(this,g)}))}}configureComponent(t,n){return n==null&&this.log.error("component %s was null or undefined",t),this.components[t]=n,n}async start(){if(this.status==="stopped"){this.status="starting",this.log("libp2p is starting");try{await this.components.beforeStart?.(),await this.components.start(),await this.components.afterStart?.(),this.status="started",this.safeDispatchEvent("start",{detail:this}),this.log("libp2p has started")}catch(t){throw this.log.error("An error occurred starting libp2p",t),this.status="started",await this.stop(),t}}}async stop(){this.status==="started"&&(this.log("libp2p is stopping"),this.status="stopping",await this.components.beforeStop?.(),await this.components.stop(),await this.components.afterStop?.(),this.status="stopped",this.safeDispatchEvent("stop",{detail:this}),this.log("libp2p has stopped"))}getConnections(t){return this.components.connectionManager.getConnections(t)}getDialQueue(){return this.components.connectionManager.getDialQueue()}getPeers(){const t=new PeerSet;for(const n of this.components.connectionManager.getConnections())t.add(n.remotePeer);return Array.from(t)}async dial(t,n={}){return this.components.connectionManager.openConnection(t,n)}async dialProtocol(t,n,i={}){if(n==null)throw new CodeError$4("no protocols were provided to open a stream",codes.ERR_INVALID_PROTOCOLS_FOR_STREAM);if(n=Array.isArray(n)?n:[n],n.length===0)throw new CodeError$4("no protocols were provided to open a stream",codes.ERR_INVALID_PROTOCOLS_FOR_STREAM);return(await this.dial(t,i)).newStream(n,i)}getMultiaddrs(){return this.components.addressManager.getAddresses()}getProtocols(){return this.components.registrar.getProtocols()}async hangUp(t,n={}){isMultiaddr(t)&&(t=peerIdFromString(t.getPeerId()??"")),await this.components.connectionManager.closeConnections(t,n)}async getPublicKey(t,n={}){if(this.log("getPublicKey %p",t),t.publicKey!=null)return t.publicKey;const i=await this.peerStore.get(t);if(i.id.publicKey!=null)return i.id.publicKey;const o=concat$6([fromString$b("/pk/"),t.multihash.digest]),a=await this.contentRouting.get(o,n);return unmarshalPublicKey(a),await this.peerStore.patch(t,{publicKey:a}),a}async handle(t,n,i){Array.isArray(t)||(t=[t]),await Promise.all(t.map(async o=>{await this.components.registrar.handle(o,n,i)}))}async unhandle(t){Array.isArray(t)||(t=[t]),await Promise.all(t.map(async n=>{await this.components.registrar.unhandle(n)}))}async register(t,n){return this.components.registrar.register(t,n)}unregister(t){this.components.registrar.unregister(t)}}ct=new WeakSet,Ct=function(t){const{detail:n}=t;if(n.id.toString()===this.peerId.toString()){this.log.error(new Error(codes.ERR_DISCOVERED_SELF));return}this.components.peerStore.merge(n.id,{multiaddrs:n.multiaddrs}).catch(i=>{this.log.error(i)})};async function createLibp2pNode(r={}){return r.peerId??(r.peerId=await createEd25519PeerId()),new Libp2pNode(validateConfig(r))}async function createLibp2p(r={}){const e=await createLibp2pNode(r);return r.start!==!1&&await e.start(),e}var TopicValidatorResult;(function(r){r.Accept="accept",r.Ignore="ignore",r.Reject="reject"})(TopicValidatorResult||(TopicValidatorResult={}));var FaultTolerance;(function(r){r[r.FATAL_ALL=0]="FATAL_ALL",r[r.NO_FATAL=1]="NO_FATAL"})(FaultTolerance||(FaultTolerance={}));class CodeError extends Error{constructor(t,n,i){super(t);_(this,"code");_(this,"props");this.code=n,this.name=i?.name??"CodeError",this.props=i??{}}}const ERR_TIMEOUT="ERR_TIMEOUT";var KeyType;(function(r){r.RSA="RSA",r.Ed25519="Ed25519",r.Secp256k1="Secp256k1"})(KeyType||(KeyType={}));var __KeyTypeValues;(function(r){r[r.RSA=0]="RSA",r[r.Ed25519=1]="Ed25519",r[r.Secp256k1=2]="Secp256k1"})(__KeyTypeValues||(__KeyTypeValues={}));(function(r){r.codec=()=>enumeration(__KeyTypeValues)})(KeyType||(KeyType={}));var PublicKey;(function(r){let e;r.codec=()=>(e==null&&(e=message((t,n,i={})=>{i.lengthDelimited!==!1&&n.fork(),t.Type!=null&&(n.uint32(8),KeyType.codec().encode(t.Type,n)),t.Data!=null&&(n.uint32(18),n.bytes(t.Data)),i.lengthDelimited!==!1&&n.ldelim()},(t,n)=>{const i={},o=n==null?t.len:t.pos+n;for(;t.pos<o;){const a=t.uint32();switch(a>>>3){case 1:i.Type=KeyType.codec().decode(t);break;case 2:i.Data=t.bytes();break;default:t.skipType(a&7);break}}return i})),e),r.encode=t=>encodeMessage(t,r.codec()),r.decode=t=>decodeMessage$1(t,r.codec())})(PublicKey||(PublicKey={}));var PrivateKey;(function(r){let e;r.codec=()=>(e==null&&(e=message((t,n,i={})=>{i.lengthDelimited!==!1&&n.fork(),t.Type!=null&&(n.uint32(8),KeyType.codec().encode(t.Type,n)),t.Data!=null&&(n.uint32(18),n.bytes(t.Data)),i.lengthDelimited!==!1&&n.ldelim()},(t,n)=>{const i={},o=n==null?t.len:t.pos+n;for(;t.pos<o;){const a=t.uint32();switch(a>>>3){case 1:i.Type=KeyType.codec().decode(t);break;case 2:i.Data=t.bytes();break;default:t.skipType(a&7);break}}return i})),e),r.encode=t=>encodeMessage(t,r.codec()),r.decode=t=>decodeMessage$1(t,r.codec())})(PrivateKey||(PrivateKey={}));const bits={"P-256":256,"P-384":384,"P-521":521},curveTypes=Object.keys(bits);curveTypes.join(" / ");function randomBytes(r){if(isNaN(r)||r<=0)throw new CodeError("random bytes length must be a Number bigger than 0","ERR_INVALID_LENGTH");return randomBytes$a(r)}const PING_LENGTH=32,PROTOCOL_VERSION="1.0.0",PROTOCOL_NAME="ping",PROTOCOL_PREFIX="ipfs",TIMEOUT=1e4,MAX_INBOUND_STREAMS=2,MAX_OUTBOUND_STREAMS=1,ERR_WRONG_PING_ACK="ERR_WRONG_PING_ACK";class PingService{constructor(e,t={}){_(this,"protocol");_(this,"components");_(this,"started");_(this,"timeout");_(this,"maxInboundStreams");_(this,"maxOutboundStreams");_(this,"runOnTransientConnection");_(this,"log");this.components=e,this.log=e.logger.forComponent("libp2p:ping"),this.started=!1,this.protocol=`/${t.protocolPrefix??PROTOCOL_PREFIX}/${PROTOCOL_NAME}/${PROTOCOL_VERSION}`,this.timeout=t.timeout??TIMEOUT,this.maxInboundStreams=t.maxInboundStreams??MAX_INBOUND_STREAMS,this.maxOutboundStreams=t.maxOutboundStreams??MAX_OUTBOUND_STREAMS,this.runOnTransientConnection=t.runOnTransientConnection??!0,this.handleMessage=this.handleMessage.bind(this)}async start(){await this.components.registrar.handle(this.protocol,this.handleMessage,{maxInboundStreams:this.maxInboundStreams,maxOutboundStreams:this.maxOutboundStreams,runOnTransientConnection:this.runOnTransientConnection}),this.started=!0}async stop(){await this.components.registrar.unhandle(this.protocol),this.started=!1}isStarted(){return this.started}handleMessage(e){this.log("incoming ping from %p",e.connection.remotePeer);const{stream:t}=e,n=Date.now();pipe(t,t).catch(i=>{this.log.error("incoming ping from %p failed with error",e.connection.remotePeer,i)}).finally(()=>{const i=Date.now()-n;this.log("incoming ping from %p complete in %dms",e.connection.remotePeer,i)})}async ping(e,t={}){this.log("pinging %p",e);const n=Date.now(),i=randomBytes(PING_LENGTH),o=await this.components.connectionManager.openConnection(e,t);let a,c=()=>{};if(t.signal==null){const l=AbortSignal.timeout(this.timeout);t={...t,signal:l}}try{a=await o.newStream(this.protocol,{...t,runOnTransientConnection:this.runOnTransientConnection}),c=()=>{a?.abort(new CodeError("ping timeout",ERR_TIMEOUT))},t.signal?.addEventListener("abort",c,{once:!0});const l=await pipe([i],a,async f=>first(f)),u=Date.now()-n;if(l==null)throw new CodeError(`Did not receive a ping ack after ${u}ms`,ERR_WRONG_PING_ACK);if(!equals$4(i,l.subarray()))throw new CodeError(`Received wrong ping ack after ${u}ms`,ERR_WRONG_PING_ACK);return this.log("ping %p complete in %dms",o.remotePeer,u),u}catch(l){throw this.log.error("error while pinging %p",o.remotePeer,l),a?.abort(l),l}finally{t.signal?.removeEventListener("abort",c),a!=null&&await a.close()}}}function ping(r={}){return e=>new PingService(e,r)}const word="[a-fA-F\\d:]",b=r=>r&&r.includeBoundaries?`(?:(?<=\\s|^)(?=${word})|(?<=${word})(?=\\s|$))`:"",v4="(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}",v6seg="[a-fA-F\\d]{1,4}",v6=`
(?:
(?:${v6seg}:){7}(?:${v6seg}|:)|                                    // 1:2:3:4:5:6:7::  1:2:3:4:5:6:7:8
(?:${v6seg}:){6}(?:${v4}|:${v6seg}|:)|                             // 1:2:3:4:5:6::    1:2:3:4:5:6::8   1:2:3:4:5:6::8  1:2:3:4:5:6::1.2.3.4
(?:${v6seg}:){5}(?::${v4}|(?::${v6seg}){1,2}|:)|                   // 1:2:3:4:5::      1:2:3:4:5::7:8   1:2:3:4:5::8    1:2:3:4:5::7:1.2.3.4
(?:${v6seg}:){4}(?:(?::${v6seg}){0,1}:${v4}|(?::${v6seg}){1,3}|:)| // 1:2:3:4::        1:2:3:4::6:7:8   1:2:3:4::8      1:2:3:4::6:7:1.2.3.4
(?:${v6seg}:){3}(?:(?::${v6seg}){0,2}:${v4}|(?::${v6seg}){1,4}|:)| // 1:2:3::          1:2:3::5:6:7:8   1:2:3::8        1:2:3::5:6:7:1.2.3.4
(?:${v6seg}:){2}(?:(?::${v6seg}){0,3}:${v4}|(?::${v6seg}){1,5}|:)| // 1:2::            1:2::4:5:6:7:8   1:2::8          1:2::4:5:6:7:1.2.3.4
(?:${v6seg}:){1}(?:(?::${v6seg}){0,4}:${v4}|(?::${v6seg}){1,6}|:)| // 1::              1::3:4:5:6:7:8   1::8            1::3:4:5:6:7:1.2.3.4
(?::(?:(?::${v6seg}){0,5}:${v4}|(?::${v6seg}){1,7}|:))             // ::2:3:4:5:6:7:8  ::2:3:4:5:6:7:8  ::8             ::1.2.3.4
)(?:%[0-9a-zA-Z]{1,})?                                             // %eth0            %1
`.replace(/\s*\/\/.*$/gm,"").replace(/\n/g,"").trim(),v46Exact=new RegExp(`(?:^${v4}$)|(?:^${v6}$)`),v4exact=new RegExp(`^${v4}$`),v6exact=new RegExp(`^${v6}$`),ip$2=r=>r&&r.exact?v46Exact:new RegExp(`(?:${b(r)}${v4}${b(r)})|(?:${b(r)}${v6}${b(r)})`,"g");ip$2.v4=r=>r&&r.exact?v4exact:new RegExp(`${b(r)}${v4}${b(r)}`,"g");ip$2.v6=r=>r&&r.exact?v6exact:new RegExp(`${b(r)}${v6}${b(r)}`,"g");var ipRegex$1=ip$2;const ipRegex=ipRegex$1,isIp$1=r=>ipRegex({exact:!0}).test(r);isIp$1.v4=r=>ipRegex.v4({exact:!0}).test(r);isIp$1.v6=r=>ipRegex.v6({exact:!0}).test(r);isIp$1.version=r=>isIp$1(r)?isIp$1.v4(r)?4:6:void 0;var isIp_1=isIp$1;function base(r,e){if(r.length>=255)throw new TypeError("Alphabet too long");for(var t=new Uint8Array(256),n=0;n<t.length;n++)t[n]=255;for(var i=0;i<r.length;i++){var o=r.charAt(i),a=o.charCodeAt(0);if(t[a]!==255)throw new TypeError(o+" is ambiguous");t[a]=i}var c=r.length,l=r.charAt(0),u=Math.log(c)/Math.log(256),f=Math.log(256)/Math.log(c);function g(E){if(E instanceof Uint8Array||(ArrayBuffer.isView(E)?E=new Uint8Array(E.buffer,E.byteOffset,E.byteLength):Array.isArray(E)&&(E=Uint8Array.from(E))),!(E instanceof Uint8Array))throw new TypeError("Expected Uint8Array");if(E.length===0)return"";for(var v=0,T=0,I=0,A=E.length;I!==A&&E[I]===0;)I++,v++;for(var P=(A-I)*f+1>>>0,x=new Uint8Array(P);I!==A;){for(var D=E[I],C=0,k=P-1;(D!==0||C<T)&&k!==-1;k--,C++)D+=256*x[k]>>>0,x[k]=D%c>>>0,D=D/c>>>0;if(D!==0)throw new Error("Non-zero carry");T=C,I++}for(var N=P-T;N!==P&&x[N]===0;)N++;for(var L=l.repeat(v);N<P;++N)L+=r.charAt(x[N]);return L}function $(E){if(typeof E!="string")throw new TypeError("Expected String");if(E.length===0)return new Uint8Array;var v=0;if(E[v]!==" "){for(var T=0,I=0;E[v]===l;)T++,v++;for(var A=(E.length-v)*u+1>>>0,P=new Uint8Array(A);E[v];){var x=t[E.charCodeAt(v)];if(x===255)return;for(var D=0,C=A-1;(x!==0||D<I)&&C!==-1;C--,D++)x+=c*P[C]>>>0,P[C]=x%256>>>0,x=x/256>>>0;if(x!==0)throw new Error("Non-zero carry");I=D,v++}if(E[v]!==" "){for(var k=A-I;k!==A&&P[k]===0;)k++;for(var N=new Uint8Array(T+(A-k)),L=T;k!==A;)N[L++]=P[k++];return N}}}function S(E){var v=$(E);if(v)return v;throw new Error(`Non-${e} character`)}return{encode:g,decodeUnsafe:$,decode:S}}var src$1=base,_brrp__multiformats_scope_baseX=src$1;const equals$3=(r,e)=>{if(r===e)return!0;if(r.byteLength!==e.byteLength)return!1;for(let t=0;t<r.byteLength;t++)if(r[t]!==e[t])return!1;return!0},coerce=r=>{if(r instanceof Uint8Array&&r.constructor.name==="Uint8Array")return r;if(r instanceof ArrayBuffer)return new Uint8Array(r);if(ArrayBuffer.isView(r))return new Uint8Array(r.buffer,r.byteOffset,r.byteLength);throw new Error("Unknown type, must be binary type")},fromString$3=r=>new TextEncoder().encode(r),toString$3=r=>new TextDecoder().decode(r);class Encoder{constructor(e,t,n){this.name=e,this.prefix=t,this.baseEncode=n}encode(e){if(e instanceof Uint8Array)return`${this.prefix}${this.baseEncode(e)}`;throw Error("Unknown type, must be binary type")}}class Decoder{constructor(e,t,n){if(this.name=e,this.prefix=t,t.codePointAt(0)===void 0)throw new Error("Invalid prefix character");this.prefixCodePoint=t.codePointAt(0),this.baseDecode=n}decode(e){if(typeof e=="string"){if(e.codePointAt(0)!==this.prefixCodePoint)throw Error(`Unable to decode multibase string ${JSON.stringify(e)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);return this.baseDecode(e.slice(this.prefix.length))}else throw Error("Can only multibase decode strings")}or(e){return or(this,e)}}class ComposedDecoder{constructor(e){this.decoders=e}or(e){return or(this,e)}decode(e){const t=e[0],n=this.decoders[t];if(n)return n.decode(e);throw RangeError(`Unable to decode multibase string ${JSON.stringify(e)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`)}}const or=(r,e)=>new ComposedDecoder({...r.decoders||{[r.prefix]:r},...e.decoders||{[e.prefix]:e}});class Codec{constructor(e,t,n,i){this.name=e,this.prefix=t,this.baseEncode=n,this.baseDecode=i,this.encoder=new Encoder(e,t,n),this.decoder=new Decoder(e,t,i)}encode(e){return this.encoder.encode(e)}decode(e){return this.decoder.decode(e)}}const from=({name:r,prefix:e,encode:t,decode:n})=>new Codec(r,e,t,n),baseX=({prefix:r,name:e,alphabet:t})=>{const{encode:n,decode:i}=_brrp__multiformats_scope_baseX(t,e);return from({prefix:r,name:e,encode:n,decode:o=>coerce(i(o))})},decode$4=(r,e,t,n)=>{const i={};for(let f=0;f<e.length;++f)i[e[f]]=f;let o=r.length;for(;r[o-1]==="=";)--o;const a=new Uint8Array(o*t/8|0);let c=0,l=0,u=0;for(let f=0;f<o;++f){const g=i[r[f]];if(g===void 0)throw new SyntaxError(`Non-${n} character`);l=l<<t|g,c+=t,c>=8&&(c-=8,a[u++]=255&l>>c)}if(c>=t||255&l<<8-c)throw new SyntaxError("Unexpected end of data");return a},encode$2=(r,e,t)=>{const n=e[e.length-1]==="=",i=(1<<t)-1;let o="",a=0,c=0;for(let l=0;l<r.length;++l)for(c=c<<8|r[l],a+=8;a>t;)a-=t,o+=e[i&c>>a];if(a&&(o+=e[i&c<<t-a]),n)for(;o.length*t&7;)o+="=";return o},rfc4648=({name:r,prefix:e,bitsPerChar:t,alphabet:n})=>from({prefix:e,name:r,encode(i){return encode$2(i,n,t)},decode(i){return decode$4(i,n,t,r)}}),identity=from({prefix:"\0",name:"identity",encode:r=>toString$3(r),decode:r=>fromString$3(r)}),identityBase=Object.freeze(Object.defineProperty({__proto__:null,identity},Symbol.toStringTag,{value:"Module"})),base2=rfc4648({prefix:"0",name:"base2",alphabet:"01",bitsPerChar:1}),base2$1=Object.freeze(Object.defineProperty({__proto__:null,base2},Symbol.toStringTag,{value:"Module"})),base8=rfc4648({prefix:"7",name:"base8",alphabet:"01234567",bitsPerChar:3}),base8$1=Object.freeze(Object.defineProperty({__proto__:null,base8},Symbol.toStringTag,{value:"Module"})),base10=baseX({prefix:"9",name:"base10",alphabet:"0123456789"}),base10$1=Object.freeze(Object.defineProperty({__proto__:null,base10},Symbol.toStringTag,{value:"Module"})),base16=rfc4648({prefix:"f",name:"base16",alphabet:"0123456789abcdef",bitsPerChar:4}),base16upper=rfc4648({prefix:"F",name:"base16upper",alphabet:"0123456789ABCDEF",bitsPerChar:4}),base16$1=Object.freeze(Object.defineProperty({__proto__:null,base16,base16upper},Symbol.toStringTag,{value:"Module"})),base32$1=rfc4648({prefix:"b",name:"base32",alphabet:"abcdefghijklmnopqrstuvwxyz234567",bitsPerChar:5}),base32upper=rfc4648({prefix:"B",name:"base32upper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567",bitsPerChar:5}),base32pad=rfc4648({prefix:"c",name:"base32pad",alphabet:"abcdefghijklmnopqrstuvwxyz234567=",bitsPerChar:5}),base32padupper=rfc4648({prefix:"C",name:"base32padupper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=",bitsPerChar:5}),base32hex=rfc4648({prefix:"v",name:"base32hex",alphabet:"0123456789abcdefghijklmnopqrstuv",bitsPerChar:5}),base32hexupper=rfc4648({prefix:"V",name:"base32hexupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV",bitsPerChar:5}),base32hexpad=rfc4648({prefix:"t",name:"base32hexpad",alphabet:"0123456789abcdefghijklmnopqrstuv=",bitsPerChar:5}),base32hexpadupper=rfc4648({prefix:"T",name:"base32hexpadupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV=",bitsPerChar:5}),base32z=rfc4648({prefix:"h",name:"base32z",alphabet:"ybndrfg8ejkmcpqxot1uwisza345h769",bitsPerChar:5}),base32$2=Object.freeze(Object.defineProperty({__proto__:null,base32:base32$1,base32hex,base32hexpad,base32hexpadupper,base32hexupper,base32pad,base32padupper,base32upper,base32z},Symbol.toStringTag,{value:"Module"})),base36=baseX({prefix:"k",name:"base36",alphabet:"0123456789abcdefghijklmnopqrstuvwxyz"}),base36upper=baseX({prefix:"K",name:"base36upper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"}),base36$1=Object.freeze(Object.defineProperty({__proto__:null,base36,base36upper},Symbol.toStringTag,{value:"Module"})),base58btc$2=baseX({name:"base58btc",prefix:"z",alphabet:"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"}),base58flickr=baseX({name:"base58flickr",prefix:"Z",alphabet:"123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"}),base58=Object.freeze(Object.defineProperty({__proto__:null,base58btc:base58btc$2,base58flickr},Symbol.toStringTag,{value:"Module"})),base64=rfc4648({prefix:"m",name:"base64",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",bitsPerChar:6}),base64pad=rfc4648({prefix:"M",name:"base64pad",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",bitsPerChar:6}),base64url=rfc4648({prefix:"u",name:"base64url",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_",bitsPerChar:6}),base64urlpad=rfc4648({prefix:"U",name:"base64urlpad",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=",bitsPerChar:6}),base64$1=Object.freeze(Object.defineProperty({__proto__:null,base64,base64pad,base64url,base64urlpad},Symbol.toStringTag,{value:"Module"})),alphabet=Array.from("🚀🪐☄🛰🌌🌑🌒🌓🌔🌕🌖🌗🌘🌍🌏🌎🐉☀💻🖥💾💿😂❤😍🤣😊🙏💕😭😘👍😅👏😁🔥🥰💔💖💙😢🤔😆🙄💪😉☺👌🤗💜😔😎😇🌹🤦🎉💞✌✨🤷😱😌🌸🙌😋💗💚😏💛🙂💓🤩😄😀🖤😃💯🙈👇🎶😒🤭❣😜💋👀😪😑💥🙋😞😩😡🤪👊🥳😥🤤👉💃😳✋😚😝😴🌟😬🙃🍀🌷😻😓⭐✅🥺🌈😈🤘💦✔😣🏃💐☹🎊💘😠☝😕🌺🎂🌻😐🖕💝🙊😹🗣💫💀👑🎵🤞😛🔴😤🌼😫⚽🤙☕🏆🤫👈😮🙆🍻🍃🐶💁😲🌿🧡🎁⚡🌞🎈❌✊👋😰🤨😶🤝🚶💰🍓💢🤟🙁🚨💨🤬✈🎀🍺🤓😙💟🌱😖👶🥴▶➡❓💎💸⬇😨🌚🦋😷🕺⚠🙅😟😵👎🤲🤠🤧📌🔵💅🧐🐾🍒😗🤑🌊🤯🐷☎💧😯💆👆🎤🙇🍑❄🌴💣🐸💌📍🥀🤢👅💡💩👐📸👻🤐🤮🎼🥵🚩🍎🍊👼💍📣🥂"),alphabetBytesToChars=alphabet.reduce((r,e,t)=>(r[t]=e,r),[]),alphabetCharsToBytes=alphabet.reduce((r,e,t)=>(r[e.codePointAt(0)]=t,r),[]);function encode$1(r){return r.reduce((e,t)=>(e+=alphabetBytesToChars[t],e),"")}function decode$3(r){const e=[];for(const t of r){const n=alphabetCharsToBytes[t.codePointAt(0)];if(n===void 0)throw new Error(`Non-base256emoji character: ${t}`);e.push(n)}return new Uint8Array(e)}const base256emoji=from({prefix:"🚀",name:"base256emoji",encode:encode$1,decode:decode$3}),base256emoji$1=Object.freeze(Object.defineProperty({__proto__:null,base256emoji},Symbol.toStringTag,{value:"Module"}));var encode_1=encode,MSB=128,REST=127,MSBALL=~REST,INT=Math.pow(2,31);function encode(r,e,t){e=e||[],t=t||0;for(var n=t;r>=INT;)e[t++]=r&255|MSB,r/=128;for(;r&MSBALL;)e[t++]=r&255|MSB,r>>>=7;return e[t]=r|0,encode.bytes=t-n+1,e}var decode$2=read,MSB$1=128,REST$1=127;function read(r,n){var t=0,n=n||0,i=0,o=n,a,c=r.length;do{if(o>=c)throw read.bytes=0,new RangeError("Could not decode varint");a=r[o++],t+=i<28?(a&REST$1)<<i:(a&REST$1)*Math.pow(2,i),i+=7}while(a>=MSB$1);return read.bytes=o-n,t}var N1=Math.pow(2,7),N2=Math.pow(2,14),N3=Math.pow(2,21),N4=Math.pow(2,28),N5=Math.pow(2,35),N6=Math.pow(2,42),N7=Math.pow(2,49),N8=Math.pow(2,56),N9=Math.pow(2,63),length=function(r){return r<N1?1:r<N2?2:r<N3?3:r<N4?4:r<N5?5:r<N6?6:r<N7?7:r<N8?8:r<N9?9:10},varint$3={encode:encode_1,decode:decode$2,encodingLength:length},_brrp_varint=varint$3;const decode$1=(r,e=0)=>[_brrp_varint.decode(r,e),_brrp_varint.decode.bytes],encodeTo=(r,e,t=0)=>(_brrp_varint.encode(r,e,t),e),encodingLength=r=>_brrp_varint.encodingLength(r),create=(r,e)=>{const t=e.byteLength,n=encodingLength(r),i=n+encodingLength(t),o=new Uint8Array(i+t);return encodeTo(r,o,0),encodeTo(t,o,n),o.set(e,i),new Digest$1(r,t,e,o)},decode=r=>{const e=coerce(r),[t,n]=decode$1(e),[i,o]=decode$1(e.subarray(n)),a=e.subarray(n+o);if(a.byteLength!==i)throw new Error("Incorrect length");return new Digest$1(t,i,a,e)},equals$2=(r,e)=>r===e?!0:r.code===e.code&&r.size===e.size&&equals$3(r.bytes,e.bytes);let Digest$1=class{constructor(e,t,n,i){this.code=e,this.size=t,this.digest=n,this.bytes=i}};const digest=Object.freeze(Object.defineProperty({__proto__:null,Digest:Digest$1,create,decode,equals:equals$2},Symbol.toStringTag,{value:"Module"}));new TextEncoder;new TextDecoder;let CID$2=class _e{constructor(e,t,n,i){this.code=t,this.version=e,this.multihash=n,this.bytes=i,this.byteOffset=i.byteOffset,this.byteLength=i.byteLength,this.asCID=this,this._baseCache=new Map,Object.defineProperties(this,{byteOffset:hidden,byteLength:hidden,code:readonly,version:readonly,multihash:readonly,bytes:readonly,_baseCache:hidden,asCID:hidden})}toV0(){switch(this.version){case 0:return this;default:{const{code:e,multihash:t}=this;if(e!==DAG_PB_CODE)throw new Error("Cannot convert a non dag-pb CID to CIDv0");if(t.code!==SHA_256_CODE)throw new Error("Cannot convert non sha2-256 multihash CID to CIDv0");return _e.createV0(t)}}}toV1(){switch(this.version){case 0:{const{code:e,digest:t}=this.multihash,n=create(e,t);return _e.createV1(this.code,n)}case 1:return this;default:throw Error(`Can not convert CID version ${this.version} to version 0. This is a bug please report`)}}equals(e){return e&&this.code===e.code&&this.version===e.version&&equals$2(this.multihash,e.multihash)}toString(e){const{bytes:t,version:n,_baseCache:i}=this;switch(n){case 0:return toStringV0(t,i,e||base58btc$2.encoder);default:return toStringV1(t,i,e||base32$1.encoder)}}toJSON(){return{code:this.code,version:this.version,hash:this.multihash.bytes}}get[Symbol.toStringTag](){return"CID"}[Symbol.for("nodejs.util.inspect.custom")](){return"CID("+this.toString()+")"}static isCID(e){return deprecate(/^0\.0/,IS_CID_DEPRECATION),!!(e&&(e[cidSymbol]||e.asCID===e))}get toBaseEncodedString(){throw new Error("Deprecated, use .toString()")}get codec(){throw new Error('"codec" property is deprecated, use integer "code" property instead')}get buffer(){throw new Error("Deprecated .buffer property, use .bytes to get Uint8Array instead")}get multibaseName(){throw new Error('"multibaseName" property is deprecated')}get prefix(){throw new Error('"prefix" property is deprecated')}static asCID(e){if(e instanceof _e)return e;if(e!=null&&e.asCID===e){const{version:t,code:n,multihash:i,bytes:o}=e;return new _e(t,n,i,o||encodeCID(t,n,i.bytes))}else if(e!=null&&e[cidSymbol]===!0){const{version:t,multihash:n,code:i}=e,o=decode(n);return _e.create(t,i,o)}else return null}static create(e,t,n){if(typeof t!="number")throw new Error("String codecs are no longer supported");switch(e){case 0:{if(t!==DAG_PB_CODE)throw new Error(`Version 0 CID must use dag-pb (code: ${DAG_PB_CODE}) block encoding`);return new _e(e,t,n,n.bytes)}case 1:{const i=encodeCID(e,t,n.bytes);return new _e(e,t,n,i)}default:throw new Error("Invalid version")}}static createV0(e){return _e.create(0,DAG_PB_CODE,e)}static createV1(e,t){return _e.create(1,e,t)}static decode(e){const[t,n]=_e.decodeFirst(e);if(n.length)throw new Error("Incorrect length");return t}static decodeFirst(e){const t=_e.inspectBytes(e),n=t.size-t.multihashSize,i=coerce(e.subarray(n,n+t.multihashSize));if(i.byteLength!==t.multihashSize)throw new Error("Incorrect length");const o=i.subarray(t.multihashSize-t.digestSize),a=new Digest$1(t.multihashCode,t.digestSize,o,i);return[t.version===0?_e.createV0(a):_e.createV1(t.codec,a),e.subarray(t.size)]}static inspectBytes(e){let t=0;const n=()=>{const[g,$]=decode$1(e.subarray(t));return t+=$,g};let i=n(),o=DAG_PB_CODE;if(i===18?(i=0,t=0):i===1&&(o=n()),i!==0&&i!==1)throw new RangeError(`Invalid CID version ${i}`);const a=t,c=n(),l=n(),u=t+l,f=u-a;return{version:i,codec:o,multihashCode:c,digestSize:l,multihashSize:f,size:u}}static parse(e,t){const[n,i]=parseCIDtoBytes(e,t),o=_e.decode(i);return o._baseCache.set(n,e),o}};const parseCIDtoBytes=(r,e)=>{switch(r[0]){case"Q":{const t=e||base58btc$2;return[base58btc$2.prefix,t.decode(`${base58btc$2.prefix}${r}`)]}case base58btc$2.prefix:{const t=e||base58btc$2;return[base58btc$2.prefix,t.decode(r)]}case base32$1.prefix:{const t=e||base32$1;return[base32$1.prefix,t.decode(r)]}default:{if(e==null)throw Error("To parse non base32 or base58btc encoded CID multibase decoder must be provided");return[r[0],e.decode(r)]}}},toStringV0=(r,e,t)=>{const{prefix:n}=t;if(n!==base58btc$2.prefix)throw Error(`Cannot string encode V0 in ${t.name} encoding`);const i=e.get(n);if(i==null){const o=t.encode(r).slice(1);return e.set(n,o),o}else return i},toStringV1=(r,e,t)=>{const{prefix:n}=t,i=e.get(n);if(i==null){const o=t.encode(r);return e.set(n,o),o}else return i},DAG_PB_CODE=112,SHA_256_CODE=18,encodeCID=(r,e,t)=>{const n=encodingLength(r),i=n+encodingLength(e),o=new Uint8Array(i+t.byteLength);return encodeTo(r,o,0),encodeTo(e,o,n),o.set(t,i),o},cidSymbol=Symbol.for("@ipld/js-cid/CID"),readonly={writable:!1,configurable:!1,enumerable:!0},hidden={writable:!1,enumerable:!1,configurable:!1},version="0.0.0-dev",deprecate=(r,e)=>{if(r.test(version))console.warn(e);else throw new Error(e)},IS_CID_DEPRECATION=`CID.isCID(v) is deprecated and will be removed in the next major release.
Following code pattern:

if (CID.isCID(value)) {
  doSomethingWithCID(value)
}

Is replaced with:

const cid = CID.asCID(value)
if (cid) {
  // Make sure to use cid instead of value
  doSomethingWithCID(cid)
}
`,cid=Object.freeze(Object.defineProperty({__proto__:null,CID:CID$2},Symbol.toStringTag,{value:"Module"})),bases={...identityBase,...base2$1,...base8$1,...base10$1,...base16$1,...base32$2,...base36$1,...base58,...base64$1,...base256emoji$1};function asUint8Array(r){return globalThis.Buffer!=null?new Uint8Array(r.buffer,r.byteOffset,r.byteLength):r}function allocUnsafe(r=0){return globalThis.Buffer!=null&&globalThis.Buffer.allocUnsafe!=null?asUint8Array(globalThis.Buffer.allocUnsafe(r)):new Uint8Array(r)}function createCodec(r,e,t,n){return{name:r,prefix:e,encoder:{name:r,prefix:e,encode:t},decoder:{decode:n}}}const string=createCodec("utf8","u",r=>"u"+new TextDecoder("utf8").decode(r),r=>new TextEncoder().encode(r.substring(1))),ascii=createCodec("ascii","a",r=>{let e="a";for(let t=0;t<r.length;t++)e+=String.fromCharCode(r[t]);return e},r=>{r=r.substring(1);const e=allocUnsafe(r.length);for(let t=0;t<r.length;t++)e[t]=r.charCodeAt(t);return e}),BASES={utf8:string,"utf-8":string,hex:bases.base16,latin1:ascii,ascii,binary:ascii,...bases};function toString$1(r,e="utf8"){const t=BASES[e];if(!t)throw new Error(`Unsupported encoding "${e}"`);return(e==="utf8"||e==="utf-8")&&globalThis.Buffer!=null&&globalThis.Buffer.from!=null?globalThis.Buffer.from(r.buffer,r.byteOffset,r.byteLength).toString("utf8"):t.encoder.encode(r).substring(1)}const toString$2=Object.freeze(Object.defineProperty({__proto__:null,toString:toString$1},Symbol.toStringTag,{value:"Module"})),require$$6=getAugmentedNamespace(toString$2),isIp=isIp_1,{toString:uint8ArrayToString$3}=require$$6,isIP=isIp,isV4=isIp.v4,isV6=isIp.v6,toBytes=function(r,e,t){t=~~t;let n;if(isV4(r))n=e||new Uint8Array(t+4),r.split(/\./g).map(function(i){n[t++]=parseInt(i,10)&255});else if(isV6(r)){const i=r.split(":",8);let o;for(o=0;o<i.length;o++){const a=isV4(i[o]);let c;a&&(c=toBytes(i[o]),i[o]=uint8ArrayToString$3(c.slice(0,2),"base16")),c&&++o<8&&i.splice(o,0,uint8ArrayToString$3(c.slice(2,4),"base16"))}if(i[0]==="")for(;i.length<8;)i.unshift("0");else if(i[i.length-1]==="")for(;i.length<8;)i.push("0");else if(i.length<8){for(o=0;o<i.length&&i[o]!=="";o++);const a=[o,"1"];for(o=9-i.length;o>0;o--)a.push("0");i.splice.apply(i,a)}for(n=e||new Uint8Array(t+16),o=0;o<i.length;o++){const a=parseInt(i[o],16);n[t++]=a>>8&255,n[t++]=a&255}}if(!n)throw Error("Invalid ip address: "+r);return n},toString=function(r,e,t){e=~~e,t=t||r.length-e;const n=[];let i;const o=new DataView(r.buffer);if(t===4){for(let a=0;a<t;a++)n.push(r[e+a]);i=n.join(".")}else if(t===16){for(let a=0;a<t;a+=2)n.push(o.getUint16(e+a).toString(16));i=n.join(":"),i=i.replace(/(^|:)0(:0)*:0(:|$)/,"$1::$3"),i=i.replace(/:{3,4}/,"::")}return i};var ip$1={isIP,isV4,isV6,toBytes,toString};function Protocols(r){if(typeof r=="number"){if(Protocols.codes[r])return Protocols.codes[r];throw new Error("no protocol with code: "+r)}else if(typeof r=="string"){if(Protocols.names[r])return Protocols.names[r];throw new Error("no protocol with name: "+r)}throw new Error("invalid protocol id type: "+r)}const V=-1;Protocols.lengthPrefixedVarSize=V;Protocols.V=V;Protocols.table=[[4,32,"ip4"],[6,16,"tcp"],[33,16,"dccp"],[41,128,"ip6"],[42,V,"ip6zone"],[53,V,"dns","resolvable"],[54,V,"dns4","resolvable"],[55,V,"dns6","resolvable"],[56,V,"dnsaddr","resolvable"],[132,16,"sctp"],[273,16,"udp"],[275,0,"p2p-webrtc-star"],[276,0,"p2p-webrtc-direct"],[277,0,"p2p-stardust"],[290,0,"p2p-circuit"],[301,0,"udt"],[302,0,"utp"],[400,V,"unix",!1,"path"],[421,V,"ipfs"],[421,V,"p2p"],[443,0,"https"],[444,96,"onion"],[445,296,"onion3"],[446,V,"garlic64"],[460,0,"quic"],[477,0,"ws"],[478,0,"wss"],[479,0,"p2p-websocket-star"],[480,0,"http"],[777,V,"memory"]];Protocols.names={};Protocols.codes={};Protocols.table.map(r=>{const e=p.apply(null,r);return Protocols.codes[e.code]=e,Protocols.names[e.name]=e,null});Protocols.object=p;function p(r,e,t,n,i){return{code:r,size:e,name:t,resolvable:!!n,path:!!i}}var protocolsTable=Protocols;const require$$3$2=getAugmentedNamespace(cid),require$$3$1=getAugmentedNamespace(base32$2),require$$4=getAugmentedNamespace(base58),require$$5=getAugmentedNamespace(digest);function fromString$1(r,e="utf8"){const t=BASES[e];if(!t)throw new Error(`Unsupported encoding "${e}"`);return(e==="utf8"||e==="utf-8")&&globalThis.Buffer!=null&&globalThis.Buffer.from!=null?asUint8Array(globalThis.Buffer.from(r,"utf-8")):t.decoder.decode(`${t.prefix}${r}`)}const fromString$2=Object.freeze(Object.defineProperty({__proto__:null,fromString:fromString$1},Symbol.toStringTag,{value:"Module"})),require$$8=getAugmentedNamespace(fromString$2);function concat(r,e){e||(e=r.reduce((i,o)=>i+o.length,0));const t=allocUnsafe(e);let n=0;for(const i of r)t.set(i,n),n+=i.length;return asUint8Array(t)}const concat$1=Object.freeze(Object.defineProperty({__proto__:null,concat},Symbol.toStringTag,{value:"Module"})),require$$3=getAugmentedNamespace(concat$1),ip=ip$1,protocols$2=protocolsTable,{CID:CID$1}=require$$3$2,{base32}=require$$3$1,{base58btc:base58btc$1}=require$$4,Digest=require$$5,varint$2=varint$6,{toString:uint8ArrayToString$2}=require$$6,{fromString:uint8ArrayFromString}=require$$8,{concat:uint8ArrayConcat$1}=require$$3;var convert$1=Convert;function Convert(r,e){return e instanceof Uint8Array?Convert.toString(r,e):Convert.toBytes(r,e)}Convert.toString=function r(e,t){switch(protocols$2(e).code){case 4:case 41:return bytes2ip(t);case 6:case 273:case 33:case 132:return bytes2port(t).toString();case 53:case 54:case 55:case 56:case 400:case 777:return bytes2str(t);case 421:return bytes2mh(t);case 444:return bytes2onion(t);case 445:return bytes2onion(t);default:return uint8ArrayToString$2(t,"base16")}};Convert.toBytes=function r(e,t){switch(protocols$2(e).code){case 4:return ip2bytes(t);case 41:return ip2bytes(t);case 6:case 273:case 33:case 132:return port2bytes(parseInt(t,10));case 53:case 54:case 55:case 56:case 400:case 777:return str2bytes(t);case 421:return mh2bytes(t);case 444:return onion2bytes(t);case 445:return onion32bytes(t);default:return uint8ArrayFromString(t,"base16")}};function ip2bytes(r){if(!ip.isIP(r))throw new Error("invalid ip address");return ip.toBytes(r)}function bytes2ip(r){const e=ip.toString(r);if(!e||!ip.isIP(e))throw new Error("invalid ip address");return e}function port2bytes(r){const e=new ArrayBuffer(2);return new DataView(e).setUint16(0,r),new Uint8Array(e)}function bytes2port(r){return new DataView(r.buffer).getUint16(r.byteOffset)}function str2bytes(r){const e=uint8ArrayFromString(r),t=Uint8Array.from(varint$2.encode(e.length));return uint8ArrayConcat$1([t,e],t.length+e.length)}function bytes2str(r){const e=varint$2.decode(r);if(r=r.slice(varint$2.decode.bytes),r.length!==e)throw new Error("inconsistent lengths");return uint8ArrayToString$2(r)}function mh2bytes(r){let e;r[0]==="Q"||r[0]==="1"?e=Digest.decode(base58btc$1.decode(`z${r}`)).bytes:e=CID$1.parse(r).multihash.bytes;const t=Uint8Array.from(varint$2.encode(e.length));return uint8ArrayConcat$1([t,e],t.length+e.length)}function bytes2mh(r){const e=varint$2.decode(r),t=r.slice(varint$2.decode.bytes);if(t.length!==e)throw new Error("inconsistent lengths");return uint8ArrayToString$2(t,"base58btc")}function onion2bytes(r){const e=r.split(":");if(e.length!==2)throw new Error("failed to parse onion addr: "+e+" does not contain a port number");if(e[0].length!==16)throw new Error("failed to parse onion addr: "+e[0]+" not a Tor onion address.");const t=base32.decode("b"+e[0]),n=parseInt(e[1],10);if(n<1||n>65536)throw new Error("Port number is not in range(1, 65536)");const i=port2bytes(n);return uint8ArrayConcat$1([t,i],t.length+i.length)}function onion32bytes(r){const e=r.split(":");if(e.length!==2)throw new Error("failed to parse onion addr: "+e+" does not contain a port number");if(e[0].length!==56)throw new Error("failed to parse onion addr: "+e[0]+" not a Tor onion3 address.");const t=base32.decode("b"+e[0]),n=parseInt(e[1],10);if(n<1||n>65536)throw new Error("Port number is not in range(1, 65536)");const i=port2bytes(n);return uint8ArrayConcat$1([t,i],t.length+i.length)}function bytes2onion(r){const e=r.slice(0,r.length-2),t=r.slice(r.length-2),n=uint8ArrayToString$2(e,"base32"),i=bytes2port(t);return n+":"+i}const convert=convert$1,protocols$1=protocolsTable,varint$1=varint$6,{concat:uint8ArrayConcat}=require$$3,{toString:uint8ArrayToString$1}=require$$6;var codec$1={stringToStringTuples,stringTuplesToString,tuplesToStringTuples,stringTuplesToTuples,bytesToTuples,tuplesToBytes,bytesToString,stringToBytes,fromString,fromBytes,validateBytes,isValidBytes,cleanPath,ParseError,protoFromTuple,sizeForAddr};function stringToStringTuples(r){const e=[],t=r.split("/").slice(1);if(t.length===1&&t[0]==="")return[];for(let n=0;n<t.length;n++){const i=t[n],o=protocols$1(i);if(o.size===0){e.push([i]);continue}if(n++,n>=t.length)throw ParseError("invalid address: "+r);if(o.path){e.push([i,cleanPath(t.slice(n).join("/"))]);break}e.push([i,t[n]])}return e}function stringTuplesToString(r){const e=[];return r.map(t=>{const n=protoFromTuple(t);return e.push(n.name),t.length>1&&e.push(t[1]),null}),cleanPath(e.join("/"))}function stringTuplesToTuples(r){return r.map(e=>{Array.isArray(e)||(e=[e]);const t=protoFromTuple(e);return e.length>1?[t.code,convert.toBytes(t.code,e[1])]:[t.code]})}function tuplesToStringTuples(r){return r.map(e=>{const t=protoFromTuple(e);return e[1]?[t.code,convert.toString(t.code,e[1])]:[t.code]})}function tuplesToBytes(r){return fromBytes(uint8ArrayConcat(r.map(e=>{const t=protoFromTuple(e);let n=Uint8Array.from(varint$1.encode(t.code));return e.length>1&&(n=uint8ArrayConcat([n,e[1]])),n})))}function sizeForAddr(r,e){return r.size>0?r.size/8:r.size===0?0:varint$1.decode(e)+varint$1.decode.bytes}function bytesToTuples(r){const e=[];let t=0;for(;t<r.length;){const n=varint$1.decode(r,t),i=varint$1.decode.bytes,o=protocols$1(n),a=sizeForAddr(o,r.slice(t+i));if(a===0){e.push([n]),t+=i;continue}const c=r.slice(t+i,t+i+a);if(t+=a+i,t>r.length)throw ParseError("Invalid address Uint8Array: "+uint8ArrayToString$1(r,"base16"));e.push([n,c])}return e}function bytesToString(r){const e=bytesToTuples(r),t=tuplesToStringTuples(e);return stringTuplesToString(t)}function stringToBytes(r){r=cleanPath(r);const e=stringToStringTuples(r),t=stringTuplesToTuples(e);return tuplesToBytes(t)}function fromString(r){return stringToBytes(r)}function fromBytes(r){const e=validateBytes(r);if(e)throw e;return Uint8Array.from(r)}function validateBytes(r){try{bytesToTuples(r)}catch(e){return e}}function isValidBytes(r){return validateBytes(r)===void 0}function cleanPath(r){return"/"+r.trim().split("/").filter(e=>e).join("/")}function ParseError(r){return new Error("Error parsing address: "+r)}function protoFromTuple(r){return protocols$1(r[0])}function assign(r,e){for(const t in e)Object.defineProperty(r,t,{value:e[t],enumerable:!0,configurable:!0});return r}function createError(r,e,t){if(!r||typeof r=="string")throw new TypeError("Please pass an Error to err-code");t||(t={}),typeof e=="object"&&(t=e,e=""),e&&(t.code=e);try{return assign(r,t)}catch{t.message=r.message,t.stack=r.stack;const i=function(){};return i.prototype=Object.create(Object.getPrototypeOf(r)),assign(new i,t)}}var errCode$1=createError;function equals(r,e){if(r===e)return!0;if(r.byteLength!==e.byteLength)return!1;for(let t=0;t<r.byteLength;t++)if(r[t]!==e[t])return!1;return!0}const equals$1=Object.freeze(Object.defineProperty({__proto__:null,equals},Symbol.toStringTag,{value:"Module"})),require$$7=getAugmentedNamespace(equals$1),codec=codec$1,protocols=protocolsTable,varint=varint$6,{CID}=require$$3$2,{base58btc}=require$$4,errCode=errCode$1,inspect=Symbol.for("nodejs.util.inspect.custom"),{toString:uint8ArrayToString}=require$$6,{equals:uint8ArrayEquals}=require$$7,resolvers=new Map,symbol=Symbol.for("@multiformats/js-multiaddr/multiaddr");class Multiaddr{constructor(e){if(e==null&&(e=""),Object.defineProperty(this,symbol,{value:!0}),e instanceof Uint8Array)this.bytes=codec.fromBytes(e);else if(typeof e=="string"){if(e.length>0&&e.charAt(0)!=="/")throw new Error(`multiaddr "${e}" must start with a "/"`);this.bytes=codec.fromString(e)}else if(Multiaddr.isMultiaddr(e))this.bytes=codec.fromBytes(e.bytes);else throw new Error("addr must be a string, Buffer, or another Multiaddr")}toString(){return codec.bytesToString(this.bytes)}toJSON(){return this.toString()}toOptions(){const e={},t=this.toString().split("/");return e.family=t[1]==="ip4"?4:6,e.host=t[2],e.transport=t[3],e.port=parseInt(t[4]),e}protos(){return this.protoCodes().map(e=>Object.assign({},protocols(e)))}protoCodes(){const e=[],t=this.bytes;let n=0;for(;n<t.length;){const i=varint.decode(t,n),o=varint.decode.bytes,a=protocols(i),c=codec.sizeForAddr(a,t.slice(n+o));n+=c+o,e.push(i)}return e}protoNames(){return this.protos().map(e=>e.name)}tuples(){return codec.bytesToTuples(this.bytes)}stringTuples(){const e=codec.bytesToTuples(this.bytes);return codec.tuplesToStringTuples(e)}encapsulate(e){return e=new Multiaddr(e),new Multiaddr(this.toString()+e.toString())}decapsulate(e){const t=e.toString(),n=this.toString(),i=n.lastIndexOf(t);if(i<0)throw new Error("Address "+this+" does not contain subaddress: "+e);return new Multiaddr(n.slice(0,i))}decapsulateCode(e){const t=this.tuples();for(let n=t.length-1;n>=0;n--)if(t[n][0]===e)return new Multiaddr(codec.tuplesToBytes(t.slice(0,n)));return this}getPeerId(){try{const t=this.stringTuples().filter(n=>n[0]===protocols.names.ipfs.code).pop();if(t&&t[1]){const n=t[1];return n[0]==="Q"||n[0]==="1"?uint8ArrayToString(base58btc.decode(`z${n}`),"base58btc"):uint8ArrayToString(CID.parse(n).multihash.bytes,"base58btc")}return null}catch{return null}}getPath(){let e=null;try{e=this.stringTuples().filter(t=>!!protocols(t[0]).path)[0][1],e||(e=null)}catch{e=null}return e}equals(e){return uint8ArrayEquals(this.bytes,e.bytes)}async resolve(){const e=this.protos().find(i=>i.resolvable);if(!e)return[this];const t=resolvers.get(e.name);if(!t)throw errCode(new Error(`no available resolver for ${e.name}`),"ERR_NO_AVAILABLE_RESOLVER");return(await t(this)).map(i=>new Multiaddr(i))}nodeAddress(){const e=this.protoCodes(),t=this.protoNames(),n=this.toString().split("/").slice(1);if(n.length<4)throw new Error('multiaddr must have a valid format: "/{ip4, ip6, dns4, dns6}/{address}/{tcp, udp}/{port}".');if(e[0]!==4&&e[0]!==41&&e[0]!==54&&e[0]!==55)throw new Error(`no protocol with name: "'${t[0]}'". Must have a valid family name: "{ip4, ip6, dns4, dns6}".`);if(n[2]!=="tcp"&&n[2]!=="udp")throw new Error(`no protocol with name: "'${t[1]}'". Must have a valid transport protocol: "{tcp, udp}".`);return{family:e[0]===41||e[0]===55?6:4,address:n[1],port:parseInt(n[3])}}isThinWaistAddress(e){const t=(e||this).protos();return!(t.length!==2||t[0].code!==4&&t[0].code!==41||t[1].code!==6&&t[1].code!==273)}static fromNodeAddress(e,t){if(!e)throw new Error("requires node address object");if(!t)throw new Error("requires transport protocol");let n;switch(e.family){case 4:n="ip4";break;case 6:n="ip6";break;default:throw Error(`Invalid addr family. Got '${e.family}' instead of 4 or 6`)}return new Multiaddr("/"+[n,e.address,t,e.port].join("/"))}static isName(e){return Multiaddr.isMultiaddr(e)?e.protos().some(t=>t.resolvable):!1}static isMultiaddr(e){return e instanceof Multiaddr||!!(e&&e[symbol])}[inspect](){return"<Multiaddr "+uint8ArrayToString(this.bytes,"base16")+" - "+codec.bytesToString(this.bytes)+">"}inspect(){return"<Multiaddr "+uint8ArrayToString(this.bytes,"base16")+" - "+codec.bytesToString(this.bytes)+">"}}Multiaddr.protocols=protocols;Multiaddr.resolvers=resolvers;function multiaddr(r){return new Multiaddr(r)}var src={Multiaddr,multiaddr,protocols,resolvers};async function dial(r,e){await r.libp2p.dial(src.multiaddr(e));const t=await r.libp2p.services.ping.ping(src.multiaddr(e));console.log("latency:",t)}async function createFs(r){const e=unixfs(r);window.fs=e}async function createNode(){const r=new MemoryBlockstore,e=new MemoryDatastore,t=await createLibp2p({datastore:e,transports:[webSockets({filter:all})],connectionEncryption:[noise()],streamMuxers:[yamux()],connectionGater:{denyDialMultiaddr:async n=>{const i=n.toString();return!i.includes("/ws/")&&!i.includes("/wss/")&&!i.includes("/webtransport/")}},services:{ping:ping({maxInboundStreams:100,maxOutboundStreams:100,runOnTransientConnection:!1})}});return await createHelia({datastore:e,blockstore:r,libp2p:t})}const multiaddr$2=src.multiaddr;export{CID$3 as CID,createFs,createNode,dial,multiaddr$2 as multiaddr};
